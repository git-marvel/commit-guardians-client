{
  "totalNumOfCommit": 3593,
  "formatStyleCountInfo": {
    "prefix-style": 89,
    "simple-text-style": 130,
    "template-based": 0
  },
  "totalCommitQualityInfo": {
    "numOfPerfectCommits": 116,
    "totalScore": 65
  },
  "commitWithDiff": [
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "d30f6fd25f90973a84fadb43eef75a54c4b42ea2",
      "url": "https://github.com/vuejs/vue/commit/d30f6fd25f90973a84fadb43eef75a54c4b42ea2",
      "message": "test: fix tests",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2023-12-06T07:21:00Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/packages/compiler-sfc/test/__snapshots__/compileScript.spec.ts.snap": [
          {
            "+": "+        name: \"test\"\n",
            "-": "-        name: \\\\\"test\\\\\"\n"
          },
          {
            "+": "+  emits: [\"foo\", \"bar\"],\n",
            "-": "-  emits: [\\\\\"foo\\\\\", \\\\\"bar\\\\\"],\n"
          },
          {
            "+": "+  emits: [\"foo\", \"bar\"],\n",
            "-": "-  emits: [\\\\\"foo\\\\\", \\\\\"bar\\\\\"],\n"
          },
          {
            "+": "+  emits: [\"foo\", \"bar\"],\n",
            "-": "-  emits: [\\\\\"foo\\\\\", \\\\\"bar\\\\\"],\n"
          },
          {
            "+": "+  emits: [\"foo\", \"bar\"],\n",
            "-": "-  emits: [\\\\\"foo\\\\\", \\\\\"bar\\\\\"],\n"
          },
          {
            "+": "+  emits: [\"foo\", \"bar\"],\n",
            "-": "-  emits: [\\\\\"foo\\\\\", \\\\\"bar\\\\\"],\n"
          },
          {
            "+": "+  emits: [\"foo\", \"bar\"],\n",
            "-": "-  emits: [\\\\\"foo\\\\\", \\\\\"bar\\\\\"],\n"
          },
          {
            "+": "+  emits: [\"foo\", \"bar\", \"baz\"],\n",
            "-": "-  emits: [\\\\\"foo\\\\\", \\\\\"bar\\\\\", \\\\\"baz\\\\\"],\n"
          },
          {
            "+": "+  emits: [\"foo\", \"bar\"],\n",
            "-": "-  emits: [\\\\\"foo\\\\\", \\\\\"bar\\\\\"],\n"
          },
          {
            "+": "+          export enum D { D = \"D\" }\n+          const enum C { C = \"C\" }\n+          enum B { B = \"B\" }\n",
            "-": "-          export enum D { D = \\\\\"D\\\\\" }\n-          const enum C { C = \\\\\"C\\\\\" }\n-          enum B { B = \\\\\"B\\\\\" }\n"
          }
        ],
        "a/packages/compiler-sfc/test/__snapshots__/cssVars.spec.ts.snap": [
          {
            "+": "+  \"xxxxxxxx-color\": (_vm.color)\n",
            "-": "-  \\\\\"xxxxxxxx-color\\\\\": (_vm.color)\n"
          },
          {
            "+": "+  \"xxxxxxxx-color\": (_vm.color)\n",
            "-": "-  \\\\\"xxxxxxxx-color\\\\\": (_vm.color)\n"
          },
          {
            "+": "+  \"xxxxxxxx-color\": (_vm.color)\n",
            "-": "-  \\\\\"xxxxxxxx-color\\\\\": (_vm.color)\n"
          },
          {
            "+": "+  \"xxxxxxxx-width\": (_setup.width)\n",
            "-": "-  \\\\\"xxxxxxxx-width\\\\\": (_setup.width)\n"
          },
          {
            "+": "+  \"xxxxxxxx-foo\": (_setup.foo),\n+  \"xxxxxxxx-foo____px_\": (_setup.foo + 'px'),\n+  \"xxxxxxxx-_a___b____2____px_\": ((_setup.a + _setup.b) / 2 + 'px'),\n+  \"xxxxxxxx-__a___b______2___a_\": (((_setup.a + _setup.b)) / (2 * _setup.a))\n",
            "-": "-  \\\\\"xxxxxxxx-foo\\\\\": (_setup.foo),\n-  \\\\\"xxxxxxxx-foo____px_\\\\\": (_setup.foo + 'px'),\n-  \\\\\"xxxxxxxx-_a___b____2____px_\\\\\": ((_setup.a + _setup.b) / 2 + 'px'),\n-  \\\\\"xxxxxxxx-__a___b______2___a_\\\\\": (((_setup.a + _setup.b)) / (2 * _setup.a))\n"
          },
          {
            "+": "+  \"xxxxxxxx-color\": (_setup.color)\n",
            "-": "-  \\\\\"xxxxxxxx-color\\\\\": (_setup.color)\n"
          },
          {
            "+": "+  \"xxxxxxxx-color\": (_setup.color)\n",
            "-": "-  \\\\\"xxxxxxxx-color\\\\\": (_setup.color)\n"
          },
          {
            "+": "+  \"xxxxxxxx-color\": (_vm.color),\n+  \"xxxxxxxx-font_size\": (_vm.font.size)\n",
            "-": "-  \\\\\"xxxxxxxx-color\\\\\": (_vm.color),\n-  \\\\\"xxxxxxxx-font_size\\\\\": (_vm.font.size)\n"
          },
          {
            "+": "+  \"xxxxxxxx-color\": (_setup.color),\n+  \"xxxxxxxx-size\": (_setup.size),\n+  \"xxxxxxxx-foo\": (_vm.foo)\n",
            "-": "-  \\\\\"xxxxxxxx-color\\\\\": (_setup.color),\n-  \\\\\"xxxxxxxx-size\\\\\": (_setup.size),\n-  \\\\\"xxxxxxxx-foo\\\\\": (_vm.foo)\n"
          },
          {
            "+": "+  \"xxxxxxxx-size\": (_vm.size)\n",
            "-": "-  \\\\\"xxxxxxxx-size\\\\\": (_vm.size)\n"
          }
        ],
        "a/packages/compiler-sfc/test/prefixIdentifiers.spec.ts": [
          {
            "+": "+        \"div\",\n+        { attrs: { id: \"app\" } },\n",
            "-": "-        \\\\\"div\\\\\",\n-        { attrs: { id: \\\\\"app\\\\\" } },\n"
          },
          {
            "+": "+          _c(\"div\", { style: { color: _vm.color } }, [_vm._v(_vm._s(_vm.foo))]),\n+          _vm._v(\" \"),\n",
            "-": "-          _c(\\\\\"div\\\\\", { style: { color: _vm.color } }, [_vm._v(_vm._s(_vm.foo))]),\n-          _vm._v(\\\\\" \\\\\"),\n"
          },
          {
            "+": "+            return _c(\"p\", [_vm._v(_vm._s(i))])\n",
            "-": "-            return _c(\\\\\"p\\\\\", [_vm._v(_vm._s(i))])\n"
          },
          {
            "+": "+          _vm._v(\" \"),\n+          _c(\"foo\", {\n",
            "-": "-          _vm._v(\\\\\" \\\\\"),\n-          _c(\\\\\"foo\\\\\", {\n"
          },
          {
            "+": "+                return _c(\"div\", [_vm._v(_vm._s(_vm.bar))])\n",
            "-": "-                return _c(\\\\\"div\\\\\", [_vm._v(_vm._s(_vm.bar))])\n"
          },
          {
            "+": "+        \"div\",\n",
            "-": "-        \\\\\"div\\\\\",\n"
          },
          {
            "+": "+            click: function ($event) {\n",
            "-": "-            click: function (\\$event) {\n"
          }
        ],
        "a/test/unit/features/global-api/config.spec.ts": [
          {
            "+": "+      vm.prop = [...vm.prop, 4, 5]\n",
            "-": "-      vm.prop.push(4, 5)\n"
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 28,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "1399ee6aa0aa3e44a70780cfd0aca3d384c97fa4",
      "url": "https://github.com/vuejs/vue/commit/1399ee6aa0aa3e44a70780cfd0aca3d384c97fa4",
      "message": "test: pin esbuild to 0.16 for karma-esbuild compat",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2023-10-22T02:46:45Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/package.json": [
          {
            "+": "+    \"esbuild\": \"^0.16.0\",\n",
            "-": "-    \"esbuild\": \"^0.19.5\",\n"
          },
          {
            "+": "+    \"karma-esbuild\": \"^2.2.5\",\n",
            "-": "-    \"karma-esbuild\": \"^2.2.4\",\n"
          }
        ],
        "a/pnpm-lock.yaml": [
          {
            "+": "+        specifier: ^0.16.0\n+        version: 0.16.17\n",
            "-": "-        specifier: ^0.19.5\n-        version: 0.19.5\n"
          },
          {
            "+": "+        specifier: ^2.2.5\n+        version: 2.2.5(esbuild@0.16.17)\n",
            "-": "-        specifier: ^2.2.4\n-        version: 2.2.5(esbuild@0.19.5)\n"
          },
          {
            "+": "+  /@esbuild/android-arm64@0.16.17:\n+    resolution: {integrity: sha512-MIGl6p5sc3RDTLLkYL1MyL8BMRN4tLMRCn+yRJJmEDvYZ2M7tmAf80hx1kbNEUX2KJ50RRtxZ4JHLvCfuB6kBg==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [android]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /@esbuild/android-arm@0.16.17:\n+    resolution: {integrity: sha512-N9x1CMXVhtWEAMS7pNNONyA14f71VPQN9Cnavj1XQh6T7bskqiLLrSca4O0Vr8Wdcga943eThxnVp3JLnBMYtw==}\n",
            "-": "-  /@esbuild/android-arm64@0.19.5:\n-    resolution: {integrity: sha512-5d1OkoJxnYQfmC+Zd8NBFjkhyCNYwM4n9ODrycTFY6Jk1IGiZ+tjVJDDSwDt77nK+tfpGP4T50iMtVi4dEGzhQ==}\n"
          },
          {
            "+": "+    cpu: [arm]\n",
            "-": "-    cpu: [arm64]\n"
          },
          {
            "+": "+  /@esbuild/android-x64@0.16.17:\n+    resolution: {integrity: sha512-a3kTv3m0Ghh4z1DaFEuEDfz3OLONKuFvI4Xqczqx4BqLyuFaFkuaG4j2MtA6fuWEFeC5x9IvqnX7drmRq/fyAQ==}\n",
            "-": "-  /@esbuild/android-arm@0.19.5:\n-    resolution: {integrity: sha512-bhvbzWFF3CwMs5tbjf3ObfGqbl/17ict2/uwOSfr3wmxDE6VdS2GqY/FuzIPe0q0bdhj65zQsvqfArI9MY6+AA==}\n"
          },
          {
            "+": "+    cpu: [x64]\n",
            "-": "-    cpu: [arm]\n"
          },
          {
            "+": "+  /@esbuild/darwin-arm64@0.16.17:\n+    resolution: {integrity: sha512-/2agbUEfmxWHi9ARTX6OQ/KgXnOWfsNlTeLcoV7HSuSTv63E4DqtAc+2XqGw1KHxKMHGZgbVCZge7HXWX9Vn+w==}\n",
            "-": "-  /@esbuild/android-x64@0.19.5:\n-    resolution: {integrity: sha512-9t+28jHGL7uBdkBjL90QFxe7DVA+KGqWlHCF8ChTKyaKO//VLuoBricQCgwhOjA1/qOczsw843Fy4cbs4H3DVA==}\n"
          },
          {
            "+": "+    cpu: [arm64]\n+    os: [darwin]\n",
            "-": "-    cpu: [x64]\n-    os: [android]\n"
          },
          {
            "+": "+  /@esbuild/darwin-x64@0.16.17:\n+    resolution: {integrity: sha512-2By45OBHulkd9Svy5IOCZt376Aa2oOkiE9QWUK9fe6Tb+WDr8hXL3dpqi+DeLiMed8tVXspzsTAvd0jUl96wmg==}\n",
            "-": "-  /@esbuild/darwin-arm64@0.19.5:\n-    resolution: {integrity: sha512-mvXGcKqqIqyKoxq26qEDPHJuBYUA5KizJncKOAf9eJQez+L9O+KfvNFu6nl7SCZ/gFb2QPaRqqmG0doSWlgkqw==}\n"
          },
          {
            "+": "+    cpu: [x64]\n",
            "-": "-    cpu: [arm64]\n"
          },
          {
            "+": "+  /@esbuild/freebsd-arm64@0.16.17:\n+    resolution: {integrity: sha512-mt+cxZe1tVx489VTb4mBAOo2aKSnJ33L9fr25JXpqQqzbUIw/yzIzi+NHwAXK2qYV1lEFp4OoVeThGjUbmWmdw==}\n",
            "-": "-  /@esbuild/darwin-x64@0.19.5:\n-    resolution: {integrity: sha512-Ly8cn6fGLNet19s0X4unjcniX24I0RqjPv+kurpXabZYSXGM4Pwpmf85WHJN3lAgB8GSth7s5A0r856S+4DyiA==}\n"
          },
          {
            "+": "+    cpu: [arm64]\n+    os: [freebsd]\n",
            "-": "-    cpu: [x64]\n-    os: [darwin]\n"
          },
          {
            "+": "+  /@esbuild/freebsd-x64@0.16.17:\n+    resolution: {integrity: sha512-8ScTdNJl5idAKjH8zGAsN7RuWcyHG3BAvMNpKOBaqqR7EbUhhVHOqXRdL7oZvz8WNHL2pr5+eIT5c65kA6NHug==}\n",
            "-": "-  /@esbuild/freebsd-arm64@0.19.5:\n-    resolution: {integrity: sha512-GGDNnPWTmWE+DMchq1W8Sd0mUkL+APvJg3b11klSGUDvRXh70JqLAO56tubmq1s2cgpVCSKYywEiKBfju8JztQ==}\n"
          },
          {
            "+": "+    cpu: [x64]\n",
            "-": "-    cpu: [arm64]\n"
          },
          {
            "+": "+  /@esbuild/linux-arm64@0.16.17:\n+    resolution: {integrity: sha512-7S8gJnSlqKGVJunnMCrXHU9Q8Q/tQIxk/xL8BqAP64wchPCTzuM6W3Ra8cIa1HIflAvDnNOt2jaL17vaW+1V0g==}\n",
            "-": "-  /@esbuild/freebsd-x64@0.19.5:\n-    resolution: {integrity: sha512-1CCwDHnSSoA0HNwdfoNY0jLfJpd7ygaLAp5EHFos3VWJCRX9DMwWODf96s9TSse39Br7oOTLryRVmBoFwXbuuQ==}\n"
          },
          {
            "+": "+    cpu: [arm64]\n+    os: [linux]\n",
            "-": "-    cpu: [x64]\n-    os: [freebsd]\n"
          },
          {
            "+": "+  /@esbuild/linux-arm@0.16.17:\n+    resolution: {integrity: sha512-iihzrWbD4gIT7j3caMzKb/RsFFHCwqqbrbH9SqUSRrdXkXaygSZCZg1FybsZz57Ju7N/SHEgPyaR0LZ8Zbe9gQ==}\n",
            "-": "-  /@esbuild/linux-arm64@0.19.5:\n-    resolution: {integrity: sha512-o3vYippBmSrjjQUCEEiTZ2l+4yC0pVJD/Dl57WfPwwlvFkrxoSO7rmBZFii6kQB3Wrn/6GwJUPLU5t52eq2meA==}\n"
          },
          {
            "+": "+    cpu: [arm]\n",
            "-": "-    cpu: [arm64]\n"
          },
          {
            "+": "+  /@esbuild/linux-ia32@0.16.17:\n+    resolution: {integrity: sha512-kiX69+wcPAdgl3Lonh1VI7MBr16nktEvOfViszBSxygRQqSpzv7BffMKRPMFwzeJGPxcio0pdD3kYQGpqQ2SSg==}\n",
            "-": "-  /@esbuild/linux-arm@0.19.5:\n-    resolution: {integrity: sha512-lrWXLY/vJBzCPC51QN0HM71uWgIEpGSjSZZADQhq7DKhPcI6NH1IdzjfHkDQws2oNpJKpR13kv7/pFHBbDQDwQ==}\n"
          },
          {
            "+": "+    cpu: [ia32]\n",
            "-": "-    cpu: [arm]\n"
          },
          {
            "+": "+  /@esbuild/linux-loong64@0.16.17:\n+    resolution: {integrity: sha512-dTzNnQwembNDhd654cA4QhbS9uDdXC3TKqMJjgOWsC0yNCbpzfWoXdZvp0mY7HU6nzk5E0zpRGGx3qoQg8T2DQ==}\n",
            "-": "-  /@esbuild/linux-ia32@0.19.5:\n-    resolution: {integrity: sha512-MkjHXS03AXAkNp1KKkhSKPOCYztRtK+KXDNkBa6P78F8Bw0ynknCSClO/ztGszILZtyO/lVKpa7MolbBZ6oJtQ==}\n"
          },
          {
            "+": "+    cpu: [loong64]\n",
            "-": "-    cpu: [ia32]\n"
          },
          {
            "+": "+  /@esbuild/linux-mips64el@0.16.17:\n+    resolution: {integrity: sha512-ezbDkp2nDl0PfIUn0CsQ30kxfcLTlcx4Foz2kYv8qdC6ia2oX5Q3E/8m6lq84Dj/6b0FrkgD582fJMIfHhJfSw==}\n",
            "-": "-  /@esbuild/linux-loong64@0.19.5:\n-    resolution: {integrity: sha512-42GwZMm5oYOD/JHqHska3Jg0r+XFb/fdZRX+WjADm3nLWLcIsN27YKtqxzQmGNJgu0AyXg4HtcSK9HuOk3v1Dw==}\n"
          },
          {
            "+": "+    cpu: [mips64el]\n",
            "-": "-    cpu: [loong64]\n"
          },
          {
            "+": "+  /@esbuild/linux-ppc64@0.16.17:\n+    resolution: {integrity: sha512-dzS678gYD1lJsW73zrFhDApLVdM3cUF2MvAa1D8K8KtcSKdLBPP4zZSLy6LFZ0jYqQdQ29bjAHJDgz0rVbLB3g==}\n",
            "-": "-  /@esbuild/linux-mips64el@0.19.5:\n-    resolution: {integrity: sha512-kcjndCSMitUuPJobWCnwQ9lLjiLZUR3QLQmlgaBfMX23UEa7ZOrtufnRds+6WZtIS9HdTXqND4yH8NLoVVIkcg==}\n"
          },
          {
            "+": "+    cpu: [ppc64]\n",
            "-": "-    cpu: [mips64el]\n"
          },
          {
            "+": "+  /@esbuild/linux-riscv64@0.16.17:\n+    resolution: {integrity: sha512-ylNlVsxuFjZK8DQtNUwiMskh6nT0vI7kYl/4fZgV1llP5d6+HIeL/vmmm3jpuoo8+NuXjQVZxmKuhDApK0/cKw==}\n",
            "-": "-  /@esbuild/linux-ppc64@0.19.5:\n-    resolution: {integrity: sha512-yJAxJfHVm0ZbsiljbtFFP1BQKLc8kUF6+17tjQ78QjqjAQDnhULWiTA6u0FCDmYT1oOKS9PzZ2z0aBI+Mcyj7Q==}\n"
          },
          {
            "+": "+    cpu: [riscv64]\n",
            "-": "-    cpu: [ppc64]\n"
          },
          {
            "+": "+  /@esbuild/linux-s390x@0.16.17:\n+    resolution: {integrity: sha512-gzy7nUTO4UA4oZ2wAMXPNBGTzZFP7mss3aKR2hH+/4UUkCOyqmjXiKpzGrY2TlEUhbbejzXVKKGazYcQTZWA/w==}\n",
            "-": "-  /@esbuild/linux-riscv64@0.19.5:\n-    resolution: {integrity: sha512-5u8cIR/t3gaD6ad3wNt1MNRstAZO+aNyBxu2We8X31bA8XUNyamTVQwLDA1SLoPCUehNCymhBhK3Qim1433Zag==}\n"
          },
          {
            "+": "+    cpu: [s390x]\n",
            "-": "-    cpu: [riscv64]\n"
          },
          {
            "+": "+  /@esbuild/linux-x64@0.16.17:\n+    resolution: {integrity: sha512-mdPjPxfnmoqhgpiEArqi4egmBAMYvaObgn4poorpUaqmvzzbvqbowRllQ+ZgzGVMGKaPkqUmPDOOFQRUFDmeUw==}\n",
            "-": "-  /@esbuild/linux-s390x@0.19.5:\n-    resolution: {integrity: sha512-Z6JrMyEw/EmZBD/OFEFpb+gao9xJ59ATsoTNlj39jVBbXqoZm4Xntu6wVmGPB/OATi1uk/DB+yeDPv2E8PqZGw==}\n"
          },
          {
            "+": "+    cpu: [x64]\n",
            "-": "-    cpu: [s390x]\n"
          },
          {
            "+": "+  /@esbuild/netbsd-x64@0.16.17:\n+    resolution: {integrity: sha512-/PzmzD/zyAeTUsduZa32bn0ORug+Jd1EGGAUJvqfeixoEISYpGnAezN6lnJoskauoai0Jrs+XSyvDhppCPoKOA==}\n",
            "-": "-  /@esbuild/linux-x64@0.19.5:\n-    resolution: {integrity: sha512-psagl+2RlK1z8zWZOmVdImisMtrUxvwereIdyJTmtmHahJTKb64pAcqoPlx6CewPdvGvUKe2Jw+0Z/0qhSbG1A==}\n"
          },
          {
            "+": "+    os: [netbsd]\n",
            "-": "-    os: [linux]\n"
          },
          {
            "+": "+  /@esbuild/openbsd-x64@0.16.17:\n+    resolution: {integrity: sha512-2yaWJhvxGEz2RiftSk0UObqJa/b+rIAjnODJgv2GbGGpRwAfpgzyrg1WLK8rqA24mfZa9GvpjLcBBg8JHkoodg==}\n",
            "-": "-  /@esbuild/netbsd-x64@0.19.5:\n-    resolution: {integrity: sha512-kL2l+xScnAy/E/3119OggX8SrWyBEcqAh8aOY1gr4gPvw76la2GlD4Ymf832UCVbmuWeTf2adkZDK+h0Z/fB4g==}\n"
          },
          {
            "+": "+    os: [openbsd]\n",
            "-": "-    os: [netbsd]\n"
          },
          {
            "+": "+  /@esbuild/sunos-x64@0.16.17:\n+    resolution: {integrity: sha512-xtVUiev38tN0R3g8VhRfN7Zl42YCJvyBhRKw1RJjwE1d2emWTVToPLNEQj/5Qxc6lVFATDiy6LjVHYhIPrLxzw==}\n",
            "-": "-  /@esbuild/openbsd-x64@0.19.5:\n-    resolution: {integrity: sha512-sPOfhtzFufQfTBgRnE1DIJjzsXukKSvZxloZbkJDG383q0awVAq600pc1nfqBcl0ice/WN9p4qLc39WhBShRTA==}\n"
          },
          {
            "+": "+    os: [sunos]\n",
            "-": "-    os: [openbsd]\n"
          },
          {
            "+": "+  /@esbuild/win32-arm64@0.16.17:\n+    resolution: {integrity: sha512-ga8+JqBDHY4b6fQAmOgtJJue36scANy4l/rL97W+0wYmijhxKetzZdKOJI7olaBaMhWt8Pac2McJdZLxXWUEQw==}\n",
            "-": "-  /@esbuild/sunos-x64@0.19.5:\n-    resolution: {integrity: sha512-dGZkBXaafuKLpDSjKcB0ax0FL36YXCvJNnztjKV+6CO82tTYVDSH2lifitJ29jxRMoUhgkg9a+VA/B03WK5lcg==}\n"
          },
          {
            "+": "+    cpu: [arm64]\n+    os: [win32]\n",
            "-": "-    cpu: [x64]\n-    os: [sunos]\n"
          },
          {
            "+": "+  /@esbuild/win32-ia32@0.16.17:\n+    resolution: {integrity: sha512-WnsKaf46uSSF/sZhwnqE4L/F89AYNMiD4YtEcYekBt9Q7nj0DiId2XH2Ng2PHM54qi5oPrQ8luuzGszqi/veig==}\n",
            "-": "-  /@esbuild/win32-arm64@0.19.5:\n-    resolution: {integrity: sha512-dWVjD9y03ilhdRQ6Xig1NWNgfLtf2o/STKTS+eZuF90fI2BhbwD6WlaiCGKptlqXlURVB5AUOxUj09LuwKGDTg==}\n"
          },
          {
            "+": "+    cpu: [ia32]\n",
            "-": "-    cpu: [arm64]\n"
          },
          {
            "+": "+  /@esbuild/win32-x64@0.16.17:\n+    resolution: {integrity: sha512-y+EHuSchhL7FjHgvQL/0fnnFmO4T1bhvWANX6gcnqTjtnKWbTvUMCpGnv2+t+31d7RzyEAYAd4u2fnIhHL6N/Q==}\n",
            "-": "-  /@esbuild/win32-ia32@0.19.5:\n-    resolution: {integrity: sha512-4liggWIA4oDgUxqpZwrDhmEfAH4d0iljanDOK7AnVU89T6CzHon/ony8C5LeOdfgx60x5cnQJFZwEydVlYx4iw==}\n"
          },
          {
            "+": "+    cpu: [x64]\n",
            "-": "-    cpu: [ia32]\n"
          },
          {
            "-": "-  /@esbuild/win32-x64@0.19.5:\n-    resolution: {integrity: sha512-czTrygUsB/jlM8qEW5MD8bgYU2Xg14lo6kBDXW6HdxKjh8M5PzETGiSHaz9MtbXBYDloHNUAUW2tMiKW4KM9Mw==}\n-    engines: {node: '>=12'}\n-    cpu: [x64]\n-    os: [win32]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n",
            "+": ""
          },
          {
            "+": "+  /esbuild@0.16.17:\n+    resolution: {integrity: sha512-G8LEkV0XzDMNwXKgM0Jwu3nY3lSTwSGY6XbxM9cr9+s0T/qSV1q1JVPBGzm3dcjhCic9+emZDmMffkwgPeOeLg==}\n+    engines: {node: '>=12'}\n+    hasBin: true\n+    requiresBuild: true\n+    optionalDependencies:\n+      '@esbuild/android-arm': 0.16.17\n+      '@esbuild/android-arm64': 0.16.17\n+      '@esbuild/android-x64': 0.16.17\n+      '@esbuild/darwin-arm64': 0.16.17\n+      '@esbuild/darwin-x64': 0.16.17\n+      '@esbuild/freebsd-arm64': 0.16.17\n+      '@esbuild/freebsd-x64': 0.16.17\n+      '@esbuild/linux-arm': 0.16.17\n+      '@esbuild/linux-arm64': 0.16.17\n+      '@esbuild/linux-ia32': 0.16.17\n+      '@esbuild/linux-loong64': 0.16.17\n+      '@esbuild/linux-mips64el': 0.16.17\n+      '@esbuild/linux-ppc64': 0.16.17\n+      '@esbuild/linux-riscv64': 0.16.17\n+      '@esbuild/linux-s390x': 0.16.17\n+      '@esbuild/linux-x64': 0.16.17\n+      '@esbuild/netbsd-x64': 0.16.17\n+      '@esbuild/openbsd-x64': 0.16.17\n+      '@esbuild/sunos-x64': 0.16.17\n+      '@esbuild/win32-arm64': 0.16.17\n+      '@esbuild/win32-ia32': 0.16.17\n+      '@esbuild/win32-x64': 0.16.17\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "-": "-  /esbuild@0.19.5:\n-    resolution: {integrity: sha512-bUxalY7b1g8vNhQKdB24QDmHeY4V4tw/s6Ak5z+jJX9laP5MoQseTOMemAr0gxssjNcH0MCViG8ONI2kksvfFQ==}\n-    engines: {node: '>=12'}\n-    hasBin: true\n-    requiresBuild: true\n-    optionalDependencies:\n-      '@esbuild/android-arm': 0.19.5\n-      '@esbuild/android-arm64': 0.19.5\n-      '@esbuild/android-x64': 0.19.5\n-      '@esbuild/darwin-arm64': 0.19.5\n-      '@esbuild/darwin-x64': 0.19.5\n-      '@esbuild/freebsd-arm64': 0.19.5\n-      '@esbuild/freebsd-x64': 0.19.5\n-      '@esbuild/linux-arm': 0.19.5\n-      '@esbuild/linux-arm64': 0.19.5\n-      '@esbuild/linux-ia32': 0.19.5\n-      '@esbuild/linux-loong64': 0.19.5\n-      '@esbuild/linux-mips64el': 0.19.5\n-      '@esbuild/linux-ppc64': 0.19.5\n-      '@esbuild/linux-riscv64': 0.19.5\n-      '@esbuild/linux-s390x': 0.19.5\n-      '@esbuild/linux-x64': 0.19.5\n-      '@esbuild/netbsd-x64': 0.19.5\n-      '@esbuild/openbsd-x64': 0.19.5\n-      '@esbuild/sunos-x64': 0.19.5\n-      '@esbuild/win32-arm64': 0.19.5\n-      '@esbuild/win32-ia32': 0.19.5\n-      '@esbuild/win32-x64': 0.19.5\n-    dev: true\n-\n",
            "+": ""
          },
          {
            "+": "+  /karma-esbuild@2.2.5(esbuild@0.16.17):\n",
            "-": "-  /karma-esbuild@2.2.5(esbuild@0.19.5):\n"
          },
          {
            "+": "+      esbuild: 0.16.17\n",
            "-": "-      esbuild: 0.19.5\n"
          }
        ],
        "a/test/transition/karma.conf.js": [
          {
            "+": "+  __DEV__: `true`,\n+  'process.env.CI': String(!!process.env.CI)\n",
            "-": "-  __DEV__: true,\n-  'process.env.CI': !!process.env.CI\n"
          },
          {
            "+": "+  define[`process.env.${key}`] = String(featureFlags[key])\n",
            "-": "-  define[`process.env.${key}`] = featureFlags[key]\n"
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 54,
      "qualityScore": 0
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "78ef6271d237e83fbd647567f2b79a5786f09d3d",
      "url": "https://github.com/vuejs/vue/commit/78ef6271d237e83fbd647567f2b79a5786f09d3d",
      "message": "test: upgrade vitest + fix ssr tests for Node 18+",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2023-10-22T02:32:47Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/package.json": [
          {
            "+": "+    \"esbuild\": \"^0.19.5\",\n",
            "-": "-    \"esbuild\": \"^0.14.43\",\n"
          },
          {
            "+": "+    \"vitest\": \"^0.34.6\",\n",
            "-": "-    \"vitest\": \"^0.12.10\",\n"
          }
        ],
        "a/packages/server-renderer/package.json": [
          {
            "+": "+    \"webpack\": \"^4.47.0\"\n",
            "-": "-    \"webpack\": \"^4.46.0\"\n"
          }
        ],
        "a/packages/server-renderer/src/render-context.ts": [
          {
            "-": "-  //@ts-expect-error\n-  next: () => void\n",
            "+": ""
          },
          {
            "-": "-    //@ts-expect-error\n",
            "+": ""
          },
          {
            "-": "-  //@ts-expect-error\n",
            "+": ""
          }
        ],
        "a/packages/server-renderer/test/ssr-basic-renderer.spec.ts": [
          {
            "+": "+import { _it } from './utils'\n",
            "-": ""
          },
          {
            "+": "+  _it('should work', done => {\n",
            "-": "-  it('should work', done => {\n"
          },
          {
            "+": "+  _it('should work properly when accessing $ssrContext in root component', done => {\n",
            "-": "-  it('should work properly when accessing $ssrContext in root component', done => {\n"
          }
        ],
        "a/packages/server-renderer/test/ssr-bundle-render.spec.ts": [
          {
            "+": "+  // createAssertions(false)\n",
            "-": "-  createAssertions(false)\n"
          }
        ],
        "a/packages/server-renderer/test/ssr-stream.spec.ts": [
          {
            "+": "+import { _it } from './utils'\n+\n",
            "-": ""
          },
          {
            "+": "+  _it('should render to a stream', done => {\n",
            "-": "-  it('should render to a stream', done => {\n"
          },
          {
            "+": "+  _it('should catch error', done => {\n",
            "-": "-  it('should catch error', done => {\n"
          },
          {
            "+": "+  _it('should not mingle two components', done => {\n",
            "-": "-  it('should not mingle two components', done => {\n"
          },
          {
            "+": "+  _it('should call context.rendered', done => {\n",
            "-": "-  it('should call context.rendered', done => {\n"
          }
        ],
        "a/packages/server-renderer/test/ssr-string.spec.ts": [
          {
            "+": "+import { _it } from './utils'\n+\n",
            "-": ""
          },
          {
            "+": "+  _it('static attributes', done => {\n",
            "-": "-  it('static attributes', done => {\n"
          },
          {
            "+": "+  _it('unary tags', done => {\n",
            "-": "-  it('unary tags', done => {\n"
          },
          {
            "+": "+  _it('dynamic attributes', done => {\n",
            "-": "-  it('dynamic attributes', done => {\n"
          },
          {
            "+": "+  _it('static class', done => {\n",
            "-": "-  it('static class', done => {\n"
          },
          {
            "+": "+  _it('dynamic class', done => {\n",
            "-": "-  it('dynamic class', done => {\n"
          },
          {
            "+": "+  _it('custom component class', done => {\n",
            "-": "-  it('custom component class', done => {\n"
          },
          {
            "+": "+  _it('nested component class', done => {\n",
            "-": "-  it('nested component class', done => {\n"
          },
          {
            "+": "+  _it('dynamic style', done => {\n",
            "-": "-  it('dynamic style', done => {\n"
          },
          {
            "+": "+  _it('dynamic string style', done => {\n",
            "-": "-  it('dynamic string style', done => {\n"
          },
          {
            "+": "+  _it('auto-prefixed style value as array', done => {\n",
            "-": "-  it('auto-prefixed style value as array', done => {\n"
          },
          {
            "+": "+  _it('custom component style', done => {\n",
            "-": "-  it('custom component style', done => {\n"
          },
          {
            "+": "+  _it('nested custom component style', done => {\n",
            "-": "-  it('nested custom component style', done => {\n"
          },
          {
            "+": "+  _it('component style not passed to child', done => {\n",
            "-": "-  it('component style not passed to child', done => {\n"
          },
          {
            "+": "+  _it('component style not passed to slot', done => {\n",
            "-": "-  it('component style not passed to slot', done => {\n"
          },
          {
            "+": "+  _it('attrs merging on components', done => {\n",
            "-": "-  it('attrs merging on components', done => {\n"
          },
          {
            "+": "+  _it('domProps merging on components', done => {\n",
            "-": "-  it('domProps merging on components', done => {\n"
          },
          {
            "+": "+  _it('v-show directive render', done => {\n",
            "-": "-  it('v-show directive render', done => {\n"
          },
          {
            "+": "+  _it('v-show directive merge with style', done => {\n",
            "-": "-  it('v-show directive merge with style', done => {\n"
          },
          {
            "+": "+  _it('v-show directive not passed to child', done => {\n",
            "-": "-  it('v-show directive not passed to child', done => {\n"
          },
          {
            "+": "+  _it('v-show directive not passed to slot', done => {\n",
            "-": "-  it('v-show directive not passed to slot', done => {\n"
          },
          {
            "+": "+  _it('v-show directive merging on components', done => {\n",
            "-": "-  it('v-show directive merging on components', done => {\n"
          },
          {
            "+": "+  _it('text interpolation', done => {\n",
            "-": "-  it('text interpolation', done => {\n"
          },
          {
            "+": "+  _it('v-html on root', done => {\n",
            "-": "-  it('v-html on root', done => {\n"
          },
          {
            "+": "+  _it('v-text on root', done => {\n",
            "-": "-  it('v-text on root', done => {\n"
          },
          {
            "+": "+  _it('v-html', done => {\n",
            "-": "-  it('v-html', done => {\n"
          },
          {
            "+": "+  _it('v-html with null value', done => {\n",
            "-": "-  it('v-html with null value', done => {\n"
          },
          {
            "+": "+  _it('v-text', done => {\n",
            "-": "-  it('v-text', done => {\n"
          },
          {
            "+": "+  _it('v-text with null value', done => {\n",
            "-": "-  it('v-text with null value', done => {\n"
          },
          {
            "+": "+  _it('child component (hoc)', done => {\n",
            "-": "-  it('child component (hoc)', done => {\n"
          },
          {
            "+": "+  _it('has correct lifecycle during render', done => {\n",
            "-": "-  it('has correct lifecycle during render', done => {\n"
          },
          {
            "+": "+  _it('computed properties', done => {\n",
            "-": "-  it('computed properties', done => {\n"
          },
          {
            "+": "+  _it('renders async component', done => {\n",
            "-": "-  it('renders async component', done => {\n"
          },
          {
            "+": "+  _it('renders async component (Promise, nested)', done => {\n",
            "-": "-  it('renders async component (Promise, nested)', done => {\n"
          },
          {
            "+": "+  _it('renders async component (ES module)', done => {\n",
            "-": "-  it('renders async component (ES module)', done => {\n"
          },
          {
            "+": "+  _it('renders async component (hoc)', done => {\n",
            "-": "-  it('renders async component (hoc)', done => {\n"
          },
          {
            "+": "+  _it('renders async component (functional, single node)', done => {\n",
            "-": "-  it('renders async component (functional, single node)', done => {\n"
          },
          {
            "+": "+  _it('renders async component (functional, multiple nodes)', done => {\n",
            "-": "-  it('renders async component (functional, multiple nodes)', done => {\n"
          },
          {
            "+": "+  _it('renders nested async functional component', done => {\n",
            "-": "-  it('renders nested async functional component', done => {\n"
          },
          {
            "+": "+  _it('should catch async component error', done => {\n",
            "-": "-  it('should catch async component error', done => {\n"
          },
          {
            "+": "+  _it('renders async children passed in slots', done => {\n",
            "-": "-  it('renders async children passed in slots', done => {\n"
          },
          {
            "+": "+  _it('everything together', done => {\n",
            "-": "-  it('everything together', done => {\n"
          },
          {
            "+": "+  _it('normal attr', done => {\n",
            "-": "-  it('normal attr', done => {\n"
          },
          {
            "+": "+  _it('enumerated attr', done => {\n",
            "-": "-  it('enumerated attr', done => {\n"
          },
          {
            "+": "+  _it('boolean attr', done => {\n",
            "-": "-  it('boolean attr', done => {\n"
          },
          {
            "+": "+  _it('v-bind object', done => {\n",
            "-": "-  it('v-bind object', done => {\n"
          },
          {
            "+": "+  _it('custom directives on raw element', done => {\n",
            "-": "-  it('custom directives on raw element', done => {\n"
          },
          {
            "+": "+  _it('custom directives on component', done => {\n",
            "-": "-  it('custom directives on component', done => {\n"
          },
          {
            "+": "+  _it('custom directives on element root of a component', done => {\n",
            "-": "-  it('custom directives on element root of a component', done => {\n"
          },
          {
            "+": "+  _it('custom directives on element with parent element', done => {\n",
            "-": "-  it('custom directives on element with parent element', done => {\n"
          },
          {
            "+": "+  _it(\n+    'should not warn for custom directives that do not have server-side implementation',\n+    done => {\n+      renderToString(\n+        new Vue({\n+          directives: {\n+            test: {\n+              bind() {\n+                // noop\n+              }\n",
            "-": "-  it('should not warn for custom directives that do not have server-side implementation', done => {\n-    renderToString(\n-      new Vue({\n-        directives: {\n-          test: {\n-            bind() {\n-              // noop\n"
          },
          {
            "+": "+          },\n+          template: '<div v-test></div>'\n+        }),\n+        () => {\n+          expect('Failed to resolve directive: test').not.toHaveBeenWarned()\n+          done()\n+        }\n+      )\n+    }\n+  )\n",
            "-": "-          }\n-        },\n-        template: '<div v-test></div>'\n-      }),\n-      () => {\n-        expect('Failed to resolve directive: test').not.toHaveBeenWarned()\n-        done()\n-      }\n-    )\n-  })\n"
          },
          {
            "+": "+  _it('_scopeId', done => {\n",
            "-": "-  it('_scopeId', done => {\n"
          },
          {
            "+": "+  _it('_scopeId on slot content', done => {\n",
            "-": "-  it('_scopeId on slot content', done => {\n"
          },
          {
            "+": "+  _it('comment nodes', done => {\n",
            "-": "-  it('comment nodes', done => {\n"
          },
          {
            "+": "+  _it('should catch error', done => {\n",
            "-": "-  it('should catch error', done => {\n"
          },
          {
            "+": "+  _it('default value Foreign Function', () => {\n",
            "-": "-  it('default value Foreign Function', () => {\n"
          },
          {
            "+": "+  _it('should prevent xss in attributes', done => {\n",
            "-": "-  it('should prevent xss in attributes', done => {\n"
          },
          {
            "+": "+  _it('should prevent xss in attribute names', done => {\n",
            "-": "-  it('should prevent xss in attribute names', done => {\n"
          },
          {
            "+": "+  _it('should prevent xss in attribute names (optimized)', done => {\n",
            "-": "-  it('should prevent xss in attribute names (optimized)', done => {\n"
          },
          {
            "+": "+  _it(\n+    'should prevent script xss with v-bind object syntax + array value',\n+    done => {\n+      renderVmWithOptions(\n+        {\n+          data: {\n+            test: ['\"><script>alert(1)</script><!--\"']\n+          },\n+          template: `<div v-bind=\"{ test }\"></div>`\n",
            "-": "-  it('should prevent script xss with v-bind object syntax + array value', done => {\n-    renderVmWithOptions(\n-      {\n-        data: {\n-          test: ['\"><script>alert(1)</script><!--\"']\n"
          },
          {
            "+": "+        res => {\n+          expect(res).not.toContain(`<script>alert(1)</script>`)\n+          done()\n+        }\n+      )\n+    }\n+  )\n",
            "-": "-        template: `<div v-bind=\"{ test }\"></div>`\n-      },\n-      res => {\n-        expect(res).not.toContain(`<script>alert(1)</script>`)\n-        done()\n-      }\n-    )\n-  })\n"
          },
          {
            "+": "+  _it('v-if', done => {\n",
            "-": "-  it('v-if', done => {\n"
          },
          {
            "+": "+  _it('v-for', done => {\n",
            "-": "-  it('v-for', done => {\n"
          },
          {
            "+": "+  _it('template v-if', done => {\n",
            "-": "-  it('template v-if', done => {\n"
          },
          {
            "+": "+  _it('template v-for', done => {\n",
            "-": "-  it('template v-for', done => {\n"
          },
          {
            "+": "+  _it('with inheritAttrs: false + $attrs', done => {\n",
            "-": "-  it('with inheritAttrs: false + $attrs', done => {\n"
          },
          {
            "+": "+  _it('should escape static strings', done => {\n",
            "-": "-  it('should escape static strings', done => {\n"
          },
          {
            "+": "+  _it('should not cache computed properties', done => {\n",
            "-": "-  it('should not cache computed properties', done => {\n"
          },
          {
            "+": "+  _it('should call computed properties with vm as first argument', done => {\n",
            "-": "-  it('should call computed properties with vm as first argument', done => {\n"
          },
          {
            "+": "+  _it('return Promise', async () => {\n",
            "-": "-  it('return Promise', async () => {\n"
          },
          {
            "+": "+  _it('return Promise (error)', async () => {\n",
            "-": "-  it('return Promise (error)', async () => {\n"
          },
          {
            "+": "+  _it('should catch template compilation error', done => {\n",
            "-": "-  it('should catch template compilation error', done => {\n"
          },
          {
            "+": "+  _it('should not optimize root if conditions', done => {\n",
            "-": "-  it('should not optimize root if conditions', done => {\n"
          },
          {
            "+": "+  _it('render muted properly', done => {\n",
            "-": "-  it('render muted properly', done => {\n"
          },
          {
            "+": "+  _it('render v-model with textarea', done => {\n",
            "-": "-  it('render v-model with textarea', done => {\n"
          },
          {
            "+": "+  _it('render v-model with textarea (non-optimized)', done => {\n",
            "-": "-  it('render v-model with textarea (non-optimized)', done => {\n"
          },
          {
            "+": "+  _it('render v-model with <select> (value binding)', done => {\n",
            "-": "-  it('render v-model with <select> (value binding)', done => {\n"
          },
          {
            "+": "+  _it('render v-model with <select> (static value)', done => {\n",
            "-": "-  it('render v-model with <select> (static value)', done => {\n"
          },
          {
            "+": "+  _it('render v-model with <select> (text as value)', done => {\n",
            "-": "-  it('render v-model with <select> (text as value)', done => {\n"
          },
          {
            "+": "+  _it('should not double escape attribute values', done => {\n",
            "-": "-  it('should not double escape attribute values', done => {\n"
          },
          {
            "+": "+  _it('should not double escape class values', done => {\n",
            "-": "-  it('should not double escape class values', done => {\n"
          },
          {
            "+": "+  _it('should expose ssr helpers on functional context', done => {\n",
            "-": "-  it('should expose ssr helpers on functional context', done => {\n"
          },
          {
            "+": "+  _it('should support serverPrefetch option', done => {\n",
            "-": "-  it('should support serverPrefetch option', done => {\n"
          },
          {
            "+": "+  _it('should support serverPrefetch option (nested)', done => {\n",
            "-": "-  it('should support serverPrefetch option (nested)', done => {\n"
          },
          {
            "+": "+  _it('should support serverPrefetch option (nested async)', done => {\n",
            "-": "-  it('should support serverPrefetch option (nested async)', done => {\n"
          },
          {
            "+": "+  _it('should merge serverPrefetch option', done => {\n",
            "-": "-  it('should merge serverPrefetch option', done => {\n"
          },
          {
            "+": "+  _it(\n+    `should skip serverPrefetch option that doesn't return a promise`,\n+    done => {\n+      renderVmWithOptions(\n+        {\n+          template: `\n",
            "-": "-  it(`should skip serverPrefetch option that doesn't return a promise`, done => {\n-    renderVmWithOptions(\n-      {\n-        template: `\n"
          },
          {
            "+": "+          data: {\n+            count: 0\n+          },\n+          serverPrefetch() {\n+            setTimeout(() => {\n+              this.count = 42\n+            }, 1)\n+          }\n",
            "-": "-        data: {\n-          count: 0\n"
          },
          {
            "+": "+        result => {\n+          expect(result).toContain('<div data-server-rendered=\"true\">0</div>')\n+          done()\n",
            "-": "-        serverPrefetch() {\n-          setTimeout(() => {\n-            this.count = 42\n-          }, 1)\n"
          },
          {
            "+": "+      )\n+    }\n+  )\n",
            "-": "-      },\n-      result => {\n-        expect(result).toContain('<div data-server-rendered=\"true\">0</div>')\n-        done()\n-      }\n-    )\n-  })\n"
          },
          {
            "+": "+  _it('should call context.rendered', done => {\n",
            "-": "-  it('should call context.rendered', done => {\n"
          },
          {
            "+": "+  _it('invalid style value', done => {\n",
            "-": "-  it('invalid style value', done => {\n"
          },
          {
            "+": "+  _it('numeric style value', done => {\n",
            "-": "-  it('numeric style value', done => {\n"
          },
          {
            "+": "+  _it('handling max stack size limit', done => {\n",
            "-": "-  it('handling max stack size limit', done => {\n"
          },
          {
            "+": "+  _it('undefined v-model with textarea', done => {\n",
            "-": "-  it('undefined v-model with textarea', done => {\n"
          },
          {
            "+": "+  _it('Options inheritAttrs in parent component', done => {\n",
            "-": "-  it('Options inheritAttrs in parent component', done => {\n"
          }
        ],
        "a/packages/server-renderer/test/utils.ts": [
          {
            "+": "+/**\n+ * Async callback style it for compatibility with old tests.\n+ */\n+export function _it(\n+  desc: string,\n+  runner: (done: (err?: Error) => void) => void | Promise<any>\n+) {\n+  it(desc, async () => {\n+    if (runner.length === 0) {\n+      return runner(() => {})\n+    }\n+    await new Promise<void>((resolve, reject) => {\n+      const res = runner(err => {\n+        if (err) reject(err)\n+        else resolve()\n+      })\n+      if (res instanceof Promise) {\n+        resolve(res)\n+      }\n+    })\n+  })\n+}\n",
            "-": ""
          }
        ],
        "a/pnpm-lock.yaml": [
          {
            "+": "+        specifier: ^0.19.5\n+        version: 0.19.5\n",
            "-": "-        specifier: ^0.14.43\n-        version: 0.14.54\n"
          },
          {
            "+": "+        version: 2.2.5(esbuild@0.19.5)\n",
            "-": "-        version: 2.2.5(esbuild@0.14.54)\n"
          },
          {
            "+": "+        specifier: ^0.34.6\n+        version: 0.34.6(jsdom@19.0.0)(terser@5.15.1)\n",
            "-": "-        specifier: ^0.12.10\n-        version: 0.12.10(jsdom@19.0.0)\n"
          },
          {
            "+": "+        version: 3.0.1(webpack@4.47.0)\n",
            "-": "-        version: 3.0.1(webpack@4.46.0)\n"
          },
          {
            "+": "+        specifier: ^4.47.0\n+        version: 4.47.0\n",
            "-": "-        specifier: ^4.46.0\n-        version: 4.46.0\n"
          },
          {
            "+": "+  /@esbuild/android-arm64@0.18.20:\n+    resolution: {integrity: sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [android]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/android-arm64@0.19.5:\n+    resolution: {integrity: sha512-5d1OkoJxnYQfmC+Zd8NBFjkhyCNYwM4n9ODrycTFY6Jk1IGiZ+tjVJDDSwDt77nK+tfpGP4T50iMtVi4dEGzhQ==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [android]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/android-arm@0.18.20:\n+    resolution: {integrity: sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==}\n+    engines: {node: '>=12'}\n+    cpu: [arm]\n+    os: [android]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/android-arm@0.19.5:\n+    resolution: {integrity: sha512-bhvbzWFF3CwMs5tbjf3ObfGqbl/17ict2/uwOSfr3wmxDE6VdS2GqY/FuzIPe0q0bdhj65zQsvqfArI9MY6+AA==}\n+    engines: {node: '>=12'}\n+    cpu: [arm]\n+    os: [android]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/android-x64@0.18.20:\n+    resolution: {integrity: sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [android]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/android-x64@0.19.5:\n+    resolution: {integrity: sha512-9t+28jHGL7uBdkBjL90QFxe7DVA+KGqWlHCF8ChTKyaKO//VLuoBricQCgwhOjA1/qOczsw843Fy4cbs4H3DVA==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [android]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/darwin-arm64@0.18.20:\n+    resolution: {integrity: sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [darwin]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/darwin-arm64@0.19.5:\n+    resolution: {integrity: sha512-mvXGcKqqIqyKoxq26qEDPHJuBYUA5KizJncKOAf9eJQez+L9O+KfvNFu6nl7SCZ/gFb2QPaRqqmG0doSWlgkqw==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [darwin]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/darwin-x64@0.18.20:\n+    resolution: {integrity: sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [darwin]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/darwin-x64@0.19.5:\n+    resolution: {integrity: sha512-Ly8cn6fGLNet19s0X4unjcniX24I0RqjPv+kurpXabZYSXGM4Pwpmf85WHJN3lAgB8GSth7s5A0r856S+4DyiA==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [darwin]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/freebsd-arm64@0.18.20:\n+    resolution: {integrity: sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [freebsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/freebsd-arm64@0.19.5:\n+    resolution: {integrity: sha512-GGDNnPWTmWE+DMchq1W8Sd0mUkL+APvJg3b11klSGUDvRXh70JqLAO56tubmq1s2cgpVCSKYywEiKBfju8JztQ==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [freebsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/freebsd-x64@0.18.20:\n+    resolution: {integrity: sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [freebsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/freebsd-x64@0.19.5:\n+    resolution: {integrity: sha512-1CCwDHnSSoA0HNwdfoNY0jLfJpd7ygaLAp5EHFos3VWJCRX9DMwWODf96s9TSse39Br7oOTLryRVmBoFwXbuuQ==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [freebsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-arm64@0.18.20:\n+    resolution: {integrity: sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-arm64@0.19.5:\n+    resolution: {integrity: sha512-o3vYippBmSrjjQUCEEiTZ2l+4yC0pVJD/Dl57WfPwwlvFkrxoSO7rmBZFii6kQB3Wrn/6GwJUPLU5t52eq2meA==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-arm@0.18.20:\n+    resolution: {integrity: sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==}\n+    engines: {node: '>=12'}\n+    cpu: [arm]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-arm@0.19.5:\n+    resolution: {integrity: sha512-lrWXLY/vJBzCPC51QN0HM71uWgIEpGSjSZZADQhq7DKhPcI6NH1IdzjfHkDQws2oNpJKpR13kv7/pFHBbDQDwQ==}\n+    engines: {node: '>=12'}\n+    cpu: [arm]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-ia32@0.18.20:\n+    resolution: {integrity: sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==}\n+    engines: {node: '>=12'}\n+    cpu: [ia32]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-ia32@0.19.5:\n+    resolution: {integrity: sha512-MkjHXS03AXAkNp1KKkhSKPOCYztRtK+KXDNkBa6P78F8Bw0ynknCSClO/ztGszILZtyO/lVKpa7MolbBZ6oJtQ==}\n+    engines: {node: '>=12'}\n+    cpu: [ia32]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-loong64@0.18.20:\n+    resolution: {integrity: sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==}\n+    engines: {node: '>=12'}\n+    cpu: [loong64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-loong64@0.19.5:\n+    resolution: {integrity: sha512-42GwZMm5oYOD/JHqHska3Jg0r+XFb/fdZRX+WjADm3nLWLcIsN27YKtqxzQmGNJgu0AyXg4HtcSK9HuOk3v1Dw==}\n",
            "-": "-  /@esbuild/linux-loong64@0.14.54:\n-    resolution: {integrity: sha512-bZBrLAIX1kpWelV0XemxBZllyRmM6vgFQQG2GdNb+r3Fkp0FOh1NJSvekXDs7jq70k4euu1cryLMfU+mTXlEpw==}\n"
          },
          {
            "+": "+  /@esbuild/linux-mips64el@0.18.20:\n+    resolution: {integrity: sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==}\n+    engines: {node: '>=12'}\n+    cpu: [mips64el]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-mips64el@0.19.5:\n+    resolution: {integrity: sha512-kcjndCSMitUuPJobWCnwQ9lLjiLZUR3QLQmlgaBfMX23UEa7ZOrtufnRds+6WZtIS9HdTXqND4yH8NLoVVIkcg==}\n+    engines: {node: '>=12'}\n+    cpu: [mips64el]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-ppc64@0.18.20:\n+    resolution: {integrity: sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==}\n+    engines: {node: '>=12'}\n+    cpu: [ppc64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-ppc64@0.19.5:\n+    resolution: {integrity: sha512-yJAxJfHVm0ZbsiljbtFFP1BQKLc8kUF6+17tjQ78QjqjAQDnhULWiTA6u0FCDmYT1oOKS9PzZ2z0aBI+Mcyj7Q==}\n+    engines: {node: '>=12'}\n+    cpu: [ppc64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-riscv64@0.18.20:\n+    resolution: {integrity: sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==}\n+    engines: {node: '>=12'}\n+    cpu: [riscv64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-riscv64@0.19.5:\n+    resolution: {integrity: sha512-5u8cIR/t3gaD6ad3wNt1MNRstAZO+aNyBxu2We8X31bA8XUNyamTVQwLDA1SLoPCUehNCymhBhK3Qim1433Zag==}\n+    engines: {node: '>=12'}\n+    cpu: [riscv64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-s390x@0.18.20:\n+    resolution: {integrity: sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==}\n+    engines: {node: '>=12'}\n+    cpu: [s390x]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-s390x@0.19.5:\n+    resolution: {integrity: sha512-Z6JrMyEw/EmZBD/OFEFpb+gao9xJ59ATsoTNlj39jVBbXqoZm4Xntu6wVmGPB/OATi1uk/DB+yeDPv2E8PqZGw==}\n+    engines: {node: '>=12'}\n+    cpu: [s390x]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-x64@0.18.20:\n+    resolution: {integrity: sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/linux-x64@0.19.5:\n+    resolution: {integrity: sha512-psagl+2RlK1z8zWZOmVdImisMtrUxvwereIdyJTmtmHahJTKb64pAcqoPlx6CewPdvGvUKe2Jw+0Z/0qhSbG1A==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/netbsd-x64@0.18.20:\n+    resolution: {integrity: sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [netbsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/netbsd-x64@0.19.5:\n+    resolution: {integrity: sha512-kL2l+xScnAy/E/3119OggX8SrWyBEcqAh8aOY1gr4gPvw76la2GlD4Ymf832UCVbmuWeTf2adkZDK+h0Z/fB4g==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [netbsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/openbsd-x64@0.18.20:\n+    resolution: {integrity: sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [openbsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/openbsd-x64@0.19.5:\n+    resolution: {integrity: sha512-sPOfhtzFufQfTBgRnE1DIJjzsXukKSvZxloZbkJDG383q0awVAq600pc1nfqBcl0ice/WN9p4qLc39WhBShRTA==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [openbsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/sunos-x64@0.18.20:\n+    resolution: {integrity: sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [sunos]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/sunos-x64@0.19.5:\n+    resolution: {integrity: sha512-dGZkBXaafuKLpDSjKcB0ax0FL36YXCvJNnztjKV+6CO82tTYVDSH2lifitJ29jxRMoUhgkg9a+VA/B03WK5lcg==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [sunos]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/win32-arm64@0.18.20:\n+    resolution: {integrity: sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/win32-arm64@0.19.5:\n+    resolution: {integrity: sha512-dWVjD9y03ilhdRQ6Xig1NWNgfLtf2o/STKTS+eZuF90fI2BhbwD6WlaiCGKptlqXlURVB5AUOxUj09LuwKGDTg==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/win32-ia32@0.18.20:\n+    resolution: {integrity: sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==}\n+    engines: {node: '>=12'}\n+    cpu: [ia32]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/win32-ia32@0.19.5:\n+    resolution: {integrity: sha512-4liggWIA4oDgUxqpZwrDhmEfAH4d0iljanDOK7AnVU89T6CzHon/ony8C5LeOdfgx60x5cnQJFZwEydVlYx4iw==}\n+    engines: {node: '>=12'}\n+    cpu: [ia32]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/win32-x64@0.18.20:\n+    resolution: {integrity: sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /@esbuild/win32-x64@0.19.5:\n+    resolution: {integrity: sha512-czTrygUsB/jlM8qEW5MD8bgYU2Xg14lo6kBDXW6HdxKjh8M5PzETGiSHaz9MtbXBYDloHNUAUW2tMiKW4KM9Mw==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /@jest/schemas@29.6.3:\n+    resolution: {integrity: sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==}\n+    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}\n+    dependencies:\n+      '@sinclair/typebox': 0.27.8\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /@jridgewell/sourcemap-codec@1.4.15:\n+    resolution: {integrity: sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /@sinclair/typebox@0.27.8:\n+    resolution: {integrity: sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+      '@types/chai': 4.3.9\n",
            "-": "-      '@types/chai': 4.3.3\n"
          },
          {
            "+": "+  /@types/chai@4.3.9:\n+    resolution: {integrity: sha512-69TtiDzu0bcmKQv3yg1Zx409/Kd7r0b5F1PfpYJfSHzLGtB53547V4u+9iqKYsTu/O2ai6KTb0TInNpvuQ3qmg==}\n",
            "-": "-  /@types/chai@4.3.3:\n-    resolution: {integrity: sha512-hC7OMnszpxhZPduX+m+nrx+uFoLkWOMiR4oa/AZF3MuSETYTZmFfJAHqZEM8MVlvfG7BEUcgvtwoCTxBp6hm3g==}\n"
          },
          {
            "+": "+      '@types/node': 18.8.4\n+      '@types/tapable': 1.0.8\n+      '@types/uglify-js': 3.17.0\n+      '@types/webpack-sources': 3.2.0\n+      anymatch: 3.1.2\n+      source-map: 0.6.1\n+    dev: true\n+\n+  /@types/yauzl@2.10.0:\n+    resolution: {integrity: sha512-Cn6WYCm0tXv8p6k+A8PvbDG763EDpBoTzHdA+Q/MF6H3sapGjCm9NzoaJncJS9tUKSuCoDs9XHxYYsQDgxR6kw==}\n+    requiresBuild: true\n+    dependencies:\n+      '@types/node': 17.0.45\n+    dev: true\n+    optional: true\n+\n+  /@vitest/expect@0.34.6:\n+    resolution: {integrity: sha512-QUzKpUQRc1qC7qdGo7rMK3AkETI7w18gTCUrsNnyjjJKYiuUB9+TQK3QnR1unhCnWRC0AbKv2omLGQDF/mIjOw==}\n+    dependencies:\n+      '@vitest/spy': 0.34.6\n+      '@vitest/utils': 0.34.6\n+      chai: 4.3.10\n+    dev: true\n+\n+  /@vitest/runner@0.34.6:\n+    resolution: {integrity: sha512-1CUQgtJSLF47NnhN+F9X2ycxUP0kLHQ/JWvNHbeBfwW8CzEGgeskzNnHDyv1ieKTltuR6sdIHV+nmR6kPxQqzQ==}\n+    dependencies:\n+      '@vitest/utils': 0.34.6\n+      p-limit: 4.0.0\n+      pathe: 1.1.1\n+    dev: true\n+\n+  /@vitest/snapshot@0.34.6:\n+    resolution: {integrity: sha512-B3OZqYn6k4VaN011D+ve+AA4whM4QkcwcrwaKwAbyyvS/NB1hCWjFIBQxAQQSQir9/RtyAAGuq+4RJmbn2dH4w==}\n+    dependencies:\n+      magic-string: 0.30.5\n+      pathe: 1.1.1\n+      pretty-format: 29.7.0\n+    dev: true\n+\n+  /@vitest/spy@0.34.6:\n+    resolution: {integrity: sha512-xaCvneSaeBw/cz8ySmF7ZwGvL0lBjfvqc1LpQ/vcdHEvpLn3Ff1vAvjw+CoGn0802l++5L/pxb7whwcWAw+DUQ==}\n+    dependencies:\n+      tinyspy: 2.2.0\n",
            "-": "-      '@types/node': 18.8.4\n-      '@types/tapable': 1.0.8\n-      '@types/uglify-js': 3.17.0\n-      '@types/webpack-sources': 3.2.0\n-      anymatch: 3.1.2\n-      source-map: 0.6.1\n"
          },
          {
            "+": "+  /@vitest/utils@0.34.6:\n+    resolution: {integrity: sha512-IG5aDD8S6zlvloDsnzHw0Ut5xczlF+kv2BOTo+iXfPr54Yhi5qbVOgGB1hZaVq4iJ4C/MZ2J0y15IlsV/ZcI0A==}\n",
            "-": "-  /@types/yauzl@2.10.0:\n-    resolution: {integrity: sha512-Cn6WYCm0tXv8p6k+A8PvbDG763EDpBoTzHdA+Q/MF6H3sapGjCm9NzoaJncJS9tUKSuCoDs9XHxYYsQDgxR6kw==}\n-    requiresBuild: true\n"
          },
          {
            "+": "+      diff-sequences: 29.6.3\n+      loupe: 2.3.7\n+      pretty-format: 29.7.0\n",
            "-": "-      '@types/node': 17.0.45\n"
          },
          {
            "-": "-    optional: true\n",
            "+": ""
          },
          {
            "+": "+  /acorn@8.10.0:\n+    resolution: {integrity: sha512-F0SAmZ8iUtS//m8DmCTA0jlh6TDKkHQyK6xc6V4KDTyZKA9dnvX9/3sRTVQrWm79glUAZbnmmNcdYwUIHWVybw==}\n+    engines: {node: '>=0.4.0'}\n+    hasBin: true\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ansi-styles@5.2.0:\n+    resolution: {integrity: sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==}\n+    engines: {node: '>=10'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /cac@6.7.14:\n+    resolution: {integrity: sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==}\n+    engines: {node: '>=8'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /chai@4.3.10:\n+    resolution: {integrity: sha512-0UXG04VuVbruMUYbJ6JctvH0YnC/4q3/AkT18q4NaITo91CUm0liMS9VqzT9vZhVQ/1eqPanMWjBM+Juhfb/9g==}\n",
            "-": "-  /chai@4.3.6:\n-    resolution: {integrity: sha512-bbcp3YfHCUzMOvKqsztczerVgBKSsEijCySNlHHbX3VG1nskvqjz5Rfso1gGwD6w6oOV3eI60pKuMOV5MV7p3Q==}\n"
          },
          {
            "+": "+      check-error: 1.0.3\n+      deep-eql: 4.1.3\n+      get-func-name: 2.0.2\n+      loupe: 2.3.7\n",
            "-": "-      check-error: 1.0.2\n-      deep-eql: 3.0.1\n-      get-func-name: 2.0.0\n-      loupe: 2.3.4\n"
          },
          {
            "+": "+  /check-error@1.0.3:\n+    resolution: {integrity: sha512-iKEoDYaRmd1mxM90a2OEfWhjsjPpYPuQ+lMYsoxB126+t8fw7ySEO48nmDg5COTjxDI65/Y2OWpeEHk3ZOe8zg==}\n+    dependencies:\n+      get-func-name: 2.0.2\n",
            "-": "-  /check-error@1.0.2:\n-    resolution: {integrity: sha512-BrgHpW9NURQgzoNyjfq0Wu6VFO6D7IZEmJNdtgNqpzGG8RuNFHt2jQxWlAs4HMe119chBnv+34syEZtc6IhLtA==}\n"
          },
          {
            "+": "+  /deep-eql@4.1.3:\n+    resolution: {integrity: sha512-WaEtAOpRA1MQ0eohqZjpGD8zdI0Ovsm8mmFhaDN8dvDZzyoUMcYDnf5Y6iu7HTXxf8JDS23qWa4a+hKCDyOPzw==}\n+    engines: {node: '>=6'}\n",
            "-": "-  /deep-eql@3.0.1:\n-    resolution: {integrity: sha512-+QeIQyN5ZuO+3Uk5DYh6/1eKO0m0YmJFGNmFHGACpf1ClL1nmlV/p4gNgbl2pJGxgXb4faqo6UE+M5ACEMyVcw==}\n-    engines: {node: '>=0.12'}\n"
          },
          {
            "+": "+  /diff-sequences@29.6.3:\n+    resolution: {integrity: sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==}\n+    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /esbuild@0.18.20:\n+    resolution: {integrity: sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==}\n",
            "-": "-  /esbuild-android-64@0.14.54:\n-    resolution: {integrity: sha512-Tz2++Aqqz0rJ7kYBfz+iqyE3QMycD4vk7LBRyWaAVFgFtQ/O8EJOnVmTOiDWYZ/uYzB4kvP+bqejYdVKzE5lAQ==}\n-    engines: {node: '>=12'}\n-    cpu: [x64]\n-    os: [android]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-android-arm64@0.14.54:\n-    resolution: {integrity: sha512-F9E+/QDi9sSkLaClO8SOV6etqPd+5DgJje1F9lOWoNncDdOBL2YF59IhsWATSt0TLZbYCf3pNlTHvVV5VfHdvg==}\n-    engines: {node: '>=12'}\n-    cpu: [arm64]\n-    os: [android]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-darwin-64@0.14.54:\n-    resolution: {integrity: sha512-jtdKWV3nBviOd5v4hOpkVmpxsBy90CGzebpbO9beiqUYVMBtSc0AL9zGftFuBon7PNDcdvNCEuQqw2x0wP9yug==}\n-    engines: {node: '>=12'}\n-    cpu: [x64]\n-    os: [darwin]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-darwin-arm64@0.14.54:\n-    resolution: {integrity: sha512-OPafJHD2oUPyvJMrsCvDGkRrVCar5aVyHfWGQzY1dWnzErjrDuSETxwA2HSsyg2jORLY8yBfzc1MIpUkXlctmw==}\n-    engines: {node: '>=12'}\n-    cpu: [arm64]\n-    os: [darwin]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-freebsd-64@0.14.54:\n-    resolution: {integrity: sha512-OKwd4gmwHqOTp4mOGZKe/XUlbDJ4Q9TjX0hMPIDBUWWu/kwhBAudJdBoxnjNf9ocIB6GN6CPowYpR/hRCbSYAg==}\n-    engines: {node: '>=12'}\n-    cpu: [x64]\n-    os: [freebsd]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-freebsd-arm64@0.14.54:\n-    resolution: {integrity: sha512-sFwueGr7OvIFiQT6WeG0jRLjkjdqWWSrfbVwZp8iMP+8UHEHRBvlaxL6IuKNDwAozNUmbb8nIMXa7oAOARGs1Q==}\n-    engines: {node: '>=12'}\n-    cpu: [arm64]\n-    os: [freebsd]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-linux-32@0.14.54:\n-    resolution: {integrity: sha512-1ZuY+JDI//WmklKlBgJnglpUL1owm2OX+8E1syCD6UAxcMM/XoWd76OHSjl/0MR0LisSAXDqgjT3uJqT67O3qw==}\n-    engines: {node: '>=12'}\n-    cpu: [ia32]\n-    os: [linux]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-linux-64@0.14.54:\n-    resolution: {integrity: sha512-EgjAgH5HwTbtNsTqQOXWApBaPVdDn7XcK+/PtJwZLT1UmpLoznPd8c5CxqsH2dQK3j05YsB3L17T8vE7cp4cCg==}\n-    engines: {node: '>=12'}\n-    cpu: [x64]\n-    os: [linux]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-linux-arm64@0.14.54:\n-    resolution: {integrity: sha512-WL71L+0Rwv+Gv/HTmxTEmpv0UgmxYa5ftZILVi2QmZBgX3q7+tDeOQNqGtdXSdsL8TQi1vIaVFHUPDe0O0kdig==}\n-    engines: {node: '>=12'}\n-    cpu: [arm64]\n-    os: [linux]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-linux-arm@0.14.54:\n-    resolution: {integrity: sha512-qqz/SjemQhVMTnvcLGoLOdFpCYbz4v4fUo+TfsWG+1aOu70/80RV6bgNpR2JCrppV2moUQkww+6bWxXRL9YMGw==}\n-    engines: {node: '>=12'}\n-    cpu: [arm]\n-    os: [linux]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-linux-mips64le@0.14.54:\n-    resolution: {integrity: sha512-qTHGQB8D1etd0u1+sB6p0ikLKRVuCWhYQhAHRPkO+OF3I/iSlTKNNS0Lh2Oc0g0UFGguaFZZiPJdJey3AGpAlw==}\n-    engines: {node: '>=12'}\n-    cpu: [mips64el]\n-    os: [linux]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-linux-ppc64le@0.14.54:\n-    resolution: {integrity: sha512-j3OMlzHiqwZBDPRCDFKcx595XVfOfOnv68Ax3U4UKZ3MTYQB5Yz3X1mn5GnodEVYzhtZgxEBidLWeIs8FDSfrQ==}\n-    engines: {node: '>=12'}\n-    cpu: [ppc64]\n-    os: [linux]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-linux-riscv64@0.14.54:\n-    resolution: {integrity: sha512-y7Vt7Wl9dkOGZjxQZnDAqqn+XOqFD7IMWiewY5SPlNlzMX39ocPQlOaoxvT4FllA5viyV26/QzHtvTjVNOxHZg==}\n-    engines: {node: '>=12'}\n-    cpu: [riscv64]\n-    os: [linux]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-linux-s390x@0.14.54:\n-    resolution: {integrity: sha512-zaHpW9dziAsi7lRcyV4r8dhfG1qBidQWUXweUjnw+lliChJqQr+6XD71K41oEIC3Mx1KStovEmlzm+MkGZHnHA==}\n-    engines: {node: '>=12'}\n-    cpu: [s390x]\n-    os: [linux]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-netbsd-64@0.14.54:\n-    resolution: {integrity: sha512-PR01lmIMnfJTgeU9VJTDY9ZerDWVFIUzAtJuDHwwceppW7cQWjBBqP48NdeRtoP04/AtO9a7w3viI+PIDr6d+w==}\n-    engines: {node: '>=12'}\n-    cpu: [x64]\n-    os: [netbsd]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-openbsd-64@0.14.54:\n-    resolution: {integrity: sha512-Qyk7ikT2o7Wu76UsvvDS5q0amJvmRzDyVlL0qf5VLsLchjCa1+IAvd8kTBgUxD7VBUUVgItLkk609ZHUc1oCaw==}\n-    engines: {node: '>=12'}\n-    cpu: [x64]\n-    os: [openbsd]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-sunos-64@0.14.54:\n-    resolution: {integrity: sha512-28GZ24KmMSeKi5ueWzMcco6EBHStL3B6ubM7M51RmPwXQGLe0teBGJocmWhgwccA1GeFXqxzILIxXpHbl9Q/Kw==}\n-    engines: {node: '>=12'}\n-    cpu: [x64]\n-    os: [sunos]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-windows-32@0.14.54:\n-    resolution: {integrity: sha512-T+rdZW19ql9MjS7pixmZYVObd9G7kcaZo+sETqNH4RCkuuYSuv9AGHUVnPoP9hhuE1WM1ZimHz1CIBHBboLU7w==}\n-    engines: {node: '>=12'}\n-    cpu: [ia32]\n-    os: [win32]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-windows-64@0.14.54:\n-    resolution: {integrity: sha512-AoHTRBUuYwXtZhjXZbA1pGfTo8cJo3vZIcWGLiUcTNgHpJJMC1rVA44ZereBHMJtotyN71S8Qw0npiCIkW96cQ==}\n-    engines: {node: '>=12'}\n-    cpu: [x64]\n-    os: [win32]\n-    requiresBuild: true\n-    dev: true\n-    optional: true\n-\n-  /esbuild-windows-arm64@0.14.54:\n-    resolution: {integrity: sha512-M0kuUvXhot1zOISQGXwWn6YtS+Y/1RT9WrVIOywZnJHo3jCDyewAc79aKNQWFCQm+xNHVTq9h8dZKvygoXQQRg==}\n"
          },
          {
            "+": "+    hasBin: true\n",
            "-": "-    cpu: [arm64]\n-    os: [win32]\n"
          },
          {
            "+": "+    optionalDependencies:\n+      '@esbuild/android-arm': 0.18.20\n+      '@esbuild/android-arm64': 0.18.20\n+      '@esbuild/android-x64': 0.18.20\n+      '@esbuild/darwin-arm64': 0.18.20\n+      '@esbuild/darwin-x64': 0.18.20\n+      '@esbuild/freebsd-arm64': 0.18.20\n+      '@esbuild/freebsd-x64': 0.18.20\n+      '@esbuild/linux-arm': 0.18.20\n+      '@esbuild/linux-arm64': 0.18.20\n+      '@esbuild/linux-ia32': 0.18.20\n+      '@esbuild/linux-loong64': 0.18.20\n+      '@esbuild/linux-mips64el': 0.18.20\n+      '@esbuild/linux-ppc64': 0.18.20\n+      '@esbuild/linux-riscv64': 0.18.20\n+      '@esbuild/linux-s390x': 0.18.20\n+      '@esbuild/linux-x64': 0.18.20\n+      '@esbuild/netbsd-x64': 0.18.20\n+      '@esbuild/openbsd-x64': 0.18.20\n+      '@esbuild/sunos-x64': 0.18.20\n+      '@esbuild/win32-arm64': 0.18.20\n+      '@esbuild/win32-ia32': 0.18.20\n+      '@esbuild/win32-x64': 0.18.20\n+    dev: true\n+\n+  /esbuild@0.19.5:\n+    resolution: {integrity: sha512-bUxalY7b1g8vNhQKdB24QDmHeY4V4tw/s6Ak5z+jJX9laP5MoQseTOMemAr0gxssjNcH0MCViG8ONI2kksvfFQ==}\n",
            "-": "-    dev: true\n-    optional: true\n-\n-  /esbuild@0.14.54:\n-    resolution: {integrity: sha512-Cy9llcy8DvET5uznocPyqL3BFRrFXSVqbgpMJ9Wz8oVjZlh/zUSNbPRbov0VX7VxN2JH1Oa0uNxZ7eLRb62pJA==}\n"
          },
          {
            "+": "+      '@esbuild/android-arm': 0.19.5\n+      '@esbuild/android-arm64': 0.19.5\n+      '@esbuild/android-x64': 0.19.5\n+      '@esbuild/darwin-arm64': 0.19.5\n+      '@esbuild/darwin-x64': 0.19.5\n+      '@esbuild/freebsd-arm64': 0.19.5\n+      '@esbuild/freebsd-x64': 0.19.5\n+      '@esbuild/linux-arm': 0.19.5\n+      '@esbuild/linux-arm64': 0.19.5\n+      '@esbuild/linux-ia32': 0.19.5\n+      '@esbuild/linux-loong64': 0.19.5\n+      '@esbuild/linux-mips64el': 0.19.5\n+      '@esbuild/linux-ppc64': 0.19.5\n+      '@esbuild/linux-riscv64': 0.19.5\n+      '@esbuild/linux-s390x': 0.19.5\n+      '@esbuild/linux-x64': 0.19.5\n+      '@esbuild/netbsd-x64': 0.19.5\n+      '@esbuild/openbsd-x64': 0.19.5\n+      '@esbuild/sunos-x64': 0.19.5\n+      '@esbuild/win32-arm64': 0.19.5\n+      '@esbuild/win32-ia32': 0.19.5\n+      '@esbuild/win32-x64': 0.19.5\n",
            "-": "-      '@esbuild/linux-loong64': 0.14.54\n-      esbuild-android-64: 0.14.54\n-      esbuild-android-arm64: 0.14.54\n-      esbuild-darwin-64: 0.14.54\n-      esbuild-darwin-arm64: 0.14.54\n-      esbuild-freebsd-64: 0.14.54\n-      esbuild-freebsd-arm64: 0.14.54\n-      esbuild-linux-32: 0.14.54\n-      esbuild-linux-64: 0.14.54\n-      esbuild-linux-arm: 0.14.54\n-      esbuild-linux-arm64: 0.14.54\n-      esbuild-linux-mips64le: 0.14.54\n-      esbuild-linux-ppc64le: 0.14.54\n-      esbuild-linux-riscv64: 0.14.54\n-      esbuild-linux-s390x: 0.14.54\n-      esbuild-netbsd-64: 0.14.54\n-      esbuild-openbsd-64: 0.14.54\n-      esbuild-sunos-64: 0.14.54\n-      esbuild-windows-32: 0.14.54\n-      esbuild-windows-64: 0.14.54\n-      esbuild-windows-arm64: 0.14.54\n"
          },
          {
            "+": "+  /file-loader@3.0.1(webpack@4.47.0):\n",
            "-": "-  /file-loader@3.0.1(webpack@4.46.0):\n"
          },
          {
            "+": "+      webpack: 4.47.0\n",
            "-": "-      webpack: 4.46.0\n"
          },
          {
            "+": "+  /get-func-name@2.0.2:\n+    resolution: {integrity: sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==}\n",
            "-": "-  /get-func-name@2.0.0:\n-    resolution: {integrity: sha512-Hm0ixYtaSZ/V7C8FJrtZIuBBI+iSgL+1Aq82zSu8VQNB4S3Gk8e7Qs3VwBDJAhmRZcFqkl3tQu36g/Foh5I5ig==}\n"
          },
          {
            "+": "+  /jsonc-parser@3.2.0:\n+    resolution: {integrity: sha512-gfFQZrcTc8CnKXp6Y4/CBT3fTc0OVuDofpre4aEeEpSBPV5X5v4+Vmx+8snU7RLPrNHPKSgLxGo9YuQzz20o+w==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /karma-esbuild@2.2.5(esbuild@0.19.5):\n",
            "-": "-  /karma-esbuild@2.2.5(esbuild@0.14.54):\n"
          },
          {
            "+": "+      esbuild: 0.19.5\n",
            "-": "-      esbuild: 0.14.54\n"
          },
          {
            "+": "+  /local-pkg@0.4.3:\n+    resolution: {integrity: sha512-SFppqq5p42fe2qcZQqqEOiVRXl+WCP1MdT6k7BDEW1j++sp5fIY+/fdRQitvKgB5BrBcmrs5m/L0v2FrU5MY1g==}\n",
            "-": "-  /local-pkg@0.4.2:\n-    resolution: {integrity: sha512-mlERgSPrbxU3BP4qBqAvvwlgW4MTg78iwJdGGnv7kibKjWcJksrG3t6LB5lXI93wXRDvG4NpUgJFmTG4T6rdrg==}\n"
          },
          {
            "+": "+  /loupe@2.3.7:\n+    resolution: {integrity: sha512-zSMINGVYkdpYSOBmLi0D1Uo7JU9nVdQKrHxC8eYlV+9YKK9WePqAlL7lSlorG/U2Fw1w0hTBmaa/jrQ3UbPHtA==}\n",
            "-": "-  /loupe@2.3.4:\n-    resolution: {integrity: sha512-OvKfgCC2Ndby6aSTREl5aCCPTNIzlDfQZvZxNUrBrihDhL3xcrYegTblhmEiCrg2kKQz4XsFIaemE5BF4ybSaQ==}\n"
          },
          {
            "+": "+      get-func-name: 2.0.2\n",
            "-": "-      get-func-name: 2.0.0\n"
          },
          {
            "+": "+  /magic-string@0.30.5:\n+    resolution: {integrity: sha512-7xlpfBaQaP/T6Vh8MO/EqXSW5En6INHEvEXQiuff7Gku0PWjU3uf6w/j9o7O+SpB5fOAkrI5HeoNgwjEO0pFsA==}\n+    engines: {node: '>=12'}\n+    dependencies:\n+      '@jridgewell/sourcemap-codec': 1.4.15\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /mlly@1.4.2:\n+    resolution: {integrity: sha512-i/Ykufi2t1EZ6NaPLdfnZk2AX8cs0d+mTzVKuPfqPKPatxLApaBoxJQ9x1/uckXtrS/U5oisPMDkNs0yQTaBRg==}\n+    dependencies:\n+      acorn: 8.10.0\n+      pathe: 1.1.1\n+      pkg-types: 1.0.3\n+      ufo: 1.3.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /nanoid@3.3.6:\n+    resolution: {integrity: sha512-BGcqMMJuToF7i1rt+2PWSNVnWIkGCU78jBG3RxO/bZlnZPK2Cmi2QaffxGO/2RvWi9sL+FAiRiXMgsyxQ1DIDA==}\n+    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n+    hasBin: true\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /p-limit@4.0.0:\n+    resolution: {integrity: sha512-5b0R4txpzjPWVw/cXXUResoD4hb6U/x9BH08L7nw+GN1sezDzPdxeRvpc9c433fZhBan/wusjbCsqwqm4EIBIQ==}\n+    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n+    dependencies:\n+      yocto-queue: 1.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /pathe@1.1.1:\n+    resolution: {integrity: sha512-d+RQGp0MAYTIaDBIMmOfMwz3E+LOZnxx1HZd5R18mmCZY0QBlK0LDZfPc8FW8Ed2DlvsuE6PRjroDY+wg4+j/Q==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+    requiresBuild: true\n",
            "-": ""
          },
          {
            "+": "+  /pkg-types@1.0.3:\n+    resolution: {integrity: sha512-nN7pYi0AQqJnoLPC9eHFQ8AcyaixBUOwvqc5TDnIKCMEE6I0y8P7OKA7fPexsXGCGxQDl/cmrLAp26LhcwxZ4A==}\n+    dependencies:\n+      jsonc-parser: 3.2.0\n+      mlly: 1.4.2\n+      pathe: 1.1.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /postcss@8.4.31:\n+    resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}\n+    engines: {node: ^10 || ^12 || >=14}\n+    dependencies:\n+      nanoid: 3.3.6\n+      picocolors: 1.0.0\n+      source-map-js: 1.0.2\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /pretty-format@29.7.0:\n+    resolution: {integrity: sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==}\n+    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}\n+    dependencies:\n+      '@jest/schemas': 29.6.3\n+      ansi-styles: 5.2.0\n+      react-is: 18.2.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /react-is@18.2.0:\n+    resolution: {integrity: sha512-xWGDIW6x921xtzPkhiULtthJHoJvBbF3q26fzloPCK0hsvxtPVelvftw3zjbHWSkR2km9Z+4uxbDDK/6Zw9B8w==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /rollup@2.79.1:\n+    resolution: {integrity: sha512-uKxbd0IhMZOhjAiD5oAFp7BqvkA4Dv47qpOCtaNvng4HBwdbWtdOh8f5nZNuk2rp51PMGk3bzfWu5oayNEuYnw==}\n",
            "-": "-  /rollup@2.77.3:\n-    resolution: {integrity: sha512-/qxNTG7FbmefJWoeeYJFbHehJ2HNWnjkAFRKzWN/45eNBBF/r8lo992CwcJXEzyVxs5FmfId+vTSTQDb+bxA+g==}\n"
          },
          {
            "+": "+  /rollup@3.29.4:\n+    resolution: {integrity: sha512-oWzmBZwvYrU0iJHtDmhsm662rC15FRXmcjCk1xD771dFDx5jJ02ufAQQTn0etB2emNk4J9EZg/yWKpsn9BWGRw==}\n+    engines: {node: '>=14.18.0', npm: '>=8.0.0'}\n",
            "-": "-  /rollup@2.79.1:\n-    resolution: {integrity: sha512-uKxbd0IhMZOhjAiD5oAFp7BqvkA4Dv47qpOCtaNvng4HBwdbWtdOh8f5nZNuk2rp51PMGk3bzfWu5oayNEuYnw==}\n-    engines: {node: '>=10.0.0'}\n"
          },
          {
            "+": "+  /siginfo@2.0.0:\n+    resolution: {integrity: sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /stackback@0.0.2:\n+    resolution: {integrity: sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /std-env@3.4.3:\n+    resolution: {integrity: sha512-f9aPhy8fYBuMN+sNfakZV18U39PbalgjXG3lLB9WkaYTxijru61wb57V9wxxNthXM5Sd88ETBWi29qLAsHO52Q==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /strip-literal@1.3.0:\n+    resolution: {integrity: sha512-PugKzOsyXpArk0yWmUwqOZecSO0GH0bPoctLcqNDH9J04pVW3lflYE0ujElBGTloevcxF5MofAOZ7C5l2b+wLg==}\n+    dependencies:\n+      acorn: 8.10.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /terser-webpack-plugin@1.4.5(webpack@4.47.0):\n",
            "-": "-  /terser-webpack-plugin@1.4.5(webpack@4.46.0):\n"
          },
          {
            "+": "+      webpack: 4.47.0\n",
            "-": "-      webpack: 4.46.0\n"
          },
          {
            "+": "+      acorn: 8.10.0\n",
            "-": "-      acorn: 8.8.0\n"
          },
          {
            "+": "+  /tinybench@2.5.1:\n+    resolution: {integrity: sha512-65NKvSuAVDP/n4CqH+a9w2kTlLReS9vhsAP06MWx+/89nMinJyB2icyl58RIcqCmIggpojIGeuJGhjU1aGMBSg==}\n+    dev: true\n+\n+  /tinypool@0.7.0:\n+    resolution: {integrity: sha512-zSYNUlYSMhJ6Zdou4cJwo/p7w5nmAH17GRfU/ui3ctvjXFErXXkruT4MWW6poDeXgCaIBlGLrfU6TbTXxyGMww==}\n",
            "-": "-  /tinypool@0.1.3:\n-    resolution: {integrity: sha512-2IfcQh7CP46XGWGGbdyO4pjcKqsmVqFAPcXfPxcPXmOWt9cYkTP9HcDmGgsfijYoAEc4z9qcpM/BaBz46Y9/CQ==}\n"
          },
          {
            "+": "+  /tinyspy@2.2.0:\n+    resolution: {integrity: sha512-d2eda04AN/cPOR89F7Xv5bK/jrQEhmcLFe6HFldoeO9AJtps+fqEnh486vnT/8y4bw38pSyxDcTCAq+Ks2aJTg==}\n",
            "-": "-  /tinyspy@0.3.3:\n-    resolution: {integrity: sha512-gRiUR8fuhUf0W9lzojPf1N1euJYA30ISebSfgca8z76FOvXtVXqd5ojEIaKLWbDQhAaC3ibxZIjqbyi4ybjcTw==}\n"
          },
          {
            "+": "+    resolution: {integrity: sha512-JVa5ijo+j/sOoHGjw0sxw734b1LhBkQ3bvUGNdxnVXDCX81Yx7TFgnZygxrIIWn23hbfTaMYLwRmAxFyDuFmIw==}\n",
            "-": "-    resolution: {integrity: sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY=}\n"
          },
          {
            "+": "+  /ufo@1.3.1:\n+    resolution: {integrity: sha512-uY/99gMLIOlJPwATcMVYfqDSxUR9//AUcgZMzwfSTJPDKzA1S8mX4VLqa+fiAtveraQUBCz4FFcwVZBGbwBXIw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /vite-node@0.34.6(@types/node@17.0.45)(terser@5.15.1):\n+    resolution: {integrity: sha512-nlBMJ9x6n7/Amaz6F3zJ97EBwR2FkzhBRxF5e+jE6LA3yi6Wtc2lyTij1OnDMIr34v5g/tVQtsVAzhT0jc5ygA==}\n+    engines: {node: '>=v14.18.0'}\n+    hasBin: true\n+    dependencies:\n+      cac: 6.7.14\n+      debug: 4.3.4(supports-color@9.2.3)\n+      mlly: 1.4.2\n+      pathe: 1.1.1\n+      picocolors: 1.0.0\n+      vite: 4.5.0(@types/node@17.0.45)(terser@5.15.1)\n+    transitivePeerDependencies:\n+      - '@types/node'\n+      - less\n+      - lightningcss\n+      - sass\n+      - stylus\n+      - sugarss\n+      - supports-color\n+      - terser\n+    dev: true\n+\n+  /vite@4.5.0(@types/node@17.0.45)(terser@5.15.1):\n+    resolution: {integrity: sha512-ulr8rNLA6rkyFAlVWw2q5YJ91v098AFQ2R0PRFwPzREXOUJQPtFUG0t+/ZikhaOCDqFoDhN6/v8Sq0o4araFAw==}\n+    engines: {node: ^14.18.0 || >=16.0.0}\n",
            "-": "-  /vite@2.9.15:\n-    resolution: {integrity: sha512-fzMt2jK4vQ3yK56te3Kqpkaeq9DkcZfBbzHwYpobasvgYmP2SoAr6Aic05CsB4CzCZbsDv4sujX3pkEGhLabVQ==}\n-    engines: {node: '>=12.2.0'}\n"
          },
          {
            "+": "+      '@types/node': '>= 14'\n",
            "-": ""
          },
          {
            "+": "+      lightningcss: ^1.21.0\n",
            "-": ""
          },
          {
            "+": "+      sugarss: '*'\n+      terser: ^5.4.0\n",
            "-": ""
          },
          {
            "+": "+      '@types/node':\n+        optional: true\n",
            "-": ""
          },
          {
            "+": "+      lightningcss:\n+        optional: true\n",
            "-": ""
          },
          {
            "+": "+      sugarss:\n+        optional: true\n+      terser:\n+        optional: true\n",
            "-": ""
          },
          {
            "+": "+      '@types/node': 17.0.45\n+      esbuild: 0.18.20\n+      postcss: 8.4.31\n+      rollup: 3.29.4\n+      terser: 5.15.1\n",
            "-": "-      esbuild: 0.14.54\n-      postcss: 8.4.17\n-      resolve: 1.22.1\n-      rollup: 2.77.3\n"
          },
          {
            "+": "+  /vitest@0.34.6(jsdom@19.0.0)(terser@5.15.1):\n+    resolution: {integrity: sha512-+5CALsOvbNKnS+ZHMXtuUC7nL8/7F1F2DnHGjSsszX8zCjWSSviphCb/NuS9Nzf4Q03KyyDRBAXhF/8lffME4Q==}\n+    engines: {node: '>=v14.18.0'}\n",
            "-": "-  /vitest@0.12.10(jsdom@19.0.0):\n-    resolution: {integrity: sha512-TVoI6fM7rZ1zIMDjcviY8Dg5XIaPqBwDweaI3oUwvWqUz68cbM49CIHNMkF+UVoSjl94wXiBRdNhsT4ekgWuGA==}\n-    engines: {node: '>=v14.16.0'}\n"
          },
          {
            "+": "+      '@edge-runtime/vm': '*'\n+      '@vitest/browser': '*'\n",
            "-": ""
          },
          {
            "-": "-      c8: '*'\n",
            "+": ""
          },
          {
            "+": "+      playwright: '*'\n+      safaridriver: '*'\n+      webdriverio: '*'\n",
            "-": ""
          },
          {
            "+": "+      '@edge-runtime/vm':\n+        optional: true\n+      '@vitest/browser':\n",
            "-": "-      '@vitest/ui':\n"
          },
          {
            "+": "+      '@vitest/ui':\n",
            "-": "-      c8:\n"
          },
          {
            "+": "+      playwright:\n+        optional: true\n+      safaridriver:\n+        optional: true\n+      webdriverio:\n+        optional: true\n",
            "-": ""
          },
          {
            "+": "+      '@types/chai': 4.3.9\n",
            "-": "-      '@types/chai': 4.3.3\n"
          },
          {
            "+": "+      '@types/node': 17.0.45\n+      '@vitest/expect': 0.34.6\n+      '@vitest/runner': 0.34.6\n+      '@vitest/snapshot': 0.34.6\n+      '@vitest/spy': 0.34.6\n+      '@vitest/utils': 0.34.6\n+      acorn: 8.10.0\n+      acorn-walk: 8.2.0\n+      cac: 6.7.14\n+      chai: 4.3.10\n",
            "-": "-      chai: 4.3.6\n"
          },
          {
            "+": "+      local-pkg: 0.4.3\n+      magic-string: 0.30.5\n+      pathe: 1.1.1\n+      picocolors: 1.0.0\n+      std-env: 3.4.3\n+      strip-literal: 1.3.0\n+      tinybench: 2.5.1\n+      tinypool: 0.7.0\n+      vite: 4.5.0(@types/node@17.0.45)(terser@5.15.1)\n+      vite-node: 0.34.6(@types/node@17.0.45)(terser@5.15.1)\n+      why-is-node-running: 2.2.2\n",
            "-": "-      local-pkg: 0.4.2\n-      tinypool: 0.1.3\n-      tinyspy: 0.3.3\n-      vite: 2.9.15\n"
          },
          {
            "+": "+      - lightningcss\n",
            "-": ""
          },
          {
            "+": "+      - sugarss\n",
            "-": ""
          },
          {
            "+": "+      - terser\n",
            "-": ""
          },
          {
            "+": "+  /webpack@4.47.0:\n+    resolution: {integrity: sha512-td7fYwgLSrky3fI1EuU5cneU4+pbH6GgOfuKNS1tNPcfdGinGELAqsb/BP4nnvZyKSG2i/xFGU7+n2PvZA8HJQ==}\n",
            "-": "-  /webpack@4.46.0:\n-    resolution: {integrity: sha512-6jJuJjg8znb/xRItk7bkT0+Q7AHCYjjFnvKIWQPkNIOyRqoCGvkOs0ipeQzrqz4l5FtN5ZI/ukEHroeX/o1/5Q==}\n"
          },
          {
            "+": "+      terser-webpack-plugin: 1.4.5(webpack@4.47.0)\n",
            "-": "-      terser-webpack-plugin: 1.4.5(webpack@4.46.0)\n"
          },
          {
            "+": "+  /why-is-node-running@2.2.2:\n+    resolution: {integrity: sha512-6tSwToZxTOcotxHeA+qGCq1mVzKR3CwcJGmVcY+QE8SHy6TnpFnh8PAvPNHYr7EcuVeG0QSMxtYCuO1ta/G/oA==}\n+    engines: {node: '>=8'}\n+    hasBin: true\n+    dependencies:\n+      siginfo: 2.0.0\n+      stackback: 0.0.2\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /yocto-queue@1.0.0:\n+    resolution: {integrity: sha512-9bnSc/HEW2uRy67wc+T8UwauLuPJVn28jb+GtJY16iiKWyvmYJRXVT4UamsAEGQfPohgr2q4Tq0sQbQlxTfi1g==}\n+    engines: {node: '>=12.20'}\n+    dev: true\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 9,
      "numOfChanges": 198,
      "qualityScore": 44
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "5aed733ab6b6605314cc5f24cc1b1dd9aa4413c8",
      "url": "https://github.com/vuejs/vue/commit/5aed733ab6b6605314cc5f24cc1b1dd9aa4413c8",
      "message": "test: add test case for #12778",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-11-09T09:35:45Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/types/test/v3/tsx-test.tsx": [
          {
            "+": "+import { VNode, defineComponent, ref, RenderContext } from '../../index'\n",
            "-": "-import { VNode, defineComponent, ref } from '../../index'\n"
          },
          {
            "+": "+expectType<JSX.Element>(\n+  <div\n+    ref={el => {\n+      fooRef.value = el as HTMLElement\n+    }}\n+  />\n+)\n",
            "-": "-expectType<JSX.Element>(<div ref={(el) => {fooRef.value = el as HTMLElement}} />)\n"
          },
          {
            "-": "-\n",
            "+": ""
          },
          {
            "+": "+\n+export default ({ data }: RenderContext) => {\n+  return <button {...data} />\n+}\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 4,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "9ed684785f868db5b154c4a09642b2b7d33dd6f3",
      "url": "https://github.com/vuejs/vue/commit/9ed684785f868db5b154c4a09642b2b7d33dd6f3",
      "message": "test: add test for type casting $refs to defineComponent instance type",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-07-15T09:07:19Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/types/test/v3/define-component-test.tsx": [
          {
            "+": "+const X = defineComponent({\n+  methods: {\n+    foo() {\n+      return 123\n+    }\n+  }\n+})\n+\n",
            "-": ""
          },
          {
            "+": "+\n+    // type casting refs\n+    const foo = this.$refs.foo as InstanceType<typeof X>\n+    foo.foo().toExponential()\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "bcb62d1a001125bfac91c1dd4f8bd51ac42b5a0f",
      "url": "https://github.com/vuejs/vue/commit/bcb62d1a001125bfac91c1dd4f8bd51ac42b5a0f",
      "message": "test: test case for #12597",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-07-04T02:39:36Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/v3/reactivity/shallowReactive.spec.ts": [
          {
            "+": "+  isRef,\n",
            "-": ""
          },
          {
            "+": "+  ref,\n",
            "-": ""
          },
          {
            "+": "+  // #12597\n+  test('should not unwrap refs', () => {\n+    const foo = shallowReactive({\n+      bar: ref(123)\n+    })\n+    expect(isRef(foo.bar)).toBe(true)\n+    expect(foo.bar.value).toBe(123)\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "d4787e53ef0958f4d2c9531c6c7f0c31fa0499f4",
      "url": "https://github.com/vuejs/vue/commit/d4787e53ef0958f4d2c9531c6c7f0c31fa0499f4",
      "message": "test: test case for prefixIdentifiers w/ bindings",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-06-15T02:18:55Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/packages/compiler-sfc/test/prefixIdentifiers.spec.ts": [
          {
            "+": "+import { BindingTypes } from '../src/types'\n",
            "-": ""
          },
          {
            "+": "+\n+it('setup bindings', () => {\n+  const { render } = compile(`<div @click=\"count++\">{{ count }}</div>`)\n+\n+  const result = format(\n+    prefixIdentifiers(render, `render`, false, false, undefined, {\n+      count: BindingTypes.SETUP_REF\n+    }),\n+    {\n+      semi: false,\n+      parser: 'babel'\n+    }\n+  )\n+\n+  expect(result).toMatch(`_setup = _vm._setupProxy`)\n+  expect(result).toMatch(`_setup.count++`)\n+  expect(result).toMatch(`_vm._s(_setup.count)`)\n+\n+  expect(result).toMatchInlineSnapshot(`\n+    \"function render() {\n+      var _vm = this,\n+        _c = _vm._self._c,\n+        _setup = _vm._setupProxy\n+      return _c(\n+        \\\\\"div\\\\\",\n+        {\n+          on: {\n+            click: function (\\$event) {\n+              _setup.count++\n+            },\n+          },\n+        },\n+        [_vm._v(_vm._s(_setup.count))]\n+      )\n+    }\n+    \"\n+  `)\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "e5a6fe5da7a68e00e0143c6f4414f7e615a684ca",
      "url": "https://github.com/vuejs/vue/commit/e5a6fe5da7a68e00e0143c6f4414f7e615a684ca",
      "message": "test: e2e test for composition API examples",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-30T09:20:43Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/examples/classic/markdown/index.html": [
          {
            "+": "+            return marked.marked(this.input)\n",
            "-": "-            return marked(this.input, { sanitize: true })\n"
          }
        ],
        "a/examples/classic/svg/svg.js": [
          {
            "+": "+var globalStats = [\n",
            "-": "-var stats = [\n"
          },
          {
            "+": "+      return this.stats\n+        .map(function (stat, i) {\n+          var point = valueToPoint(stat.value, i, total)\n+          return point.x + ',' + point.y\n+        })\n+        .join(' ')\n",
            "-": "-      return this.stats.map(function (stat, i) {\n-        var point = valueToPoint(stat.value, i, total)\n-        return point.x + ',' + point.y\n-      }).join(' ')\n"
          },
          {
            "+": "+          return valueToPoint(+this.stat.value + 10, this.index, this.total)\n",
            "-": "-          return valueToPoint(\n-            +this.stat.value + 10,\n-            this.index,\n-            this.total\n-          )\n"
          },
          {
            "+": "+function valueToPoint(value, index, total) {\n+  var x = 0\n+  var y = -value * 0.8\n+  var angle = ((Math.PI * 2) / total) * index\n+  var cos = Math.cos(angle)\n+  var sin = Math.sin(angle)\n+  var tx = x * cos - y * sin + 100\n+  var ty = x * sin + y * cos + 100\n",
            "-": "-function valueToPoint (value, index, total) {\n-  var x     = 0\n-  var y     = -value * 0.8\n-  var angle = Math.PI * 2 / total * index\n-  var cos   = Math.cos(angle)\n-  var sin   = Math.sin(angle)\n-  var tx    = x * cos - y * sin + 100\n-  var ty    = x * sin + y * cos + 100\n"
          },
          {
            "+": "+    stats: globalStats\n",
            "-": "-    stats: stats\n"
          },
          {
            "+": "+        alert(\"Can't delete more!\")\n",
            "-": "-        alert('Can\\'t delete more!')\n"
          }
        ],
        "a/examples/composition/commits.html": [
          {
            "+": "+<script src=\"../../dist/vue.min.js\"></script>\n+\n+<div id=\"demo\">\n+  <h1>Latest Vue.js Commits</h1>\n+  <template v-for=\"branch in branches\">\n+    <input type=\"radio\"\n+      :id=\"branch\"\n+      :value=\"branch\"\n+      name=\"branch\"\n+      v-model=\"currentBranch\">\n+    <label :for=\"branch\">{{ branch }}</label>\n+  </template>\n+  <p>vuejs/vue@{{ currentBranch }}</p>\n+  <ul>\n+    <li v-for=\"{ html_url, sha, author, commit } in commits\">\n+      <a :href=\"html_url\" target=\"_blank\" class=\"commit\">{{ sha.slice(0, 7) }}</a>\n+      - <span class=\"message\">{{ truncate(commit.message) }}</span><br>\n+      by <span class=\"author\"><a :href=\"author.html_url\" target=\"_blank\">{{ commit.author.name }}</a></span>\n+      at <span class=\"date\">{{ formatDate(commit.author.date) }}</span>\n+    </li>\n+  </ul>\n+</div>\n+\n+<script>\n+const { ref, watchEffect } = Vue\n+const API_URL = `https://api.github.com/repos/vuejs/vue/commits?per_page=3&sha=`\n+\n+const truncate = v => {\n+  const newline = v.indexOf('\\n')\n+  return newline > 0 ? v.slice(0, newline) : v\n+}\n+\n+const formatDate = v => v.replace(/T|Z/g, ' ')\n+\n+new Vue({\n+  setup() {\n+    const currentBranch = ref('main')\n+    const commits = ref(null)\n+\n+    watchEffect(() => {\n+      fetch(`${API_URL}${currentBranch.value}`)\n+        .then(res => res.json())\n+        .then(data => {\n+          console.log(data)\n+          commits.value = data\n+        })\n+    })\n+\n+    return {\n+      branches: ['main', 'dev'],\n+      currentBranch,\n+      commits,\n+      truncate,\n+      formatDate\n+    }\n+  }\n+}).$mount('#demo')\n+</script>\n+\n+<style>\n+  #demo {\n+    font-family: 'Helvetica', Arial, sans-serif;\n+  }\n+  a {\n+    text-decoration: none;\n+    color: #f66;\n+  }\n+  li {\n+    line-height: 1.5em;\n+    margin-bottom: 20px;\n+  }\n+  .author, .date {\n+    font-weight: bold;\n+  }\n+</style>\n",
            "-": ""
          }
        ],
        "a/examples/composition/grid.html": [
          {
            "+": "+<script src=\"../../dist/vue.min.js\"></script>\n+\n+<!-- DemoGrid component template -->\n+<script type=\"text/x-template\" id=\"grid-template\">\n+  <table v-if=\"filteredData.length\">\n+    <thead>\n+      <tr>\n+        <th v-for=\"key in columns\"\n+          @click=\"sortBy(key)\"\n+          :class=\"{ active: state.sortKey == key }\">\n+          {{ capitalize(key) }}\n+          <span class=\"arrow\" :class=\"state.sortOrders[key] > 0 ? 'asc' : 'dsc'\">\n+          </span>\n+        </th>\n+      </tr>\n+    </thead>\n+    <tbody>\n+      <tr v-for=\"entry in filteredData\">\n+        <td v-for=\"key in columns\">\n+          {{entry[key]}}\n+        </td>\n+      </tr>\n+    </tbody>\n+  </table>\n+  <p v-else>No matches found.</p>\n+</script>\n+<!-- DemoGrid component script -->\n+<script>\n+const { reactive, computed } = Vue\n+\n+const capitalize = str => str.charAt(0).toUpperCase() + str.slice(1)\n+\n+const DemoGrid = {\n+  template: '#grid-template',\n+  props: {\n+    data: Array,\n+    columns: Array,\n+    filterKey: String\n+  },\n+  setup(props) {\n+    const state = reactive({\n+      sortKey: '',\n+      sortOrders: props.columns.reduce((o, key) => (o[key] = 1, o), {})\n+    })\n+\n+    const filteredData = computed(() => {\n+      let { data, filterKey } = props\n+      if (filterKey) {\n+        filterKey = filterKey.toLowerCase()\n+        data = data.filter(row => {\n+          return Object.keys(row).some(key => {\n+            return String(row[key]).toLowerCase().indexOf(filterKey) > -1\n+          })\n+        })\n+      }\n+      const { sortKey } = state\n+      if (sortKey) {\n+        const order = state.sortOrders[sortKey]\n+        data = data.slice().sort((a, b) => {\n+          a = a[sortKey]\n+          b = b[sortKey]\n+          return (a === b ? 0 : a > b ? 1 : -1) * order\n+        })\n+      }\n+      return data\n+    })\n+\n+    function sortBy(key) {\n+      state.sortKey = key\n+      state.sortOrders[key] *= -1\n+    }\n+\n+    return {\n+      state,\n+      filteredData,\n+      sortBy,\n+      capitalize\n+    }\n+  }\n+}\n+</script>\n+\n+<!-- App template (in DOM) -->\n+<div id=\"demo\">\n+  <form id=\"search\">\n+    Search <input name=\"query\" v-model=\"searchQuery\">\n+  </form>\n+  <demo-grid\n+    :data=\"gridData\"\n+    :columns=\"gridColumns\"\n+    :filter-key=\"searchQuery\">\n+  </demo-grid>\n+</div>\n+<!-- App script -->\n+<script>\n+new Vue({\n+  components: {\n+    DemoGrid\n+  },\n+  data: () => ({\n+    searchQuery: '',\n+    gridColumns: ['name', 'power'],\n+    gridData: [\n+      { name: 'Chuck Norris', power: Infinity },\n+      { name: 'Bruce Lee', power: 9000 },\n+      { name: 'Jackie Chan', power: 7000 },\n+      { name: 'Jet Li', power: 8000 }\n+    ]\n+  })\n+}).$mount('#demo')\n+</script>\n+\n+<style>\n+body {\n+  font-family: Helvetica Neue, Arial, sans-serif;\n+  font-size: 14px;\n+  color: #444;\n+}\n+\n+table {\n+  border: 2px solid #42b983;\n+  border-radius: 3px;\n+  background-color: #fff;\n+}\n+\n+th {\n+  background-color: #42b983;\n+  color: rgba(255,255,255,0.66);\n+  cursor: pointer;\n+  -webkit-user-select: none;\n+  -moz-user-select: none;\n+  -ms-user-select: none;\n+  user-select: none;\n+}\n+\n+td {\n+  background-color: #f9f9f9;\n+}\n+\n+th, td {\n+  min-width: 120px;\n+  padding: 10px 20px;\n+}\n+\n+th.active {\n+  color: #fff;\n+}\n+\n+th.active .arrow {\n+  opacity: 1;\n+}\n+\n+.arrow {\n+  display: inline-block;\n+  vertical-align: middle;\n+  width: 0;\n+  height: 0;\n+  margin-left: 5px;\n+  opacity: 0.66;\n+}\n+\n+.arrow.asc {\n+  border-left: 4px solid transparent;\n+  border-right: 4px solid transparent;\n+  border-bottom: 4px solid #fff;\n+}\n+\n+.arrow.dsc {\n+  border-left: 4px solid transparent;\n+  border-right: 4px solid transparent;\n+  border-top: 4px solid #fff;\n+}\n+</style>\n",
            "-": ""
          }
        ],
        "a/examples/composition/markdown.html": [
          {
            "+": "+<script src=\"../../node_modules/marked/marked.min.js\"></script>\n+<script src=\"../../node_modules/lodash/lodash.min.js\"></script>\n+<script src=\"../../dist/vue.min.js\"></script>\n+\n+<div id=\"editor\">\n+  <textarea :value=\"input\" @input=\"update\"></textarea>\n+  <div v-html=\"output\"></div>\n+</div>\n+\n+<script>\n+  const { ref, computed } = Vue\n+\n+  new Vue({\n+    setup() {\n+      const input = ref('# hello')\n+      const output = computed(() => marked.marked(input.value))\n+      const update = _.debounce(e => {\n+        input.value = e.target.value\n+      }, 300)\n+\n+      return {\n+        input,\n+        output,\n+        update\n+      }\n+    }\n+  }).$mount('#editor')\n+</script>\n+\n+<style>\n+  html,\n+  body,\n+  #editor {\n+    margin: 0;\n+    height: 100%;\n+    font-family: 'Helvetica Neue', Arial, sans-serif;\n+    color: #333;\n+  }\n+\n+  textarea,\n+  #editor div {\n+    display: inline-block;\n+    width: 49%;\n+    height: 100%;\n+    vertical-align: top;\n+    -webkit-box-sizing: border-box;\n+    -moz-box-sizing: border-box;\n+    box-sizing: border-box;\n+    padding: 0 20px;\n+  }\n+\n+  textarea {\n+    border: none;\n+    border-right: 1px solid #ccc;\n+    resize: none;\n+    outline: none;\n+    background-color: #f6f6f6;\n+    font-size: 14px;\n+    font-family: 'Monaco', courier, monospace;\n+    padding: 20px;\n+  }\n+\n+  code {\n+    color: #f66;\n+  }\n+</style>\n",
            "-": ""
          }
        ],
        "a/examples/composition/svg.html": [
          {
            "+": "+<script src=\"../../dist/vue.min.js\"></script>\n+<script>\n+  const { ref, computed, createApp } = Vue\n+\n+  // math helper...\n+  function valueToPoint(value, index, total) {\n+    var x = 0\n+    var y = -value * 0.8\n+    var angle = ((Math.PI * 2) / total) * index\n+    var cos = Math.cos(angle)\n+    var sin = Math.sin(angle)\n+    var tx = x * cos - y * sin + 100\n+    var ty = x * sin + y * cos + 100\n+    return {\n+      x: tx,\n+      y: ty\n+    }\n+  }\n+\n+  const AxisLabel = {\n+    template: '<text :x=\"point.x\" :y=\"point.y\">{{stat.label}}</text>',\n+    props: {\n+      stat: Object,\n+      index: Number,\n+      total: Number\n+    },\n+    setup(props) {\n+      return {\n+        point: computed(() =>\n+          valueToPoint(+props.stat.value + 10, props.index, props.total)\n+        )\n+      }\n+    }\n+  }\n+</script>\n+\n+<!-- template for the polygraph component. -->\n+<script type=\"text/x-template\" id=\"polygraph-template\">\n+  <g>\n+    <polygon :points=\"points\"></polygon>\n+    <circle cx=\"100\" cy=\"100\" r=\"80\"></circle>\n+    <axis-label\n+      v-for=\"(stat, index) in stats\"\n+      :stat=\"stat\"\n+      :index=\"index\"\n+      :total=\"stats.length\">\n+    </axis-label>\n+  </g>\n+</script>\n+\n+<script>\n+  const Polygraph = {\n+    props: ['stats'],\n+    template: '#polygraph-template',\n+    setup(props) {\n+      return {\n+        points: computed(() => {\n+          const total = props.stats.length\n+          return props.stats\n+            .map((stat, i) => {\n+              const point = valueToPoint(stat.value, i, total)\n+              return point.x + ',' + point.y\n+            })\n+            .join(' ')\n+        })\n+      }\n+    },\n+    components: {\n+      AxisLabel\n+    }\n+  }\n+</script>\n+\n+<!-- demo root element -->\n+<div id=\"demo\">\n+  <!-- Use the polygraph component -->\n+  <svg width=\"200\" height=\"200\">\n+    <polygraph :stats=\"stats\"></polygraph>\n+  </svg>\n+  <!-- controls -->\n+  <div v-for=\"stat in stats\">\n+    <label>{{stat.label}}</label>\n+    <input type=\"range\" v-model=\"stat.value\" min=\"0\" max=\"100\" />\n+    <span>{{stat.value}}</span>\n+    <button @click=\"remove(stat)\" class=\"remove\">X</button>\n+  </div>\n+  <form id=\"add\">\n+    <input name=\"newlabel\" v-model=\"newLabel\" />\n+    <button @click=\"add\">Add a Stat</button>\n+  </form>\n+  <pre id=\"raw\">{{ stats }}</pre>\n+</div>\n+\n+<script>\n+  const globalStats = [\n+    { label: 'A', value: 100 },\n+    { label: 'B', value: 100 },\n+    { label: 'C', value: 100 },\n+    { label: 'D', value: 100 },\n+    { label: 'E', value: 100 },\n+    { label: 'F', value: 100 }\n+  ]\n+\n+  new Vue({\n+    components: {\n+      Polygraph\n+    },\n+    setup() {\n+      const newLabel = ref('')\n+      const stats = ref(globalStats)\n+\n+      function add(e) {\n+        e.preventDefault()\n+        if (!newLabel.value) return\n+        stats.value.push({\n+          label: newLabel.value,\n+          value: 100\n+        })\n+        newLabel.value = ''\n+      }\n+\n+      function remove(stat) {\n+        if (stats.value.length > 3) {\n+          stats.value.splice(stats.value.indexOf(stat), 1)\n+        } else {\n+          alert(\"Can't delete more!\")\n+        }\n+      }\n+\n+      return {\n+        newLabel,\n+        stats,\n+        add,\n+        remove\n+      }\n+    }\n+  }).$mount('#demo')\n+</script>\n+\n+<style>\n+  body {\n+    font-family: Helvetica Neue, Arial, sans-serif;\n+  }\n+\n+  polygon {\n+    fill: #42b983;\n+    opacity: 0.75;\n+  }\n+\n+  circle {\n+    fill: transparent;\n+    stroke: #999;\n+  }\n+\n+  text {\n+    font-family: Helvetica Neue, Arial, sans-serif;\n+    font-size: 10px;\n+    fill: #666;\n+  }\n+\n+  label {\n+    display: inline-block;\n+    margin-left: 10px;\n+    width: 20px;\n+  }\n+\n+  #raw {\n+    position: absolute;\n+    top: 0;\n+    left: 300px;\n+  }\n+</style>\n",
            "-": ""
          }
        ],
        "a/examples/composition/todomvc.html": [
          {
            "+": "+<script src=\"../../dist/vue.min.js\"></script>\n+<link\n+  rel=\"stylesheet\"\n+  href=\"../../node_modules/todomvc-app-css/index.css\"\n+/>\n+\n+<div id=\"app\">\n+  <section class=\"todoapp\">\n+    <header class=\"header\">\n+      <h1>todos</h1>\n+      <input\n+        class=\"new-todo\"\n+        autofocus\n+        autocomplete=\"off\"\n+        placeholder=\"What needs to be done?\"\n+        v-model=\"state.newTodo\"\n+        @keyup.enter=\"addTodo\"\n+      />\n+    </header>\n+    <section class=\"main\" v-show=\"state.todos.length\">\n+      <input\n+        id=\"toggle-all\"\n+        class=\"toggle-all\"\n+        type=\"checkbox\"\n+        v-model=\"state.allDone\"\n+      />\n+      <label for=\"toggle-all\">Mark all as complete</label>\n+      <ul class=\"todo-list\">\n+        <li\n+          v-for=\"todo in state.filteredTodos\"\n+          class=\"todo\"\n+          :key=\"todo.id\"\n+          :class=\"{ completed: todo.completed, editing: todo === state.editedTodo }\"\n+        >\n+          <div class=\"view\">\n+            <input class=\"toggle\" type=\"checkbox\" v-model=\"todo.completed\" />\n+            <label @dblclick=\"editTodo(todo)\">{{ todo.title }}</label>\n+            <button class=\"destroy\" @click=\"removeTodo(todo)\"></button>\n+          </div>\n+          <input\n+            class=\"edit\"\n+            type=\"text\"\n+            v-model=\"todo.title\"\n+            v-todo-focus=\"todo === state.editedTodo\"\n+            @blur=\"doneEdit(todo)\"\n+            @keyup.enter=\"doneEdit(todo)\"\n+            @keyup.escape=\"cancelEdit(todo)\"\n+          />\n+        </li>\n+      </ul>\n+    </section>\n+    <footer class=\"footer\" v-show=\"state.todos.length\">\n+      <span class=\"todo-count\">\n+        <strong>{{ state.remaining }}</strong>\n+        <span>{{ state.remainingText }}</span>\n+      </span>\n+      <ul class=\"filters\">\n+        <li>\n+          <a href=\"#/all\" :class=\"{ selected: state.visibility === 'all' }\"\n+            >All</a\n+          >\n+        </li>\n+        <li>\n+          <a\n+            href=\"#/active\"\n+            :class=\"{ selected: state.visibility === 'active' }\"\n+            >Active</a\n+          >\n+        </li>\n+        <li>\n+          <a\n+            href=\"#/completed\"\n+            :class=\"{ selected: state.visibility === 'completed' }\"\n+            >Completed</a\n+          >\n+        </li>\n+      </ul>\n+\n+      <button\n+        class=\"clear-completed\"\n+        @click=\"removeCompleted\"\n+        v-show=\"state.todos.length > state.remaining\"\n+      >\n+        Clear completed\n+      </button>\n+    </footer>\n+  </section>\n+</div>\n+\n+<script>\n+  const { reactive, computed, watchEffect, onMounted, onUnmounted } = Vue\n+\n+  const STORAGE_KEY = 'todos-vuejs-3.x'\n+  const todoStorage = {\n+    fetch() {\n+      const todos = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]')\n+      todos.forEach((todo, index) => {\n+        todo.id = index\n+      })\n+      todoStorage.uid = todos.length\n+      return todos\n+    },\n+    save(todos) {\n+      localStorage.setItem(STORAGE_KEY, JSON.stringify(todos))\n+    }\n+  }\n+\n+  const filters = {\n+    all(todos) {\n+      return todos\n+    },\n+    active(todos) {\n+      return todos.filter(todo => {\n+        return !todo.completed\n+      })\n+    },\n+    completed(todos) {\n+      return todos.filter(function (todo) {\n+        return todo.completed\n+      })\n+    }\n+  }\n+\n+  function pluralize(n) {\n+    return n === 1 ? 'item' : 'items'\n+  }\n+\n+  new Vue({\n+    setup() {\n+      const state = reactive({\n+        todos: todoStorage.fetch(),\n+        editedTodo: null,\n+        newTodo: '',\n+        beforeEditCache: '',\n+        visibility: 'all',\n+        remaining: computed(() => {\n+          return filters.active(state.todos).length\n+        }),\n+        remainingText: computed(() => {\n+          return ` ${pluralize(state.remaining)} left`\n+        }),\n+        filteredTodos: computed(() => {\n+          return filters[state.visibility](state.todos)\n+        }),\n+        allDone: computed({\n+          get: function () {\n+            return state.remaining === 0\n+          },\n+          set: function (value) {\n+            state.todos.forEach(todo => {\n+              todo.completed = value\n+            })\n+          }\n+        })\n+      })\n+\n+      watchEffect(() => {\n+        todoStorage.save(state.todos)\n+      })\n+\n+      onMounted(() => {\n+        window.addEventListener('hashchange', onHashChange)\n+        onHashChange()\n+      })\n+\n+      onUnmounted(() => {\n+        window.removeEventListener('hashchange', onHashChange)\n+      })\n+\n+      function onHashChange() {\n+        const visibility = window.location.hash.replace(/#\\/?/, '')\n+        if (filters[visibility]) {\n+          state.visibility = visibility\n+        } else {\n+          window.location.hash = ''\n+          state.visibility = 'all'\n+        }\n+      }\n+\n+      function addTodo() {\n+        const value = state.newTodo && state.newTodo.trim()\n+        if (!value) {\n+          return\n+        }\n+        state.todos.push({\n+          id: todoStorage.uid++,\n+          title: value,\n+          completed: false\n+        })\n+        state.newTodo = ''\n+      }\n+\n+      function removeTodo(todo) {\n+        state.todos.splice(state.todos.indexOf(todo), 1)\n+      }\n+\n+      function editTodo(todo) {\n+        state.beforeEditCache = todo.title\n+        state.editedTodo = todo\n+      }\n+\n+      function doneEdit(todo) {\n+        if (!state.editedTodo) {\n+          return\n+        }\n+        state.editedTodo = null\n+        todo.title = todo.title.trim()\n+        if (!todo.title) {\n+          removeTodo(todo)\n+        }\n+      }\n+\n+      function cancelEdit(todo) {\n+        state.editedTodo = null\n+        todo.title = state.beforeEditCache\n+      }\n+\n+      function removeCompleted() {\n+        state.todos = filters.active(state.todos)\n+      }\n+\n+      return {\n+        state,\n+        addTodo,\n+        removeTodo,\n+        editTodo,\n+        doneEdit,\n+        cancelEdit,\n+        removeCompleted\n+      }\n+    },\n+\n+    directives: {\n+      'todo-focus': (el, { value }) => {\n+        if (value) {\n+          el.focus()\n+        }\n+      }\n+    }\n+  }).$mount('#app')\n+</script>\n",
            "-": ""
          }
        ],
        "a/examples/composition/tree.html": [
          {
            "+": "+<script src=\"../../dist/vue.min.js\"></script>\n+\n+<!-- item template -->\n+<script type=\"text/x-template\" id=\"item-template\">\n+  <li>\n+    <div\n+      :class=\"{bold: isFolder}\"\n+      @click=\"toggle\"\n+      @dblclick=\"changeType\">\n+      {{model.name}}\n+      <span v-if=\"isFolder\">[{{open ? '-' : '+'}}]</span>\n+    </div>\n+    <ul v-if=\"isFolder\" v-show=\"open\">\n+      <tree-item\n+        class=\"item\"\n+        v-for=\"model in model.children\"\n+        :model=\"model\">\n+      </tree-item>\n+      <li class=\"add\" @click=\"addChild\">+</li>\n+    </ul>\n+  </li>\n+</script>\n+<!-- item script -->\n+<script>\n+  const { reactive, computed, toRefs } = Vue\n+\n+  const TreeItem = {\n+    name: 'TreeItem', // necessary for self-reference\n+    template: '#item-template',\n+    props: {\n+      model: Object\n+    },\n+    setup(props) {\n+      const state = reactive({\n+        open: false,\n+        isFolder: computed(() => {\n+          return props.model.children && props.model.children.length\n+        })\n+      })\n+\n+      function toggle() {\n+        state.open = !state.open\n+      }\n+\n+      function changeType() {\n+        if (!state.isFolder) {\n+          Vue.set(props.model, 'children', [])\n+          addChild()\n+          state.open = true\n+        }\n+      }\n+\n+      function addChild() {\n+        props.model.children.push({ name: 'new stuff' })\n+      }\n+\n+      return {\n+        ...toRefs(state),\n+        toggle,\n+        changeType,\n+        addChild\n+      }\n+    }\n+  }\n+</script>\n+\n+<p>(You can double click on an item to turn it into a folder.)</p>\n+\n+<!-- the app root element -->\n+<ul id=\"demo\">\n+  <tree-item class=\"item\" :model=\"treeData\"></tree-item>\n+</ul>\n+\n+<script>\n+  const treeData = {\n+    name: 'My Tree',\n+    children: [\n+      { name: 'hello' },\n+      { name: 'wat' },\n+      {\n+        name: 'child folder',\n+        children: [\n+          {\n+            name: 'child folder',\n+            children: [{ name: 'hello' }, { name: 'wat' }]\n+          },\n+          { name: 'hello' },\n+          { name: 'wat' },\n+          {\n+            name: 'child folder',\n+            children: [{ name: 'hello' }, { name: 'wat' }]\n+          }\n+        ]\n+      }\n+    ]\n+  }\n+\n+  new Vue({\n+    components: {\n+      TreeItem\n+    },\n+    data: () => ({\n+      treeData\n+    })\n+  }).$mount('#demo')\n+</script>\n+\n+<style>\n+  body {\n+    font-family: Menlo, Consolas, monospace;\n+    color: #444;\n+  }\n+  .item {\n+    cursor: pointer;\n+  }\n+  .bold {\n+    font-weight: bold;\n+  }\n+  ul {\n+    padding-left: 1em;\n+    line-height: 1.5em;\n+    list-style-type: dot;\n+  }\n+</style>\n",
            "-": ""
          }
        ],
        "a/package.json": [
          {
            "+": "+    \"marked\": \"^4.0.6\",\n",
            "-": "-    \"marked\": \"^3.0.8\",\n"
          }
        ],
        "a/pnpm-lock.yaml": [
          {
            "+": "+  marked: ^4.0.6\n",
            "-": "-  marked: ^3.0.8\n"
          },
          {
            "+": "+  marked: 4.0.16\n",
            "-": "-  marked: 3.0.8\n"
          },
          {
            "+": "+  /marked/4.0.16:\n+    resolution: {integrity: sha512-wahonIQ5Jnyatt2fn8KqF/nIqZM8mh3oRu2+l5EANGMhu6RFjiSG52QNE2eWzFMI94HqYSgN184NurgNG6CztA==}\n",
            "-": "-  /marked/3.0.8:\n-    resolution: {integrity: sha512-0gVrAjo5m0VZSJb4rpL59K1unJAMb/hm8HRXqasD8VeC8m91ytDPMritgFSlKonfdt+rRYYpP/JfLxgIX8yoSw==}\n"
          }
        ],
        "a/test/e2e/commits.spec.ts": [
          {
            "+": "+  test(\n+    'composition',\n+    async () => {\n+      await testCommits('composition')\n+    },\n+    E2E_TIMEOUT\n+  )\n",
            "-": "-  // test(\n-  //   'composition',\n-  //   async () => {\n-  //     await testCommits('composition')\n-  //   },\n-  //   E2E_TIMEOUT\n-  // )\n"
          }
        ],
        "a/test/e2e/e2eUtils.ts": [
          {
            "+": "+  const file = apiType === 'composition' ? `${name}.html` : `${name}/index.html`\n",
            "-": ""
          },
          {
            "+": "+    `../../examples/${apiType}/${file}`\n",
            "-": "-    `../../examples/${apiType}/${name}/index.html`\n"
          }
        ],
        "a/test/e2e/grid.spec.ts": [
          {
            "+": "+  test(\n+    'composition',\n+    async () => {\n+      await testGrid('composition')\n+    },\n+    E2E_TIMEOUT\n+  )\n",
            "-": "-  // test(\n-  //   'composition',\n-  //   async () => {\n-  //     await testGrid('composition')\n-  //   },\n-  //   E2E_TIMEOUT\n-  // )\n"
          }
        ],
        "a/test/e2e/markdown.spec.ts": [
          {
            "+": "+  test(\n+    'composition',\n+    async () => {\n+      await testMarkdown('composition')\n+    },\n+    E2E_TIMEOUT\n+  )\n",
            "-": "-  // test(\n-  //   'composition',\n-  //   async () => {\n-  //     await testMarkdown('composition')\n-  //   },\n-  //   E2E_TIMEOUT\n-  // )\n"
          }
        ],
        "a/test/e2e/svg.spec.ts": [
          {
            "+": "+declare const globalStats: {\n",
            "-": "-declare const stats: {\n"
          },
          {
            "+": "+          const points = globalStats\n",
            "-": "-          const points = stats\n"
          },
          {
            "+": "+        return globalStats.map((stat, i) => {\n",
            "-": "-        return stats.map((stat, i) => {\n"
          },
          {
            "+": "+      return globalStats.map(stat => +stat.value)\n",
            "-": "-      return stats.map(stat => +stat.value)\n"
          },
          {
            "+": "+  test(\n+    'composition',\n+    async () => {\n+      await testSvg('composition')\n+    },\n+    E2E_TIMEOUT\n+  )\n",
            "-": "-  // test(\n-  //   'composition',\n-  //   async () => {\n-  //     await testSvg('composition')\n-  //   },\n-  //   E2E_TIMEOUT\n-  // )\n"
          }
        ],
        "a/test/e2e/todomvc.spec.ts": [
          {
            "+": "+  test(\n+    'composition',\n+    async () => {\n+      await testTodomvc('composition')\n+    },\n+    E2E_TIMEOUT\n+  )\n",
            "-": "-  // test(\n-  //   'composition',\n-  //   async () => {\n-  //     await testTodomvc('composition')\n-  //   },\n-  //   E2E_TIMEOUT\n-  // )\n"
          }
        ],
        "a/test/e2e/tree.spec.ts": [
          {
            "+": "+  test(\n+    'composition',\n+    async () => {\n+      await testTree('composition')\n+    },\n+    E2E_TIMEOUT\n+  )\n",
            "-": "-  // test(\n-  //   'composition',\n-  //   async () => {\n-  //     await testTree('composition')\n-  //   },\n-  //   E2E_TIMEOUT\n-  // )\n"
          }
        ]
      },
      "numOfFiles": 17,
      "numOfChanges": 29,
      "qualityScore": 35
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "04b584ffc17db74b4b6330feef9847e936fbb325",
      "url": "https://github.com/vuejs/vue/commit/04b584ffc17db74b4b6330feef9847e936fbb325",
      "message": "test: transition tests",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-23T07:15:29Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.github/workflows/ci.yml": [
          {
            "+": "+        run: pnpm run test:transition\n",
            "-": ""
          }
        ],
        "a/package.json": [
          {
            "+": "+    \"test:transition\": \"karma start test/transition/karma.conf.js\",\n",
            "-": ""
          },
          {
            "+": "+    \"esbuild\": \"^0.14.39\",\n",
            "-": ""
          },
          {
            "+": "+    \"jasmine-core\": \"^4.1.1\",\n",
            "-": ""
          },
          {
            "+": "+    \"karma\": \"^6.3.20\",\n+    \"karma-chrome-launcher\": \"^3.1.1\",\n+    \"karma-cli\": \"^2.0.0\",\n+    \"karma-esbuild\": \"^2.2.4\",\n+    \"karma-jasmine\": \"^5.0.1\",\n",
            "-": ""
          }
        ],
        "a/pnpm-lock.yaml": [
          {
            "+": "+  esbuild: ^0.14.39\n",
            "-": ""
          },
          {
            "+": "+  jasmine-core: ^4.1.1\n",
            "-": ""
          },
          {
            "+": "+  karma: ^6.3.20\n+  karma-chrome-launcher: ^3.1.1\n+  karma-cli: ^2.0.0\n+  karma-esbuild: ^2.2.4\n+  karma-jasmine: ^5.0.1\n",
            "-": ""
          },
          {
            "+": "+  esbuild: 0.14.39\n",
            "-": ""
          },
          {
            "+": "+  jasmine-core: 4.1.1\n",
            "-": ""
          },
          {
            "+": "+  karma: 6.3.20\n+  karma-chrome-launcher: 3.1.1\n+  karma-cli: 2.0.0\n+  karma-esbuild: 2.2.4_esbuild@0.14.39\n+  karma-jasmine: 5.0.1_karma@6.3.20\n",
            "-": ""
          },
          {
            "+": "+  /@colors/colors/1.5.0:\n+    resolution: {integrity: sha512-ooWCrlZP11i8GImSjTHYHLkvFDP48nS4+204nGb1RiX/WXYHmJA2III9/e2DWVabCESdW7hBAEzHRqUn9OUVvQ==}\n+    engines: {node: '>=0.1.90'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /@types/component-emitter/1.2.11:\n+    resolution: {integrity: sha512-SRXjM+tfsSlA9VuG8hGO2nft2p8zjXCK1VcC6N4NXbBbYbSia9kzCChYQajIjzIqOOOuh5Ock6MmV2oux4jDZQ==}\n+    dev: true\n+\n+  /@types/cookie/0.4.1:\n+    resolution: {integrity: sha512-XW/Aa8APYr6jSVVA1y/DEIZX0/GMKLEVekNG727R8cs56ahETkRAy/3DR7+fJyh7oUgGwNQaRfXCun0+KbWY7Q==}\n+    dev: true\n+\n+  /@types/cors/2.8.12:\n+    resolution: {integrity: sha512-vt+kDhq/M2ayberEtJcIN/hxXy1Pk+59g2FV/ZQceeaTyCtCucjL2Q7FXlFjtWn4n15KCr1NE2lNNFhp0lEThw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /accepts/1.3.8:\n+    resolution: {integrity: sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==}\n+    engines: {node: '>= 0.6'}\n+    dependencies:\n+      mime-types: 2.1.35\n+      negotiator: 0.6.3\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "-": "-    optional: true\n",
            "+": ""
          },
          {
            "+": "+  /base64id/2.0.0:\n+    resolution: {integrity: sha512-lGe34o6EHj9y3Kts9R4ZYs/Gr+6N7MCaMlIFA3F1R2O5/m7K06AxfSeO5530PEERE6/WyEg3lsuyw4GHlPZHog==}\n+    engines: {node: ^4.5.0 || >= 5.9}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "-": "-    optional: true\n",
            "+": ""
          },
          {
            "+": "+  /body-parser/1.20.0:\n+    resolution: {integrity: sha512-DfJ+q6EPcGKZD1QWUjSpqp+Q7bDQTsQIF4zfUAtZ6qk+H/3/QRhg9CEp39ss+/T2vw0+HaidC0ecJj/DRLIaKg==}\n+    engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}\n+    dependencies:\n+      bytes: 3.1.2\n+      content-type: 1.0.4\n+      debug: 2.6.9\n+      depd: 2.0.0\n+      destroy: 1.2.0\n+      http-errors: 2.0.0\n+      iconv-lite: 0.4.24\n+      on-finished: 2.4.1\n+      qs: 6.10.3\n+      raw-body: 2.5.1\n+      type-is: 1.6.18\n+      unpipe: 1.0.0\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /bytes/3.1.2:\n+    resolution: {integrity: sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==}\n+    engines: {node: '>= 0.8'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /call-bind/1.0.2:\n+    resolution: {integrity: sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==}\n+    dependencies:\n+      function-bind: 1.1.1\n+      get-intrinsic: 1.1.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "-": "-    optional: true\n",
            "+": ""
          },
          {
            "+": "+  /connect/3.7.0:\n+    resolution: {integrity: sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==}\n+    engines: {node: '>= 0.10.0'}\n+    dependencies:\n+      debug: 2.6.9\n+      finalhandler: 1.1.2\n+      parseurl: 1.3.3\n+      utils-merge: 1.0.1\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /content-type/1.0.4:\n+    resolution: {integrity: sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==}\n+    engines: {node: '>= 0.6'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /cookie/0.4.2:\n+    resolution: {integrity: sha512-aSWTXFzaKWkvHO1Ny/s+ePFpvKsPnjc551iI41v3ny/ow6tBG5Vd+FuqGNhh1LxOmVzOlGUriIlOaokOvhaStA==}\n+    engines: {node: '>= 0.6'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /cors/2.8.5:\n+    resolution: {integrity: sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==}\n+    engines: {node: '>= 0.10'}\n+    dependencies:\n+      object-assign: 4.1.1\n+      vary: 1.1.2\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /custom-event/1.0.1:\n+    resolution: {integrity: sha1-XQKkaFCt8bSjF5RqOSj8y1v9BCU=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /date-format/4.0.10:\n+    resolution: {integrity: sha512-RuMIHocrVjF84bUSTcd1uokIsLsOsk1Awb7TexNOI3f48ukCu39mjslWquDTA08VaDMF2umr3MB9ow5EyJTWyA==}\n+    engines: {node: '>=4.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /depd/2.0.0:\n+    resolution: {integrity: sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==}\n+    engines: {node: '>= 0.8'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /destroy/1.2.0:\n+    resolution: {integrity: sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==}\n+    engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /di/0.0.1:\n+    resolution: {integrity: sha1-gGZJMmzqp8qjMG112YXqJ0i6kTw=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /dom-serialize/2.2.1:\n+    resolution: {integrity: sha1-ViromZ9Evl6jB29UGdzVnrQ6yVs=}\n+    dependencies:\n+      custom-event: 1.0.1\n+      ent: 2.2.0\n+      extend: 3.0.2\n+      void-elements: 2.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ee-first/1.1.1:\n+    resolution: {integrity: sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /encodeurl/1.0.2:\n+    resolution: {integrity: sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=}\n+    engines: {node: '>= 0.8'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /engine.io-parser/5.0.4:\n+    resolution: {integrity: sha512-+nVFp+5z1E3HcToEnO7ZIj3g+3k9389DvWtvJZz0T6/eOCPIyyxehFcedoYrZQrp0LgQbD9pPXhpMBKMd5QURg==}\n+    engines: {node: '>=10.0.0'}\n+    dev: true\n+\n+  /engine.io/6.2.0:\n+    resolution: {integrity: sha512-4KzwW3F3bk+KlzSOY57fj/Jx6LyRQ1nbcyIadehl+AnXjKT7gDO0ORdRi/84ixvMKTym6ZKuxvbzN62HDDU1Lg==}\n+    engines: {node: '>=10.0.0'}\n+    dependencies:\n+      '@types/cookie': 0.4.1\n+      '@types/cors': 2.8.12\n+      '@types/node': 17.0.34\n+      accepts: 1.3.8\n+      base64id: 2.0.0\n+      cookie: 0.4.2\n+      cors: 2.8.5\n+      debug: 4.3.4\n+      engine.io-parser: 5.0.4\n+      ws: 8.2.3\n+    transitivePeerDependencies:\n+      - bufferutil\n+      - supports-color\n+      - utf-8-validate\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ent/2.2.0:\n+    resolution: {integrity: sha1-6WQhkyWiHQX0RGai9obtbOX13R0=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /escape-html/1.0.3:\n+    resolution: {integrity: sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /eventemitter3/4.0.7:\n+    resolution: {integrity: sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /extend/3.0.2:\n+    resolution: {integrity: sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /finalhandler/1.1.2:\n+    resolution: {integrity: sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==}\n+    engines: {node: '>= 0.8'}\n+    dependencies:\n+      debug: 2.6.9\n+      encodeurl: 1.0.2\n+      escape-html: 1.0.3\n+      on-finished: 2.3.0\n+      parseurl: 1.3.3\n+      statuses: 1.5.0\n+      unpipe: 1.0.0\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /follow-redirects/1.15.0:\n+    resolution: {integrity: sha512-aExlJShTV4qOUOL7yF1U5tvLCB0xQuudbf6toyYA0E/acBNw71mvjFTnLaRp50aQaYocMR0a/RMMBIHeZnGyjQ==}\n+    engines: {node: '>=4.0'}\n+    peerDependencies:\n+      debug: '*'\n+    peerDependenciesMeta:\n+      debug:\n+        optional: true\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /get-intrinsic/1.1.1:\n+    resolution: {integrity: sha512-kWZrnVM42QCiEA2Ig1bG8zjoIMOgxWwYCEeNdwY6Tv/cOSeGpcoX4pXHfKUxNKVoArnrEr2e9srnAxxGIraS9Q==}\n+    dependencies:\n+      function-bind: 1.1.1\n+      has: 1.0.3\n+      has-symbols: 1.0.3\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /has-symbols/1.0.3:\n+    resolution: {integrity: sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==}\n+    engines: {node: '>= 0.4'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /http-errors/2.0.0:\n+    resolution: {integrity: sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==}\n+    engines: {node: '>= 0.8'}\n+    dependencies:\n+      depd: 2.0.0\n+      inherits: 2.0.4\n+      setprototypeof: 1.2.0\n+      statuses: 2.0.1\n+      toidentifier: 1.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /http-proxy/1.18.1:\n+    resolution: {integrity: sha512-7mz/721AbnJwIVbnaSv1Cz3Am0ZLT/UBwkC92VlxhXv/k/BBQfM2fXElQNC27BVGr0uwUpplYPQM9LnaBMR5NQ==}\n+    engines: {node: '>=8.0.0'}\n+    dependencies:\n+      eventemitter3: 4.0.7\n+      follow-redirects: 1.15.0\n+      requires-port: 1.0.0\n+    transitivePeerDependencies:\n+      - debug\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "-": "-    optional: true\n",
            "+": ""
          },
          {
            "+": "+  /isbinaryfile/4.0.10:\n+    resolution: {integrity: sha512-iHrqe5shvBUcFbmZq9zOQHBoeOhZJu6RQGrDpBgenUm/Am+F3JM2MgQj+rK3Z601fzrL5gLZWtAPH2OBaSVcyw==}\n+    engines: {node: '>= 8.0.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /jasmine-core/4.1.1:\n+    resolution: {integrity: sha512-lmUfT5XcK9KKvt3lLYzn93hc4MGzlUBowExFVgzbSW0ZCrdeyS574dfsyfRhxbg81Wj4gk+RxUiTnj7KBfDA1g==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /karma-chrome-launcher/3.1.1:\n+    resolution: {integrity: sha512-hsIglcq1vtboGPAN+DGCISCFOxW+ZVnIqhDQcCMqqCp+4dmJ0Qpq5QAjkbA0X2L9Mi6OBkHi2Srrbmm7pUKkzQ==}\n+    dependencies:\n+      which: 1.3.1\n+    dev: true\n+\n+  /karma-cli/2.0.0:\n+    resolution: {integrity: sha512-1Kb28UILg1ZsfqQmeELbPzuEb5C6GZJfVIk0qOr8LNYQuYWmAaqP16WpbpKEjhejDrDYyYOwwJXSZO6u7q5Pvw==}\n+    engines: {node: '>= 6'}\n+    hasBin: true\n+    dependencies:\n+      resolve: 1.22.0\n+    dev: true\n+\n+  /karma-esbuild/2.2.4_esbuild@0.14.39:\n+    resolution: {integrity: sha512-nt5+AJ0iFpgJXboBmXvwjM5LYTqTmFA9NuNGj9A442gCMJHwL4Eft4JUBVRc7ORSPoJAQ26Kgf5252Xt6GbkRw==}\n+    peerDependencies:\n+      esbuild: '>=0.8.45'\n+    dependencies:\n+      chokidar: 3.5.3\n+      esbuild: 0.14.39\n+      source-map: 0.6.1\n+    dev: true\n+\n+  /karma-jasmine/5.0.1_karma@6.3.20:\n+    resolution: {integrity: sha512-FkL1Kk+JAKmim8VWU8RXKZBpl0lLI7J8LijM0/q7oP7emfB6QMZV1Az+JgqGKSLpF0tYaav+KUVFQroZUxQTHA==}\n+    engines: {node: '>=12'}\n+    peerDependencies:\n+      karma: ^6.0.0\n+    dependencies:\n+      jasmine-core: 4.1.1\n+      karma: 6.3.20\n+    dev: true\n+\n+  /karma/6.3.20:\n+    resolution: {integrity: sha512-HRNQhMuKOwKpjYlWiJP0DUrJOh+QjaI/DTaD8b9rEm4Il3tJ8MijutVZH4ts10LuUFst/CedwTS6vieCN8yTSw==}\n+    engines: {node: '>= 10'}\n+    hasBin: true\n+    dependencies:\n+      '@colors/colors': 1.5.0\n+      body-parser: 1.20.0\n+      braces: 3.0.2\n+      chokidar: 3.5.3\n+      connect: 3.7.0\n+      di: 0.0.1\n+      dom-serialize: 2.2.1\n+      glob: 7.2.3\n+      graceful-fs: 4.2.10\n+      http-proxy: 1.18.1\n+      isbinaryfile: 4.0.10\n+      lodash: 4.17.21\n+      log4js: 6.5.0\n+      mime: 2.6.0\n+      minimatch: 3.1.2\n+      mkdirp: 0.5.6\n+      qjobs: 1.2.0\n+      range-parser: 1.2.1\n+      rimraf: 3.0.2\n+      socket.io: 4.5.1\n+      source-map: 0.6.1\n+      tmp: 0.2.1\n+      ua-parser-js: 0.7.31\n+      yargs: 16.2.0\n+    transitivePeerDependencies:\n+      - bufferutil\n+      - debug\n+      - supports-color\n+      - utf-8-validate\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /log4js/6.5.0:\n+    resolution: {integrity: sha512-VT8b+k4nS7feV3p2nTdI5UqO2+7KRi4sfb6YKlnZlQU0d1DnvA18dvPhxKElgVTRTjS3GtChvvR67yMpp/xAfQ==}\n+    engines: {node: '>=8.0'}\n+    dependencies:\n+      date-format: 4.0.10\n+      debug: 4.3.4\n+      flatted: 3.2.5\n+      rfdc: 1.3.0\n+      streamroller: 3.1.0\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /media-typer/0.3.0:\n+    resolution: {integrity: sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=}\n+    engines: {node: '>= 0.6'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /mime/2.6.0:\n+    resolution: {integrity: sha512-USPkMeET31rOMiarsBNIHZKLGgvKc/LrjofAnBlOttf5ajRvqiRA8QsenbcooctK6d6Ts6aqZXBA+XbkKthiQg==}\n+    engines: {node: '>=4.0.0'}\n+    hasBin: true\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /negotiator/0.6.3:\n+    resolution: {integrity: sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==}\n+    engines: {node: '>= 0.6'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /on-finished/2.3.0:\n+    resolution: {integrity: sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=}\n+    engines: {node: '>= 0.8'}\n+    dependencies:\n+      ee-first: 1.1.1\n+    dev: true\n+\n+  /on-finished/2.4.1:\n+    resolution: {integrity: sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==}\n+    engines: {node: '>= 0.8'}\n+    dependencies:\n+      ee-first: 1.1.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /parseurl/1.3.3:\n+    resolution: {integrity: sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==}\n+    engines: {node: '>= 0.8'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /qjobs/1.2.0:\n+    resolution: {integrity: sha512-8YOJEHtxpySA3fFDyCRxA+UUV+fA+rTWnuWvylOK/NCjhY+b4ocCtmu8TtsWb+mYeU+GCHf/S66KZF/AsteKHg==}\n+    engines: {node: '>=0.9'}\n+    dev: true\n+\n+  /qs/6.10.3:\n+    resolution: {integrity: sha512-wr7M2E0OFRfIfJZjKGieI8lBKb7fRCH4Fv5KNPEs7gJ8jadvotdsS08PzOKR7opXhZ/Xkjtt3WF9g38drmyRqQ==}\n+    engines: {node: '>=0.6'}\n+    dependencies:\n+      side-channel: 1.0.4\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /range-parser/1.2.1:\n+    resolution: {integrity: sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==}\n+    engines: {node: '>= 0.6'}\n+    dev: true\n+\n+  /raw-body/2.5.1:\n+    resolution: {integrity: sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==}\n+    engines: {node: '>= 0.8'}\n+    dependencies:\n+      bytes: 3.1.2\n+      http-errors: 2.0.0\n+      iconv-lite: 0.4.24\n+      unpipe: 1.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "-": "-    optional: true\n",
            "+": ""
          },
          {
            "+": "+  /requires-port/1.0.0:\n+    resolution: {integrity: sha1-kl0mAdOaxIXgkc8NpcbmlNw9yv8=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /setprototypeof/1.2.0:\n+    resolution: {integrity: sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /side-channel/1.0.4:\n+    resolution: {integrity: sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==}\n+    dependencies:\n+      call-bind: 1.0.2\n+      get-intrinsic: 1.1.1\n+      object-inspect: 1.12.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /socket.io-adapter/2.4.0:\n+    resolution: {integrity: sha512-W4N+o69rkMEGVuk2D/cvca3uYsvGlMwsySWV447y99gUPghxq42BxqLNMndb+a1mm/5/7NeXVQS7RLa2XyXvYg==}\n+    dev: true\n+\n+  /socket.io-parser/4.0.4:\n+    resolution: {integrity: sha512-t+b0SS+IxG7Rxzda2EVvyBZbvFPBCjJoyHuE0P//7OAsN23GItzDRdWa6ALxZI/8R5ygK7jAR6t028/z+7295g==}\n+    engines: {node: '>=10.0.0'}\n+    dependencies:\n+      '@types/component-emitter': 1.2.11\n+      component-emitter: 1.3.0\n+      debug: 4.3.4\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n+  /socket.io/4.5.1:\n+    resolution: {integrity: sha512-0y9pnIso5a9i+lJmsCdtmTTgJFFSvNQKDnPQRz28mGNnxbmqYg2QPtJTLFxhymFZhAIn50eHAKzJeiNaKr+yUQ==}\n+    engines: {node: '>=10.0.0'}\n+    dependencies:\n+      accepts: 1.3.8\n+      base64id: 2.0.0\n+      debug: 4.3.4\n+      engine.io: 6.2.0\n+      socket.io-adapter: 2.4.0\n+      socket.io-parser: 4.0.4\n+    transitivePeerDependencies:\n+      - bufferutil\n+      - supports-color\n+      - utf-8-validate\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /statuses/1.5.0:\n+    resolution: {integrity: sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=}\n+    engines: {node: '>= 0.6'}\n+    dev: true\n+\n+  /statuses/2.0.1:\n+    resolution: {integrity: sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==}\n+    engines: {node: '>= 0.8'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /streamroller/3.1.0:\n+    resolution: {integrity: sha512-9+fOFZX3qeo5lEdq9AnPxyRqdrh0MhlX5uqDN6+OLGuGK0PnyyKjMicwcUYIzjYRut5Pfbc0AV6WKdv6di3YGA==}\n+    engines: {node: '>=8.0'}\n+    dependencies:\n+      date-format: 4.0.10\n+      debug: 4.3.4\n+      fs-extra: 10.1.0\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /tmp/0.2.1:\n+    resolution: {integrity: sha512-76SUhtfqR2Ijn+xllcI5P1oyannHNHByD80W1q447gU3mp9G9PSpGdWmjUOHRDPiHYacIk66W7ubDTuPF3BEtQ==}\n+    engines: {node: '>=8.17.0'}\n+    dependencies:\n+      rimraf: 3.0.2\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /toidentifier/1.0.1:\n+    resolution: {integrity: sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==}\n+    engines: {node: '>=0.6'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /type-is/1.6.18:\n+    resolution: {integrity: sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==}\n+    engines: {node: '>= 0.6'}\n+    dependencies:\n+      media-typer: 0.3.0\n+      mime-types: 2.1.35\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ua-parser-js/0.7.31:\n+    resolution: {integrity: sha512-qLK/Xe9E2uzmYI3qLeOmI0tEOt+TBBQyUIAh4aAgU05FVYzeZrKUdkAZfBNVGRaHVgV0TDkdEngJSw/SyQchkQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /unpipe/1.0.0:\n+    resolution: {integrity: sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=}\n+    engines: {node: '>= 0.8'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /utils-merge/1.0.1:\n+    resolution: {integrity: sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=}\n+    engines: {node: '>= 0.4.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /vary/1.1.2:\n+    resolution: {integrity: sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=}\n+    engines: {node: '>= 0.8'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /void-elements/2.0.1:\n+    resolution: {integrity: sha1-wGavtYK7HLQSjWDqkjkulNXp2+w=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ws/8.2.3:\n+    resolution: {integrity: sha512-wBuoj1BDpC6ZQ1B7DWQBYVLphPWkm8i9Y0/3YdHjHKHiohOJ1ws+3OccDWtH+PoC9DZD5WOTrJvNbWvjS6JWaA==}\n+    engines: {node: '>=10.0.0'}\n+    peerDependencies:\n+      bufferutil: ^4.0.1\n+      utf-8-validate: ^5.0.2\n+    peerDependenciesMeta:\n+      bufferutil:\n+        optional: true\n+      utf-8-validate:\n+        optional: true\n+    dev: true\n+\n",
            "-": ""
          }
        ],
        "a/test/helpers/trigger-event.ts": [
          {
            "+": "+export function triggerEvent (target, event, process) {\n",
            "-": "-global.triggerEvent = function triggerEvent (target, event, process) {\n"
          }
        ],
        "a/test/helpers/vdom.ts": [
          {
            "+": "+export function createTextVNode(text) {\n",
            "-": "-global.createTextVNode = function (text) {\n"
          }
        ],
        "a/test/helpers/wait-for-update.ts": [
          {
            "+": "+const waitForUpdate = (initialCb: Job) => {\n",
            "-": "-global.waitForUpdate = (initialCb: Job) => {\n"
          },
          {
            "+": "+\n+export { waitForUpdate }\n",
            "-": ""
          }
        ],
        "a/test/test-env.d.ts": [
          {
            "+": "+\n+declare const jasmine: {\n+  createSpy: (id?: string) => {\n+    (...args: any[]): any\n+    calls: {\n+      count(): number\n+    }\n+  }\n+  addMatchers(matchers: any): void\n+}\n",
            "-": ""
          }
        ],
        "a/test/transition/helpers.ts": [
          {
            "+": "+export { waitForUpdate } from '../helpers/wait-for-update'\n+export { nextFrame } from 'web/runtime/transition-util'\n+\n+// toHaveBeenWarned() matcher\n+function noop() {}\n+\n+if (typeof console === 'undefined') {\n+  // @ts-ignore\n+  window.console = {\n+    warn: noop,\n+    error: noop\n+  }\n+}\n+\n+// avoid info messages during test\n+console.info = noop\n+\n+let asserted\n+\n+function createCompareFn(spy) {\n+  const hasWarned = (msg) => {\n+    let count = spy.calls.count()\n+    let args\n+    while (count--) {\n+      args = spy.calls.argsFor(count)\n+      if (args.some(containsMsg)) {\n+        return true\n+      }\n+    }\n+\n+    function containsMsg(arg) {\n+      return arg.toString().indexOf(msg) > -1\n+    }\n+  }\n+\n+  return {\n+    compare: (msg) => {\n+      asserted = asserted.concat(msg)\n+      const warned = Array.isArray(msg) ? msg.some(hasWarned) : hasWarned(msg)\n+      return {\n+        pass: warned,\n+        message: warned\n+          ? 'Expected message \"' + msg + '\" not to have been warned'\n+          : 'Expected message \"' + msg + '\" to have been warned'\n+      }\n+    }\n+  }\n+}\n+\n+// define custom matcher for warnings\n+beforeEach(() => {\n+  asserted = []\n+  // @ts-ignore\n+  spyOn(console, 'warn')\n+  // @ts-ignore\n+  spyOn(console, 'error')\n+  jasmine.addMatchers({\n+    toHaveBeenWarned: () => createCompareFn(console.error),\n+    toHaveBeenTipped: () => createCompareFn(console.warn)\n+  })\n+})\n+\n+afterEach((done) => {\n+  const warned = (msg) =>\n+    asserted.some((assertedMsg) => msg.toString().indexOf(assertedMsg) > -1)\n+  // @ts-ignore\n+  let count = console.error.calls.count()\n+  let args\n+  while (count--) {\n+    // @ts-ignore\n+    args = console.error.calls.argsFor(count)\n+    if (!warned(args[0])) {\n+      // @ts-ignore\n+      done.fail(`Unexpected console.error message: ${args[0]}`)\n+      return\n+    }\n+  }\n+  done()\n+})\n+\n+// injectStyles helper\n+function insertCSS(text) {\n+  const cssEl = document.createElement('style')\n+  cssEl.textContent = text.trim()\n+  document.head.appendChild(cssEl)\n+}\n+\n+const duration = process.env.CI ? 200 : 50\n+const buffer = process.env.CI ? 20 : 5\n+let injected = false\n+\n+export function injectStyles() {\n+  if (injected) return { duration, buffer }\n+  injected = true\n+  insertCSS(`\n+    .test {\n+      -webkit-transition: opacity ${duration}ms ease;\n+      transition: opacity ${duration}ms ease;\n+    }\n+    .group-move {\n+      -webkit-transition: -webkit-transform ${duration}ms ease;\n+      transition: transform ${duration}ms ease;\n+    }\n+    .v-appear, .v-enter, .v-leave-active,\n+    .test-appear, .test-enter, .test-leave-active,\n+    .hello, .bye.active,\n+    .changed-enter {\n+      opacity: 0;\n+    }\n+    .test-anim-enter-active {\n+      animation: test-enter ${duration}ms;\n+      -webkit-animation: test-enter ${duration}ms;\n+    }\n+    .test-anim-leave-active {\n+      animation: test-leave ${duration}ms;\n+      -webkit-animation: test-leave ${duration}ms;\n+    }\n+    .test-anim-long-enter-active {\n+      animation: test-enter ${duration * 2}ms;\n+      -webkit-animation: test-enter ${duration * 2}ms;\n+    }\n+    .test-anim-long-leave-active {\n+      animation: test-leave ${duration * 2}ms;\n+      -webkit-animation: test-leave ${duration * 2}ms;\n+    }\n+    @keyframes test-enter {\n+      from { opacity: 0 }\n+      to { opacity: 1 }\n+    }\n+    @-webkit-keyframes test-enter {\n+      from { opacity: 0 }\n+      to { opacity: 1 }\n+    }\n+    @keyframes test-leave {\n+      from { opacity: 1 }\n+      to { opacity: 0 }\n+    }\n+    @-webkit-keyframes test-leave {\n+      from { opacity: 1 }\n+      to { opacity: 0 }\n+    }\n+  `)\n+  return { duration, buffer }\n+}\n",
            "-": ""
          }
        ],
        "a/test/transition/karma.conf.js": [
          {
            "+": "+const featureFlags = require('../../scripts/feature-flags')\n+process.env.CHROME_BIN = require('puppeteer').executablePath()\n+\n+const define = {\n+  'process.env.CI': !!process.env.CI\n+}\n+\n+for (const key in featureFlags) {\n+  define[`process.env.${key}`] = featureFlags[key]\n+}\n+\n+module.exports = function (config) {\n+  config.set({\n+    basePath: '.',\n+    frameworks: ['jasmine'],\n+    files: ['*.spec.ts'],\n+    preprocessors: {\n+      '*.spec.ts': ['esbuild']\n+    },\n+    esbuild: {\n+      define\n+    },\n+    browsers: ['ChromeHeadless'],\n+    plugins: ['karma-jasmine', 'karma-esbuild', 'karma-chrome-launcher'],\n+    singleRun: true\n+  })\n+}\n",
            "-": ""
          }
        ],
        "a/test/transition/package.json": [
          {
            "+": "+{}\n",
            "-": ""
          }
        ],
        "a/test/unit/features/transition/transition-group.spec.ts": [
          {
            "+": "+import { injectStyles, waitForUpdate, nextFrame } from './helpers'\n",
            "-": "-import injectStyles from './inject-styles'\n-import { nextFrame } from 'web/runtime/transition-util'\n"
          },
          {
            "+": "+describe('Transition group', () => {\n",
            "-": "-describe.skip('Transition group', () => {\n"
          },
          {
            "+": "+    const beforeEnterSpy = jasmine.createSpy()\n+    const afterEnterSpy = jasmine.createSpy()\n+    const afterLeaveSpy = jasmine.createSpy()\n",
            "-": "-    const beforeEnterSpy = vi.fn()\n-    const afterEnterSpy = vi.fn()\n-    const afterLeaveSpy = vi.fn()\n"
          },
          {
            "+": "+      expect(beforeEnterSpy.calls.count()).toBe(1)\n",
            "-": "-      expect(beforeEnterSpy.mock.calls.length).toBe(1)\n"
          },
          {
            "+": "+        expect(afterEnterSpy.calls.count()).toBe(1)\n",
            "-": "-        expect(afterEnterSpy.mock.calls.length).toBe(1)\n"
          },
          {
            "+": "+        expect(afterLeaveSpy.calls.count()).toBe(1)\n",
            "-": "-        expect(afterLeaveSpy.mock.calls.length).toBe(1)\n"
          }
        ],
        "a/test/unit/features/transition/transition-mode.spec.ts": [
          {
            "+": "+import { injectStyles, waitForUpdate, nextFrame } from './helpers'\n",
            "-": "-import injectStyles from './inject-styles'\n-import { nextFrame } from 'web/runtime/transition-util'\n"
          },
          {
            "+": "+describe('Transition mode', () => {\n",
            "-": "-describe.skip('Transition mode', () => {\n"
          },
          {
            "+": "+        .thenWaitFor(duration + buffer * 2)\n",
            "-": "-        .thenWaitFor(duration + buffer)\n"
          }
        ],
        "a/test/unit/features/transition/transition-with-keep-alive.spec.ts": [
          {
            "+": "+import { injectStyles, waitForUpdate, nextFrame } from './helpers'\n",
            "-": "-import injectStyles from './inject-styles'\n-import { nextFrame } from 'web/runtime/transition-util'\n"
          },
          {
            "+": "+describe('Transition w/ KeepAlive', () => {\n",
            "-": "-describe.skip('Transition w/ KeepAlive', () => {\n"
          },
          {
            "+": "+      created: jasmine.createSpy(),\n+      mounted: jasmine.createSpy(),\n+      activated: jasmine.createSpy(),\n+      deactivated: jasmine.createSpy(),\n+      destroyed: jasmine.createSpy()\n",
            "-": "-      created: vi.fn(),\n-      mounted: vi.fn(),\n-      activated: vi.fn(),\n-      deactivated: vi.fn(),\n-      destroyed: vi.fn()\n"
          },
          {
            "+": "+      created: jasmine.createSpy(),\n+      mounted: jasmine.createSpy(),\n+      activated: jasmine.createSpy(),\n+      deactivated: jasmine.createSpy(),\n+      destroyed: jasmine.createSpy()\n",
            "-": "-      created: vi.fn(),\n-      mounted: vi.fn(),\n-      activated: vi.fn(),\n-      deactivated: vi.fn(),\n-      destroyed: vi.fn()\n"
          },
          {
            "+": "+      component.created.calls.count(),\n+      component.mounted.calls.count(),\n+      component.activated.calls.count(),\n+      component.deactivated.calls.count(),\n+      component.destroyed.calls.count()\n",
            "-": "-      component.created.mock.calls.length,\n-      component.mounted.mock.calls.length,\n-      component.activated.mock.calls.length,\n-      component.deactivated.mock.calls.length,\n-      component.destroyed.mock.calls.length\n"
          },
          {
            "+": "+    const barResolve = jasmine.createSpy()\n",
            "-": "-    const barResolve = vi.fn()\n"
          },
          {
            "+": "+          expect(barResolve.calls.count()).toBe(1)\n",
            "-": "-          expect(barResolve.mock.calls.length).toBe(1)\n"
          }
        ],
        "a/test/unit/features/transition/transition.spec.ts": [
          {
            "+": "+import { injectStyles, waitForUpdate, nextFrame } from './helpers'\n",
            "-": "-import injectStyles from './inject-styles'\n-import { nextFrame } from 'web/runtime/transition-util'\n"
          },
          {
            "+": "+describe('Transition basic', () => {\n",
            "-": "-describe.skip('Transition basic', () => {\n"
          },
          {
            "+": "+    const enter = jasmine.createSpy()\n+    const leave = jasmine.createSpy()\n",
            "-": "-    const enter = vi.fn()\n-    const leave = vi.fn()\n"
          },
          {
            "+": "+    const onLeaveSpy = jasmine.createSpy()\n+    const onEnterSpy = jasmine.createSpy()\n+    const beforeLeaveSpy = jasmine.createSpy()\n+    const beforeEnterSpy = jasmine.createSpy()\n+    const afterLeaveSpy = jasmine.createSpy()\n+    const afterEnterSpy = jasmine.createSpy()\n",
            "-": "-    const onLeaveSpy = vi.fn()\n-    const onEnterSpy = vi.fn()\n-    const beforeLeaveSpy = vi.fn()\n-    const beforeEnterSpy = vi.fn()\n-    const afterLeaveSpy = vi.fn()\n-    const afterEnterSpy = vi.fn()\n"
          },
          {
            "+": "+    const onLeaveSpy = jasmine.createSpy()\n+    const onEnterSpy = jasmine.createSpy()\n+    const beforeLeaveSpy = jasmine.createSpy()\n+    const beforeEnterSpy = jasmine.createSpy()\n+    const afterLeaveSpy = jasmine.createSpy()\n+    const afterEnterSpy = jasmine.createSpy()\n",
            "-": "-    const onLeaveSpy = vi.fn()\n-    const onEnterSpy = vi.fn()\n-    const beforeLeaveSpy = vi.fn()\n-    const beforeEnterSpy = vi.fn()\n-    const afterLeaveSpy = vi.fn()\n-    const afterEnterSpy = vi.fn()\n"
          },
          {
            "+": "+    const enterSpy = jasmine.createSpy()\n+    const leaveSpy = jasmine.createSpy()\n",
            "-": "-    const enterSpy = vi.fn()\n-    const leaveSpy = vi.fn()\n"
          },
          {
            "+": "+    const enterSpy = jasmine.createSpy()\n+    const leaveSpy = jasmine.createSpy()\n",
            "-": "-    const enterSpy = vi.fn()\n-    const leaveSpy = vi.fn()\n"
          },
          {
            "+": "+    const spy = jasmine.createSpy()\n",
            "-": "-    const spy = vi.fn()\n"
          },
          {
            "+": "+    const spy = jasmine.createSpy()\n",
            "-": "-    const spy = vi.fn()\n"
          },
          {
            "+": "+    const spy = jasmine.createSpy()\n",
            "-": "-    const spy = vi.fn()\n"
          }
        ],
        "a/test/unit/features/transition/inject-styles.ts": [
          {
            "-": "-function insertCSS (text) {\n-  const cssEl = document.createElement('style')\n-  cssEl.textContent = text.trim()\n-  document.head.appendChild(cssEl)\n-}\n-\n-const duration = parseInt(process.env.TRANSITION_DURATION || '50')\n-const buffer = parseInt(process.env.TRANSITION_BUFFER || '10')\n-let injected = false\n-\n-export default function injectStyles () {\n-  if (injected) return { duration, buffer }\n-  injected = true\n-  insertCSS(`\n-    .test {\n-      -webkit-transition: opacity ${duration}ms ease;\n-      transition: opacity ${duration}ms ease;\n-    }\n-    .group-move {\n-      -webkit-transition: -webkit-transform ${duration}ms ease;\n-      transition: transform ${duration}ms ease;\n-    }\n-    .v-appear, .v-enter, .v-leave-active,\n-    .test-appear, .test-enter, .test-leave-active,\n-    .hello, .bye.active,\n-    .changed-enter {\n-      opacity: 0;\n-    }\n-    .test-anim-enter-active {\n-      animation: test-enter ${duration}ms;\n-      -webkit-animation: test-enter ${duration}ms;\n-    }\n-    .test-anim-leave-active {\n-      animation: test-leave ${duration}ms;\n-      -webkit-animation: test-leave ${duration}ms;\n-    }\n-    .test-anim-long-enter-active {\n-      animation: test-enter ${duration * 2}ms;\n-      -webkit-animation: test-enter ${duration * 2}ms;\n-    }\n-    .test-anim-long-leave-active {\n-      animation: test-leave ${duration * 2}ms;\n-      -webkit-animation: test-leave ${duration * 2}ms;\n-    }\n-    @keyframes test-enter {\n-      from { opacity: 0 }\n-      to { opacity: 1 }\n-    }\n-    @-webkit-keyframes test-enter {\n-      from { opacity: 0 }\n-      to { opacity: 1 }\n-    }\n-    @keyframes test-leave {\n-      from { opacity: 1 }\n-      to { opacity: 0 }\n-    }\n-    @-webkit-keyframes test-leave {\n-      from { opacity: 1 }\n-      to { opacity: 0 }\n-    }\n-  `)\n-  return { duration, buffer }\n-}\n-\n",
            "+": ""
          }
        ],
        "a/test/vitest.setup.ts": [
          {
            "-": "-import './helpers/wait-for-update'\n-import './helpers/trigger-event'\n-import './helpers/vdom'\n",
            "+": ""
          },
          {
            "+": "+\n+import { waitForUpdate } from './helpers/wait-for-update'\n+import { triggerEvent } from './helpers/trigger-event'\n+import { createTextVNode } from './helpers/vdom'\n+\n+global.waitForUpdate = waitForUpdate\n+global.triggerEvent = triggerEvent\n+global.createTextVNode = createTextVNode\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 16,
      "numOfChanges": 109,
      "qualityScore": 31
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "ab110cf8a952a27c8d96de87ed285e8094251b6d",
      "url": "https://github.com/vuejs/vue/commit/ab110cf8a952a27c8d96de87ed285e8094251b6d",
      "message": "test: e2e tests",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T10:21:53Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.github/workflows/ci.yml": [
          {
            "+": "+      - main\n",
            "-": "-      - '**'\n"
          },
          {
            "+": "+  e2e-test:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n",
            "-": "-  # e2e-test:\n-  #   runs-on: ubuntu-latest\n-  #   steps:\n-  #     - uses: actions/checkout@v2\n"
          },
          {
            "+": "+      - name: Install pnpm\n+        uses: pnpm/action-setup@v2\n",
            "-": "-  #     - name: Install pnpm\n-  #       uses: pnpm/action-setup@v2\n"
          },
          {
            "+": "+      - name: Set node version to 16\n+        uses: actions/setup-node@v2\n+        with:\n+          node-version: 16\n+          cache: 'pnpm'\n",
            "-": "-  #     - name: Set node version to 16\n-  #       uses: actions/setup-node@v2\n-  #       with:\n-  #         node-version: 16\n-  #         cache: 'pnpm'\n"
          },
          {
            "+": "+      - run: pnpm install\n",
            "-": "-  #     - run: pnpm install\n"
          },
          {
            "+": "+      - name: Run e2e tests\n+        run: pnpm run test:e2e\n",
            "-": "-  #     - name: Run e2e tests\n-  #       run: pnpm run test:e2e\n"
          }
        ],
        "a/examples/.eslintrc.json": [
          {
            "+": "+{\n+  \"globals\": {\n+    \"Vue\": true,\n+    \"firebase\": true\n+  }\n+}\n",
            "-": ""
          }
        ],
        "a/examples/classic/commits/app.js": [
          {
            "+": "+var apiURL = 'https://api.github.com/repos/vuejs/vue/commits?per_page=3&sha='\n+\n+/**\n+ * Actual demo\n+ */\n+\n+new Vue({\n+  el: '#demo',\n+\n+  data: {\n+    branches: ['main', 'dev'],\n+    currentBranch: 'main',\n+    commits: null\n+  },\n+\n+  created: function () {\n+    this.fetchData()\n+  },\n+\n+  watch: {\n+    currentBranch: 'fetchData'\n+  },\n+\n+  filters: {\n+    truncate: function (v) {\n+      var newline = v.indexOf('\\n')\n+      return newline > 0 ? v.slice(0, newline) : v\n+    },\n+    formatDate: function (v) {\n+      return v.replace(/T|Z/g, ' ')\n+    }\n+  },\n+\n+  methods: {\n+    fetchData: function () {\n+      var self = this\n+      var xhr = new XMLHttpRequest()\n+      xhr.open('GET', apiURL + self.currentBranch)\n+      xhr.onload = function () {\n+        self.commits = JSON.parse(xhr.responseText)\n+        console.log(self.commits[0].html_url)\n+      }\n+      xhr.send()\n+    }\n+  }\n+})\n",
            "-": ""
          }
        ],
        "a/examples/commits/index.html": [
          {
            "+": "+    <script src=\"../../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../dist/vue.min.js\"></script>\n"
          },
          {
            "-": "-    <script src=\"mock.js\"></script>\n",
            "+": ""
          }
        ],
        "a/examples/elastic-header/index.html": [
          {
            "+": "+    <script src=\"../../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../dist/vue.min.js\"></script>\n"
          }
        ],
        "a/examples/elastic-header/style.css": [],
        "a/examples/firebase/app.js": [],
        "a/examples/firebase/index.html": [
          {
            "+": "+    <script src=\"../../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../dist/vue.min.js\"></script>\n"
          }
        ],
        "a/examples/firebase/style.css": [],
        "a/examples/grid/grid.js": [],
        "a/examples/grid/index.html": [
          {
            "+": "+    <script src=\"../../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../dist/vue.min.js\"></script>\n"
          }
        ],
        "a/examples/grid/style.css": [],
        "a/examples/markdown/index.html": [
          {
            "+": "+    <script src=\"../../../node_modules/marked/marked.min.js\"></script>\n+    <script src=\"../../../node_modules/lodash/lodash.min.js\"></script>\n",
            "-": "-    <script src=\"https://unpkg.com/marked@0.3.6\"></script>\n-    <script src=\"https://unpkg.com/lodash@4.16.0\"></script>\n"
          },
          {
            "+": "+    <script src=\"../../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../dist/vue.min.js\"></script>\n"
          }
        ],
        "a/examples/markdown/style.css": [],
        "a/examples/modal/index.html": [
          {
            "+": "+    <script src=\"../../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../dist/vue.min.js\"></script>\n"
          }
        ],
        "a/examples/modal/style.css": [],
        "a/examples/move-animations/index.html": [
          {
            "+": "+    <meta charset=\"utf-8\" />\n",
            "-": "-    <meta charset=\"utf-8\">\n"
          },
          {
            "+": "+      .fade-move,\n+      .fade-enter-active,\n+      .fade-leave-active {\n+        transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n",
            "-": "-      .fade-move, .fade-enter-active, .fade-leave-active {\n-        transition: all .5s cubic-bezier(.55,0,.1,1);\n"
          },
          {
            "+": "+      .fade-enter,\n+      .fade-leave-to {\n",
            "-": "-      .fade-enter, .fade-leave-to {\n"
          },
          {
            "+": "+    <script src=\"../../../node_modules/lodash/lodash.min.js\"></script>\n",
            "-": "-    <script src=\"https://cdn.jsdelivr.net/lodash/4.3.0/lodash.min.js\"></script>\n"
          },
          {
            "+": "+    <script src=\"../../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../dist/vue.min.js\"></script>\n"
          },
          {
            "+": "+        <item\n+          v-for=\"item in items\"\n",
            "-": "-        <item v-for=\"item in items\"\n"
          },
          {
            "+": "+          @rm=\"remove(item)\"\n+        >\n",
            "-": "-          @rm=\"remove(item)\">\n"
          },
          {
            "+": "+          insert() {\n",
            "-": "-          insert () {\n"
          },
          {
            "+": "+          reset() {\n",
            "-": "-          reset () {\n"
          },
          {
            "+": "+          shuffle() {\n",
            "-": "-          shuffle () {\n"
          },
          {
            "+": "+          remove(item) {\n",
            "-": "-          remove (item) {\n"
          }
        ],
        "a/examples/select2/index.html": [],
        "a/examples/svg/index.html": [
          {
            "+": "+    <script src=\"../../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../dist/vue.min.js\"></script>\n-    <script src=\"https://unpkg.com/marky/dist/marky.min.js\"></script>\n"
          }
        ],
        "a/examples/svg/style.css": [],
        "a/examples/svg/svg.js": [],
        "a/examples/todomvc/app.js": [],
        "a/examples/todomvc/index.html": [
          {
            "+": "+    <link rel=\"stylesheet\" href=\"../../../node_modules/todomvc-app-css/index.css\">\n",
            "-": "-    <link rel=\"stylesheet\" href=\"https://unpkg.com/todomvc-app-css@2.0.4/index.css\">\n-    <script src=\"https://unpkg.com/director@1.2.8/build/director.js\"></script>\n"
          },
          {
            "+": "+        <input id=\"toggle-all\" class=\"toggle-all\" type=\"checkbox\" v-model=\"allDone\">\n+        <label for=\"toggle-all\">Mark all as complete</label>\n",
            "-": "-        <input class=\"toggle-all\" type=\"checkbox\" v-model=\"allDone\">\n"
          },
          {
            "+": "+    <script src=\"../../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../dist/vue.min.js\"></script>\n"
          }
        ],
        "a/examples/todomvc/readme.md": [],
        "a/examples/tree/index.html": [
          {
            "+": "+    <script src=\"../../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../dist/vue.min.js\"></script>\n"
          }
        ],
        "a/examples/tree/tree.js": [],
        "a/examples/commits/app.js": [
          {
            "-": "-/* global Vue */\n-\n-var apiURL = 'https://api.github.com/repos/vuejs/vue/commits?per_page=3&sha='\n-\n-/**\n- * Actual demo\n- */\n-\n-new Vue({\n-\n-  el: '#demo',\n-\n-  data: {\n-    branches: ['master', 'dev'],\n-    currentBranch: 'master',\n-    commits: null\n-  },\n-\n-  created: function () {\n-    this.fetchData()\n-  },\n-\n-  watch: {\n-    currentBranch: 'fetchData'\n-  },\n-\n-  filters: {\n-    truncate: function (v) {\n-      var newline = v.indexOf('\\n')\n-      return newline > 0 ? v.slice(0, newline) : v\n-    },\n-    formatDate: function (v) {\n-      return v.replace(/T|Z/g, ' ')\n-    }\n-  },\n-\n-  methods: {\n-    fetchData: function () {\n-      var self = this\n-      if (navigator.userAgent.indexOf('PhantomJS') > -1) {\n-        // use mocks in e2e to avoid dependency on network / authentication\n-        setTimeout(function () {\n-          self.commits = window.MOCKS[self.currentBranch]\n-        }, 0)\n-      } else {\n-        var xhr = new XMLHttpRequest()\n-        xhr.open('GET', apiURL + self.currentBranch)\n-        xhr.onload = function () {\n-          self.commits = JSON.parse(xhr.responseText)\n-          console.log(self.commits[0].html_url)\n-        }\n-        xhr.send()\n-      }\n-    }\n-  }\n-})\n",
            "+": ""
          }
        ],
        "a/package.json": [
          {
            "+": "+    \"test:e2e\": \"npm run build -- web-full-prod,web-server-basic-renderer && vitest run test/e2e\",\n",
            "-": "-    \"test:e2e\": \"npm run build -- web-full-prod,web-server-basic-renderer && node test/e2e/runner.ts\",\n"
          },
          {
            "+": "+    \"marked\": \"^3.0.8\",\n",
            "-": ""
          },
          {
            "+": "+    \"puppeteer\": \"^14.1.1\",\n",
            "-": ""
          },
          {
            "+": "+    \"todomvc-app-css\": \"^2.4.2\",\n",
            "-": ""
          }
        ],
        "a/pnpm-lock.yaml": [
          {
            "+": "+  marked: ^3.0.8\n",
            "-": ""
          },
          {
            "+": "+  puppeteer: ^14.1.1\n",
            "-": ""
          },
          {
            "+": "+  todomvc-app-css: ^2.4.2\n",
            "-": ""
          },
          {
            "+": "+  marked: 3.0.8\n",
            "-": ""
          },
          {
            "+": "+  puppeteer: 14.1.1\n",
            "-": ""
          },
          {
            "+": "+  todomvc-app-css: 2.4.2\n",
            "-": ""
          },
          {
            "+": "+  /@types/yauzl/2.10.0:\n+    resolution: {integrity: sha512-Cn6WYCm0tXv8p6k+A8PvbDG763EDpBoTzHdA+Q/MF6H3sapGjCm9NzoaJncJS9tUKSuCoDs9XHxYYsQDgxR6kw==}\n+    requiresBuild: true\n+    dependencies:\n+      '@types/node': 17.0.34\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /bl/4.1.0:\n+    resolution: {integrity: sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==}\n+    dependencies:\n+      buffer: 5.7.1\n+      inherits: 2.0.4\n+      readable-stream: 3.6.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /buffer-crc32/0.2.13:\n+    resolution: {integrity: sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /buffer/5.7.1:\n+    resolution: {integrity: sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==}\n+    dependencies:\n+      base64-js: 1.5.1\n+      ieee754: 1.2.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /cross-fetch/3.1.5:\n+    resolution: {integrity: sha512-lvb1SBsI0Z7GDwmuid+mU3kWVBwTVUbe7S0H52yaaAdQOXq2YktTCZdlAcNKFzE6QtRz0snpw9bNiPeOIkkQvw==}\n+    dependencies:\n+      node-fetch: 2.6.7\n+    transitivePeerDependencies:\n+      - encoding\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /devtools-protocol/0.0.982423:\n+    resolution: {integrity: sha512-FnVW2nDbjGNw1uD/JRC+9U5768W7e1TfUwqbDTcSsAu1jXFjITSX8w3rkW5FEpHRMPPGpvNSmO1pOpqByiWscA==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /extract-zip/2.0.1:\n+    resolution: {integrity: sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==}\n+    engines: {node: '>= 10.17.0'}\n+    hasBin: true\n+    dependencies:\n+      debug: 4.3.4\n+      get-stream: 5.2.0\n+      yauzl: 2.10.0\n+    optionalDependencies:\n+      '@types/yauzl': 2.10.0\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /fd-slicer/1.1.0:\n+    resolution: {integrity: sha1-JcfInLH5B3+IkbvmHY85Dq4lbx4=}\n+    dependencies:\n+      pend: 1.2.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /fs-constants/1.0.0:\n+    resolution: {integrity: sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /get-stream/5.2.0:\n+    resolution: {integrity: sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==}\n+    engines: {node: '>=8'}\n+    dependencies:\n+      pump: 3.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /marked/3.0.8:\n+    resolution: {integrity: sha512-0gVrAjo5m0VZSJb4rpL59K1unJAMb/hm8HRXqasD8VeC8m91ytDPMritgFSlKonfdt+rRYYpP/JfLxgIX8yoSw==}\n+    engines: {node: '>= 12'}\n+    hasBin: true\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /mkdirp-classic/0.5.3:\n+    resolution: {integrity: sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /node-fetch/2.6.7:\n+    resolution: {integrity: sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==}\n+    engines: {node: 4.x || >=6.0.0}\n+    peerDependencies:\n+      encoding: ^0.1.0\n+    peerDependenciesMeta:\n+      encoding:\n+        optional: true\n+    dependencies:\n+      whatwg-url: 5.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /pend/1.2.0:\n+    resolution: {integrity: sha1-elfrVQpng/kRUzH89GY9XI4AelA=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /progress/2.0.3:\n+    resolution: {integrity: sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==}\n+    engines: {node: '>=0.4.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /proxy-from-env/1.1.0:\n+    resolution: {integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /puppeteer/14.1.1:\n+    resolution: {integrity: sha512-4dC6GYR5YlXTmNO3TbYEHTdVSdml1cVD2Ok/h/f/xSTp4ITVdbRWkMjiOaEKRAhtIl6GqaP7B89zx+hfhcNGMQ==}\n+    engines: {node: '>=14.1.0'}\n+    requiresBuild: true\n+    dependencies:\n+      cross-fetch: 3.1.5\n+      debug: 4.3.4\n+      devtools-protocol: 0.0.982423\n+      extract-zip: 2.0.1\n+      https-proxy-agent: 5.0.1\n+      pkg-dir: 4.2.0\n+      progress: 2.0.3\n+      proxy-from-env: 1.1.0\n+      rimraf: 3.0.2\n+      tar-fs: 2.1.1\n+      unbzip2-stream: 1.4.3\n+      ws: 8.6.0\n+    transitivePeerDependencies:\n+      - bufferutil\n+      - encoding\n+      - supports-color\n+      - utf-8-validate\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /tar-fs/2.1.1:\n+    resolution: {integrity: sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==}\n+    dependencies:\n+      chownr: 1.1.4\n+      mkdirp-classic: 0.5.3\n+      pump: 3.0.0\n+      tar-stream: 2.2.0\n+    dev: true\n+\n+  /tar-stream/2.2.0:\n+    resolution: {integrity: sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==}\n+    engines: {node: '>=6'}\n+    dependencies:\n+      bl: 4.1.0\n+      end-of-stream: 1.4.4\n+      fs-constants: 1.0.0\n+      inherits: 2.0.4\n+      readable-stream: 3.6.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /todomvc-app-css/2.4.2:\n+    resolution: {integrity: sha512-ViAkQ7ed89rmhFIGRsT36njN+97z8+s3XsJnB8E2IKOq+/SLD/6PtSvmTtiwUcVk39qPcjAc/OyeDys4LoJUVg==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /tr46/0.0.3:\n+    resolution: {integrity: sha1-gYT9NH2snNwYWZLzpmIuFLnZq2o=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /unbzip2-stream/1.4.3:\n+    resolution: {integrity: sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==}\n+    dependencies:\n+      buffer: 5.7.1\n+      through: 2.3.8\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /webidl-conversions/3.0.1:\n+    resolution: {integrity: sha1-JFNCdeKnvGvnvIZhHMFq4KVlSHE=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /whatwg-url/5.0.0:\n+    resolution: {integrity: sha1-lmRU6HZUYuN2RNNib2dCzotwll0=}\n+    dependencies:\n+      tr46: 0.0.3\n+      webidl-conversions: 3.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /yauzl/2.10.0:\n+    resolution: {integrity: sha1-x+sXyT4RLLEIb6bY5R+wZnt5pfk=}\n+    dependencies:\n+      buffer-crc32: 0.2.13\n+      fd-slicer: 1.1.0\n+    dev: true\n+\n",
            "-": ""
          }
        ],
        "a/test/e2e/specs/async-edge-cases.html": [
          {
            "+": "+    <script src=\"../../dist/vue.min.js\"></script>\n",
            "-": "-    <script src=\"../../../dist/vue.min.js\"></script>\n"
          }
        ],
        "a/test/e2e/async-edge-cases.spec.ts": [
          {
            "+": "+// @vitest-environment node\n+import path from 'path'\n+import { E2E_TIMEOUT, setupPuppeteer } from './e2eUtils'\n+\n+describe('basic-ssr', () => {\n+  const { page, text, click, isChecked } = setupPuppeteer()\n+\n+  test(\n+    'should work',\n+    async () => {\n+      await page().goto(\n+        `file://${path.resolve(__dirname, `async-edge-cases.html`)}`\n+      )\n+\n+      // #4510\n+      expect(await text('#case-1')).toContain('1')\n+      expect(await isChecked('#case-1 input')).toBe(false)\n+\n+      await click('#case-1 input')\n+      expect(await text('#case-1')).toContain('2')\n+      expect(await isChecked('#case-1 input')).toBe(true)\n+\n+      await click('#case-1 input')\n+      expect(await text('#case-1')).toContain('3')\n+      expect(await isChecked('#case-1 input')).toBe(false)\n+\n+      // #6566\n+      expect(await text('#case-2 button')).toContain('Expand is True')\n+      expect(await text('.count-a')).toContain('countA: 0')\n+      expect(await text('.count-b')).toContain('countB: 0')\n+\n+      await click('#case-2 button')\n+      expect(await text('#case-2 button')).toContain('Expand is False')\n+      expect(await text('.count-a')).toContain('countA: 1')\n+      expect(await text('.count-b')).toContain('countB: 0')\n+\n+      await click('#case-2 button')\n+      expect(await text('#case-2 button')).toContain('Expand is True')\n+      expect(await text('.count-a')).toContain('countA: 1')\n+      expect(await text('.count-b')).toContain('countB: 1')\n+    },\n+    E2E_TIMEOUT\n+  )\n+})\n",
            "-": ""
          }
        ],
        "a/test/e2e/specs/basic-ssr.html": [
          {
            "+": "+    <script src=\"../../dist/vue.min.js\"></script>\n+    <script src=\"../../packages/vue-server-renderer/basic.js\"></script>\n",
            "-": "-    <script src=\"../../../dist/vue.min.js\"></script>\n-    <script src=\"../../../packages/vue-server-renderer/basic.js\"></script>\n"
          }
        ],
        "a/test/e2e/basic-ssr.spec.ts": [
          {
            "+": "+// @vitest-environment node\n+import path from 'path'\n+import { E2E_TIMEOUT, setupPuppeteer } from './e2eUtils'\n+\n+describe('basic-ssr', () => {\n+  const { page, text } = setupPuppeteer()\n+\n+  test(\n+    'should work',\n+    async () => {\n+      await page().goto(`file://${path.resolve(__dirname, `basic-ssr.html`)}`)\n+      expect(await text('#result')).toContain(\n+        `<div data-server-rendered=\"true\">foo</div>`\n+      )\n+    },\n+    E2E_TIMEOUT\n+  )\n+})\n",
            "-": ""
          }
        ],
        "a/examples/commits/mock.js": [
          {
            "+": "+export default {\n+  main: [\n",
            "-": "-window.MOCKS = {\n-  master: [\n"
          }
        ],
        "a/test/e2e/commits.spec.ts": [
          {
            "+": "+// @vitest-environment node\n+import { setupPuppeteer, getExampleUrl, E2E_TIMEOUT } from './e2eUtils'\n+import mocks from './commits.mock'\n+\n+describe('e2e: commits', () => {\n+  const { page, click, count, text, isChecked } = setupPuppeteer()\n+\n+  async function testCommits(apiType: 'classic' | 'composition') {\n+    // intercept and mock the response to avoid hitting the actual API\n+    await page().setRequestInterception(true)\n+    page().on('request', (req) => {\n+      const match = req.url().match(/&sha=(.*)$/)\n+      if (!match) {\n+        req.continue()\n+      } else {\n+        const ret = JSON.stringify(mocks[match[1] as 'main' | 'dev'])\n+        req.respond({\n+          status: 200,\n+          contentType: 'application/json',\n+          headers: { 'Access-Control-Allow-Origin': '*' },\n+          body: ret\n+        })\n+      }\n+    })\n+\n+    await page().goto(getExampleUrl('commits', apiType))\n+    await page().waitForSelector('li')\n+\n+    expect(await count('input')).toBe(2)\n+    expect(await count('label')).toBe(2)\n+    expect(await text('label[for=\"main\"]')).toBe('main')\n+    expect(await text('label[for=\"dev\"]')).toBe('dev')\n+    expect(await isChecked('#main')).toBe(true)\n+    expect(await isChecked('#dev')).toBe(false)\n+    expect(await text('p')).toBe('vuejs/vue@main')\n+    expect(await count('li')).toBe(3)\n+    expect(await count('li .commit')).toBe(3)\n+    expect(await count('li .message')).toBe(3)\n+\n+    await click('#dev')\n+    expect(await text('p')).toBe('vuejs/vue@dev')\n+    expect(await count('li')).toBe(3)\n+    expect(await count('li .commit')).toBe(3)\n+    expect(await count('li .message')).toBe(3)\n+  }\n+\n+  test(\n+    'classic',\n+    async () => {\n+      await testCommits('classic')\n+    },\n+    E2E_TIMEOUT\n+  )\n+\n+  // test(\n+  //   'composition',\n+  //   async () => {\n+  //     await testCommits('composition')\n+  //   },\n+  //   E2E_TIMEOUT\n+  // )\n+})\n",
            "-": ""
          }
        ],
        "a/test/e2e/e2eUtils.ts": [
          {
            "+": "+import path from 'path'\n+import puppeteer from 'puppeteer'\n+\n+export function getExampleUrl(name: string, apiType: 'classic' | 'composition') {\n+  return `file://${path.resolve(\n+    __dirname,\n+    `../../examples/${apiType}/${name}/index.html`\n+  )}`\n+}\n+\n+export const E2E_TIMEOUT = 30 * 1000\n+\n+const puppeteerOptions = process.env.CI\n+  ? { args: ['--no-sandbox', '--disable-setuid-sandbox'] }\n+  : { headless: !process.env.DEBUG }\n+\n+const maxTries = 30\n+export const timeout = (n: number) => new Promise((r) => setTimeout(r, n))\n+\n+export async function expectByPolling(\n+  poll: () => Promise<any>,\n+  expected: string\n+) {\n+  for (let tries = 0; tries < maxTries; tries++) {\n+    const actual = (await poll()) || ''\n+    if (actual.indexOf(expected) > -1 || tries === maxTries - 1) {\n+      expect(actual).toMatch(expected)\n+      break\n+    } else {\n+      await timeout(50)\n+    }\n+  }\n+}\n+\n+export function setupPuppeteer() {\n+  let browser: puppeteer.Browser\n+  let page: puppeteer.Page\n+\n+  beforeAll(async () => {\n+    browser = await puppeteer.launch(puppeteerOptions)\n+  })\n+\n+  beforeEach(async () => {\n+    page = await browser.newPage()\n+\n+    await page.evaluateOnNewDocument(() => {\n+      localStorage.clear()\n+    })\n+\n+    page.on('console', (e) => {\n+      if (e.type() === 'error') {\n+        const err = e.args()[0]\n+        console.error(\n+          `Error from Puppeteer-loaded page:\\n`,\n+          err._remoteObject.description\n+        )\n+      }\n+    })\n+  })\n+\n+  afterEach(async () => {\n+    await page.close()\n+  })\n+\n+  afterAll(async () => {\n+    await browser.close()\n+  })\n+\n+  async function click(selector: string, options?: puppeteer.ClickOptions) {\n+    await page.click(selector, options)\n+  }\n+\n+  async function count(selector: string) {\n+    return (await page.$$(selector)).length\n+  }\n+\n+  async function text(selector: string) {\n+    return await page.$eval(selector, (node) => node.textContent)\n+  }\n+\n+  async function value(selector: string) {\n+    return await page.$eval(\n+      selector,\n+      (node) => (node as HTMLInputElement).value\n+    )\n+  }\n+\n+  async function html(selector: string) {\n+    return await page.$eval(selector, (node) => node.innerHTML)\n+  }\n+\n+  async function classList(selector: string) {\n+    return await page.$eval(selector, (node: any) => [...node.classList])\n+  }\n+\n+  async function childrenCount(selector: string) {\n+    return await page.$eval(selector, (node: any) => node.children.length)\n+  }\n+\n+  async function isVisible(selector: string) {\n+    const display = await page.$eval(selector, (node) => {\n+      return window.getComputedStyle(node).display\n+    })\n+    return display !== 'none'\n+  }\n+\n+  async function isChecked(selector: string) {\n+    return await page.$eval(\n+      selector,\n+      (node) => (node as HTMLInputElement).checked\n+    )\n+  }\n+\n+  async function isFocused(selector: string) {\n+    return await page.$eval(selector, (node) => node === document.activeElement)\n+  }\n+\n+  async function setValue(selector: string, value: string) {\n+    await page.$eval(\n+      selector,\n+      (node, value) => {\n+        ;(node as HTMLInputElement).value = value as string\n+        node.dispatchEvent(new Event('input'))\n+      },\n+      value\n+    )\n+  }\n+\n+  async function typeValue(selector: string, value: string) {\n+    const el = (await page.$(selector))!\n+    await el.evaluate((node) => ((node as HTMLInputElement).value = ''))\n+    await el.type(value)\n+  }\n+\n+  async function enterValue(selector: string, value: string) {\n+    const el = (await page.$(selector))!\n+    await el.evaluate((node) => ((node as HTMLInputElement).value = ''))\n+    await el.type(value)\n+    await el.press('Enter')\n+  }\n+\n+  async function clearValue(selector: string) {\n+    return await page.$eval(\n+      selector,\n+      (node) => ((node as HTMLInputElement).value = '')\n+    )\n+  }\n+\n+  function timeout(time: number) {\n+    return page.evaluate((time) => {\n+      return new Promise((r) => {\n+        setTimeout(r, time)\n+      })\n+    }, time)\n+  }\n+\n+  function nextFrame() {\n+    return page.evaluate(() => {\n+      return new Promise((resolve) => {\n+        requestAnimationFrame(() => {\n+          requestAnimationFrame(resolve)\n+        })\n+      })\n+    })\n+  }\n+\n+  return {\n+    page: () => page,\n+    click,\n+    count,\n+    text,\n+    value,\n+    html,\n+    classList,\n+    childrenCount,\n+    isVisible,\n+    isChecked,\n+    isFocused,\n+    setValue,\n+    typeValue,\n+    enterValue,\n+    clearValue,\n+    timeout,\n+    nextFrame\n+  }\n+}\n",
            "-": ""
          }
        ],
        "a/test/e2e/grid.spec.ts": [
          {
            "+": "+import { setupPuppeteer, getExampleUrl, E2E_TIMEOUT } from './e2eUtils'\n+\n+interface TableData {\n+  name: string\n+  power: number\n+}\n+\n+describe('e2e: grid', () => {\n+  const { page, click, text, count, typeValue, clearValue } = setupPuppeteer()\n+  const columns = ['name', 'power'] as const\n+\n+  async function assertTable(data: TableData[]) {\n+    expect(await count('td')).toBe(data.length * columns.length)\n+    for (let i = 0; i < data.length; i++) {\n+      for (let j = 0; j < columns.length; j++) {\n+        expect(\n+          await text(`tr:nth-child(${i + 1}) td:nth-child(${j + 1})`)\n+        ).toContain(`${data[i][columns[j]]}`)\n+      }\n+    }\n+  }\n+\n+  async function testGrid(apiType: 'classic' | 'composition') {\n+    await page().goto(getExampleUrl('grid', apiType))\n+    await page().waitForSelector('table')\n+    expect(await count('th')).toBe(2)\n+    expect(await count('th.active')).toBe(0)\n+    expect(await text('th:nth-child(1)')).toContain('Name')\n+    expect(await text('th:nth-child(2)')).toContain('Power')\n+    await assertTable([\n+      { name: 'Chuck Norris', power: Infinity },\n+      { name: 'Bruce Lee', power: 9000 },\n+      { name: 'Jackie Chan', power: 7000 },\n+      { name: 'Jet Li', power: 8000 }\n+    ])\n+\n+    await click('th:nth-child(1)')\n+    expect(await count('th.active:nth-child(1)')).toBe(1)\n+    expect(await count('th.active:nth-child(2)')).toBe(0)\n+    expect(await count('th:nth-child(1) .arrow.dsc')).toBe(1)\n+    expect(await count('th:nth-child(2) .arrow.dsc')).toBe(0)\n+    await assertTable([\n+      { name: 'Jet Li', power: 8000 },\n+      { name: 'Jackie Chan', power: 7000 },\n+      { name: 'Chuck Norris', power: Infinity },\n+      { name: 'Bruce Lee', power: 9000 }\n+    ])\n+\n+    await click('th:nth-child(2)')\n+    expect(await count('th.active:nth-child(1)')).toBe(0)\n+    expect(await count('th.active:nth-child(2)')).toBe(1)\n+    expect(await count('th:nth-child(1) .arrow.dsc')).toBe(1)\n+    expect(await count('th:nth-child(2) .arrow.dsc')).toBe(1)\n+    await assertTable([\n+      { name: 'Chuck Norris', power: Infinity },\n+      { name: 'Bruce Lee', power: 9000 },\n+      { name: 'Jet Li', power: 8000 },\n+      { name: 'Jackie Chan', power: 7000 }\n+    ])\n+\n+    await click('th:nth-child(2)')\n+    expect(await count('th.active:nth-child(1)')).toBe(0)\n+    expect(await count('th.active:nth-child(2)')).toBe(1)\n+    expect(await count('th:nth-child(1) .arrow.dsc')).toBe(1)\n+    expect(await count('th:nth-child(2) .arrow.asc')).toBe(1)\n+    await assertTable([\n+      { name: 'Jackie Chan', power: 7000 },\n+      { name: 'Jet Li', power: 8000 },\n+      { name: 'Bruce Lee', power: 9000 },\n+      { name: 'Chuck Norris', power: Infinity }\n+    ])\n+\n+    await click('th:nth-child(1)')\n+    expect(await count('th.active:nth-child(1)')).toBe(1)\n+    expect(await count('th.active:nth-child(2)')).toBe(0)\n+    expect(await count('th:nth-child(1) .arrow.asc')).toBe(1)\n+    expect(await count('th:nth-child(2) .arrow.asc')).toBe(1)\n+    await assertTable([\n+      { name: 'Bruce Lee', power: 9000 },\n+      { name: 'Chuck Norris', power: Infinity },\n+      { name: 'Jackie Chan', power: 7000 },\n+      { name: 'Jet Li', power: 8000 }\n+    ])\n+\n+    await typeValue('input[name=\"query\"]', 'j')\n+    await assertTable([\n+      { name: 'Jackie Chan', power: 7000 },\n+      { name: 'Jet Li', power: 8000 }\n+    ])\n+\n+    await typeValue('input[name=\"query\"]', 'infinity')\n+    await assertTable([{ name: 'Chuck Norris', power: Infinity }])\n+\n+    await clearValue('input[name=\"query\"]')\n+    expect(await count('p')).toBe(0)\n+    await typeValue('input[name=\"query\"]', 'stringthatdoesnotexistanywhere')\n+    expect(await count('p')).toBe(1)\n+  }\n+\n+  test(\n+    'classic',\n+    async () => {\n+      await testGrid('classic')\n+    },\n+    E2E_TIMEOUT\n+  )\n+\n+  // test(\n+  //   'composition',\n+  //   async () => {\n+  //     await testGrid('composition')\n+  //   },\n+  //   E2E_TIMEOUT\n+  // )\n+})\n",
            "-": ""
          }
        ],
        "a/test/e2e/markdown.spec.ts": [
          {
            "+": "+import {\n+  setupPuppeteer,\n+  expectByPolling,\n+  getExampleUrl,\n+  E2E_TIMEOUT\n+} from './e2eUtils'\n+\n+describe('e2e: markdown', () => {\n+  const { page, isVisible, value, html } = setupPuppeteer()\n+\n+  async function testMarkdown(apiType: 'classic' | 'composition') {\n+    await page().goto(getExampleUrl('markdown', apiType))\n+    expect(await isVisible('#editor')).toBe(true)\n+    expect(await value('textarea')).toBe('# hello')\n+    expect(await html('#editor div')).toBe('<h1 id=\"hello\">hello</h1>\\n')\n+\n+    await page().type('textarea', '\\n## foo\\n\\n- bar\\n- baz')\n+\n+    // assert the output is not updated yet because of debounce\n+    // debounce has become unstable on CI so this assertion is disabled\n+    // expect(await html('#editor div')).toBe('<h1 id=\"hello\">hello</h1>\\n')\n+\n+    await expectByPolling(\n+      () => html('#editor div'),\n+      '<h1 id=\"hello\">hello</h1>\\n' +\n+        '<h2 id=\"foo\">foo</h2>\\n' +\n+        '<ul>\\n<li>bar</li>\\n<li>baz</li>\\n</ul>\\n'\n+    )\n+  }\n+\n+  test(\n+    'classic',\n+    async () => {\n+      await testMarkdown('classic')\n+    },\n+    E2E_TIMEOUT\n+  )\n+\n+  // test(\n+  //   'composition',\n+  //   async () => {\n+  //     await testMarkdown('composition')\n+  //   },\n+  //   E2E_TIMEOUT\n+  // )\n+})\n",
            "-": ""
          }
        ],
        "a/test/e2e/specs/modal.ts": [],
        "a/test/e2e/specs/select2.ts": [],
        "a/test/e2e/specs/async-edge-cases.ts": [
          {
            "-": "-module.exports = {\n-  'async edge cases': function (browser) {\n-    browser\n-    .url('http://localhost:8080/test/e2e/specs/async-edge-cases.html')\n-      // #4510\n-      .assert.containsText('#case-1', '1')\n-      .assert.checked('#case-1 input', false)\n-\n-      .click('#case-1 input')\n-      .assert.containsText('#case-1', '2')\n-      .assert.checked('#case-1 input', true)\n-\n-      .click('#case-1 input')\n-      .assert.containsText('#case-1', '3')\n-      .assert.checked('#case-1 input', false)\n-\n-      // // #6566\n-      .assert.containsText('#case-2 button', 'Expand is True')\n-      .assert.containsText('.count-a', 'countA: 0')\n-      .assert.containsText('.count-b', 'countB: 0')\n-\n-      .click('#case-2 button')\n-      .assert.containsText('#case-2 button', 'Expand is False')\n-      .assert.containsText('.count-a', 'countA: 1')\n-      .assert.containsText('.count-b', 'countB: 0')\n-\n-      .click('#case-2 button')\n-      .assert.containsText('#case-2 button', 'Expand is True')\n-      .assert.containsText('.count-a', 'countA: 1')\n-      .assert.containsText('.count-b', 'countB: 1')\n-\n-      .end()\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/e2e/specs/basic-ssr.ts": [
          {
            "-": "-module.exports = {\n-  'basic SSR': function (browser) {\n-    browser\n-    .url('http://localhost:8080/test/e2e/specs/basic-ssr.html')\n-      .assert.containsText('#result', '<div data-server-rendered=\"true\">foo</div>')\n-      .end()\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/e2e/specs/commits.ts": [
          {
            "-": "-module.exports = {\n-  'commits': function (browser) {\n-    browser\n-    .url('http://localhost:8080/examples/commits/')\n-      .waitForElementVisible('li', 5000)\n-      .assert.count('input', 2)\n-      .assert.count('label', 2)\n-      .assert.containsText('label[for=\"master\"]', 'master')\n-      .assert.containsText('label[for=\"dev\"]', 'dev')\n-      .assert.checked('#master')\n-      .assert.checked('#dev', false)\n-      .assert.containsText('p', 'vuejs/vue@master')\n-      .assert.count('li', 3)\n-      .assert.count('li .commit', 3)\n-      .assert.count('li .message', 3)\n-      .click('#dev')\n-      .assert.containsText('p', 'vuejs/vue@dev')\n-      .assert.count('li', 3)\n-      .assert.count('li .commit', 3)\n-      .assert.count('li .message', 3)\n-      .end()\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/e2e/specs/grid.ts": [
          {
            "-": "-module.exports = {\n-  'grid': function (browser) {\n-    const columns = ['name', 'power']\n-\n-    browser\n-    .url('http://localhost:8080/examples/grid/')\n-      .waitForElementVisible('table', 1000)\n-      .assert.count('th', 2)\n-      .assert.count('th.active', 0)\n-      .assert.containsText('th:nth-child(1)', 'Name')\n-      .assert.containsText('th:nth-child(2)', 'Power')\n-      assertTable([\n-        { name: 'Chuck Norris', power: Infinity },\n-        { name: 'Bruce Lee', power: 9000 },\n-        { name: 'Jackie Chan', power: 7000 },\n-        { name: 'Jet Li', power: 8000 }\n-      ])\n-\n-    browser\n-      .click('th:nth-child(1)')\n-      .assert.count('th.active:nth-child(1)', 1)\n-      .assert.count('th.active:nth-child(2)', 0)\n-      .assert.count('th:nth-child(1) .arrow.dsc', 1)\n-      .assert.count('th:nth-child(2) .arrow.dsc', 0)\n-      assertTable([\n-        { name: 'Jet Li', power: 8000 },\n-        { name: 'Jackie Chan', power: 7000 },\n-        { name: 'Chuck Norris', power: Infinity },\n-        { name: 'Bruce Lee', power: 9000 }\n-      ])\n-\n-    browser\n-      .click('th:nth-child(2)')\n-      .assert.count('th.active:nth-child(1)', 0)\n-      .assert.count('th.active:nth-child(2)', 1)\n-      .assert.count('th:nth-child(1) .arrow.dsc', 1)\n-      .assert.count('th:nth-child(2) .arrow.dsc', 1)\n-      assertTable([\n-        { name: 'Chuck Norris', power: Infinity },\n-        { name: 'Bruce Lee', power: 9000 },\n-        { name: 'Jet Li', power: 8000 },\n-        { name: 'Jackie Chan', power: 7000 }\n-      ])\n-\n-    browser\n-      .click('th:nth-child(2)')\n-      .assert.count('th.active:nth-child(1)', 0)\n-      .assert.count('th.active:nth-child(2)', 1)\n-      .assert.count('th:nth-child(1) .arrow.dsc', 1)\n-      .assert.count('th:nth-child(2) .arrow.asc', 1)\n-      assertTable([\n-        { name: 'Jackie Chan', power: 7000 },\n-        { name: 'Jet Li', power: 8000 },\n-        { name: 'Bruce Lee', power: 9000 },\n-        { name: 'Chuck Norris', power: Infinity }\n-      ])\n-\n-    browser\n-      .click('th:nth-child(1)')\n-      .assert.count('th.active:nth-child(1)', 1)\n-      .assert.count('th.active:nth-child(2)', 0)\n-      .assert.count('th:nth-child(1) .arrow.asc', 1)\n-      .assert.count('th:nth-child(2) .arrow.asc', 1)\n-      assertTable([\n-        { name: 'Bruce Lee', power: 9000 },\n-        { name: 'Chuck Norris', power: Infinity },\n-        { name: 'Jackie Chan', power: 7000 },\n-        { name: 'Jet Li', power: 8000 }\n-      ])\n-\n-    browser\n-      .setValue('input[name=\"query\"]', 'j')\n-      assertTable([\n-        { name: 'Jackie Chan', power: 7000 },\n-        { name: 'Jet Li', power: 8000 }\n-      ])\n-\n-    browser\n-      .clearValue('input[name=\"query\"]')\n-      .setValue('input[name=\"query\"]', 'infinity')\n-      assertTable([\n-        { name: 'Chuck Norris', power: Infinity }\n-      ])\n-\n-    browser\n-      .clearValue('input[name=\"query\"]')\n-      .assert.count('p', 0)\n-      .setValue('input[name=\"query\"]', 'stringthatdoesnotexistanywhere')\n-      .assert.count('p', 1)\n-\n-    browser.end()\n-\n-    function assertTable (data) {\n-      browser.assert.count('td', data.length * columns.length)\n-      for (let i = 0; i < data.length; i++) {\n-        for (let j = 0; j < columns.length; j++) {\n-          browser.assert.containsText(\n-            'tr:nth-child(' + (i + 1) + ') td:nth-child(' + (j + 1) + ')',\n-            data[i][columns[j]]\n-          )\n-        }\n-      }\n-    }\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/e2e/specs/markdown.ts": [
          {
            "-": "-module.exports = {\n-  'markdown': function (browser) {\n-    browser\n-    .url('http://localhost:8080/examples/markdown/')\n-      .waitForElementVisible('#editor', 1000)\n-      .assert.value('textarea', '# hello')\n-      .assert.hasHTML('#editor div', '<h1 id=\"hello\">hello</h1>')\n-      .setValue('textarea', '\\n## foo\\n\\n- bar\\n- baz')\n-      // assert the output is not updated yet because of debounce\n-      .assert.hasHTML('#editor div', '<h1 id=\"hello\">hello</h1>')\n-      .waitFor(500)\n-      .assert.hasHTML('#editor div',\n-        '<h1 id=\"hello\">hello</h1>\\n' +\n-        '<h2 id=\"foo\">foo</h2>\\n' +\n-        '<ul>\\n<li>bar</li>\\n<li>baz</li>\\n</ul>'\n-      )\n-      .end()\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/e2e/specs/svg.ts": [
          {
            "-": "-declare const stats: any\n-declare const valueToPoint: Function\n-\n-module.exports = {\n-  'svg': function (browser) {\n-    browser\n-    .url('http://localhost:8080/examples/svg/')\n-      .waitForElementVisible('svg', 1000)\n-      .assert.count('g', 1)\n-      .assert.count('polygon', 1)\n-      .assert.count('circle', 1)\n-      .assert.count('text', 6)\n-      .assert.count('label', 6)\n-      .assert.count('button', 7)\n-      .assert.count('input[type=\"range\"]', 6)\n-      .assert.evaluate(function () {\n-        const points = stats.map(function (stat, i) {\n-        const point = valueToPoint(stat.value, i, 6)\n-          return point.x + ',' + point.y\n-        }).join(' ')\n-        return document.querySelector('polygon')!.attributes[0].value === points\n-      })\n-      .click('button.remove')\n-      .assert.count('text', 5)\n-      .assert.count('label', 5)\n-      .assert.count('button', 6)\n-      .assert.count('input[type=\"range\"]', 5)\n-      .assert.evaluate(function () {\n-        const points = stats.map(function (stat, i) {\n-        const point = valueToPoint(stat.value, i, 5)\n-          return point.x + ',' + point.y\n-        }).join(' ')\n-        return document.querySelector('polygon')!.attributes[0].value === points\n-      })\n-      .setValue('input[name=\"newlabel\"]', 'foo')\n-      .click('#add > button')\n-      .assert.count('text', 6)\n-      .assert.count('label', 6)\n-      .assert.count('button', 7)\n-      .assert.count('input[type=\"range\"]', 6)\n-      .assert.evaluate(function () {\n-        const points = stats.map(function (stat, i) {\n-        const point = valueToPoint(stat.value, i, 6)\n-          return point.x + ',' + point.y\n-        }).join(' ')\n-        return document.querySelector('polygon')!.attributes[0].value === points\n-      })\n-      .end()\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/e2e/specs/todomvc.ts": [
          {
            "-": "-module.exports = {\n-  'todomvc': function (browser) {\n-    browser\n-    .url('http://localhost:8080/examples/todomvc/#test')\n-      .waitForElementVisible('.todoapp', 1000)\n-      .assert.notVisible('.main')\n-      .assert.notVisible('.footer')\n-      .assert.count('.filters .selected', 1)\n-      .assert.evaluate(function () {\n-        return document.querySelector('.filters .selected')!.textContent === 'All'\n-      })\n-\n-    createNewItem('test')\n-      .assert.count('.todo', 1)\n-      .assert.notVisible('.todo .edit')\n-      .assert.containsText('.todo label', 'test')\n-      .assert.containsText('.todo-count strong', '1')\n-      .assert.checked('.todo .toggle', false)\n-      .assert.visible('.main')\n-      .assert.visible('.footer')\n-      .assert.notVisible('.clear-completed')\n-      .assert.value('.new-todo', '')\n-\n-    createNewItem('test2')\n-      .assert.count('.todo', 2)\n-      .assert.containsText('.todo:nth-child(2) label', 'test2')\n-      .assert.containsText('.todo-count strong', '2')\n-\n-    // toggle\n-    browser\n-      .click('.todo .toggle')\n-      .assert.count('.todo.completed', 1)\n-      .assert.cssClassPresent('.todo:nth-child(1)', 'completed')\n-      .assert.containsText('.todo-count strong', '1')\n-      .assert.visible('.clear-completed')\n-\n-    createNewItem('test3')\n-      .assert.count('.todo', 3)\n-      .assert.containsText('.todo:nth-child(3) label', 'test3')\n-      .assert.containsText('.todo-count strong', '2')\n-\n-    createNewItem('test4')\n-    createNewItem('test5')\n-      .assert.count('.todo', 5)\n-      .assert.containsText('.todo-count strong', '4')\n-\n-    // toggle more\n-    browser\n-      .click('.todo:nth-child(4) .toggle')\n-      .click('.todo:nth-child(5) .toggle')\n-      .assert.count('.todo.completed', 3)\n-      .assert.containsText('.todo-count strong', '2')\n-\n-    // remove\n-    removeItemAt(1)\n-      .assert.count('.todo', 4)\n-      .assert.count('.todo.completed', 2)\n-      .assert.containsText('.todo-count strong', '2')\n-    removeItemAt(2)\n-      .assert.count('.todo', 3)\n-      .assert.count('.todo.completed', 2)\n-      .assert.containsText('.todo-count strong', '1')\n-\n-    // remove all\n-    browser\n-      .click('.clear-completed')\n-      .assert.count('.todo', 1)\n-      .assert.containsText('.todo label', 'test2')\n-      .assert.count('.todo.completed', 0)\n-      .assert.containsText('.todo-count strong', '1')\n-      .assert.notVisible('.clear-completed')\n-\n-    // prepare to test filters\n-    createNewItem('test')\n-    createNewItem('test')\n-      .click('.todo:nth-child(2) .toggle')\n-      .click('.todo:nth-child(3) .toggle')\n-\n-    // active filter\n-    browser\n-      .click('.filters li:nth-child(2) a')\n-      .assert.count('.todo', 1)\n-      .assert.count('.todo.completed', 0)\n-      // add item with filter active\n-      createNewItem('test')\n-      .assert.count('.todo', 2)\n-\n-    // completed filter\n-    browser.click('.filters li:nth-child(3) a')\n-      .assert.count('.todo', 2)\n-      .assert.count('.todo.completed', 2)\n-\n-    // filter on page load\n-    browser.url('http://localhost:8080/examples/todomvc/#active')\n-      .assert.count('.todo', 2)\n-      .assert.count('.todo.completed', 0)\n-      .assert.containsText('.todo-count strong', '2')\n-\n-    // completed on page load\n-    browser.url('http://localhost:8080/examples/todomvc/#completed')\n-      .assert.count('.todo', 2)\n-      .assert.count('.todo.completed', 2)\n-      .assert.containsText('.todo-count strong', '2')\n-\n-    // toggling with filter active\n-    browser\n-      .click('.todo .toggle')\n-      .assert.count('.todo', 1)\n-      .click('.filters li:nth-child(2) a')\n-      .assert.count('.todo', 3)\n-      .click('.todo .toggle')\n-      .assert.count('.todo', 2)\n-\n-    // editing triggered by blur\n-    browser\n-      .click('.filters li:nth-child(1) a')\n-      .dblClick('.todo:nth-child(1) label')\n-      .assert.count('.todo.editing', 1)\n-      .assert.focused('.todo:nth-child(1) .edit')\n-      .clearValue('.todo:nth-child(1) .edit')\n-      .setValue('.todo:nth-child(1) .edit', 'edited!')\n-      .click('.new-todo') // blur\n-      .assert.count('.todo.editing', 0)\n-      .assert.containsText('.todo:nth-child(1) label', 'edited!')\n-\n-    // editing triggered by enter\n-    browser\n-      .dblClick('.todo label')\n-      .enterValue('.todo:nth-child(1) .edit', 'edited again!')\n-      .assert.count('.todo.editing', 0)\n-      .assert.containsText('.todo:nth-child(1) label', 'edited again!')\n-\n-    // cancel\n-    browser\n-      .dblClick('.todo label')\n-      .clearValue('.todo:nth-child(1) .edit')\n-      .setValue('.todo:nth-child(1) .edit', 'edited!')\n-      .trigger('.todo:nth-child(1) .edit', 'keyup', 27)\n-      .assert.count('.todo.editing', 0)\n-      .assert.containsText('.todo:nth-child(1) label', 'edited again!')\n-\n-    // empty value should remove\n-    browser\n-      .dblClick('.todo label')\n-      .enterValue('.todo:nth-child(1) .edit', ' ')\n-      .assert.count('.todo', 3)\n-\n-    // toggle all\n-    browser\n-      .click('.toggle-all')\n-      .assert.count('.todo.completed', 3)\n-      .click('.toggle-all')\n-      .assert.count('.todo:not(.completed)', 3)\n-      .end()\n-\n-    function createNewItem (text) {\n-      return browser.enterValue('.new-todo', text)\n-    }\n-\n-    function removeItemAt (n) {\n-      return browser\n-        .moveToElement('.todo:nth-child(' + n + ')', 10, 10)\n-        .click('.todo:nth-child(' + n + ') .destroy')\n-    }\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/e2e/specs/tree.ts": [
          {
            "-": "-module.exports = {\n-  'tree': function (browser) {\n-    browser\n-    .url('http://localhost:8080/examples/tree/')\n-      .waitForElementVisible('li', 1000)\n-      .assert.count('.item', 12)\n-      .assert.count('.add', 4)\n-      .assert.count('.item > ul', 4)\n-      .assert.notVisible('#demo li ul')\n-      .assert.containsText('#demo li div span', '[+]')\n-\n-      // expand root\n-      .click('.bold')\n-      .assert.visible('#demo ul')\n-      .assert.evaluate(function () {\n-        return document.querySelector('#demo li ul')!.children.length === 4\n-      })\n-      .assert.containsText('#demo li div span', '[-]')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(1)', 'hello')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(2)', 'wat')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(3)', 'child folder')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(3)', '[+]')\n-\n-      // add items to root\n-      .click('#demo > .item > ul > .add')\n-      .assert.evaluate(function () {\n-        return document.querySelector('#demo li ul')!.children.length === 5\n-      })\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(1)', 'hello')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(2)', 'wat')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(3)', 'child folder')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(3)', '[+]')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(4)', 'new stuff')\n-\n-      // add another item\n-      .click('#demo > .item > ul > .add')\n-      .assert.evaluate(function () {\n-        return document.querySelector('#demo li ul')!.children.length === 6\n-      })\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(1)', 'hello')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(2)', 'wat')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(3)', 'child folder')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(3)', '[+]')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(4)', 'new stuff')\n-      .assert.containsText('#demo > .item > ul > .item:nth-child(5)', 'new stuff')\n-\n-      .click('#demo ul .bold')\n-      .assert.visible('#demo ul ul')\n-      .assert.containsText('#demo ul > .item:nth-child(3)', '[-]')\n-      .assert.evaluate(function () {\n-        return document.querySelector('#demo ul ul')!.children.length === 5\n-      })\n-\n-      .click('.bold')\n-      .assert.notVisible('#demo ul')\n-      .assert.containsText('#demo li div span', '[+]')\n-      .click('.bold')\n-      .assert.visible('#demo ul')\n-      .assert.containsText('#demo li div span', '[-]')\n-\n-      .dblClick('#demo ul > .item div')\n-      .assert.count('.item', 15)\n-      .assert.count('.item > ul', 5)\n-      .assert.containsText('#demo ul > .item:nth-child(1)', '[-]')\n-      .assert.evaluate(function () {\n-        const firstItem = document.querySelector('#demo ul > .item:nth-child(1)')!\n-        const ul = firstItem.querySelector('ul')!\n-        return ul.children.length === 2\n-      })\n-      .end()\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/e2e/svg.spec.ts": [
          {
            "+": "+import { setupPuppeteer, getExampleUrl, E2E_TIMEOUT } from './e2eUtils'\n+\n+declare const stats: {\n+  label: string\n+  value: number\n+}[]\n+\n+declare function valueToPoint(\n+  value: number,\n+  index: number,\n+  total: number\n+): {\n+  x: number\n+  y: number\n+}\n+\n+describe('e2e: svg', () => {\n+  const { page, click, count, setValue, typeValue } = setupPuppeteer()\n+\n+  // assert the shape of the polygon is correct\n+  async function assertPolygon(total: number) {\n+    expect(\n+      await page().evaluate(\n+        (total) => {\n+          const points = stats\n+            .map((stat, i) => {\n+              const point = valueToPoint(stat.value, i, total)\n+              return point.x + ',' + point.y\n+            })\n+            .join(' ')\n+          return (\n+            document.querySelector('polygon')!.attributes[0].value === points\n+          )\n+        },\n+        [total]\n+      )\n+    ).toBe(true)\n+  }\n+\n+  // assert the position of each label is correct\n+  async function assertLabels(total: number) {\n+    const positions = await page().evaluate(\n+      (total) => {\n+        return stats.map((stat, i) => {\n+          const point = valueToPoint(+stat.value + 10, i, total)\n+          return [point.x, point.y]\n+        })\n+      },\n+      [total]\n+    )\n+    for (let i = 0; i < total; i++) {\n+      const textPosition = await page().$eval(\n+        `text:nth-child(${i + 3})`,\n+        (node) => [+node.attributes[0].value, +node.attributes[1].value]\n+      )\n+      expect(textPosition).toEqual(positions[i])\n+    }\n+  }\n+\n+  // assert each value of stats is correct\n+  async function assertStats(expected: number[]) {\n+    const statsValue = await page().evaluate(() => {\n+      return stats.map((stat) => +stat.value)\n+    })\n+    expect(statsValue).toEqual(expected)\n+  }\n+\n+  function nthRange(n: number) {\n+    return `#demo div:nth-child(${n + 1}) input[type=\"range\"]`\n+  }\n+\n+  async function testSvg(apiType: 'classic' | 'composition') {\n+    await page().goto(getExampleUrl('svg', apiType))\n+    await page().waitForSelector('svg')\n+    expect(await count('g')).toBe(1)\n+    expect(await count('polygon')).toBe(1)\n+    expect(await count('circle')).toBe(1)\n+    expect(await count('text')).toBe(6)\n+    expect(await count('label')).toBe(6)\n+    expect(await count('button')).toBe(7)\n+    expect(await count('input[type=\"range\"]')).toBe(6)\n+    await assertPolygon(6)\n+    await assertLabels(6)\n+    await assertStats([100, 100, 100, 100, 100, 100])\n+\n+    await setValue(nthRange(1), '10')\n+    await assertPolygon(6)\n+    await assertLabels(6)\n+    await assertStats([10, 100, 100, 100, 100, 100])\n+\n+    await click('button.remove')\n+    expect(await count('text')).toBe(5)\n+    expect(await count('label')).toBe(5)\n+    expect(await count('button')).toBe(6)\n+    expect(await count('input[type=\"range\"]')).toBe(5)\n+    await assertPolygon(5)\n+    await assertLabels(5)\n+    await assertStats([100, 100, 100, 100, 100])\n+\n+    await typeValue('input[name=\"newlabel\"]', 'foo')\n+    await click('#add > button')\n+    expect(await count('text')).toBe(6)\n+    expect(await count('label')).toBe(6)\n+    expect(await count('button')).toBe(7)\n+    expect(await count('input[type=\"range\"]')).toBe(6)\n+    await assertPolygon(6)\n+    await assertLabels(6)\n+    await assertStats([100, 100, 100, 100, 100, 100])\n+\n+    await setValue(nthRange(1), '10')\n+    await assertPolygon(6)\n+    await assertLabels(6)\n+    await assertStats([10, 100, 100, 100, 100, 100])\n+\n+    await setValue(nthRange(2), '20')\n+    await assertPolygon(6)\n+    await assertLabels(6)\n+    await assertStats([10, 20, 100, 100, 100, 100])\n+\n+    await setValue(nthRange(6), '60')\n+    await assertPolygon(6)\n+    await assertLabels(6)\n+    await assertStats([10, 20, 100, 100, 100, 60])\n+\n+    await click('button.remove')\n+    await assertPolygon(5)\n+    await assertLabels(5)\n+    await assertStats([20, 100, 100, 100, 60])\n+\n+    await setValue(nthRange(1), '10')\n+    await assertPolygon(5)\n+    await assertLabels(5)\n+    await assertStats([10, 100, 100, 100, 60])\n+  }\n+\n+  test(\n+    'classic',\n+    async () => {\n+      await testSvg('classic')\n+    },\n+    E2E_TIMEOUT\n+  )\n+\n+  // test(\n+  //   'composition',\n+  //   async () => {\n+  //     await testSvg('composition')\n+  //   },\n+  //   E2E_TIMEOUT\n+  // )\n+})\n",
            "-": ""
          }
        ],
        "a/test/e2e/todomvc.spec.ts": [
          {
            "+": "+import { setupPuppeteer, getExampleUrl, E2E_TIMEOUT } from './e2eUtils'\n+\n+describe('e2e: todomvc', () => {\n+  const {\n+    page,\n+    click,\n+    isVisible,\n+    count,\n+    text,\n+    value,\n+    isChecked,\n+    isFocused,\n+    classList,\n+    enterValue,\n+    clearValue\n+  } = setupPuppeteer()\n+\n+  async function removeItemAt(n: number) {\n+    const item = (await page().$('.todo:nth-child(' + n + ')'))!\n+    const itemBBox = (await item.boundingBox())!\n+    await page().mouse.move(itemBBox.x + 10, itemBBox.y + 10)\n+    await click('.todo:nth-child(' + n + ') .destroy')\n+  }\n+\n+  async function testTodomvc(apiType: 'classic' | 'composition') {\n+    const baseUrl = getExampleUrl('todomvc', apiType)\n+    await page().goto(baseUrl)\n+    expect(await isVisible('.main')).toBe(false)\n+    expect(await isVisible('.footer')).toBe(false)\n+    expect(await count('.filters .selected')).toBe(1)\n+    expect(await text('.filters .selected')).toBe('All')\n+    expect(await count('.todo')).toBe(0)\n+\n+    await enterValue('.new-todo', 'test')\n+    expect(await count('.todo')).toBe(1)\n+    expect(await isVisible('.todo .edit')).toBe(false)\n+    expect(await text('.todo label')).toBe('test')\n+    expect(await text('.todo-count strong')).toBe('1')\n+    expect(await isChecked('.todo .toggle')).toBe(false)\n+    expect(await isVisible('.main')).toBe(true)\n+    expect(await isVisible('.footer')).toBe(true)\n+    expect(await isVisible('.clear-completed')).toBe(false)\n+    expect(await value('.new-todo')).toBe('')\n+\n+    await enterValue('.new-todo', 'test2')\n+    expect(await count('.todo')).toBe(2)\n+    expect(await text('.todo:nth-child(2) label')).toBe('test2')\n+    expect(await text('.todo-count strong')).toBe('2')\n+\n+    // toggle\n+    await click('.todo .toggle')\n+    expect(await count('.todo.completed')).toBe(1)\n+    expect(await classList('.todo:nth-child(1)')).toContain('completed')\n+    expect(await text('.todo-count strong')).toBe('1')\n+    expect(await isVisible('.clear-completed')).toBe(true)\n+\n+    await enterValue('.new-todo', 'test3')\n+    expect(await count('.todo')).toBe(3)\n+    expect(await text('.todo:nth-child(3) label')).toBe('test3')\n+    expect(await text('.todo-count strong')).toBe('2')\n+\n+    await enterValue('.new-todo', 'test4')\n+    await enterValue('.new-todo', 'test5')\n+    expect(await count('.todo')).toBe(5)\n+    expect(await text('.todo-count strong')).toBe('4')\n+\n+    // toggle more\n+    await click('.todo:nth-child(4) .toggle')\n+    await click('.todo:nth-child(5) .toggle')\n+    expect(await count('.todo.completed')).toBe(3)\n+    expect(await text('.todo-count strong')).toBe('2')\n+\n+    // remove\n+    await removeItemAt(1)\n+    expect(await count('.todo')).toBe(4)\n+    expect(await count('.todo.completed')).toBe(2)\n+    expect(await text('.todo-count strong')).toBe('2')\n+    await removeItemAt(2)\n+    expect(await count('.todo')).toBe(3)\n+    expect(await count('.todo.completed')).toBe(2)\n+    expect(await text('.todo-count strong')).toBe('1')\n+\n+    // remove all\n+    await click('.clear-completed')\n+    expect(await count('.todo')).toBe(1)\n+    expect(await text('.todo label')).toBe('test2')\n+    expect(await count('.todo.completed')).toBe(0)\n+    expect(await text('.todo-count strong')).toBe('1')\n+    expect(await isVisible('.clear-completed')).toBe(false)\n+\n+    // prepare to test filters\n+    await enterValue('.new-todo', 'test')\n+    await enterValue('.new-todo', 'test')\n+    await click('.todo:nth-child(2) .toggle')\n+    await click('.todo:nth-child(3) .toggle')\n+\n+    // active filter\n+    await click('.filters li:nth-child(2) a')\n+    expect(await count('.todo')).toBe(1)\n+    expect(await count('.todo.completed')).toBe(0)\n+    // add item with filter active\n+    await enterValue('.new-todo', 'test')\n+    expect(await count('.todo')).toBe(2)\n+\n+    // completed filter\n+    await click('.filters li:nth-child(3) a')\n+    expect(await count('.todo')).toBe(2)\n+    expect(await count('.todo.completed')).toBe(2)\n+\n+    // filter on page load\n+    await page().goto(`${baseUrl}#active`)\n+    expect(await count('.todo')).toBe(2)\n+    expect(await count('.todo.completed')).toBe(0)\n+    expect(await text('.todo-count strong')).toBe('2')\n+\n+    // completed on page load\n+    await page().goto(`${baseUrl}#completed`)\n+    expect(await count('.todo')).toBe(2)\n+    expect(await count('.todo.completed')).toBe(2)\n+    expect(await text('.todo-count strong')).toBe('2')\n+\n+    // toggling with filter active\n+    await click('.todo .toggle')\n+    expect(await count('.todo')).toBe(1)\n+    await click('.filters li:nth-child(2) a')\n+    expect(await count('.todo')).toBe(3)\n+    await click('.todo .toggle')\n+    expect(await count('.todo')).toBe(2)\n+\n+    // editing triggered by blur\n+    await click('.filters li:nth-child(1) a')\n+    await click('.todo:nth-child(1) label', { clickCount: 2 })\n+    expect(await count('.todo.editing')).toBe(1)\n+    expect(await isFocused('.todo:nth-child(1) .edit')).toBe(true)\n+    await clearValue('.todo:nth-child(1) .edit')\n+    await page().type('.todo:nth-child(1) .edit', 'edited!')\n+    await click('.new-todo') // blur\n+    expect(await count('.todo.editing')).toBe(0)\n+    expect(await text('.todo:nth-child(1) label')).toBe('edited!')\n+\n+    // editing triggered by enter\n+    await click('.todo label', { clickCount: 2 })\n+    await enterValue('.todo:nth-child(1) .edit', 'edited again!')\n+    expect(await count('.todo.editing')).toBe(0)\n+    expect(await text('.todo:nth-child(1) label')).toBe('edited again!')\n+\n+    // cancel\n+    await click('.todo label', { clickCount: 2 })\n+    await clearValue('.todo:nth-child(1) .edit')\n+    await page().type('.todo:nth-child(1) .edit', 'edited!')\n+    await page().keyboard.press('Escape')\n+    expect(await count('.todo.editing')).toBe(0)\n+    expect(await text('.todo:nth-child(1) label')).toBe('edited again!')\n+\n+    // empty value should remove\n+    await click('.todo label', { clickCount: 2 })\n+    await enterValue('.todo:nth-child(1) .edit', ' ')\n+    expect(await count('.todo')).toBe(3)\n+\n+    // toggle all\n+    await click('.toggle-all+label')\n+    expect(await count('.todo.completed')).toBe(3)\n+    await click('.toggle-all+label')\n+    expect(await count('.todo:not(.completed)')).toBe(3)\n+  }\n+\n+  test(\n+    'classic',\n+    async () => {\n+      await testTodomvc('classic')\n+    },\n+    E2E_TIMEOUT\n+  )\n+\n+  // test(\n+  //   'composition',\n+  //   async () => {\n+  //     await testTodomvc('composition')\n+  //   },\n+  //   E2E_TIMEOUT\n+  // )\n+})\n",
            "-": ""
          }
        ],
        "a/test/e2e/tree.spec.ts": [
          {
            "+": "+import { setupPuppeteer, getExampleUrl, E2E_TIMEOUT } from './e2eUtils'\n+\n+describe('e2e: tree', () => {\n+  const { page, click, count, text, childrenCount, isVisible } =\n+    setupPuppeteer()\n+\n+  async function testTree(apiType: 'classic' | 'composition') {\n+    await page().goto(getExampleUrl('tree', apiType))\n+    expect(await count('.item')).toBe(12)\n+    expect(await count('.add')).toBe(4)\n+    expect(await count('.item > ul')).toBe(4)\n+    expect(await isVisible('#demo li ul')).toBe(false)\n+    expect(await text('#demo li div span')).toBe('[+]')\n+\n+    // expand root\n+    await click('.bold')\n+    expect(await isVisible('#demo ul')).toBe(true)\n+    expect(await childrenCount('#demo li ul')).toBe(4)\n+    expect(await text('#demo li div span')).toContain('[-]')\n+    expect(await text('#demo > .item > ul > .item:nth-child(1)')).toContain(\n+      'hello'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(2)')).toContain(\n+      'wat'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(3)')).toContain(\n+      'child folder'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(3)')).toContain(\n+      '[+]'\n+    )\n+\n+    // add items to root\n+    await click('#demo > .item > ul > .add')\n+    expect(await childrenCount('#demo li ul')).toBe(5)\n+    expect(await text('#demo > .item > ul > .item:nth-child(1)')).toContain(\n+      'hello'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(2)')).toContain(\n+      'wat'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(3)')).toContain(\n+      'child folder'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(3)')).toContain(\n+      '[+]'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(4)')).toContain(\n+      'new stuff'\n+    )\n+\n+    // add another item\n+    await click('#demo > .item > ul > .add')\n+    expect(await childrenCount('#demo li ul')).toBe(6)\n+    expect(await text('#demo > .item > ul > .item:nth-child(1)')).toContain(\n+      'hello'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(2)')).toContain(\n+      'wat'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(3)')).toContain(\n+      'child folder'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(3)')).toContain(\n+      '[+]'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(4)')).toContain(\n+      'new stuff'\n+    )\n+    expect(await text('#demo > .item > ul > .item:nth-child(5)')).toContain(\n+      'new stuff'\n+    )\n+\n+    await click('#demo ul .bold')\n+    expect(await isVisible('#demo ul ul')).toBe(true)\n+    expect(await text('#demo ul > .item:nth-child(3)')).toContain('[-]')\n+    expect(await childrenCount('#demo ul ul')).toBe(5)\n+\n+    await click('.bold')\n+    expect(await isVisible('#demo ul')).toBe(false)\n+    expect(await text('#demo li div span')).toContain('[+]')\n+    await click('.bold')\n+    expect(await isVisible('#demo ul')).toBe(true)\n+    expect(await text('#demo li div span')).toContain('[-]')\n+\n+    await click('#demo ul > .item div', { clickCount: 2 })\n+    expect(await count('.item')).toBe(15)\n+    expect(await count('.item > ul')).toBe(5)\n+    expect(await text('#demo ul > .item:nth-child(1)')).toContain('[-]')\n+    expect(await childrenCount('#demo ul > .item:nth-child(1) > ul')).toBe(2)\n+  }\n+\n+  test(\n+    'classic',\n+    async () => {\n+      await testTree('classic')\n+    },\n+    E2E_TIMEOUT\n+  )\n+\n+  // test(\n+  //   'composition',\n+  //   async () => {\n+  //     await testTree('composition')\n+  //   },\n+  //   E2E_TIMEOUT\n+  // )\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 51,
      "numOfChanges": 87,
      "qualityScore": 17
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "898d1e19fc3c0a8e899767a627c2d0a09615db9d",
      "url": "https://github.com/vuejs/vue/commit/898d1e19fc3c0a8e899767a627c2d0a09615db9d",
      "message": "test: all ssr tests passing",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T08:55:05Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.github/workflows/ci.yml": [
          {
            "+": "+  ssr-test:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+\n+      - name: Install pnpm\n+        uses: pnpm/action-setup@v2\n+\n+      - name: Set node version to 16\n+        uses: actions/setup-node@v2\n+        with:\n+          node-version: 16\n+          cache: 'pnpm'\n+\n+      - run: pnpm install\n+\n+      - name: Run SSR tests\n+        run: pnpm run test:ssr\n+\n",
            "-": ""
          }
        ],
        "a/package.json": [
          {
            "+": "+    \"test:unit\": \"vitest run test/unit\",\n+    \"test:ssr\": \"vitest run test/ssr\",\n",
            "-": "-    \"test:unit\": \"vitest run\",\n"
          },
          {
            "+": "+    \"file-loader\": \"^3.0.1\",\n",
            "-": "-    \"file-loader\": \"^6.2.0\",\n"
          },
          {
            "+": "+    \"webpack\": \"^4.46.0\",\n",
            "-": "-    \"webpack\": \"^5.72.1\",\n"
          }
        ],
        "a/pnpm-lock.yaml": [
          {
            "+": "+  file-loader: ^3.0.1\n",
            "-": "-  file-loader: ^6.2.0\n"
          },
          {
            "+": "+  webpack: ^4.46.0\n",
            "-": "-  webpack: ^5.72.1\n"
          },
          {
            "+": "+  file-loader: 3.0.1_webpack@4.46.0\n",
            "-": "-  file-loader: 6.2.0_webpack@5.72.1\n"
          },
          {
            "+": "+  webpack: 4.46.0\n",
            "-": "-  webpack: 5.72.1\n"
          },
          {
            "-": "-  /@types/eslint-scope/3.7.3:\n-    resolution: {integrity: sha512-PB3ldyrcnAicT35TWPs5IcwKD8S333HMaa2VVv4+wdvebJkjWuW/xESoB8IwRcog8HYVYamb1g/R31Qv5Bx03g==}\n-    dependencies:\n-      '@types/eslint': 8.4.2\n-      '@types/estree': 0.0.51\n-    dev: true\n-\n-  /@types/eslint/8.4.2:\n-    resolution: {integrity: sha512-Z1nseZON+GEnFjJc04sv4NSALGjhFwy6K0HXt7qsn5ArfAKtb63dXNJHf+1YW6IpOIYRBGUbu3GwJdj8DGnCjA==}\n-    dependencies:\n-      '@types/estree': 0.0.51\n-      '@types/json-schema': 7.0.11\n-    dev: true\n-\n",
            "+": ""
          },
          {
            "+": "+  /@webassemblyjs/ast/1.9.0:\n+    resolution: {integrity: sha512-C6wW5L+b7ogSDVqymbkkvuW9kruN//YisMED04xzeBBqjHa2FYnmvOlS6Xj68xWQRgWvI9cIglsjFowH/RJyEA==}\n",
            "-": "-  /@webassemblyjs/ast/1.11.1:\n-    resolution: {integrity: sha512-ukBh14qFLjxTQNTXocdyksN5QdM28S1CxHt2rdskFyL+xFV7VremuBLVbmCePj+URalXBENx/9Lm7lnhihtCSw==}\n"
          },
          {
            "+": "+      '@webassemblyjs/helper-module-context': 1.9.0\n+      '@webassemblyjs/helper-wasm-bytecode': 1.9.0\n+      '@webassemblyjs/wast-parser': 1.9.0\n",
            "-": "-      '@webassemblyjs/helper-numbers': 1.11.1\n-      '@webassemblyjs/helper-wasm-bytecode': 1.11.1\n"
          },
          {
            "+": "+  /@webassemblyjs/floating-point-hex-parser/1.9.0:\n+    resolution: {integrity: sha512-TG5qcFsS8QB4g4MhrxK5TqfdNe7Ey/7YL/xN+36rRjl/BlGE/NcBvJcqsRgCP6Z92mRE+7N50pRIi8SmKUbcQA==}\n",
            "-": "-  /@webassemblyjs/floating-point-hex-parser/1.11.1:\n-    resolution: {integrity: sha512-iGRfyc5Bq+NnNuX8b5hwBrRjzf0ocrJPI6GWFodBFzmFnyvrQ83SHKhmilCU/8Jv67i4GJZBMhEzltxzcNagtQ==}\n"
          },
          {
            "+": "+  /@webassemblyjs/helper-api-error/1.9.0:\n+    resolution: {integrity: sha512-NcMLjoFMXpsASZFxJ5h2HZRcEhDkvnNFOAKneP5RbKRzaWJN36NC4jqQHKwStIhGXu5mUWlUUk7ygdtrO8lbmw==}\n",
            "-": "-  /@webassemblyjs/helper-api-error/1.11.1:\n-    resolution: {integrity: sha512-RlhS8CBCXfRUR/cwo2ho9bkheSXG0+NwooXcc3PAILALf2QLdFyj7KGsKRbVc95hZnhnERon4kW/D3SZpp6Tcg==}\n"
          },
          {
            "+": "+  /@webassemblyjs/helper-buffer/1.9.0:\n+    resolution: {integrity: sha512-qZol43oqhq6yBPx7YM3m9Bv7WMV9Eevj6kMi6InKOuZxhw+q9hOkvq5e/PpKSiLfyetpaBnogSbNCfBwyB00CA==}\n",
            "-": "-  /@webassemblyjs/helper-buffer/1.11.1:\n-    resolution: {integrity: sha512-gwikF65aDNeeXa8JxXa2BAk+REjSyhrNC9ZwdT0f8jc4dQQeDQ7G4m0f2QCLPJiMTTO6wfDmRmj/pW0PsUvIcA==}\n"
          },
          {
            "+": "+  /@webassemblyjs/helper-code-frame/1.9.0:\n+    resolution: {integrity: sha512-ERCYdJBkD9Vu4vtjUYe8LZruWuNIToYq/ME22igL+2vj2dQ2OOujIZr3MEFvfEaqKoVqpsFKAGsRdBSBjrIvZA==}\n",
            "-": "-  /@webassemblyjs/helper-numbers/1.11.1:\n-    resolution: {integrity: sha512-vDkbxiB8zfnPdNK9Rajcey5C0w+QJugEglN0of+kmO8l7lDb77AnlKYQF7aarZuCrv+l0UvqL+68gSDr3k9LPQ==}\n"
          },
          {
            "+": "+      '@webassemblyjs/wast-printer': 1.9.0\n+    dev: true\n+\n+  /@webassemblyjs/helper-fsm/1.9.0:\n+    resolution: {integrity: sha512-OPRowhGbshCb5PxJ8LocpdX9Kl0uB4XsAjl6jH/dWKlk/mzsANvhwbiULsaiqT5GZGT9qinTICdj6PLuM5gslw==}\n",
            "-": "-      '@webassemblyjs/floating-point-hex-parser': 1.11.1\n-      '@webassemblyjs/helper-api-error': 1.11.1\n-      '@xtuc/long': 4.2.2\n"
          },
          {
            "+": "+  /@webassemblyjs/helper-module-context/1.9.0:\n+    resolution: {integrity: sha512-MJCW8iGC08tMk2enck1aPW+BE5Cw8/7ph/VGZxwyvGbJwjktKkDK7vy7gAmMDx88D7mhDTCNKAW5tED+gZ0W8g==}\n+    dependencies:\n+      '@webassemblyjs/ast': 1.9.0\n+    dev: true\n+\n+  /@webassemblyjs/helper-wasm-bytecode/1.9.0:\n+    resolution: {integrity: sha512-R7FStIzyNcd7xKxCZH5lE0Bqy+hGTwS3LJjuv1ZVxd9O7eHCedSdrId/hMOd20I+v8wDXEn+bjfKDLzTepoaUw==}\n",
            "-": "-  /@webassemblyjs/helper-wasm-bytecode/1.11.1:\n-    resolution: {integrity: sha512-PvpoOGiJwXeTrSf/qfudJhwlvDQxFgelbMqtq52WWiXC6Xgg1IREdngmPN3bs4RoO83PnL/nFrxucXj1+BX62Q==}\n"
          },
          {
            "+": "+  /@webassemblyjs/helper-wasm-section/1.9.0:\n+    resolution: {integrity: sha512-XnMB8l3ek4tvrKUUku+IVaXNHz2YsJyOOmz+MMkZvh8h1uSJpSen6vYnw3IoQ7WwEuAhL8Efjms1ZWjqh2agvw==}\n",
            "-": "-  /@webassemblyjs/helper-wasm-section/1.11.1:\n-    resolution: {integrity: sha512-10P9No29rYX1j7F3EVPX3JvGPQPae+AomuSTPiF9eBQeChHI6iqjMIwR9JmOJXwpnn/oVGDk7I5IlskuMwU/pg==}\n"
          },
          {
            "+": "+      '@webassemblyjs/ast': 1.9.0\n+      '@webassemblyjs/helper-buffer': 1.9.0\n+      '@webassemblyjs/helper-wasm-bytecode': 1.9.0\n+      '@webassemblyjs/wasm-gen': 1.9.0\n",
            "-": "-      '@webassemblyjs/ast': 1.11.1\n-      '@webassemblyjs/helper-buffer': 1.11.1\n-      '@webassemblyjs/helper-wasm-bytecode': 1.11.1\n-      '@webassemblyjs/wasm-gen': 1.11.1\n"
          },
          {
            "+": "+  /@webassemblyjs/ieee754/1.9.0:\n+    resolution: {integrity: sha512-dcX8JuYU/gvymzIHc9DgxTzUUTLexWwt8uCTWP3otys596io0L5aW02Gb1RjYpx2+0Jus1h4ZFqjla7umFniTg==}\n",
            "-": "-  /@webassemblyjs/ieee754/1.11.1:\n-    resolution: {integrity: sha512-hJ87QIPtAMKbFq6CGTkZYJivEwZDbQUgYd3qKSadTNOhVY7p+gfP6Sr0lLRVTaG1JjFj+r3YchoqRYxNH3M0GQ==}\n"
          },
          {
            "+": "+  /@webassemblyjs/leb128/1.9.0:\n+    resolution: {integrity: sha512-ENVzM5VwV1ojs9jam6vPys97B/S65YQtv/aanqnU7D8aSoHFX8GyhGg0CMfyKNIHBuAVjy3tlzd5QMMINa7wpw==}\n",
            "-": "-  /@webassemblyjs/leb128/1.11.1:\n-    resolution: {integrity: sha512-BJ2P0hNZ0u+Th1YZXJpzW6miwqQUGcIHT1G/sf72gLVD9DZ5AdYTqPNbHZh6K1M5VmKvFXwGSWZADz+qBWxeRw==}\n"
          },
          {
            "+": "+  /@webassemblyjs/utf8/1.9.0:\n+    resolution: {integrity: sha512-GZbQlWtopBTP0u7cHrEx+73yZKrQoBMpwkGEIqlacljhXCkVM1kMQge/Mf+csMJAjEdSwhOyLAS0AoR3AG5P8w==}\n+    dev: true\n+\n+  /@webassemblyjs/wasm-edit/1.9.0:\n+    resolution: {integrity: sha512-FgHzBm80uwz5M8WKnMTn6j/sVbqilPdQXTWraSjBwFXSYGirpkSWE2R9Qvz9tNiTKQvoKILpCuTjBKzOIm0nxw==}\n+    dependencies:\n+      '@webassemblyjs/ast': 1.9.0\n+      '@webassemblyjs/helper-buffer': 1.9.0\n+      '@webassemblyjs/helper-wasm-bytecode': 1.9.0\n+      '@webassemblyjs/helper-wasm-section': 1.9.0\n+      '@webassemblyjs/wasm-gen': 1.9.0\n+      '@webassemblyjs/wasm-opt': 1.9.0\n+      '@webassemblyjs/wasm-parser': 1.9.0\n+      '@webassemblyjs/wast-printer': 1.9.0\n",
            "-": "-  /@webassemblyjs/utf8/1.11.1:\n-    resolution: {integrity: sha512-9kqcxAEdMhiwQkHpkNiorZzqpGrodQQ2IGrHHxCy+Ozng0ofyMA0lTqiLkVs1uzTRejX+/O0EOT7KxqVPuXosQ==}\n"
          },
          {
            "+": "+  /@webassemblyjs/wasm-gen/1.9.0:\n+    resolution: {integrity: sha512-cPE3o44YzOOHvlsb4+E9qSqjc9Qf9Na1OO/BHFy4OI91XDE14MjFN4lTMezzaIWdPqHnsTodGGNP+iRSYfGkjA==}\n",
            "-": "-  /@webassemblyjs/wasm-edit/1.11.1:\n-    resolution: {integrity: sha512-g+RsupUC1aTHfR8CDgnsVRVZFJqdkFHpsHMfJuWQzWU3tvnLC07UqHICfP+4XyL2tnr1amvl1Sdp06TnYCmVkA==}\n"
          },
          {
            "+": "+      '@webassemblyjs/ast': 1.9.0\n+      '@webassemblyjs/helper-wasm-bytecode': 1.9.0\n+      '@webassemblyjs/ieee754': 1.9.0\n+      '@webassemblyjs/leb128': 1.9.0\n+      '@webassemblyjs/utf8': 1.9.0\n",
            "-": "-      '@webassemblyjs/ast': 1.11.1\n-      '@webassemblyjs/helper-buffer': 1.11.1\n-      '@webassemblyjs/helper-wasm-bytecode': 1.11.1\n-      '@webassemblyjs/helper-wasm-section': 1.11.1\n-      '@webassemblyjs/wasm-gen': 1.11.1\n-      '@webassemblyjs/wasm-opt': 1.11.1\n-      '@webassemblyjs/wasm-parser': 1.11.1\n-      '@webassemblyjs/wast-printer': 1.11.1\n"
          },
          {
            "+": "+  /@webassemblyjs/wasm-opt/1.9.0:\n+    resolution: {integrity: sha512-Qkjgm6Anhm+OMbIL0iokO7meajkzQD71ioelnfPEj6r4eOFuqm4YC3VBPqXjFyyNwowzbMD+hizmprP/Fwkl2A==}\n",
            "-": "-  /@webassemblyjs/wasm-gen/1.11.1:\n-    resolution: {integrity: sha512-F7QqKXwwNlMmsulj6+O7r4mmtAlCWfO/0HdgOxSklZfQcDu0TpLiD1mRt/zF25Bk59FIjEuGAIyn5ei4yMfLhA==}\n"
          },
          {
            "+": "+      '@webassemblyjs/ast': 1.9.0\n+      '@webassemblyjs/helper-buffer': 1.9.0\n+      '@webassemblyjs/wasm-gen': 1.9.0\n+      '@webassemblyjs/wasm-parser': 1.9.0\n",
            "-": "-      '@webassemblyjs/ast': 1.11.1\n-      '@webassemblyjs/helper-wasm-bytecode': 1.11.1\n-      '@webassemblyjs/ieee754': 1.11.1\n-      '@webassemblyjs/leb128': 1.11.1\n-      '@webassemblyjs/utf8': 1.11.1\n"
          },
          {
            "+": "+  /@webassemblyjs/wasm-parser/1.9.0:\n+    resolution: {integrity: sha512-9+wkMowR2AmdSWQzsPEjFU7njh8HTO5MqO8vjwEHuM+AMHioNqSBONRdr0NQQ3dVQrzp0s8lTcYqzUdb7YgELA==}\n",
            "-": "-  /@webassemblyjs/wasm-opt/1.11.1:\n-    resolution: {integrity: sha512-VqnkNqnZlU5EB64pp1l7hdm3hmQw7Vgqa0KF/KCNO9sIpI6Fk6brDEiX+iCOYrvMuBWDws0NkTOxYEb85XQHHw==}\n"
          },
          {
            "+": "+      '@webassemblyjs/ast': 1.9.0\n+      '@webassemblyjs/helper-api-error': 1.9.0\n+      '@webassemblyjs/helper-wasm-bytecode': 1.9.0\n+      '@webassemblyjs/ieee754': 1.9.0\n+      '@webassemblyjs/leb128': 1.9.0\n+      '@webassemblyjs/utf8': 1.9.0\n",
            "-": "-      '@webassemblyjs/ast': 1.11.1\n-      '@webassemblyjs/helper-buffer': 1.11.1\n-      '@webassemblyjs/wasm-gen': 1.11.1\n-      '@webassemblyjs/wasm-parser': 1.11.1\n"
          },
          {
            "+": "+  /@webassemblyjs/wast-parser/1.9.0:\n+    resolution: {integrity: sha512-qsqSAP3QQ3LyZjNC/0jBJ/ToSxfYJ8kYyuiGvtn/8MK89VrNEfwj7BPQzJVHi0jGTRK2dGdJ5PRqhtjzoww+bw==}\n",
            "-": "-  /@webassemblyjs/wasm-parser/1.11.1:\n-    resolution: {integrity: sha512-rrBujw+dJu32gYB7/Lup6UhdkPx9S9SnobZzRVL7VcBH9Bt9bCBLEuX/YXOOtBsOZ4NQrRykKhffRWHvigQvOA==}\n"
          },
          {
            "+": "+      '@webassemblyjs/ast': 1.9.0\n+      '@webassemblyjs/floating-point-hex-parser': 1.9.0\n+      '@webassemblyjs/helper-api-error': 1.9.0\n+      '@webassemblyjs/helper-code-frame': 1.9.0\n+      '@webassemblyjs/helper-fsm': 1.9.0\n+      '@xtuc/long': 4.2.2\n",
            "-": "-      '@webassemblyjs/ast': 1.11.1\n-      '@webassemblyjs/helper-api-error': 1.11.1\n-      '@webassemblyjs/helper-wasm-bytecode': 1.11.1\n-      '@webassemblyjs/ieee754': 1.11.1\n-      '@webassemblyjs/leb128': 1.11.1\n-      '@webassemblyjs/utf8': 1.11.1\n"
          },
          {
            "+": "+  /@webassemblyjs/wast-printer/1.9.0:\n+    resolution: {integrity: sha512-2J0nE95rHXHyQ24cWjMKJ1tqB/ds8z/cyeOZxJhcb+rW+SQASVjuznUSmdz5GpVJTzU8JkhYut0D3siFDD6wsA==}\n",
            "-": "-  /@webassemblyjs/wast-printer/1.11.1:\n-    resolution: {integrity: sha512-IQboUWM4eKzWW+N/jij2sRatKMh99QEelo3Eb2q0qXkvPRISAj8Qxtmw5itwqK+TTkBuUIE45AxYPToqPtL5gg==}\n"
          },
          {
            "+": "+      '@webassemblyjs/ast': 1.9.0\n+      '@webassemblyjs/wast-parser': 1.9.0\n",
            "-": "-      '@webassemblyjs/ast': 1.11.1\n"
          },
          {
            "-": "-  /acorn-import-assertions/1.8.0_acorn@8.7.1:\n-    resolution: {integrity: sha512-m7VZ3jwz4eK6A4Vtt8Ew1/mNbP24u0FhdyfA7fSvnJR6LMdfOYnmuIrrJAgrYfYJ10F/otaHTtrtrtmHdMNzEw==}\n-    peerDependencies:\n-      acorn: ^8\n-    dependencies:\n-      acorn: 8.7.1\n-    dev: true\n-\n",
            "+": ""
          },
          {
            "+": "+  /acorn/6.4.2:\n+    resolution: {integrity: sha512-XtGIhXwF8YM8bJhGxG5kXgjkEuNGLTkoYqVE+KMR+aspr4KGYmKYg7yUe3KghyQ9yheNwLnjmzh/7+gfDBmHCQ==}\n+    engines: {node: '>=0.4.0'}\n+    hasBin: true\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ajv-errors/1.0.1_ajv@6.12.6:\n+    resolution: {integrity: sha512-DCRfO/4nQ+89p/RK43i8Ezd41EqdGIU4ld7nGF8OQ14oc/we5rEntLCUa7+jrn3nn83BosfwZA0wb4pon2o8iQ==}\n+    peerDependencies:\n+      ajv: '>=5.0.0'\n+    dependencies:\n+      ajv: 6.12.6\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /anymatch/2.0.0:\n+    resolution: {integrity: sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==}\n+    dependencies:\n+      micromatch: 3.1.10\n+      normalize-path: 2.1.1\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+    optional: true\n+\n+  /anymatch/3.1.2:\n+    resolution: {integrity: sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==}\n+    engines: {node: '>= 8'}\n+    dependencies:\n+      normalize-path: 3.0.0\n+      picomatch: 2.3.1\n+    dev: true\n+    optional: true\n+\n+  /aproba/1.2.0:\n+    resolution: {integrity: sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /arr-diff/4.0.0:\n+    resolution: {integrity: sha512-YVIQ82gZPGBebQV/a8dar4AitzCQs0jjXwMPZllpXMaGjXPYVUawSxQrRsjhjupyVxEvbHgUmIhKVlND+j02kA==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n+  /arr-flatten/1.1.0:\n+    resolution: {integrity: sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n+  /arr-union/3.1.0:\n+    resolution: {integrity: sha512-sKpyeERZ02v1FeCZT8lrfJq5u6goHCtpTAzPwJYe7c8SPFOboNjNg1vz2L4VTn9T4PQxEx13TbXLmYUcS6Ug7Q==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /array-unique/0.3.2:\n+    resolution: {integrity: sha512-SleRWjh9JUud2wH1hPs9rZBZ33H6T9HOiL0uwGnGx9FpE6wKGyfWugmbkEOIs6qWrZhg0LWeLziLrEwQJhs5mQ==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /asn1.js/5.4.1:\n+    resolution: {integrity: sha512-+I//4cYPccV8LdmBLiX8CYvf9Sp3vQsrqu2QNXRcrbiWvcx/UdlFiqUJJzxRQxgsZmvhXhn4cSKeSmoFjVdupA==}\n+    dependencies:\n+      bn.js: 4.12.0\n+      inherits: 2.0.4\n+      minimalistic-assert: 1.0.1\n+      safer-buffer: 2.1.2\n+    dev: true\n+\n+  /assert/1.5.0:\n+    resolution: {integrity: sha512-EDsgawzwoun2CZkCgtxJbv392v4nbk9XDD06zI+kQYoBM/3RBWLlEyJARDOmhAAosBjWACEkKL6S+lIZtcAubA==}\n+    dependencies:\n+      object-assign: 4.1.1\n+      util: 0.10.3\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /assign-symbols/1.0.0:\n+    resolution: {integrity: sha512-Q+JC7Whu8HhmTdBph/Tq59IoRtoy6KAm5zzPv00WdujX82lbAL8K7WVjne7vdCsAmbF4AYaDOPyO3k0kl8qIrw==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /async-each/1.0.3:\n+    resolution: {integrity: sha512-z/WhQ5FPySLdvREByI2vZiTWwCnF0moMJ1hK9YQwDTHKh6I7/uSckMetoRGb5UBZPC1z0jlw+n/XCgjeH7y1AQ==}\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /atob/2.1.2:\n+    resolution: {integrity: sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==}\n+    engines: {node: '>= 4.5.0'}\n+    hasBin: true\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /base/0.11.2:\n+    resolution: {integrity: sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      cache-base: 1.0.1\n+      class-utils: 0.3.6\n+      component-emitter: 1.3.0\n+      define-property: 1.0.0\n+      isobject: 3.0.1\n+      mixin-deep: 1.3.2\n+      pascalcase: 0.1.1\n+    dev: true\n+\n+  /base64-js/1.5.1:\n+    resolution: {integrity: sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /binary-extensions/1.13.1:\n+    resolution: {integrity: sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+    optional: true\n+\n+  /binary-extensions/2.2.0:\n+    resolution: {integrity: sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==}\n+    engines: {node: '>=8'}\n+    dev: true\n+    optional: true\n+\n+  /bindings/1.5.0:\n+    resolution: {integrity: sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==}\n+    dependencies:\n+      file-uri-to-path: 1.0.0\n+    dev: true\n+    optional: true\n+\n+  /bluebird/3.7.2:\n+    resolution: {integrity: sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg==}\n+    dev: true\n+\n+  /bn.js/4.12.0:\n+    resolution: {integrity: sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==}\n+    dev: true\n+\n+  /bn.js/5.2.0:\n+    resolution: {integrity: sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /braces/2.3.2:\n+    resolution: {integrity: sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      arr-flatten: 1.1.0\n+      array-unique: 0.3.2\n+      extend-shallow: 2.0.1\n+      fill-range: 4.0.0\n+      isobject: 3.0.1\n+      repeat-element: 1.1.4\n+      snapdragon: 0.8.2\n+      snapdragon-node: 2.1.1\n+      split-string: 3.1.0\n+      to-regex: 3.0.2\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /brorand/1.1.0:\n+    resolution: {integrity: sha512-cKV8tMCEpQs4hK/ik71d6LrPOnpkpGBR0wzxqr68g2m/LB2GxVYQroAjMJZRVM1Y4BCjCKc3vAamxSzOY2RP+w==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /browserify-aes/1.2.0:\n+    resolution: {integrity: sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==}\n",
            "-": "-  /browserslist/4.20.3:\n-    resolution: {integrity: sha512-NBhymBQl1zM0Y5dQT/O+xiLP9/rzOIQdKM/eMJBAq7yBgaB6krIYLGejrwVYnSHZdqjscB1SPuAjHwxjvN6Wdg==}\n-    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n-    hasBin: true\n"
          },
          {
            "+": "+      buffer-xor: 1.0.3\n+      cipher-base: 1.0.4\n+      create-hash: 1.2.0\n+      evp_bytestokey: 1.0.3\n+      inherits: 2.0.4\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n+  /browserify-cipher/1.0.1:\n+    resolution: {integrity: sha512-sPhkz0ARKbf4rRQt2hTpAHqn47X3llLkUGn+xEJzLjwY8LRs2p0v7ljvI5EyoRO/mexrNunNECisZs+gw2zz1w==}\n+    dependencies:\n+      browserify-aes: 1.2.0\n+      browserify-des: 1.0.2\n+      evp_bytestokey: 1.0.3\n+    dev: true\n+\n+  /browserify-des/1.0.2:\n+    resolution: {integrity: sha512-BioO1xf3hFwz4kc6iBhI3ieDFompMhrMlnDFC4/0/vd5MokpuAc3R+LYbwTA9A5Yc9pq9UYPqffKpW2ObuwX5A==}\n+    dependencies:\n+      cipher-base: 1.0.4\n+      des.js: 1.0.1\n+      inherits: 2.0.4\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n+  /browserify-rsa/4.1.0:\n+    resolution: {integrity: sha512-AdEER0Hkspgno2aR97SAf6vi0y0k8NuOpGnVH3O99rcA5Q6sh8QxcngtHuJ6uXwnfAXNM4Gn1Gb7/MV1+Ymbog==}\n+    dependencies:\n+      bn.js: 5.2.0\n+      randombytes: 2.1.0\n+    dev: true\n+\n+  /browserify-sign/4.2.1:\n+    resolution: {integrity: sha512-/vrA5fguVAKKAVTNJjgSm1tRQDHUU6DbwO9IROu/0WAzC8PKhucDSh18J0RMvVeHAn5puMd+QHC2erPRNf8lmg==}\n+    dependencies:\n+      bn.js: 5.2.0\n+      browserify-rsa: 4.1.0\n+      create-hash: 1.2.0\n+      create-hmac: 1.1.7\n+      elliptic: 6.5.4\n+      inherits: 2.0.4\n+      parse-asn1: 5.1.6\n+      readable-stream: 3.6.0\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n+  /browserify-zlib/0.2.0:\n+    resolution: {integrity: sha512-Z942RysHXmJrhqk88FmKBVq/v5tqmSkDz7p54G/MGyjMnCFFnC79XWNbg+Vta8W6Wb2qtSZTSxIGkJrRpCFEiA==}\n+    dependencies:\n+      pako: 1.0.11\n",
            "-": "-      caniuse-lite: 1.0.30001341\n-      electron-to-chromium: 1.4.137\n-      escalade: 3.1.1\n-      node-releases: 2.0.4\n-      picocolors: 1.0.0\n"
          },
          {
            "+": "+  /buffer-xor/1.0.3:\n+    resolution: {integrity: sha512-571s0T7nZWK6vB67HI5dyUF7wXiNcfaPPPTl6zYCNApANjIvYJTg7hlud/+cJpdAhS7dVzqMLmfhfHR3rAcOjQ==}\n+    dev: true\n+\n+  /buffer/4.9.2:\n+    resolution: {integrity: sha512-xq+q3SRMOxGivLhBNaUdC64hDTQwejJ+H0T/NB1XMtTVEwNTrfFF3gAxiyW0Bu/xWEGhjVKgUcMhCrUy2+uCWg==}\n+    dependencies:\n+      base64-js: 1.5.1\n+      ieee754: 1.2.1\n+      isarray: 1.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /builtin-status-codes/3.0.0:\n+    resolution: {integrity: sha512-HpGFw18DgFWlncDfjTa2rcQ4W88O1mC8e8yZ2AvQY5KDaktSTwo+KRf6nHK6FRI5FyRyb/5T6+TSxfP7QyGsmQ==}\n+    dev: true\n+\n+  /cacache/12.0.4:\n+    resolution: {integrity: sha512-a0tMB40oefvuInr4Cwb3GerbL9xTj1D5yg0T5xrjGCGyfvbxseIXX7BAO/u/hIXdafzOI5JC3wDwHyf24buOAQ==}\n+    dependencies:\n+      bluebird: 3.7.2\n+      chownr: 1.1.4\n+      figgy-pudding: 3.5.2\n+      glob: 7.2.3\n+      graceful-fs: 4.2.10\n+      infer-owner: 1.0.4\n+      lru-cache: 5.1.1\n+      mississippi: 3.0.0\n+      mkdirp: 0.5.6\n+      move-concurrently: 1.0.1\n+      promise-inflight: 1.0.1_bluebird@3.7.2\n+      rimraf: 2.7.1\n+      ssri: 6.0.2\n+      unique-filename: 1.1.1\n+      y18n: 4.0.3\n+    dev: true\n+\n+  /cache-base/1.0.1:\n+    resolution: {integrity: sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      collection-visit: 1.0.0\n+      component-emitter: 1.3.0\n+      get-value: 2.0.6\n+      has-value: 1.0.0\n+      isobject: 3.0.1\n+      set-value: 2.0.1\n+      to-object-path: 0.3.0\n+      union-value: 1.0.1\n+      unset-value: 1.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "-": "-  /caniuse-lite/1.0.30001341:\n-    resolution: {integrity: sha512-2SodVrFFtvGENGCv0ChVJIDQ0KPaS1cg7/qtfMaICgeMolDdo/Z2OD32F0Aq9yl6F4YFwGPBS5AaPqNYiW4PoA==}\n-    dev: true\n-\n",
            "+": ""
          },
          {
            "+": "+  /chokidar/2.1.8:\n+    resolution: {integrity: sha512-ZmZUazfOzf0Nve7duiCKD23PFSCs4JPoYyccjUFF3aQkQadqBhfzhjkwBH2mNOG9cTBwhamM37EIsIkZw3nRgg==}\n+    deprecated: Chokidar 2 does not receive security updates since 2019. Upgrade to chokidar 3 with 15x fewer dependencies\n+    dependencies:\n+      anymatch: 2.0.0\n+      async-each: 1.0.3\n+      braces: 2.3.2\n+      glob-parent: 3.1.0\n+      inherits: 2.0.4\n+      is-binary-path: 1.0.1\n+      is-glob: 4.0.3\n+      normalize-path: 3.0.0\n+      path-is-absolute: 1.0.1\n+      readdirp: 2.2.1\n+      upath: 1.2.0\n+    optionalDependencies:\n+      fsevents: 1.2.13\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+    optional: true\n+\n+  /chokidar/3.5.3:\n+    resolution: {integrity: sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==}\n+    engines: {node: '>= 8.10.0'}\n+    requiresBuild: true\n+    dependencies:\n+      anymatch: 3.1.2\n+      braces: 3.0.2\n+      glob-parent: 5.1.2\n+      is-binary-path: 2.1.0\n+      is-glob: 4.0.3\n+      normalize-path: 3.0.0\n+      readdirp: 3.6.0\n+    optionalDependencies:\n+      fsevents: 2.3.2\n+    dev: true\n+    optional: true\n+\n+  /chownr/1.1.4:\n+    resolution: {integrity: sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /cipher-base/1.0.4:\n+    resolution: {integrity: sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==}\n+    dependencies:\n+      inherits: 2.0.4\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n+  /class-utils/0.3.6:\n+    resolution: {integrity: sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      arr-union: 3.1.0\n+      define-property: 0.2.5\n+      isobject: 3.0.1\n+      static-extend: 0.1.2\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /collection-visit/1.0.0:\n+    resolution: {integrity: sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      map-visit: 1.0.0\n+      object-visit: 1.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /component-emitter/1.3.0:\n+    resolution: {integrity: sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /concat-stream/1.6.2:\n+    resolution: {integrity: sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==}\n+    engines: {'0': node >= 0.8}\n+    dependencies:\n+      buffer-from: 1.1.2\n+      inherits: 2.0.4\n+      readable-stream: 2.3.7\n+      typedarray: 0.0.6\n+    dev: true\n+\n+  /console-browserify/1.2.0:\n+    resolution: {integrity: sha512-ZMkYO/LkF17QvCPqM0gxw8yUzigAOZOSWSHg91FH6orS7vcEj5dVZTidN2fQ14yBSdg97RqhSNwLUXInd52OTA==}\n+    dev: true\n+\n+  /constants-browserify/1.0.0:\n+    resolution: {integrity: sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /copy-concurrently/1.0.5:\n+    resolution: {integrity: sha512-f2domd9fsVDFtaFcbaRZuYXwtdmnzqbADSwhSWYxYB/Q8zsdUUFMXVRwXGDMWmbEzAn1kdRrtI1T/KTFOL4X2A==}\n+    dependencies:\n+      aproba: 1.2.0\n+      fs-write-stream-atomic: 1.0.10\n+      iferr: 0.1.5\n+      mkdirp: 0.5.6\n+      rimraf: 2.7.1\n+      run-queue: 1.0.3\n+    dev: true\n+\n+  /copy-descriptor/0.1.1:\n+    resolution: {integrity: sha1-Z29us8OZl8LuGsOpJP1hJHSPV40=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /create-ecdh/4.0.4:\n+    resolution: {integrity: sha512-mf+TCx8wWc9VpuxfP2ht0iSISLZnt0JgWlrOKZiNqyUZWnjIaCIVNQArMHnCZKfEYRg6IM7A+NeJoN8gf/Ws0A==}\n+    dependencies:\n+      bn.js: 4.12.0\n+      elliptic: 6.5.4\n+    dev: true\n+\n+  /create-hash/1.2.0:\n+    resolution: {integrity: sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==}\n+    dependencies:\n+      cipher-base: 1.0.4\n+      inherits: 2.0.4\n+      md5.js: 1.3.5\n+      ripemd160: 2.0.2\n+      sha.js: 2.4.11\n+    dev: true\n+\n+  /create-hmac/1.1.7:\n+    resolution: {integrity: sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==}\n+    dependencies:\n+      cipher-base: 1.0.4\n+      create-hash: 1.2.0\n+      inherits: 2.0.4\n+      ripemd160: 2.0.2\n+      safe-buffer: 5.2.1\n+      sha.js: 2.4.11\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /crypto-browserify/3.12.0:\n+    resolution: {integrity: sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==}\n+    dependencies:\n+      browserify-cipher: 1.0.1\n+      browserify-sign: 4.2.1\n+      create-ecdh: 4.0.4\n+      create-hash: 1.2.0\n+      create-hmac: 1.1.7\n+      diffie-hellman: 5.0.3\n+      inherits: 2.0.4\n+      pbkdf2: 3.1.2\n+      public-encrypt: 4.0.3\n+      randombytes: 2.1.0\n+      randomfill: 1.0.4\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /cyclist/1.0.1:\n+    resolution: {integrity: sha1-WW6WmP0MgOEgOMK4LW6xs1tiJNk=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /debug/2.6.9:\n+    resolution: {integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==}\n+    peerDependencies:\n+      supports-color: '*'\n+    peerDependenciesMeta:\n+      supports-color:\n+        optional: true\n+    dependencies:\n+      ms: 2.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /decode-uri-component/0.2.0:\n+    resolution: {integrity: sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=}\n+    engines: {node: '>=0.10'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /define-property/0.2.5:\n+    resolution: {integrity: sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-descriptor: 0.1.6\n",
            "-": "-  /delayed-stream/1.0.0:\n-    resolution: {integrity: sha1-3zrhmayt+31ECqrgsp4icrJOxhk=}\n-    engines: {node: '>=0.4.0'}\n"
          },
          {
            "+": "+  /define-property/1.0.0:\n+    resolution: {integrity: sha1-dp66rz9KY6rTr56NMEybvnm/sOY=}\n",
            "-": "-  /detect-file/1.0.0:\n-    resolution: {integrity: sha1-8NZtA2cqglyxtzvbP+YjEMjlUrc=}\n"
          },
          {
            "+": "+    dependencies:\n+      is-descriptor: 1.0.2\n",
            "-": ""
          },
          {
            "+": "+  /define-property/2.0.2:\n+    resolution: {integrity: sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-descriptor: 1.0.2\n+      isobject: 3.0.1\n",
            "-": "-  /detect-indent/6.0.0:\n-    resolution: {integrity: sha512-oSyFlqaTHCItVRGK5RmrmjB+CmaMOW7IaNA/kdxqhoa6d17j/5ce9O9eWXmV/KEdRwqpQA+Vqe8a8Bsybu4YnA==}\n-    engines: {node: '>=8'}\n"
          },
          {
            "+": "+  /delayed-stream/1.0.0:\n+    resolution: {integrity: sha1-3zrhmayt+31ECqrgsp4icrJOxhk=}\n+    engines: {node: '>=0.4.0'}\n+    dev: true\n+\n+  /des.js/1.0.1:\n+    resolution: {integrity: sha512-Q0I4pfFrv2VPd34/vfLrFOoRmlYj3OV50i7fskps1jZWK1kApMWWT9G6RRUeYedLcBDIhnSDaUvJMb3AhUlaEA==}\n+    dependencies:\n+      inherits: 2.0.4\n+      minimalistic-assert: 1.0.1\n+    dev: true\n+\n+  /detect-file/1.0.0:\n+    resolution: {integrity: sha1-8NZtA2cqglyxtzvbP+YjEMjlUrc=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n+  /detect-indent/6.0.0:\n+    resolution: {integrity: sha512-oSyFlqaTHCItVRGK5RmrmjB+CmaMOW7IaNA/kdxqhoa6d17j/5ce9O9eWXmV/KEdRwqpQA+Vqe8a8Bsybu4YnA==}\n+    engines: {node: '>=8'}\n+    dev: true\n+\n+  /diff/4.0.2:\n+    resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}\n",
            "-": "-  /diff/4.0.2:\n-    resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}\n"
          },
          {
            "+": "+  /diffie-hellman/5.0.3:\n+    resolution: {integrity: sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==}\n+    dependencies:\n+      bn.js: 4.12.0\n+      miller-rabin: 4.0.1\n+      randombytes: 2.1.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /domain-browser/1.2.0:\n+    resolution: {integrity: sha512-jnjyiM6eRyZl2H+W8Q/zLMA481hzi0eszAaBUzIVnmYVDBbnLxVNnfu1HgEBvCbL+71FrxMl3E6lpKH7Ge3OXA==}\n+    engines: {node: '>=0.4', npm: '>=1.2'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /duplexify/3.7.1:\n+    resolution: {integrity: sha512-07z8uv2wMyS51kKhD1KsdXJg5WQ6t93RneqRxUHnskXVtlYYkLqM0gqStQZ3pj073g687jPCHrqNfCzawLYh5g==}\n+    dependencies:\n+      end-of-stream: 1.4.4\n+      inherits: 2.0.4\n+      readable-stream: 2.3.7\n+      stream-shift: 1.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /elliptic/6.5.4:\n+    resolution: {integrity: sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==}\n+    dependencies:\n+      bn.js: 4.12.0\n+      brorand: 1.1.0\n+      hash.js: 1.1.7\n+      hmac-drbg: 1.0.1\n+      inherits: 2.0.4\n+      minimalistic-assert: 1.0.1\n+      minimalistic-crypto-utils: 1.0.1\n",
            "-": "-  /electron-to-chromium/1.4.137:\n-    resolution: {integrity: sha512-0Rcpald12O11BUogJagX3HsCN3FE83DSqWjgXoHo5a72KUKMSfI39XBgJpgNNxS9fuGzytaFjE06kZkiVFy2qA==}\n"
          },
          {
            "+": "+  /end-of-stream/1.4.4:\n+    resolution: {integrity: sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==}\n+    dependencies:\n+      once: 1.4.0\n+    dev: true\n+\n+  /enhanced-resolve/4.5.0:\n+    resolution: {integrity: sha512-Nv9m36S/vxpsI+Hc4/ZGRs0n9mXqSWGGq49zxb/cJfPAQMbUtttJAlNPS4AQzaBdw/pKskw5bMbekT/Y7W/Wlg==}\n+    engines: {node: '>=6.9.0'}\n",
            "-": "-  /enhanced-resolve/5.9.3:\n-    resolution: {integrity: sha512-Bq9VSor+kjvW3f9/MiiR4eE3XYgOl7/rS8lnSxbRbF3kS0B2r+Y9w5krBWxZgDxASVZbdYrn5wT4j/Wb0J9qow==}\n-    engines: {node: '>=10.13.0'}\n"
          },
          {
            "+": "+      memory-fs: 0.5.0\n+      tapable: 1.1.3\n",
            "-": "-      tapable: 2.2.1\n"
          },
          {
            "-": "-  /es-module-lexer/0.9.3:\n-    resolution: {integrity: sha512-1HQ2M2sPtxwnvOvT1ZClHyQDiggdNjURWpY2we6aMKCQiUVxTmVs2UYPLIrD84sS+kMdUwfBSylbJPwNnBrnHQ==}\n-    dev: true\n-\n",
            "+": ""
          },
          {
            "+": "+  /eslint-scope/4.0.3:\n+    resolution: {integrity: sha512-p7VutNr1O/QrxysMo3E45FjYDTeXBy0iTltPFNSqKAIfjDSXC+4dj+qfyuD8bfAXrW/y6lW3O76VaYNPKfpKrg==}\n+    engines: {node: '>=4.0.0'}\n+    dependencies:\n+      esrecurse: 4.3.0\n+      estraverse: 4.3.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /evp_bytestokey/1.0.3:\n+    resolution: {integrity: sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==}\n+    dependencies:\n+      md5.js: 1.3.5\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /expand-brackets/2.1.4:\n+    resolution: {integrity: sha1-t3c14xXOMPa27/D4OwQVGiJEliI=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      debug: 2.6.9\n+      define-property: 0.2.5\n+      extend-shallow: 2.0.1\n+      posix-character-classes: 0.1.1\n+      regex-not: 1.0.2\n+      snapdragon: 0.8.2\n+      to-regex: 3.0.2\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /extend-shallow/2.0.1:\n+    resolution: {integrity: sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-extendable: 0.1.1\n+    dev: true\n+\n+  /extend-shallow/3.0.2:\n+    resolution: {integrity: sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      assign-symbols: 1.0.0\n+      is-extendable: 1.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /extglob/2.0.4:\n+    resolution: {integrity: sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      array-unique: 0.3.2\n+      define-property: 1.0.0\n+      expand-brackets: 2.1.4\n+      extend-shallow: 2.0.1\n+      fragment-cache: 0.2.1\n+      regex-not: 1.0.2\n+      snapdragon: 0.8.2\n+      to-regex: 3.0.2\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /figgy-pudding/3.5.2:\n+    resolution: {integrity: sha512-0btnI/H8f2pavGMN8w40mlSKOfTK2SVJmBfBeVIj3kNw0swwgzyRq0d5TJVOwodFmtvpPeWPN/MCcfuWF0Ezbw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /file-loader/3.0.1_webpack@4.46.0:\n+    resolution: {integrity: sha512-4sNIOXgtH/9WZq4NvlfU3Opn5ynUsqBwSLyM+I7UOwdGigTBYfVVQEwe/msZNX/j4pCJTIM14Fsw66Svo1oVrw==}\n+    engines: {node: '>= 6.9.0'}\n",
            "-": "-  /file-loader/6.2.0_webpack@5.72.1:\n-    resolution: {integrity: sha512-qo3glqyTa61Ytg4u73GultjHGjdRyig3tG6lPtyX/jOEJvHif9uB0/OCI2Kif6ctF3caQTW2G5gym21oAsI4pw==}\n-    engines: {node: '>= 10.13.0'}\n"
          },
          {
            "+": "+      webpack: ^4.0.0\n+    dependencies:\n+      loader-utils: 1.4.0\n+      schema-utils: 1.0.0\n+      webpack: 4.46.0\n+    dev: true\n+\n+  /file-uri-to-path/1.0.0:\n+    resolution: {integrity: sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==}\n+    dev: true\n+    optional: true\n+\n+  /fill-range/4.0.0:\n+    resolution: {integrity: sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=}\n+    engines: {node: '>=0.10.0'}\n",
            "-": "-      webpack: ^4.0.0 || ^5.0.0\n"
          },
          {
            "+": "+      extend-shallow: 2.0.1\n+      is-number: 3.0.0\n+      repeat-string: 1.6.1\n+      to-regex-range: 2.1.1\n",
            "-": "-      loader-utils: 2.0.2\n-      schema-utils: 3.1.1\n-      webpack: 5.72.1\n"
          },
          {
            "+": "+  /find-cache-dir/2.1.0:\n+    resolution: {integrity: sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==}\n+    engines: {node: '>=6'}\n+    dependencies:\n+      commondir: 1.0.1\n+      make-dir: 2.1.0\n+      pkg-dir: 3.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /find-up/3.0.0:\n+    resolution: {integrity: sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==}\n+    engines: {node: '>=6'}\n+    dependencies:\n+      locate-path: 3.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /flush-write-stream/1.1.1:\n+    resolution: {integrity: sha512-3Z4XhFZ3992uIq0XOqb9AreonueSYphE6oYbpt5+3u06JWklbsPkNv3ZKkP9Bz/r+1MWCaMoSQ28P85+1Yc77w==}\n+    dependencies:\n+      inherits: 2.0.4\n+      readable-stream: 2.3.7\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /for-in/1.0.2:\n+    resolution: {integrity: sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /fragment-cache/0.2.1:\n+    resolution: {integrity: sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      map-cache: 0.2.2\n+    dev: true\n+\n+  /from2/2.3.0:\n+    resolution: {integrity: sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=}\n+    dependencies:\n+      inherits: 2.0.4\n+      readable-stream: 2.3.7\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /fs-write-stream-atomic/1.0.10:\n+    resolution: {integrity: sha1-tH31NJPvkR33VzHnCp3tAYnbQMk=}\n+    dependencies:\n+      graceful-fs: 4.2.10\n+      iferr: 0.1.5\n+      imurmurhash: 0.1.4\n+      readable-stream: 2.3.7\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /fsevents/1.2.13:\n+    resolution: {integrity: sha512-oWb1Z6mkHIskLzEJ/XWX0srkpkTQ7vaopMQkyaEIoq0fmtFVxOthb8cCxeT+p3ynTdkk/RZwbgG4brR5BeWECw==}\n+    engines: {node: '>= 4.0'}\n+    os: [darwin]\n+    deprecated: fsevents 1 will break on node v14+ and could be using insecure binaries. Upgrade to fsevents 2.\n+    requiresBuild: true\n+    dependencies:\n+      bindings: 1.5.0\n+      nan: 2.15.0\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /get-value/2.0.6:\n+    resolution: {integrity: sha1-3BXKHGcjh8p2vTesCjlbogQqLCg=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /glob-parent/3.1.0:\n+    resolution: {integrity: sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=}\n+    dependencies:\n+      is-glob: 3.1.0\n+      path-dirname: 1.0.2\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "-": "-  /glob-to-regexp/0.4.1:\n-    resolution: {integrity: sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==}\n-    dev: true\n-\n",
            "+": ""
          },
          {
            "+": "+  /has-value/0.3.1:\n+    resolution: {integrity: sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      get-value: 2.0.6\n+      has-values: 0.1.4\n+      isobject: 2.1.0\n+    dev: true\n+\n+  /has-value/1.0.0:\n+    resolution: {integrity: sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      get-value: 2.0.6\n+      has-values: 1.0.0\n+      isobject: 3.0.1\n+    dev: true\n+\n+  /has-values/0.1.4:\n+    resolution: {integrity: sha1-bWHeldkd/Km5oCCJrThL/49it3E=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n+  /has-values/1.0.0:\n+    resolution: {integrity: sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-number: 3.0.0\n+      kind-of: 4.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /hash-base/3.1.0:\n+    resolution: {integrity: sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==}\n+    engines: {node: '>=4'}\n+    dependencies:\n+      inherits: 2.0.4\n+      readable-stream: 3.6.0\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /hash.js/1.1.7:\n+    resolution: {integrity: sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==}\n+    dependencies:\n+      inherits: 2.0.4\n+      minimalistic-assert: 1.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /hmac-drbg/1.0.1:\n+    resolution: {integrity: sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=}\n+    dependencies:\n+      hash.js: 1.1.7\n+      minimalistic-assert: 1.0.1\n+      minimalistic-crypto-utils: 1.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /https-browserify/1.0.0:\n+    resolution: {integrity: sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ieee754/1.2.1:\n+    resolution: {integrity: sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==}\n+    dev: true\n+\n+  /iferr/0.1.5:\n+    resolution: {integrity: sha1-xg7taebY/bazEEofy8ocGS3FtQE=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /infer-owner/1.0.4:\n+    resolution: {integrity: sha512-IClj+Xz94+d7irH5qRyfJonOdfTzuDaifE6ZPWfx0N0+/ATZCbuTPq2prFl526urkQd90WyUKIh1DfBQ2hMz9A==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /inherits/2.0.1:\n+    resolution: {integrity: sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE=}\n+    dev: true\n+\n+  /inherits/2.0.3:\n+    resolution: {integrity: sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /is-accessor-descriptor/0.1.6:\n+    resolution: {integrity: sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      kind-of: 3.2.2\n+    dev: true\n+\n+  /is-accessor-descriptor/1.0.0:\n+    resolution: {integrity: sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      kind-of: 6.0.3\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /is-binary-path/1.0.1:\n+    resolution: {integrity: sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      binary-extensions: 1.13.1\n+    dev: true\n+    optional: true\n+\n+  /is-binary-path/2.1.0:\n+    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}\n+    engines: {node: '>=8'}\n+    dependencies:\n+      binary-extensions: 2.2.0\n+    dev: true\n+    optional: true\n+\n+  /is-buffer/1.1.6:\n+    resolution: {integrity: sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /is-data-descriptor/0.1.4:\n+    resolution: {integrity: sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      kind-of: 3.2.2\n+    dev: true\n+\n+  /is-data-descriptor/1.0.0:\n+    resolution: {integrity: sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      kind-of: 6.0.3\n+    dev: true\n+\n+  /is-descriptor/0.1.6:\n+    resolution: {integrity: sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-accessor-descriptor: 0.1.6\n+      is-data-descriptor: 0.1.4\n+      kind-of: 5.1.0\n+    dev: true\n+\n+  /is-descriptor/1.0.2:\n+    resolution: {integrity: sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-accessor-descriptor: 1.0.0\n+      is-data-descriptor: 1.0.0\n+      kind-of: 6.0.3\n+    dev: true\n+\n+  /is-extendable/0.1.1:\n+    resolution: {integrity: sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n+  /is-extendable/1.0.1:\n+    resolution: {integrity: sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-plain-object: 2.0.4\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /is-glob/3.1.0:\n+    resolution: {integrity: sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-extglob: 2.1.1\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /is-number/3.0.0:\n+    resolution: {integrity: sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      kind-of: 3.2.2\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /is-plain-object/2.0.4:\n+    resolution: {integrity: sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      isobject: 3.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /is-wsl/1.1.0:\n+    resolution: {integrity: sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=}\n+    engines: {node: '>=4'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /isobject/2.1.0:\n+    resolution: {integrity: sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=}\n+    engines: {node: '>=0.10.0'}\n",
            "-": "-  /jest-worker/27.5.1:\n-    resolution: {integrity: sha512-7vuh85V5cdDofPyxn58nrPjBktZo0u9x1g8WtjQol+jZDaE+fhN+cIvTj11GndBnMnyfrUOG1sZQxCdjKh+DKg==}\n-    engines: {node: '>= 10.13.0'}\n"
          },
          {
            "+": "+      isarray: 1.0.0\n+    dev: true\n+\n+  /isobject/3.0.1:\n+    resolution: {integrity: sha1-TkMekrEalzFjaqH5yNHMvP2reN8=}\n+    engines: {node: '>=0.10.0'}\n",
            "-": "-      '@types/node': 17.0.34\n-      merge-stream: 2.0.0\n-      supports-color: 8.1.1\n"
          },
          {
            "+": "+  /json5/1.0.1:\n+    resolution: {integrity: sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==}\n",
            "-": "-  /json5/2.2.1:\n-    resolution: {integrity: sha512-1hqLFMSrGHRHxav9q9gNjJ5EXznIxGVO09xQRrwplcS8qs28pZ8s8hupZAmqDwZUmVZ2Qb2jnyPOWcDH8m8dlA==}\n-    engines: {node: '>=6'}\n"
          },
          {
            "+": "+    dependencies:\n+      minimist: 1.2.6\n",
            "-": ""
          },
          {
            "+": "+  /kind-of/3.2.2:\n+    resolution: {integrity: sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-buffer: 1.1.6\n+    dev: true\n+\n+  /kind-of/4.0.0:\n+    resolution: {integrity: sha1-IIE989cSkosgc3hpGkUGb65y3Vc=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-buffer: 1.1.6\n+    dev: true\n+\n+  /kind-of/5.1.0:\n+    resolution: {integrity: sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /loader-runner/2.4.0:\n+    resolution: {integrity: sha512-Jsmr89RcXGIwivFY21FcRrisYZfvLMTWx5kOLc+JTxtpBOG6xML0vzbc6SEQG2FO9/4Fc3wW4LVcB5DmGflaRw==}\n+    engines: {node: '>=4.3.0 <5.0.0 || >=5.10'}\n",
            "-": "-  /loader-runner/4.3.0:\n-    resolution: {integrity: sha512-3R/1M+yS3j5ou80Me59j7F9IMs4PXs3VqRrm0TU3AbKPxlmpoY1TNscJV/oGJXo8qCatFGTfDbY6W6ipGOYXfg==}\n-    engines: {node: '>=6.11.5'}\n"
          },
          {
            "+": "+  /loader-utils/1.4.0:\n+    resolution: {integrity: sha512-qH0WSMBtn/oHuwjy/NucEgbx5dbxxnxup9s4PVXJUDHZBQY+s0NWA9rJf53RBnQZxfch7euUui7hpoAPvALZdA==}\n+    engines: {node: '>=4.0.0'}\n",
            "-": "-  /loader-utils/2.0.2:\n-    resolution: {integrity: sha512-TM57VeHptv569d/GKh6TAYdzKblwDNiumOdkFnejjD0XwTH87K90w3O7AiJRqdQoXygvi1VQTJTLGhJl7WqA7A==}\n-    engines: {node: '>=8.9.0'}\n"
          },
          {
            "+": "+      json5: 1.0.1\n",
            "-": "-      json5: 2.2.1\n"
          },
          {
            "+": "+  /locate-path/3.0.0:\n+    resolution: {integrity: sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==}\n+    engines: {node: '>=6'}\n+    dependencies:\n+      p-locate: 3.0.0\n+      path-exists: 3.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /lru-cache/5.1.1:\n+    resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}\n+    dependencies:\n+      yallist: 3.1.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /make-dir/2.1.0:\n+    resolution: {integrity: sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==}\n+    engines: {node: '>=6'}\n+    dependencies:\n+      pify: 4.0.1\n+      semver: 5.7.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /map-cache/0.2.2:\n+    resolution: {integrity: sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /map-visit/1.0.0:\n+    resolution: {integrity: sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      object-visit: 1.0.1\n+    dev: true\n+\n+  /md5.js/1.3.5:\n+    resolution: {integrity: sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==}\n+    dependencies:\n+      hash-base: 3.1.0\n+      inherits: 2.0.4\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n+  /memory-fs/0.4.1:\n+    resolution: {integrity: sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=}\n+    dependencies:\n+      errno: 0.1.8\n+      readable-stream: 2.3.7\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /micromatch/3.1.10:\n+    resolution: {integrity: sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      arr-diff: 4.0.0\n+      array-unique: 0.3.2\n+      braces: 2.3.2\n+      define-property: 2.0.2\n+      extend-shallow: 3.0.2\n+      extglob: 2.0.4\n+      fragment-cache: 0.2.1\n+      kind-of: 6.0.3\n+      nanomatch: 1.2.13\n+      object.pick: 1.3.0\n+      regex-not: 1.0.2\n+      snapdragon: 0.8.2\n+      to-regex: 3.0.2\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /miller-rabin/4.0.1:\n+    resolution: {integrity: sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==}\n+    hasBin: true\n+    dependencies:\n+      bn.js: 4.12.0\n+      brorand: 1.1.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /minimalistic-assert/1.0.1:\n+    resolution: {integrity: sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==}\n+    dev: true\n+\n+  /minimalistic-crypto-utils/1.0.1:\n+    resolution: {integrity: sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /mississippi/3.0.0:\n+    resolution: {integrity: sha512-x471SsVjUtBRtcvd4BzKE9kFC+/2TeWgKCgw0bZcw1b9l2X3QX5vCWgF+KaZaYm87Ss//rHnWryupDrgLvmSkA==}\n+    engines: {node: '>=4.0.0'}\n+    dependencies:\n+      concat-stream: 1.6.2\n+      duplexify: 3.7.1\n+      end-of-stream: 1.4.4\n+      flush-write-stream: 1.1.1\n+      from2: 2.3.0\n+      parallel-transform: 1.2.0\n+      pump: 3.0.0\n+      pumpify: 1.5.1\n+      stream-each: 1.2.3\n+      through2: 2.0.5\n+    dev: true\n+\n+  /mixin-deep/1.3.2:\n+    resolution: {integrity: sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      for-in: 1.0.2\n+      is-extendable: 1.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /move-concurrently/1.0.1:\n+    resolution: {integrity: sha1-viwAX9oy4LKa8fBdfEszIUxwH5I=}\n+    dependencies:\n+      aproba: 1.2.0\n+      copy-concurrently: 1.0.5\n+      fs-write-stream-atomic: 1.0.10\n+      mkdirp: 0.5.6\n+      rimraf: 2.7.1\n+      run-queue: 1.0.3\n+    dev: true\n+\n+  /ms/2.0.0:\n+    resolution: {integrity: sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /nan/2.15.0:\n+    resolution: {integrity: sha512-8ZtvEnA2c5aYCZYd1cvgdnU6cqwixRoYg70xPLWUws5ORTa/lnw+u4amixRS/Ac5U5mQVgp9pnlSUnbNWFaWZQ==}\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /nanomatch/1.2.13:\n+    resolution: {integrity: sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      arr-diff: 4.0.0\n+      array-unique: 0.3.2\n+      define-property: 2.0.2\n+      extend-shallow: 3.0.2\n+      fragment-cache: 0.2.1\n+      is-windows: 1.0.2\n+      kind-of: 6.0.3\n+      object.pick: 1.3.0\n+      regex-not: 1.0.2\n+      snapdragon: 0.8.2\n+      to-regex: 3.0.2\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /node-libs-browser/2.2.1:\n+    resolution: {integrity: sha512-h/zcD8H9kaDZ9ALUWwlBUDo6TKF8a7qBSCSEGfjTVIYeqsioSKaAX+BN7NgiMGp6iSIXZ3PxgCu8KS3b71YK5Q==}\n+    dependencies:\n+      assert: 1.5.0\n+      browserify-zlib: 0.2.0\n+      buffer: 4.9.2\n+      console-browserify: 1.2.0\n+      constants-browserify: 1.0.0\n+      crypto-browserify: 3.12.0\n+      domain-browser: 1.2.0\n+      events: 3.3.0\n+      https-browserify: 1.0.0\n+      os-browserify: 0.3.0\n+      path-browserify: 0.0.1\n+      process: 0.11.10\n+      punycode: 1.4.1\n+      querystring-es3: 0.2.1\n+      readable-stream: 2.3.7\n+      stream-browserify: 2.0.2\n+      stream-http: 2.8.3\n+      string_decoder: 1.3.0\n+      timers-browserify: 2.0.12\n+      tty-browserify: 0.0.0\n+      url: 0.11.0\n+      util: 0.11.1\n+      vm-browserify: 1.1.2\n",
            "-": "-  /node-releases/2.0.4:\n-    resolution: {integrity: sha512-gbMzqQtTtDz/00jQzZ21PQzdI9PyLYqUSvD0p3naOhX4odFji0ZxYdnVwPTxmSwkmxhcFImpozceidSG+AgoPQ==}\n"
          },
          {
            "+": "+  /normalize-path/2.1.1:\n+    resolution: {integrity: sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      remove-trailing-separator: 1.1.0\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /object-assign/4.1.1:\n+    resolution: {integrity: sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n+  /object-copy/0.1.0:\n+    resolution: {integrity: sha1-fn2Fi3gb18mRpBupde04EnVOmYw=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      copy-descriptor: 0.1.1\n+      define-property: 0.2.5\n+      kind-of: 3.2.2\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /object-visit/1.0.1:\n+    resolution: {integrity: sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      isobject: 3.0.1\n+    dev: true\n+\n+  /object.pick/1.3.0:\n+    resolution: {integrity: sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      isobject: 3.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /os-browserify/0.3.0:\n+    resolution: {integrity: sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /p-locate/3.0.0:\n+    resolution: {integrity: sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==}\n+    engines: {node: '>=6'}\n+    dependencies:\n+      p-limit: 2.3.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /pako/1.0.11:\n+    resolution: {integrity: sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==}\n+    dev: true\n+\n+  /parallel-transform/1.2.0:\n+    resolution: {integrity: sha512-P2vSmIu38uIlvdcU7fDkyrxj33gTUy/ABO5ZUbGowxNCopBq/OoD42bP4UmMrJoPyk4Uqf0mu3mtWBhHCZD8yg==}\n+    dependencies:\n+      cyclist: 1.0.1\n+      inherits: 2.0.4\n+      readable-stream: 2.3.7\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /parse-asn1/5.1.6:\n+    resolution: {integrity: sha512-RnZRo1EPU6JBnra2vGHj0yhp6ebyjBZpmUCLHWiFhxlzvBCCpAuZ7elsBp1PVAbQN0/04VD/19rfzlBSwLstMw==}\n+    dependencies:\n+      asn1.js: 5.4.1\n+      browserify-aes: 1.2.0\n+      evp_bytestokey: 1.0.3\n+      pbkdf2: 3.1.2\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /pascalcase/0.1.1:\n+    resolution: {integrity: sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n+  /path-browserify/0.0.1:\n+    resolution: {integrity: sha512-BapA40NHICOS+USX9SN4tyhq+A2RrN/Ws5F0Z5aMHDp98Fl86lX8Oti8B7uN93L4Ifv4fHOEA+pQw87gmMO/lQ==}\n+    dev: true\n+\n+  /path-dirname/1.0.2:\n+    resolution: {integrity: sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA=}\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /pbkdf2/3.1.2:\n+    resolution: {integrity: sha512-iuh7L6jA7JEGu2WxDwtQP1ddOpaJNC4KlDEFfdQajSGgGPNi4OyDc2R7QnbY2bR9QjBVGwgvTdNJZoE7RaxUMA==}\n+    engines: {node: '>=0.12'}\n+    dependencies:\n+      create-hash: 1.2.0\n+      create-hmac: 1.1.7\n+      ripemd160: 2.0.2\n+      safe-buffer: 5.2.1\n+      sha.js: 2.4.11\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /pify/4.0.1:\n+    resolution: {integrity: sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==}\n+    engines: {node: '>=6'}\n+    dev: true\n+\n+  /pkg-dir/3.0.0:\n+    resolution: {integrity: sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==}\n+    engines: {node: '>=6'}\n+    dependencies:\n+      find-up: 3.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /posix-character-classes/0.1.1:\n+    resolution: {integrity: sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /prelude-ls/1.2.1:\n+    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n+    engines: {node: '>= 0.8.0'}\n+    dev: true\n+\n+  /process-nextick-args/2.0.1:\n+    resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}\n+    dev: true\n+\n+  /process/0.11.10:\n+    resolution: {integrity: sha1-czIwDoQBYb2j5podHZGn1LwW8YI=}\n+    engines: {node: '>= 0.6.0'}\n+    dev: true\n+\n+  /promise-inflight/1.0.1_bluebird@3.7.2:\n+    resolution: {integrity: sha1-mEcocL8igTL8vdhoEputEsPAKeM=}\n+    peerDependencies:\n+      bluebird: '*'\n+    peerDependenciesMeta:\n+      bluebird:\n+        optional: true\n+    dependencies:\n+      bluebird: 3.7.2\n+    dev: true\n+\n+  /prr/1.0.1:\n+    resolution: {integrity: sha1-0/wRS6BplaRexok/SEzrHXj19HY=}\n+    dev: true\n+\n+  /pseudomap/1.0.2:\n+    resolution: {integrity: sha1-8FKijacOYYkX7wqKw0wa5aaChrM=}\n+    dev: true\n+\n+  /psl/1.8.0:\n+    resolution: {integrity: sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ==}\n+    dev: true\n+\n+  /public-encrypt/4.0.3:\n+    resolution: {integrity: sha512-zVpa8oKZSz5bTMTFClc1fQOnyyEzpl5ozpi1B5YcvBrdohMjH2rfsBtyXcuNuwjsDIXmBYlF2N5FlJYhR29t8Q==}\n+    dependencies:\n+      bn.js: 4.12.0\n+      browserify-rsa: 4.1.0\n+      create-hash: 1.2.0\n+      parse-asn1: 5.1.6\n+      randombytes: 2.1.0\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n+  /pump/2.0.1:\n+    resolution: {integrity: sha512-ruPMNRkN3MHP1cWJc9OWr+T/xDP0jhXYCLfJcBuX54hhfIBnaQmAUMfDcG4DM5UMWByBbJY69QSphm3jtDKIkA==}\n+    dependencies:\n+      end-of-stream: 1.4.4\n+      once: 1.4.0\n",
            "-": "-  /prelude-ls/1.2.1:\n-    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n-    engines: {node: '>= 0.8.0'}\n"
          },
          {
            "+": "+  /pump/3.0.0:\n+    resolution: {integrity: sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==}\n+    dependencies:\n+      end-of-stream: 1.4.4\n+      once: 1.4.0\n",
            "-": "-  /process-nextick-args/2.0.1:\n-    resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}\n"
          },
          {
            "+": "+  /pumpify/1.5.1:\n+    resolution: {integrity: sha512-oClZI37HvuUJJxSKKrC17bZ9Cu0ZYhEAGPsPUy9KlMUmv9dKX2o77RUmq7f3XjIxbwyGwYzbzQ1L2Ks8sIradQ==}\n+    dependencies:\n+      duplexify: 3.7.1\n+      inherits: 2.0.4\n+      pump: 2.0.1\n",
            "-": "-  /prr/1.0.1:\n-    resolution: {integrity: sha1-0/wRS6BplaRexok/SEzrHXj19HY=}\n"
          },
          {
            "+": "+  /punycode/1.3.2:\n+    resolution: {integrity: sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0=}\n",
            "-": "-  /pseudomap/1.0.2:\n-    resolution: {integrity: sha1-8FKijacOYYkX7wqKw0wa5aaChrM=}\n"
          },
          {
            "+": "+  /punycode/1.4.1:\n+    resolution: {integrity: sha1-wNWmOycYgArY4esPpSachN1BhF4=}\n",
            "-": "-  /psl/1.8.0:\n-    resolution: {integrity: sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ==}\n"
          },
          {
            "+": "+  /querystring-es3/0.2.1:\n+    resolution: {integrity: sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM=}\n+    engines: {node: '>=0.4.x'}\n+    dev: true\n+\n+  /querystring/0.2.0:\n+    resolution: {integrity: sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=}\n+    engines: {node: '>=0.4.x'}\n+    deprecated: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /randomfill/1.0.4:\n+    resolution: {integrity: sha512-87lcbR8+MhcWcUiQ+9e+Rwx8MyR2P7qnt15ynUlbm3TU/fjbgz4GsvfSUDTemtCCtVCqb4ZcEFlyPNTh9bBTLw==}\n+    dependencies:\n+      randombytes: 2.1.0\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /readdirp/2.2.1:\n+    resolution: {integrity: sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==}\n+    engines: {node: '>=0.10'}\n+    dependencies:\n+      graceful-fs: 4.2.10\n+      micromatch: 3.1.10\n+      readable-stream: 2.3.7\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+    optional: true\n+\n+  /readdirp/3.6.0:\n+    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}\n+    engines: {node: '>=8.10.0'}\n+    dependencies:\n+      picomatch: 2.3.1\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /regex-not/1.0.2:\n+    resolution: {integrity: sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      extend-shallow: 3.0.2\n+      safe-regex: 1.1.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /remove-trailing-separator/1.1.0:\n+    resolution: {integrity: sha1-wkvOKig62tW8P1jg1IJJuSN52O8=}\n+    dev: true\n+    optional: true\n+\n+  /repeat-element/1.1.4:\n+    resolution: {integrity: sha512-LFiNfRcSu7KK3evMyYOuCzv3L10TW7yC1G2/+StMjK8Y6Vqd2MG7r/Qjw4ghtuCOjFvlnms/iMmLqpvW/ES/WQ==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n+  /repeat-string/1.6.1:\n+    resolution: {integrity: sha1-jcrkcOHIirwtYA//Sndihtp15jc=}\n+    engines: {node: '>=0.10'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /resolve-url/0.2.1:\n+    resolution: {integrity: sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=}\n+    deprecated: https://github.com/lydell/resolve-url#deprecated\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ret/0.1.15:\n+    resolution: {integrity: sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==}\n+    engines: {node: '>=0.12'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /rimraf/2.7.1:\n+    resolution: {integrity: sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==}\n+    hasBin: true\n+    dependencies:\n+      glob: 7.2.3\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ripemd160/2.0.2:\n+    resolution: {integrity: sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==}\n+    dependencies:\n+      hash-base: 3.1.0\n+      inherits: 2.0.4\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /run-queue/1.0.3:\n+    resolution: {integrity: sha1-6Eg5bwV9Ij8kOGkkYY4laUFh7Ec=}\n+    dependencies:\n+      aproba: 1.2.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /safe-regex/1.1.0:\n+    resolution: {integrity: sha1-QKNmnzsHfR6UPURinhV91IAjvy4=}\n+    dependencies:\n+      ret: 0.1.15\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /schema-utils/1.0.0:\n+    resolution: {integrity: sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==}\n+    engines: {node: '>= 4'}\n",
            "-": "-  /schema-utils/3.1.1:\n-    resolution: {integrity: sha512-Y5PQxS4ITlC+EahLuXaY86TXfR7Dc5lw294alXOq86JAHCihAIZfqv8nNCWvaEJvaC51uN9hbLGeV0cFBdH+Fw==}\n-    engines: {node: '>= 10.13.0'}\n"
          },
          {
            "-": "-      '@types/json-schema': 7.0.11\n",
            "+": ""
          },
          {
            "+": "+      ajv-errors: 1.0.1_ajv@6.12.6\n",
            "-": ""
          },
          {
            "+": "+  /serialize-javascript/4.0.0:\n+    resolution: {integrity: sha512-GaNA54380uFefWghODBWEGisLZFj00nS5ACs6yHa9nLqlLpVLO8ChDGeKRjZnV4Nh4n0Qi7nhYZD/9fCPzEqkw==}\n+    dependencies:\n+      randombytes: 2.1.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /set-value/2.0.1:\n+    resolution: {integrity: sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      extend-shallow: 2.0.1\n+      is-extendable: 0.1.1\n+      is-plain-object: 2.0.4\n+      split-string: 3.1.0\n+    dev: true\n+\n+  /setimmediate/1.0.5:\n+    resolution: {integrity: sha1-KQy7Iy4waULX1+qbg3Mqt4VvgoU=}\n+    dev: true\n+\n+  /sha.js/2.4.11:\n+    resolution: {integrity: sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==}\n+    hasBin: true\n+    dependencies:\n+      inherits: 2.0.4\n+      safe-buffer: 5.2.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /snapdragon-node/2.1.1:\n+    resolution: {integrity: sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      define-property: 1.0.0\n+      isobject: 3.0.1\n+      snapdragon-util: 3.0.1\n+    dev: true\n+\n+  /snapdragon-util/3.0.1:\n+    resolution: {integrity: sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      kind-of: 3.2.2\n+    dev: true\n+\n+  /snapdragon/0.8.2:\n+    resolution: {integrity: sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      base: 0.11.2\n+      debug: 2.6.9\n+      define-property: 0.2.5\n+      extend-shallow: 2.0.1\n+      map-cache: 0.2.2\n+      source-map: 0.5.6\n+      source-map-resolve: 0.5.3\n+      use: 3.1.1\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n+  /source-list-map/2.0.1:\n+    resolution: {integrity: sha512-qnQ7gVMxGNxsiL4lEuJwe/To8UnK7fAnmbGEEH8RpLouuKbeEm0lhbQVFIrNSuB+G7tVrAlVsZgETT5nljf+Iw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /source-map-resolve/0.5.3:\n+    resolution: {integrity: sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==}\n+    deprecated: See https://github.com/lydell/source-map-resolve#deprecated\n+    dependencies:\n+      atob: 2.1.2\n+      decode-uri-component: 0.2.0\n+      resolve-url: 0.2.1\n+      source-map-url: 0.4.1\n+      urix: 0.1.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /source-map-url/0.4.1:\n+    resolution: {integrity: sha512-cPiFOTLUKvJFIg4SKVScy4ilPPW6rFgMgfuZJPNoDuMs3nC1HbMUycBoJw77xFIp6z1UJQJOfx6C9GMH80DiTw==}\n+    deprecated: See https://github.com/lydell/source-map-url#deprecated\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /split-string/3.1.0:\n+    resolution: {integrity: sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      extend-shallow: 3.0.2\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ssri/6.0.2:\n+    resolution: {integrity: sha512-cepbSq/neFK7xB6A50KHN0xHDotYzq58wWCa5LeWqnPrHG8GzfEjO/4O8kpmcGW+oaxkvhEJCWgbgNk4/ZV93Q==}\n+    dependencies:\n+      figgy-pudding: 3.5.2\n+    dev: true\n+\n+  /static-extend/0.1.2:\n+    resolution: {integrity: sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      define-property: 0.2.5\n+      object-copy: 0.1.0\n+    dev: true\n+\n+  /stream-browserify/2.0.2:\n+    resolution: {integrity: sha512-nX6hmklHs/gr2FuxYDltq8fJA1GDlxKQCz8O/IM4atRqBH8OORmBNgfvW5gG10GT/qQ9u0CzIvr2X5Pkt6ntqg==}\n+    dependencies:\n+      inherits: 2.0.4\n+      readable-stream: 2.3.7\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /stream-each/1.2.3:\n+    resolution: {integrity: sha512-vlMC2f8I2u/bZGqkdfLQW/13Zihpej/7PmSiMQsbYddxuTsJp8vRe2x2FvVExZg7FaOds43ROAuFJwPR4MTZLw==}\n+    dependencies:\n+      end-of-stream: 1.4.4\n+      stream-shift: 1.0.1\n+    dev: true\n+\n+  /stream-http/2.8.3:\n+    resolution: {integrity: sha512-+TSkfINHDo4J+ZobQLWiMouQYB+UVYFttRA94FpEzzJ7ZdqcL4uUUQ7WkdkI4DSozGmgBUE/a47L+38PenXhUw==}\n+    dependencies:\n+      builtin-status-codes: 3.0.0\n+      inherits: 2.0.4\n+      readable-stream: 2.3.7\n+      to-arraybuffer: 1.0.1\n+      xtend: 4.0.2\n+    dev: true\n+\n+  /stream-shift/1.0.1:\n+    resolution: {integrity: sha512-AiisoFqQ0vbGcZgQPY1cdP2I76glaVA/RauYR4G4thNFgkTqr90yXTo4LYX60Jl+sIlPNHHdGSwo01AvbKUSVQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "-": "-  /supports-color/8.1.1:\n-    resolution: {integrity: sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==}\n-    engines: {node: '>=10'}\n-    dependencies:\n-      has-flag: 4.0.0\n-    dev: true\n-\n",
            "+": ""
          },
          {
            "+": "+  /tapable/1.1.3:\n+    resolution: {integrity: sha512-4WK/bYZmj8xLr+HUCODHGF1ZFzsYffasLUgEiMBY4fgtltdO6B4WJtlSbPaDTLpYTcGVwM2qLnFTICEcNxs3kA==}\n",
            "-": "-  /tapable/2.2.1:\n-    resolution: {integrity: sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==}\n"
          },
          {
            "+": "+  /terser-webpack-plugin/1.4.5_webpack@4.46.0:\n+    resolution: {integrity: sha512-04Rfe496lN8EYruwi6oPQkG0vo8C+HT49X687FZnpPF0qMAIHONI6HEXYPKDOE8e5HjXTyKfqRd/agHtH0kOtw==}\n+    engines: {node: '>= 6.9.0'}\n",
            "-": "-  /terser-webpack-plugin/5.3.1_webpack@5.72.1:\n-    resolution: {integrity: sha512-GvlZdT6wPQKbDNW/GDQzZFg/j4vKU96yl2q6mcUkzKOgW4gwf1Z8cZToUCrz31XHlPWH8MVb1r2tFtdDtTGJ7g==}\n-    engines: {node: '>= 10.13.0'}\n"
          },
          {
            "+": "+      webpack: ^4.0.0\n+    dependencies:\n+      cacache: 12.0.4\n+      find-cache-dir: 2.1.0\n+      is-wsl: 1.1.0\n+      schema-utils: 1.0.0\n+      serialize-javascript: 4.0.0\n+      source-map: 0.6.1\n+      terser: 4.8.0\n+      webpack: 4.46.0\n+      webpack-sources: 1.4.3\n+      worker-farm: 1.7.0\n+    dev: true\n+\n+  /terser/4.8.0:\n+    resolution: {integrity: sha512-EAPipTNeWsb/3wLPeup1tVPaXfIaU68xMnVdPafIL1TV05OhASArYyIfFvnvJCNrR2NIOvDVNNTFRa+Re2MWyw==}\n+    engines: {node: '>=6.0.0'}\n+    hasBin: true\n",
            "-": "-      '@swc/core': '*'\n-      esbuild: '*'\n-      uglify-js: '*'\n-      webpack: ^5.1.0\n-    peerDependenciesMeta:\n-      '@swc/core':\n-        optional: true\n-      esbuild:\n-        optional: true\n-      uglify-js:\n-        optional: true\n"
          },
          {
            "+": "+      acorn: 8.7.1\n+      commander: 2.20.3\n",
            "-": "-      jest-worker: 27.5.1\n-      schema-utils: 3.1.1\n-      serialize-javascript: 6.0.0\n"
          },
          {
            "+": "+      source-map-support: 0.5.21\n",
            "-": "-      terser: 5.13.1\n-      webpack: 5.72.1\n"
          },
          {
            "+": "+  /timers-browserify/2.0.12:\n+    resolution: {integrity: sha512-9phl76Cqm6FhSX9Xe1ZUAMLtm1BLkKj2Qd5ApyWkXzsMRaA7dgr81kf4wJmQf/hAvg8EEyJxDo3du/0KlhPiKQ==}\n+    engines: {node: '>=0.6.0'}\n+    dependencies:\n+      setimmediate: 1.0.5\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /to-arraybuffer/1.0.1:\n+    resolution: {integrity: sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=}\n+    dev: true\n+\n+  /to-object-path/0.3.0:\n+    resolution: {integrity: sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      kind-of: 3.2.2\n+    dev: true\n+\n+  /to-regex-range/2.1.1:\n+    resolution: {integrity: sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      is-number: 3.0.0\n+      repeat-string: 1.6.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /to-regex/3.0.2:\n+    resolution: {integrity: sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      define-property: 2.0.2\n+      extend-shallow: 3.0.2\n+      regex-not: 1.0.2\n+      safe-regex: 1.1.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /tty-browserify/0.0.0:\n+    resolution: {integrity: sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /typedarray/0.0.6:\n+    resolution: {integrity: sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /union-value/1.0.1:\n+    resolution: {integrity: sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      arr-union: 3.1.0\n+      get-value: 2.0.6\n+      is-extendable: 0.1.1\n+      set-value: 2.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /unique-filename/1.1.1:\n+    resolution: {integrity: sha512-Vmp0jIp2ln35UTXuryvjzkjGdRyf9b2lTXuSYUiPmzRcl3FDtYqAwOnTJkAngD9SWhnoJzDbTKwaOrZ+STtxNQ==}\n+    dependencies:\n+      unique-slug: 2.0.2\n+    dev: true\n+\n+  /unique-slug/2.0.2:\n+    resolution: {integrity: sha512-zoWr9ObaxALD3DOPfjPSqxt4fnZiWblxHIgeWqW8x7UqDzEtHEQLzji2cuJYQFCU6KmoJikOYAZlrTHHebjx2w==}\n+    dependencies:\n+      imurmurhash: 0.1.4\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /unset-value/1.0.0:\n+    resolution: {integrity: sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=}\n+    engines: {node: '>=0.10.0'}\n+    dependencies:\n+      has-value: 0.3.1\n+      isobject: 3.0.1\n+    dev: true\n+\n+  /upath/1.2.0:\n+    resolution: {integrity: sha512-aZwGpamFO61g3OlfT7OQCHqhGnW43ieH9WZeP7QxN/G/jS4jfqUkZxoryvJgVPEcrl5NL/ggHsSmLMHuH64Lhg==}\n+    engines: {node: '>=4'}\n+    dev: true\n+    optional: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /urix/0.1.0:\n+    resolution: {integrity: sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=}\n+    deprecated: Please see https://github.com/lydell/urix#deprecated\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /url/0.11.0:\n+    resolution: {integrity: sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=}\n+    dependencies:\n+      punycode: 1.3.2\n+      querystring: 0.2.0\n+    dev: true\n+\n+  /use/3.1.1:\n+    resolution: {integrity: sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /util/0.10.3:\n+    resolution: {integrity: sha1-evsa/lCAUkZInj23/g7TeTNqwPk=}\n+    dependencies:\n+      inherits: 2.0.1\n+    dev: true\n+\n+  /util/0.11.1:\n+    resolution: {integrity: sha512-HShAsny+zS2TZfaXxD9tYj4HQGlBezXZMZuM/S5PKLLoZkShZiGk9o5CzukI1LVHZvjdvZ2Sj1aW/Ndn2NB/HQ==}\n+    dependencies:\n+      inherits: 2.0.3\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /vm-browserify/1.1.2:\n+    resolution: {integrity: sha512-2ham8XPWTONajOR0ohOKOHXkm3+gaBmGut3SRuu75xLd/RRaY6vqgh8NBYYk7+RW3u5AtzPQZG8F10LHkl0lAQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /watchpack-chokidar2/2.0.1:\n+    resolution: {integrity: sha512-nCFfBIPKr5Sh61s4LPpy1Wtfi0HE8isJ3d2Yb5/Ppw2P2B/3eVSEBjKfN0fmHJSK14+31KwMKmcrzs2GM4P0Ww==}\n+    requiresBuild: true\n+    dependencies:\n+      chokidar: 2.1.8\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+    optional: true\n+\n+  /watchpack/1.7.5:\n+    resolution: {integrity: sha512-9P3MWk6SrKjHsGkLT2KHXdQ/9SNkyoJbabxnKOoJepsvJjJG8uYTR3yTPxPQvNDI3w4Nz1xnE0TLHK4RIVe/MQ==}\n",
            "-": "-  /watchpack/2.3.1:\n-    resolution: {integrity: sha512-x0t0JuydIo8qCNctdDrn1OzH/qDzk2+rdCOC3YzumZ42fiMqmQ7T3xQurykYMhYfHaPHTp4ZxAx2NfUo1K6QaA==}\n-    engines: {node: '>=10.13.0'}\n"
          },
          {
            "-": "-      glob-to-regexp: 0.4.1\n",
            "+": ""
          },
          {
            "+": "+      neo-async: 2.6.2\n+    optionalDependencies:\n+      chokidar: 3.5.3\n+      watchpack-chokidar2: 2.0.1\n+    transitivePeerDependencies:\n+      - supports-color\n",
            "-": ""
          },
          {
            "+": "+  /webpack-sources/1.4.3:\n+    resolution: {integrity: sha512-lgTS3Xhv1lCOKo7SA5TjKXMjpSM4sBjNV5+q2bqesbSPs5FjGmU6jjtBSkX9b4qW87vDIsCIlUPOEhbZrMdjeQ==}\n+    dependencies:\n+      source-list-map: 2.0.1\n+      source-map: 0.6.1\n",
            "-": "-  /webpack-sources/3.2.3:\n-    resolution: {integrity: sha512-/DyMEOrDgLKKIG0fmvtz+4dUX/3Ghozwgm6iPp8KRhvn+eQf9+Q7GWxVNMk3+uCPWfdXYC4ExGBckIXdFEfH1w==}\n-    engines: {node: '>=10.13.0'}\n"
          },
          {
            "+": "+  /webpack/4.46.0:\n+    resolution: {integrity: sha512-6jJuJjg8znb/xRItk7bkT0+Q7AHCYjjFnvKIWQPkNIOyRqoCGvkOs0ipeQzrqz4l5FtN5ZI/ukEHroeX/o1/5Q==}\n+    engines: {node: '>=6.11.5'}\n",
            "-": "-  /webpack/5.72.1:\n-    resolution: {integrity: sha512-dXG5zXCLspQR4krZVR6QgajnZOjW2K/djHvdcRaDQvsjV9z9vaW6+ja5dZOYbqBBjF6kGXka/2ZyxNdc+8Jung==}\n-    engines: {node: '>=10.13.0'}\n"
          },
          {
            "+": "+      webpack-command: '*'\n",
            "-": ""
          },
          {
            "+": "+      webpack-command:\n+        optional: true\n",
            "-": ""
          },
          {
            "+": "+      '@webassemblyjs/ast': 1.9.0\n+      '@webassemblyjs/helper-module-context': 1.9.0\n+      '@webassemblyjs/wasm-edit': 1.9.0\n+      '@webassemblyjs/wasm-parser': 1.9.0\n+      acorn: 6.4.2\n+      ajv: 6.12.6\n+      ajv-keywords: 3.5.2_ajv@6.12.6\n",
            "-": "-      '@types/eslint-scope': 3.7.3\n-      '@types/estree': 0.0.51\n-      '@webassemblyjs/ast': 1.11.1\n-      '@webassemblyjs/wasm-edit': 1.11.1\n-      '@webassemblyjs/wasm-parser': 1.11.1\n-      acorn: 8.7.1\n-      acorn-import-assertions: 1.8.0_acorn@8.7.1\n-      browserslist: 4.20.3\n"
          },
          {
            "+": "+      enhanced-resolve: 4.5.0\n+      eslint-scope: 4.0.3\n+      json-parse-better-errors: 1.0.2\n+      loader-runner: 2.4.0\n+      loader-utils: 1.4.0\n+      memory-fs: 0.4.1\n+      micromatch: 3.1.10\n+      mkdirp: 0.5.6\n",
            "-": "-      enhanced-resolve: 5.9.3\n-      es-module-lexer: 0.9.3\n-      eslint-scope: 5.1.1\n-      events: 3.3.0\n-      glob-to-regexp: 0.4.1\n-      graceful-fs: 4.2.10\n-      json-parse-even-better-errors: 2.3.1\n-      loader-runner: 4.3.0\n-      mime-types: 2.1.35\n"
          },
          {
            "+": "+      node-libs-browser: 2.2.1\n+      schema-utils: 1.0.0\n+      tapable: 1.1.3\n+      terser-webpack-plugin: 1.4.5_webpack@4.46.0\n+      watchpack: 1.7.5\n+      webpack-sources: 1.4.3\n",
            "-": "-      schema-utils: 3.1.1\n-      tapable: 2.2.1\n-      terser-webpack-plugin: 5.3.1_webpack@5.72.1\n-      watchpack: 2.3.1\n-      webpack-sources: 3.2.3\n"
          },
          {
            "+": "+      - supports-color\n",
            "-": "-      - '@swc/core'\n-      - esbuild\n-      - uglify-js\n"
          },
          {
            "+": "+  /worker-farm/1.7.0:\n+    resolution: {integrity: sha512-rvw3QTZc8lAxyVrqcSGVm5yP/IJ2UcB3U0graE3LCFoZ0Yn2x4EoVSqJKdB/T5M+FLcRPjz4TDacRf3OCfNUzw==}\n+    dependencies:\n+      errno: 0.1.8\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /y18n/4.0.3:\n+    resolution: {integrity: sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /yallist/3.1.1:\n+    resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}\n+    dev: true\n+\n",
            "-": ""
          }
        ],
        "a/scripts/config.js": [
          {
            "+": "+    __VERSION__: version\n",
            "-": "-    __VERSION__: version,\n-    __SSR_TEST__: false\n"
          }
        ],
        "a/src/core/util/error.ts": [
          {
            "+": "+  if (inBrowser && typeof console !== 'undefined') {\n",
            "-": "-  if (inBrowser && typeof console !== 'undefined' && !__SSR_TEST__) {\n"
          }
        ],
        "a/src/global.d.ts": [
          {
            "-": "-declare const __SSR_TEST__: boolean;\n-\n",
            "+": ""
          }
        ],
        "a/src/server/bundle-renderer/create-bundle-renderer.ts": [
          {
            "-": "-\n",
            "+": ""
          },
          {
            "+": "+  rewriteErrorTrace\n",
            "-": "-  rewriteErrorTrace,\n"
          },
          {
            "+": "+      renderToString: (context?: Object | undefined, cb?: any) => {\n",
            "-": "-      renderToString: (context: Object | undefined, cb: any) => {\n"
          },
          {
            "+": "+          ;({ promise, cb } = createPromiseCallback())\n",
            "-": "-          ({ promise, cb } = createPromiseCallback())\n"
          },
          {
            "+": "+      }\n",
            "-": "-      },\n"
          }
        ],
        "a/src/server/create-renderer.ts": [
          {
            "-": "-\n",
            "+": ""
          },
          {
            "+": "+  template?:\n+    | string\n+    | ((content: string, context: any) => string | Promise<string>)\n",
            "-": "-  template?: string | ((content: string, context: any) => string)\n"
          },
          {
            "+": "+  serializer\n",
            "-": "-  serializer,\n"
          },
          {
            "+": "+    serializer\n",
            "-": "-    serializer,\n"
          },
          {
            "+": "+        ;({ promise, cb } = createPromiseCallback())\n",
            "-": "-        ({ promise, cb } = createPromiseCallback())\n"
          },
          {
            "+": "+    }\n",
            "-": "-    },\n"
          }
        ],
        "a/src/server/template-renderer/index.ts": [
          {
            "-": "-\n",
            "+": ""
          },
          {
            "+": "+  template?:\n+    | string\n+    | ((content: string, context: any) => string | Promise<string>)\n",
            "-": "-  template?: string | ((content: string, context: any) => string)\n"
          },
          {
            "+": "+    asType: getPreloadType(extension)\n",
            "-": "-    asType: getPreloadType(extension),\n"
          }
        ],
        "a/test/ssr/compile-with-webpack.ts": [
          {
            "+": "+import { RenderOptions } from '../../src/server/create-renderer'\n+import { createBundleRenderer } from 'web/entry-server-renderer'\n+import VueSSRServerPlugin from 'server/webpack-plugin/server'\n",
            "-": ""
          },
          {
            "+": "+export function compileWithWebpack(\n+  file: string,\n+  extraConfig?: webpack.Configuration\n+) {\n+  const config: webpack.Configuration = {\n",
            "-": "-export function compileWithWebpack (file, extraConfig, cb) {\n-  const config = Object.assign({\n"
          },
          {
            "+": "+  }\n+  if (extraConfig) {\n+    Object.assign(config, extraConfig)\n+  }\n",
            "-": "-  }, extraConfig)\n"
          },
          {
            "+": "+  return new Promise<MemoryFS>((resolve, reject) => {\n+    compiler.run((err) => {\n+      if (err) {\n+        reject(err)\n+      } else {\n+        resolve(fs)\n+      }\n+    })\n",
            "-": "-  compiler.run((err, stats) => {\n-    expect(err).toBeFalsy()\n-    expect(stats.errors).toBeFalsy()\n-    cb(fs)\n"
          },
          {
            "+": "+\n+export async function createWebpackBundleRenderer(\n+  file: string,\n+  options?: RenderOptions & { asBundle?: boolean }\n+) {\n+  const asBundle = !!(options && options.asBundle)\n+  if (options) delete options.asBundle\n+\n+  const fs = await compileWithWebpack(file, {\n+    target: 'node',\n+    devtool: asBundle ? 'source-map' : false,\n+    output: {\n+      path: '/',\n+      filename: 'bundle.js',\n+      libraryTarget: 'commonjs2'\n+    },\n+    externals: [require.resolve('../../dist/vue.runtime.common.js')],\n+    plugins: asBundle ? [new VueSSRServerPlugin()] : []\n+  })\n+\n+  const bundle = asBundle\n+    ? JSON.parse(fs.readFileSync('/vue-ssr-server-bundle.json', 'utf-8'))\n+    : fs.readFileSync('/bundle.js', 'utf-8')\n+  return createBundleRenderer(bundle, options)\n+}\n",
            "-": ""
          }
        ],
        "a/test/ssr/fixtures/app.ts": [],
        "a/test/ssr/fixtures/async-bar.ts": [],
        "a/test/ssr/fixtures/async-foo.ts": [],
        "a/test/ssr/fixtures/cache-opt-out.ts": [],
        "a/test/ssr/fixtures/cache.ts": [],
        "a/test/ssr/fixtures/error.ts": [],
        "a/test/ssr/fixtures/nested-cache.ts": [],
        "a/test/ssr/fixtures/promise-rejection.ts": [],
        "a/test/ssr/fixtures/split.ts": [],
        "a/test/ssr/ssr-basic-renderer.spec.ts": [
          {
            "+": "+// @vitest-environment node\n+\n",
            "-": ""
          },
          {
            "-": "-;(global as any).__SSR_TEST__ = true\n-\n",
            "+": ""
          }
        ],
        "a/test/ssr/ssr-bundle-render.spec.ts": [
          {
            "+": "+// @vitest-environment node\n+\n",
            "-": ""
          },
          {
            "+": "+import { createWebpackBundleRenderer } from './compile-with-webpack'\n",
            "-": "-import { compileWithWebpack } from './compile-with-webpack'\n-import { createBundleRenderer } from 'web/entry-server-renderer'\n-import VueSSRServerPlugin from 'server/webpack-plugin/server'\n-\n-;(global as any).__SSR_TEST__ = true\n-\n-export function createRenderer (file, options, cb) {\n-  if (typeof options === 'function') {\n-    cb = options\n-    options = undefined\n-  }\n-  const asBundle = !!(options && options.asBundle)\n-  if (options) delete options.asBundle\n-\n-  compileWithWebpack(file, {\n-    target: 'node',\n-    devtool: asBundle ? 'source-map' : false,\n-    output: {\n-      path: '/',\n-      filename: 'bundle.js',\n-      libraryTarget: 'commonjs2'\n-    },\n-    externals: [require.resolve('../../dist/vue.runtime.common.js')],\n-    plugins: asBundle\n-      ? [new VueSSRServerPlugin()]\n-      : []\n-  }, fs => {\n-    const bundle = asBundle\n-      ? JSON.parse(fs.readFileSync('/vue-ssr-server-bundle.json', 'utf-8'))\n-      : fs.readFileSync('/bundle.js', 'utf-8')\n-    const renderer = createBundleRenderer(bundle, options)\n-    cb(renderer)\n-  })\n-}\n"
          },
          {
            "+": "+describe('SSR: bundle renderer', () => {\n",
            "-": "-describe.skip('SSR: bundle renderer', () => {\n"
          },
          {
            "+": "+function createAssertions(runInNewContext) {\n+  it('renderToString', async () => {\n+    const renderer = await createWebpackBundleRenderer('app.js', {\n+      runInNewContext\n",
            "-": "-function createAssertions (runInNewContext) {\n-  it('renderToString', done => {\n-    createRenderer('app.js', { runInNewContext }, renderer => {\n-      const context = { url: '/test' }\n-      renderer.renderToString(context, (err, res) => {\n-        expect(err).toBeNull()\n-        expect(res).toBe('<div data-server-rendered=\"true\">/test</div>')\n-        expect(context.msg).toBe('hello')\n-        done()\n-      })\n"
          },
          {
            "+": "+    const context: any = { url: '/test' }\n+    const res = await renderer.renderToString(context)\n+    expect(res).toBe('<div data-server-rendered=\"true\">/test</div>')\n+    expect(context.msg).toBe('hello')\n",
            "-": ""
          },
          {
            "+": "+  it('renderToStream', async () => {\n+    const renderer = await createWebpackBundleRenderer('app.js', {\n+      runInNewContext\n+    })\n+    const context: any = { url: '/test' }\n+\n+    const res = await new Promise((resolve, reject) => {\n",
            "-": "-  it('renderToStream', done => {\n-    createRenderer('app.js', { runInNewContext }, renderer => {\n-      const context = { url: '/test' }\n"
          },
          {
            "+": "+      stream.on('data', (chunk) => {\n",
            "-": "-      stream.on('data', chunk => {\n"
          },
          {
            "+": "+      stream.on('error', reject)\n",
            "-": ""
          },
          {
            "+": "+        resolve(res)\n",
            "-": "-        expect(res).toBe('<div data-server-rendered=\"true\">/test</div>')\n-        expect(context.msg).toBe('hello')\n-        done()\n"
          },
          {
            "+": "+\n+    expect(res).toBe('<div data-server-rendered=\"true\">/test</div>')\n+    expect(context.msg).toBe('hello')\n",
            "-": ""
          },
          {
            "+": "+  it('renderToString catch error', async () => {\n+    const renderer = await createWebpackBundleRenderer('error.js', {\n+      runInNewContext\n",
            "-": "-  it('renderToString catch error', done => {\n-    createRenderer('error.js', { runInNewContext }, renderer => {\n-      renderer.renderToString(err => {\n-        expect(err.message).toBe('foo')\n-        done()\n-      })\n"
          },
          {
            "+": "+    try {\n+      await renderer.renderToString()\n+    } catch (err: any) {\n+      expect(err.message).toBe('foo')\n+    }\n",
            "-": ""
          },
          {
            "+": "+  it('renderToString catch Promise rejection', async () => {\n+    const renderer = await createWebpackBundleRenderer('promise-rejection.js', {\n+      runInNewContext\n",
            "-": "-  it('renderToString catch Promise rejection', done => {\n-    createRenderer('promise-rejection.js', { runInNewContext }, renderer => {\n-      renderer.renderToString(err => {\n-        expect(err.message).toBe('foo')\n-        done()\n-      })\n"
          },
          {
            "+": "+    try {\n+      await renderer.renderToString()\n+    } catch (err: any) {\n+      expect(err.message).toBe('foo')\n+    }\n",
            "-": ""
          },
          {
            "+": "+  it('renderToStream catch error', async () => {\n+    const renderer = await createWebpackBundleRenderer('error.js', {\n+      runInNewContext\n+    })\n+\n+    const err = await new Promise<Error>((resolve) => {\n",
            "-": "-  it('renderToStream catch error', done => {\n-    createRenderer('error.js', { runInNewContext }, renderer => {\n"
          },
          {
            "+": "+      stream.on('error', resolve)\n",
            "-": "-      stream.on('error', err => {\n-        expect(err.message).toBe('foo')\n-        done()\n-      })\n"
          },
          {
            "+": "+\n+    expect(err.message).toBe('foo')\n",
            "-": ""
          },
          {
            "+": "+  it('renderToStream catch Promise rejection', async () => {\n+    const renderer = await createWebpackBundleRenderer('promise-rejection.js', {\n+      runInNewContext\n+    })\n+\n+    const err = await new Promise<Error>((resolve) => {\n",
            "-": "-  it('renderToStream catch Promise rejection', done => {\n-    createRenderer('promise-rejection.js', { runInNewContext }, renderer => {\n"
          },
          {
            "+": "+      stream.on('error', resolve)\n",
            "-": "-      stream.on('error', err => {\n-        expect(err.message).toBe('foo')\n-        done()\n-      })\n"
          },
          {
            "+": "+\n+    expect(err.message).toBe('foo')\n",
            "-": ""
          },
          {
            "+": "+  it('render with cache (get/set)', async () => {\n",
            "-": "-  it('render with cache (get/set)', done => {\n"
          },
          {
            "+": "+    const renderer = await createWebpackBundleRenderer('cache.js', options)\n+    const expected = '<div data-server-rendered=\"true\">/test</div>'\n+    const key = 'app::1'\n+    const res = await renderer.renderToString()\n+\n+    expect(res).toBe(expected)\n+    expect(get).toHaveBeenCalledWith(key)\n+    const setArgs = set.mock.calls[0]\n+    expect(setArgs[0]).toBe(key)\n+    expect(setArgs[1].html).toBe(expected)\n+    expect(cache[key].html).toBe(expected)\n+\n+    const res2 = await renderer.renderToString()\n+    expect(res2).toBe(expected)\n+    expect(get.mock.calls.length).toBe(2)\n+    expect(set.mock.calls.length).toBe(1)\n",
            "-": "-    createRenderer('cache.js', options, renderer => {\n-      const expected = '<div data-server-rendered=\"true\">/test</div>'\n-      const key = 'app::1'\n-      renderer.renderToString((err, res) => {\n-        expect(err).toBeNull()\n-        expect(res).toBe(expected)\n-        expect(get).toHaveBeenCalledWith(key)\n-        const setArgs = set.mock.calls[0]\n-        expect(setArgs[0]).toBe(key)\n-        expect(setArgs[1].html).toBe(expected)\n-        expect(cache[key].html).toBe(expected)\n-        renderer.renderToString((err, res) => {\n-          expect(err).toBeNull()\n-          expect(res).toBe(expected)\n-          expect(get.mock.calls.length).toBe(2)\n-          expect(set.mock.calls.length).toBe(1)\n-          done()\n-        })\n-      })\n-    })\n"
          },
          {
            "+": "+  it('render with cache (get/set/has)', async () => {\n",
            "-": "-  it('render with cache (get/set/has)', done => {\n"
          },
          {
            "+": "+        get: (key) => {\n",
            "-": "-        get: key => {\n"
          },
          {
            "+": "+    const renderer = await createWebpackBundleRenderer('cache.js', options)\n+    const expected = '<div data-server-rendered=\"true\">/test</div>'\n+    const key = 'app::1'\n+    const res = await renderer.renderToString()\n+    expect(res).toBe(expected)\n+    expect(has).toHaveBeenCalledWith(key)\n+    expect(get).not.toHaveBeenCalled()\n+    const setArgs = set.mock.calls[0]\n+    expect(setArgs[0]).toBe(key)\n+    expect(setArgs[1].html).toBe(expected)\n+    expect(cache[key].html).toBe(expected)\n+\n+    const res2 = await renderer.renderToString()\n+    expect(res2).toBe(expected)\n+    expect(has.mock.calls.length).toBe(2)\n+    expect(get.mock.calls.length).toBe(1)\n+    expect(set.mock.calls.length).toBe(1)\n",
            "-": "-    createRenderer('cache.js', options, renderer => {\n-      const expected = '<div data-server-rendered=\"true\">/test</div>'\n-      const key = 'app::1'\n-      renderer.renderToString((err, res) => {\n-        expect(err).toBeNull()\n-        expect(res).toBe(expected)\n-        expect(has).toHaveBeenCalledWith(key)\n-        expect(get).not.toHaveBeenCalled()\n-        const setArgs = set.mock.calls[0]\n-        expect(setArgs[0]).toBe(key)\n-        expect(setArgs[1].html).toBe(expected)\n-        expect(cache[key].html).toBe(expected)\n-        renderer.renderToString((err, res) => {\n-          expect(err).toBeNull()\n-          expect(res).toBe(expected)\n-          expect(has.mock.calls.length).toBe(2)\n-          expect(get.mock.calls.length).toBe(1)\n-          expect(set.mock.calls.length).toBe(1)\n-          done()\n-        })\n-      })\n-    })\n"
          },
          {
            "+": "+  it('render with cache (nested)', async () => {\n+    const cache = new LRU({ ttl: 65535 }) as any\n+    vi.spyOn(cache, 'get')\n+    vi.spyOn(cache, 'set')\n",
            "-": "-  it('render with cache (nested)', done => {\n-    const cache = new LRU({ maxAge: Infinity })\n-    spyOn(cache, 'get').and.callThrough()\n-    spyOn(cache, 'set').and.callThrough()\n"
          },
          {
            "+": "+    const renderer = await createWebpackBundleRenderer(\n+      'nested-cache.js',\n+      options\n+    )\n+    const expected = '<div data-server-rendered=\"true\">/test</div>'\n+    const key = 'app::1'\n+    const context1 = { registered: [] }\n+    const context2 = { registered: [] }\n+    const res = await renderer.renderToString(context1)\n+    expect(res).toBe(expected)\n+    expect(cache.set.mock.calls.length).toBe(3) // 3 nested components cached\n+    const cached = cache.get(key)\n+    expect(cached.html).toBe(expected)\n+    expect(cache.get.mock.calls.length).toBe(1)\n+\n+    // assert component usage registration for nested children\n+    expect(context1.registered).toEqual(['app', 'child', 'grandchild'])\n+\n+    const res2 = await renderer.renderToString(context2)\n+    expect(res2).toBe(expected)\n+    expect(cache.set.mock.calls.length).toBe(3) // no new cache sets\n+    expect(cache.get.mock.calls.length).toBe(2) // 1 get for root\n+\n+    expect(context2.registered).toEqual(['app', 'child', 'grandchild'])\n",
            "-": "-    createRenderer('nested-cache.js', options, renderer => {\n-      const expected = '<div data-server-rendered=\"true\">/test</div>'\n-      const key = 'app::1'\n-      const context1 = { registered: [] }\n-      const context2 = { registered: [] }\n-      renderer.renderToString(context1, (err, res) => {\n-        expect(err).toBeNull()\n-        expect(res).toBe(expected)\n-        expect(cache.set.mock.calls.length).toBe(3) // 3 nested components cached\n-        const cached = cache.get(key)\n-        expect(cached.html).toBe(expected)\n-        expect(cache.get.mock.calls.length).toBe(1)\n-\n-        // assert component usage registration for nested children\n-        expect(context1.registered).toEqual(['app', 'child', 'grandchild'])\n-\n-        renderer.renderToString(context2, (err, res) => {\n-          expect(err).toBeNull()\n-          expect(res).toBe(expected)\n-          expect(cache.set.mock.calls.length).toBe(3) // no new cache sets\n-          expect(cache.get.mock.calls.length).toBe(2) // 1 get for root\n-\n-          expect(context2.registered).toEqual(['app', 'child', 'grandchild'])\n-          done()\n-        })\n-      })\n-    })\n"
          },
          {
            "+": "+  it('render with cache (opt-out)', async () => {\n",
            "-": "-  it('render with cache (opt-out)', done => {\n"
          },
          {
            "+": "+    const renderer = await createWebpackBundleRenderer(\n+      'cache-opt-out.js',\n+      options\n+    )\n+    const expected = '<div data-server-rendered=\"true\">/test</div>'\n+    const res = await renderer.renderToString()\n+    expect(res).toBe(expected)\n+    expect(get).not.toHaveBeenCalled()\n+    expect(set).not.toHaveBeenCalled()\n+    const res2 = await renderer.renderToString()\n+    expect(res2).toBe(expected)\n+    expect(get).not.toHaveBeenCalled()\n+    expect(set).not.toHaveBeenCalled()\n",
            "-": "-    createRenderer('cache-opt-out.js', options, renderer => {\n-      const expected = '<div data-server-rendered=\"true\">/test</div>'\n-      renderer.renderToString((err, res) => {\n-        expect(err).toBeNull()\n-        expect(res).toBe(expected)\n-        expect(get).not.toHaveBeenCalled()\n-        expect(set).not.toHaveBeenCalled()\n-        renderer.renderToString((err, res) => {\n-          expect(err).toBeNull()\n-          expect(res).toBe(expected)\n-          expect(get).not.toHaveBeenCalled()\n-          expect(set).not.toHaveBeenCalled()\n-          done()\n-        })\n-      })\n-    })\n"
          },
          {
            "+": "+  it('renderToString (bundle format with code split)', async () => {\n+    const renderer = await createWebpackBundleRenderer('split.js', {\n+      runInNewContext,\n+      asBundle: true\n",
            "-": "-  it('renderToString (bundle format with code split)', done => {\n-    createRenderer('split.js', { runInNewContext, asBundle: true }, renderer => {\n-      const context = { url: '/test' }\n-      renderer.renderToString(context, (err, res) => {\n-        expect(err).toBeNull()\n-        expect(res).toBe('<div data-server-rendered=\"true\">/test<div>async test.woff2 test.png</div></div>')\n-        done()\n-      })\n"
          },
          {
            "+": "+    const context = { url: '/test' }\n+    const res = await renderer.renderToString(context)\n+    expect(res).toBe(\n+      '<div data-server-rendered=\"true\">/test<div>async test.woff2 test.png</div></div>'\n+    )\n",
            "-": ""
          },
          {
            "+": "+  it('renderToStream (bundle format with code split)', async () => {\n+    const renderer = await createWebpackBundleRenderer('split.js', {\n+      runInNewContext,\n+      asBundle: true\n+    })\n+    const context = { url: '/test' }\n+\n+    const res = await new Promise((resolve, reject) => {\n",
            "-": "-  it('renderToStream (bundle format with code split)', done => {\n-    createRenderer('split.js', { runInNewContext, asBundle: true }, renderer => {\n-      const context = { url: '/test' }\n"
          },
          {
            "+": "+      stream.on('data', (chunk) => {\n",
            "-": "-      stream.on('data', chunk => {\n"
          },
          {
            "+": "+      stream.on('error', reject)\n",
            "-": ""
          },
          {
            "+": "+        resolve(res)\n",
            "-": "-        expect(res).toBe('<div data-server-rendered=\"true\">/test<div>async test.woff2 test.png</div></div>')\n-        done()\n"
          },
          {
            "+": "+\n+    expect(res).toBe(\n+      '<div data-server-rendered=\"true\">/test<div>async test.woff2 test.png</div></div>'\n+    )\n",
            "-": ""
          },
          {
            "+": "+  it('renderToString catch error (bundle format with source map)', async () => {\n+    const renderer = await createWebpackBundleRenderer('error.js', {\n+      runInNewContext,\n+      asBundle: true\n",
            "-": "-  it('renderToString catch error (bundle format with source map)', done => {\n-    createRenderer('error.js', { runInNewContext, asBundle: true }, renderer => {\n-      renderer.renderToString(err => {\n-        expect(err.stack).toContain('test/ssr/fixtures/error.js:1:6')\n-        expect(err.message).toBe('foo')\n-        done()\n-      })\n"
          },
          {
            "+": "+\n+    try {\n+      await renderer.renderToString()\n+    } catch (err: any) {\n+      expect(err.stack).toContain('test/ssr/fixtures/error.js:1:0')\n+      expect(err.message).toBe('foo')\n+    }\n",
            "-": ""
          },
          {
            "+": "+  it('renderToStream catch error (bundle format with source map)', async () => {\n+    const renderer = await createWebpackBundleRenderer('error.js', {\n+      runInNewContext,\n+      asBundle: true\n",
            "-": "-  it('renderToString catch error (bundle format with source map)', done => {\n-    createRenderer('error.js', { runInNewContext, asBundle: true }, renderer => {\n-      const stream = renderer.renderToStream()\n-      stream.on('error', err => {\n-        expect(err.stack).toContain('test/ssr/fixtures/error.js:1:6')\n-        expect(err.message).toBe('foo')\n-        done()\n-      })\n"
          },
          {
            "-": "-  })\n",
            "+": ""
          },
          {
            "+": "+    const err = await new Promise<Error>((resolve) => {\n+      const stream = renderer.renderToStream()\n+      stream.on('error', resolve)\n",
            "-": "-  it('renderToString return Promise', done => {\n-    createRenderer('app.js', { runInNewContext }, renderer => {\n-      const context = { url: '/test' }\n-      renderer.renderToString(context).then(res => {\n-        expect(res).toBe('<div data-server-rendered=\"true\">/test</div>')\n-        expect(context.msg).toBe('hello')\n-        done()\n-      })\n"
          },
          {
            "+": "+\n+    expect(err.stack).toContain('test/ssr/fixtures/error.js:1:0')\n+    expect(err.message).toBe('foo')\n",
            "-": ""
          },
          {
            "+": "+  it('renderToString w/ callback', async () => {\n+    const renderer = await createWebpackBundleRenderer('app.js', {\n+      runInNewContext\n",
            "-": "-  it('renderToString return Promise (error)', done => {\n-    createRenderer('error.js', { runInNewContext }, renderer => {\n-      renderer.renderToString().catch(err => {\n-        expect(err.message).toBe('foo')\n-        done()\n-      })\n"
          },
          {
            "+": "+    const context: any = { url: '/test' }\n+    const res = await new Promise((r) =>\n+      renderer.renderToString(context, (_err, res) => r(res))\n+    )\n+    expect(res).toBe('<div data-server-rendered=\"true\">/test</div>')\n+    expect(context.msg).toBe('hello')\n",
            "-": ""
          },
          {
            "+": "+  it('renderToString error handling w/ callback', async () => {\n+    const renderer = await createWebpackBundleRenderer('error.js', {\n+      runInNewContext\n",
            "-": "-  it('renderToString return Promise (Promise rejection)', done => {\n-    createRenderer('promise-rejection.js', { runInNewContext }, renderer => {\n-      renderer.renderToString().catch(err => {\n-        expect(err.message).toBe('foo')\n-        done()\n-      })\n"
          },
          {
            "+": "+    const err = await new Promise<Error>((r) => renderer.renderToString(r))\n+    expect(err.message).toBe('foo')\n",
            "-": ""
          }
        ],
        "a/test/ssr/ssr-stream.spec.ts": [
          {
            "+": "+// @vitest-environment node\n+\n",
            "-": ""
          },
          {
            "-": "-;(global as any).__SSR_TEST__ = true\n-\n",
            "+": ""
          }
        ],
        "a/test/ssr/ssr-string.spec.ts": [
          {
            "+": "+// @vitest-environment node\n+\n",
            "-": ""
          },
          {
            "-": "-;(global as any).__SSR_TEST__ = true\n-\n",
            "+": ""
          }
        ],
        "a/test/ssr/ssr-template.spec.ts": [
          {
            "+": "+// @vitest-environment node\n+\n",
            "-": ""
          },
          {
            "+": "+import {\n+  compileWithWebpack,\n+  createWebpackBundleRenderer\n+} from './compile-with-webpack'\n",
            "-": "-import { compileWithWebpack } from './compile-with-webpack'\n"
          },
          {
            "+": "+import { RenderOptions } from '../../src/server/create-renderer'\n",
            "-": "-import { createRenderer as createBundleRenderer } from './ssr-bundle-render.spec.js'\n-\n-;(global as any).__SSR_TEST__ = true\n"
          },
          {
            "+": "+async function generateClientManifest(file: string) {\n+  const fs = await compileWithWebpack(file, {\n",
            "-": "-function generateClientManifest (file, cb) {\n-  compileWithWebpack(file, {\n"
          },
          {
            "+": "+    plugins: [new VueSSRClientPlugin()]\n",
            "-": "-    plugins: [\n-      new VueSSRClientPlugin()\n-    ]\n-  }, fs => {\n-    cb(JSON.parse(fs.readFileSync('/vue-ssr-client-manifest.json', 'utf-8')))\n"
          },
          {
            "+": "+  return JSON.parse(fs.readFileSync('/vue-ssr-client-manifest.json', 'utf-8'))\n",
            "-": ""
          },
          {
            "+": "+async function createRendererWithManifest(\n+  file: string,\n+  options?: RenderOptions\n+) {\n+  const clientManifest = await generateClientManifest(file)\n+  return createWebpackBundleRenderer(\n+    file,\n+    Object.assign(\n+      {\n+        asBundle: true,\n+        template: defaultTemplate,\n+        clientManifest\n+      },\n+      options\n+    )\n+  )\n",
            "-": "-function createRendererWithManifest (file, options, cb) {\n-  if (typeof options === 'function') {\n-    cb = options\n-    options = null\n-  }\n-  generateClientManifest(file, clientManifest => {\n-    createBundleRenderer(file, Object.assign({\n-      asBundle: true,\n-      template: defaultTemplate,\n-      clientManifest\n-    }, options), cb)\n-  })\n"
          },
          {
            "+": "+describe('SSR: template option', () => {\n+  it('renderToString', async () => {\n",
            "-": "-describe.skip('SSR: template option', () => {\n-  it('renderToString', done => {\n"
          },
          {
            "+": "+    const res = await renderer.renderToString(\n+      new Vue({\n+        template: '<div>hi</div>'\n+      }),\n+      context\n+    )\n+\n+    expect(res).toContain(\n+      `<html><head>${context.head}${context.styles}</head><body>` +\n",
            "-": "-    renderer.renderToString(new Vue({\n-      template: '<div>hi</div>'\n-    }), context, (err, res) => {\n-      expect(err).toBeNull()\n-      expect(res).toContain(\n-        `<html><head>${context.head}${context.styles}</head><body>` +\n"
          },
          {
            "+": "+    )\n",
            "-": "-      )\n-      done()\n-    })\n"
          },
          {
            "+": "+  it('renderToString with interpolation', async () => {\n",
            "-": "-  it('renderToString with interpolation', done => {\n"
          },
          {
            "+": "+    const res = await renderer.renderToString(\n+      new Vue({\n+        template: '<div>hi</div>'\n+      }),\n+      context\n+    )\n+\n+    expect(res).toContain(\n+      `<html><head>` +\n",
            "-": "-    renderer.renderToString(new Vue({\n-      template: '<div>hi</div>'\n-    }), context, (err, res) => {\n-      expect(err).toBeNull()\n-      expect(res).toContain(\n-        `<html><head>` +\n"
          },
          {
            "+": "+    )\n",
            "-": "-      )\n-      done()\n-    })\n"
          },
          {
            "+": "+  it('renderToString with interpolation and context.rendered', async () => {\n",
            "-": "-  it('renderToString with interpolation and context.rendered', done => {\n"
          },
          {
            "+": "+      rendered: (context) => {\n",
            "-": "-      rendered: context => {\n"
          },
          {
            "+": "+    const res = await renderer.renderToString(\n+      new Vue({\n+        template: '<div>hi</div>'\n+      }),\n+      context\n+    )\n+    expect(res).toContain(\n+      `<html><head>` +\n",
            "-": "-    renderer.renderToString(new Vue({\n-      template: '<div>hi</div>'\n-    }), context, (err, res) => {\n-      expect(err).toBeNull()\n-      expect(res).toContain(\n-        `<html><head>` +\n"
          },
          {
            "+": "+    )\n",
            "-": "-      )\n-      done()\n-    })\n"
          },
          {
            "+": "+  it('renderToString w/ template function', async () => {\n",
            "-": "-  it('renderToString w/ template function', done => {\n"
          },
          {
            "+": "+      template: (content, context) =>\n+        `<html><head>${context.head}</head>${content}</html>`\n",
            "-": "-      template: (content, context) => `<html><head>${context.head}</head>${content}</html>`\n"
          },
          {
            "+": "+    const res = await renderer.renderToString(\n+      new Vue({\n+        template: '<div>hi</div>'\n+      }),\n+      context\n+    )\n+\n+    expect(res).toContain(\n+      `<html><head>${context.head}</head><div data-server-rendered=\"true\">hi</div></html>`\n+    )\n",
            "-": "-    renderer.renderToString(new Vue({\n-      template: '<div>hi</div>'\n-    }), context, (err, res) => {\n-      expect(err).toBeNull()\n-      expect(res).toContain(`<html><head>${context.head}</head><div data-server-rendered=\"true\">hi</div></html>`)\n-      done()\n-    })\n"
          },
          {
            "+": "+  it('renderToString w/ template function returning Promise', async () => {\n",
            "-": "-  it('renderToString w/ template function returning Promise', done => {\n"
          },
          {
            "+": "+      template: (content, context) =>\n+        new Promise<string>((resolve) => {\n+          setTimeout(() => {\n+            resolve(`<html><head>${context.head}</head>${content}</html>`)\n+          }, 0)\n+        })\n",
            "-": "-      template: (content, context) => new Promise((resolve) => {\n-        setTimeout(() => {\n-          resolve(`<html><head>${context.head}</head>${content}</html>`)\n-        }, 0)\n-      })\n"
          },
          {
            "+": "+    const res = await renderer.renderToString(\n+      new Vue({\n+        template: '<div>hi</div>'\n+      }),\n+      context\n+    )\n+\n+    expect(res).toContain(\n+      `<html><head>${context.head}</head><div data-server-rendered=\"true\">hi</div></html>`\n+    )\n",
            "-": "-    renderer.renderToString(new Vue({\n-      template: '<div>hi</div>'\n-    }), context, (err, res) => {\n-      expect(err).toBeNull()\n-      expect(res).toContain(`<html><head>${context.head}</head><div data-server-rendered=\"true\">hi</div></html>`)\n-      done()\n-    })\n"
          },
          {
            "+": "+  it('renderToString w/ template function returning Promise w/ rejection', async () => {\n",
            "-": "-  it('renderToString w/ template function returning Promise w/ rejection', done => {\n"
          },
          {
            "+": "+      template: () =>\n+        new Promise((resolve, reject) => {\n+          setTimeout(() => {\n+            reject(new Error(`foo`))\n+          }, 0)\n+        })\n",
            "-": "-      template: () => new Promise((resolve, reject) => {\n-        setTimeout(() => {\n-          reject(new Error(`foo`))\n-        }, 0)\n-      })\n"
          },
          {
            "+": "+    try {\n+      await renderer.renderToString(\n+        new Vue({\n+          template: '<div>hi</div>'\n+        }),\n+        context\n+      )\n+    } catch (err: any) {\n",
            "-": "-    renderer.renderToString(new Vue({\n-      template: '<div>hi</div>'\n-    }), context, (err, res) => {\n"
          },
          {
            "+": "+    }\n",
            "-": "-      expect(res).toBeUndefined()\n-      done()\n-    })\n"
          },
          {
            "+": "+  it('renderToStream', async () => {\n",
            "-": "-  it('renderToStream', done => {\n"
          },
          {
            "+": "+    const res = await new Promise((resolve, reject) => {\n+      const stream = renderer.renderToStream(\n+        new Vue({\n+          template: '<div>hi</div>'\n+        }),\n+        context\n+      )\n",
            "-": "-    const stream = renderer.renderToStream(new Vue({\n-      template: '<div>hi</div>'\n-    }), context)\n"
          },
          {
            "+": "+      let res = ''\n+      stream.on('data', (chunk) => {\n+        res += chunk\n+      })\n+      stream.on('error', reject)\n+      stream.on('end', () => {\n+        resolve(res)\n+      })\n",
            "-": "-    let res = ''\n-    stream.on('data', chunk => {\n-      res += chunk\n"
          },
          {
            "+": "+\n+    expect(res).toContain(\n+      `<html><head>${context.head}${context.styles}</head><body>` +\n",
            "-": "-    stream.on('end', () => {\n-      expect(res).toContain(\n-        `<html><head>${context.head}${context.styles}</head><body>` +\n"
          },
          {
            "+": "+    )\n",
            "-": "-      )\n-      done()\n-    })\n"
          },
          {
            "+": "+  it('renderToStream with interpolation', async () => {\n",
            "-": "-  it('renderToStream with interpolation', done => {\n"
          },
          {
            "+": "+    const res = await new Promise((resolve, reject) => {\n+      const stream = renderer.renderToStream(\n+        new Vue({\n+          template: '<div>hi</div>'\n+        }),\n+        context\n+      )\n",
            "-": "-    const stream = renderer.renderToStream(new Vue({\n-      template: '<div>hi</div>'\n-    }), context)\n"
          },
          {
            "+": "+      let res = ''\n+      stream.on('data', (chunk) => {\n+        res += chunk\n+      })\n+      stream.on('error', reject)\n+      stream.on('end', () => {\n+        resolve(res)\n+      })\n",
            "-": "-    let res = ''\n-    stream.on('data', chunk => {\n-      res += chunk\n"
          },
          {
            "+": "+\n+    expect(res).toContain(\n+      `<html><head>` +\n",
            "-": "-    stream.on('end', () => {\n-      expect(res).toContain(\n-        `<html><head>` +\n"
          },
          {
            "+": "+    )\n",
            "-": "-      )\n-      done()\n-    })\n"
          },
          {
            "+": "+  it('renderToStream with interpolation and context.rendered', async () => {\n",
            "-": "-  it('renderToStream with interpolation and context.rendered', done => {\n"
          },
          {
            "+": "+      rendered: (context) => {\n",
            "-": "-      rendered: context => {\n"
          },
          {
            "+": "+    const res = await new Promise((resolve, reject) => {\n+      const stream = renderer.renderToStream(\n+        new Vue({\n+          template: '<div>hi</div>'\n+        }),\n+        context\n+      )\n",
            "-": "-    const stream = renderer.renderToStream(new Vue({\n-      template: '<div>hi</div>'\n-    }), context)\n"
          },
          {
            "+": "+      let res = ''\n+      stream.on('data', (chunk) => {\n+        res += chunk\n+      })\n+      stream.on('error', reject)\n+      stream.on('end', () => {\n+        resolve(res)\n+      })\n",
            "-": "-    let res = ''\n-    stream.on('data', chunk => {\n-      res += chunk\n"
          },
          {
            "+": "+\n+    expect(res).toContain(\n+      `<html><head>` +\n",
            "-": "-    stream.on('end', () => {\n-      expect(res).toContain(\n-        `<html><head>` +\n"
          },
          {
            "+": "+    )\n",
            "-": "-      )\n-      done()\n-    })\n"
          },
          {
            "+": "+  it('bundleRenderer + renderToString', async () => {\n+    const renderer = await createWebpackBundleRenderer('app.js', {\n",
            "-": "-  it('bundleRenderer + renderToString', done => {\n-    createBundleRenderer('app.js', {\n"
          },
          {
            "-": "-    }, renderer => {\n-      const context = {\n-        head: '<meta name=\"viewport\" content=\"width=device-width\">',\n-        styles: '<style>h1 { color: red }</style>',\n-        state: { a: 1 },\n-        url: '/test'\n-      }\n-      renderer.renderToString(context, (err, res) => {\n-        expect(err).toBeNull()\n-        expect(res).toContain(\n-          `<html><head>${context.head}${context.styles}</head><body>` +\n-          `<div data-server-rendered=\"true\">/test</div>` +\n-          `<script>window.__INITIAL_STATE__={\"a\":1}</script>` +\n-          `</body></html>`\n-        )\n-        expect(context.msg).toBe('hello')\n-        done()\n-      })\n",
            "+": ""
          },
          {
            "+": "+    const context: any = {\n+      head: '<meta name=\"viewport\" content=\"width=device-width\">',\n+      styles: '<style>h1 { color: red }</style>',\n+      state: { a: 1 },\n+      url: '/test'\n+    }\n+    const res = await renderer.renderToString(context)\n+    expect(res).toContain(\n+      `<html><head>${context.head}${context.styles}</head><body>` +\n+        `<div data-server-rendered=\"true\">/test</div>` +\n+        `<script>window.__INITIAL_STATE__={\"a\":1}</script>` +\n+        `</body></html>`\n+    )\n+    expect(context.msg).toBe('hello')\n",
            "-": ""
          },
          {
            "+": "+  it('bundleRenderer + renderToStream', async () => {\n+    const renderer = await createWebpackBundleRenderer('app.js', {\n",
            "-": "-  it('bundleRenderer + renderToStream', done => {\n-    createBundleRenderer('app.js', {\n"
          },
          {
            "+": "+    })\n+    const context: any = {\n+      head: '<meta name=\"viewport\" content=\"width=device-width\">',\n+      styles: '<style>h1 { color: red }</style>',\n+      state: { a: 1 },\n+      url: '/test'\n+    }\n+\n+    const res = await new Promise((resolve) => {\n",
            "-": "-    }, renderer => {\n-      const context = {\n-        head: '<meta name=\"viewport\" content=\"width=device-width\">',\n-        styles: '<style>h1 { color: red }</style>',\n-        state: { a: 1 },\n-        url: '/test'\n-      }\n"
          },
          {
            "+": "+      stream.on('data', (chunk) => {\n",
            "-": "-      stream.on('data', chunk => {\n"
          },
          {
            "+": "+        resolve(res)\n",
            "-": "-        expect(res).toContain(\n-          `<html><head>${context.head}${context.styles}</head><body>` +\n-          `<div data-server-rendered=\"true\">/test</div>` +\n-          `<script>window.__INITIAL_STATE__={\"a\":1}</script>` +\n-          `</body></html>`\n-        )\n-        expect(context.msg).toBe('hello')\n-        done()\n"
          },
          {
            "+": "+\n+    expect(res).toContain(\n+      `<html><head>${context.head}${context.styles}</head><body>` +\n+        `<div data-server-rendered=\"true\">/test</div>` +\n+        `<script>window.__INITIAL_STATE__={\"a\":1}</script>` +\n+        `</body></html>`\n+    )\n+    expect(context.msg).toBe('hello')\n",
            "-": ""
          },
          {
            "+": "+  const expectedHTMLWithManifest = (options: any = {}) =>\n",
            "-": "-  const expectedHTMLWithManifest = (options = {}) =>\n"
          },
          {
            "+": "+    // used chunks should have preload\n+    `<link rel=\"preload\" href=\"/manifest.js\" as=\"script\">` +\n+    `<link rel=\"preload\" href=\"/main.js\" as=\"script\">` +\n+    `<link rel=\"preload\" href=\"/0.js\" as=\"script\">` +\n+    `<link rel=\"preload\" href=\"/test.css\" as=\"style\">` +\n+    // images and fonts are only preloaded when explicitly asked for\n+    (options.preloadOtherAssets\n+      ? `<link rel=\"preload\" href=\"/test.png\" as=\"image\">`\n+      : ``) +\n+    (options.preloadOtherAssets\n+      ? `<link rel=\"preload\" href=\"/test.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>`\n+      : ``) +\n+    // unused chunks should have prefetch\n+    (options.noPrefetch ? `` : `<link rel=\"prefetch\" href=\"/1.js\">`) +\n+    // css assets should be loaded\n+    `<link rel=\"stylesheet\" href=\"/test.css\">` +\n",
            "-": "-      // used chunks should have preload\n-      `<link rel=\"preload\" href=\"/manifest.js\" as=\"script\">` +\n-      `<link rel=\"preload\" href=\"/main.js\" as=\"script\">` +\n-      `<link rel=\"preload\" href=\"/0.js\" as=\"script\">` +\n-      `<link rel=\"preload\" href=\"/test.css\" as=\"style\">` +\n-      // images and fonts are only preloaded when explicitly asked for\n-      (options.preloadOtherAssets ? `<link rel=\"preload\" href=\"/test.png\" as=\"image\">` : ``) +\n-      (options.preloadOtherAssets ? `<link rel=\"preload\" href=\"/test.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>` : ``) +\n-      // unused chunks should have prefetch\n-      (options.noPrefetch ? `` : `<link rel=\"prefetch\" href=\"/1.js\">`) +\n-      // css assets should be loaded\n-      `<link rel=\"stylesheet\" href=\"/test.css\">` +\n"
          },
          {
            "+": "+    `<div data-server-rendered=\"true\"><div>async test.woff2 test.png</div></div>` +\n+    // state should be inlined before scripts\n+    `<script>window.${\n+      options.stateKey || '__INITIAL_STATE__'\n+    }={\"a\":1}</script>` +\n+    // manifest chunk should be first\n+    `<script src=\"/manifest.js\" defer></script>` +\n+    // async chunks should be before main chunk\n+    `<script src=\"/0.js\" defer></script>` +\n+    `<script src=\"/main.js\" defer></script>` +\n",
            "-": "-      `<div data-server-rendered=\"true\"><div>async test.woff2 test.png</div></div>` +\n-      // state should be inlined before scripts\n-      `<script>window.${options.stateKey || '__INITIAL_STATE__'}={\"a\":1}</script>` +\n-      // manifest chunk should be first\n-      `<script src=\"/manifest.js\" defer></script>` +\n-      // async chunks should be before main chunk\n-      `<script src=\"/0.js\" defer></script>` +\n-      `<script src=\"/main.js\" defer></script>` +\n"
          },
          {
            "+": "+  function createClientManifestAssertions(runInNewContext) {\n+    it('bundleRenderer + renderToString + clientManifest ()', async () => {\n+      const renderer = await createRendererWithManifest('split.js', {\n+        runInNewContext\n",
            "-": "-  function createClientManifestAssertions (runInNewContext) {\n-    it('bundleRenderer + renderToString + clientManifest ()', done => {\n-      createRendererWithManifest('split.js', { runInNewContext }, renderer => {\n-        renderer.renderToString({ state: { a: 1 }}, (err, res) => {\n-          expect(err).toBeNull()\n-          expect(res).toContain(expectedHTMLWithManifest())\n-          done()\n-        })\n"
          },
          {
            "+": "+      const res = await renderer.renderToString({ state: { a: 1 } })\n+      expect(res).toContain(expectedHTMLWithManifest())\n",
            "-": ""
          },
          {
            "+": "+    it('bundleRenderer + renderToStream + clientManifest + shouldPreload', async () => {\n+      const renderer = await createRendererWithManifest('split.js', {\n",
            "-": "-    it('bundleRenderer + renderToStream + clientManifest + shouldPreload', done => {\n-      createRendererWithManifest('split.js', {\n"
          },
          {
            "+": "+          if (\n+            type === 'image' ||\n+            type === 'script' ||\n+            type === 'font' ||\n+            type === 'style'\n+          ) {\n",
            "-": "-          if (type === 'image' || type === 'script' || type === 'font' || type === 'style') {\n"
          },
          {
            "+": "+      })\n+      const res = await new Promise((resolve) => {\n+        const stream = renderer.renderToStream({ state: { a: 1 } })\n",
            "-": "-      }, renderer => {\n-        const stream = renderer.renderToStream({ state: { a: 1 }})\n"
          },
          {
            "+": "+        stream.on('data', (chunk) => {\n",
            "-": "-        stream.on('data', chunk => {\n"
          },
          {
            "+": "+          resolve(res)\n",
            "-": "-          expect(res).toContain(expectedHTMLWithManifest({\n-            preloadOtherAssets: true\n-          }))\n-          done()\n"
          },
          {
            "+": "+\n+      expect(res).toContain(\n+        expectedHTMLWithManifest({\n+          preloadOtherAssets: true\n+        })\n+      )\n",
            "-": ""
          },
          {
            "+": "+    it('bundleRenderer + renderToStream + clientManifest + shouldPrefetch', async () => {\n+      const renderer = await createRendererWithManifest('split.js', {\n",
            "-": "-    it('bundleRenderer + renderToStream + clientManifest + shouldPrefetch', done => {\n-      createRendererWithManifest('split.js', {\n"
          },
          {
            "+": "+      })\n+\n+      const res = await new Promise((resolve) => {\n+        const stream = renderer.renderToStream({ state: { a: 1 } })\n",
            "-": "-      }, renderer => {\n-        const stream = renderer.renderToStream({ state: { a: 1 }})\n"
          },
          {
            "+": "+        stream.on('data', (chunk) => {\n",
            "-": "-        stream.on('data', chunk => {\n"
          },
          {
            "+": "+          resolve(res)\n",
            "-": "-          expect(res).toContain(expectedHTMLWithManifest({\n-            noPrefetch: true\n-          }))\n-          done()\n"
          },
          {
            "+": "+\n+      expect(res).toContain(\n+        expectedHTMLWithManifest({\n+          noPrefetch: true\n+        })\n+      )\n",
            "-": ""
          },
          {
            "+": "+    it('bundleRenderer + renderToString + clientManifest + inject: false', async () => {\n+      const renderer = await createRendererWithManifest('split.js', {\n",
            "-": "-    it('bundleRenderer + renderToString + clientManifest + inject: false', done => {\n-      createRendererWithManifest('split.js', {\n"
          },
          {
            "+": "+        template:\n+          `<html>` +\n",
            "-": "-        template: `<html>` +\n"
          },
          {
            "+": "+          `</html>`,\n",
            "-": "-        `</html>`,\n"
          },
          {
            "-": "-      }, renderer => {\n-        const context = { foo: { a: 1 }}\n-        renderer.renderToString(context, (err, res) => {\n-          expect(err).toBeNull()\n-          expect(res).toContain(expectedHTMLWithManifest({\n-            stateKey: '__FOO__'\n-          }))\n-          done()\n-        })\n",
            "+": ""
          },
          {
            "+": "+      const context = { foo: { a: 1 } }\n+      const res = await renderer.renderToString(context)\n+      expect(res).toContain(\n+        expectedHTMLWithManifest({\n+          stateKey: '__FOO__'\n+        })\n+      )\n",
            "-": ""
          },
          {
            "+": "+    it('bundleRenderer + renderToString + clientManifest + no template', async () => {\n+      const renderer = await createRendererWithManifest('split.js', {\n",
            "-": "-    it('bundleRenderer + renderToString + clientManifest + no template', done => {\n-      createRendererWithManifest('split.js', {\n"
          },
          {
            "+": "+        template: null as any\n",
            "-": "-        template: null\n-      }, renderer => {\n-        const context = { foo: { a: 1 }}\n-        renderer.renderToString(context, (err, res) => {\n-          expect(err).toBeNull()\n-\n-          const customOutput =\n-            `<html><head>${\n-              context.renderResourceHints() +\n-              context.renderStyles()\n-            }</head><body>${\n-              res +\n-              context.renderState({\n-                windowKey: '__FOO__',\n-                contextKey: 'foo'\n-              }) +\n-              context.renderScripts()\n-            }</body></html>`\n-\n-          expect(customOutput).toContain(expectedHTMLWithManifest({\n-            stateKey: '__FOO__'\n-          }))\n-          done()\n-        })\n"
          },
          {
            "+": "+      const context: any = { foo: { a: 1 } }\n+      const res = await renderer.renderToString(context)\n+\n+      const customOutput = `<html><head>${\n+        context.renderResourceHints() + context.renderStyles()\n+      }</head><body>${\n+        res +\n+        context.renderState({\n+          windowKey: '__FOO__',\n+          contextKey: 'foo'\n+        }) +\n+        context.renderScripts()\n+      }</body></html>`\n+\n+      expect(customOutput).toContain(\n+        expectedHTMLWithManifest({\n+          stateKey: '__FOO__'\n+        })\n+      )\n",
            "-": ""
          },
          {
            "+": "+    it('whitespace insensitive interpolation', async () => {\n",
            "-": "-    it('whitespace insensitive interpolation', done => {\n"
          },
          {
            "+": "+      const res = await renderer.renderToString(\n+        new Vue({\n+          template: '<div>hi</div>'\n+        }),\n+        context\n+      )\n+      expect(res).toContain(\n+        `<html><head>` +\n",
            "-": "-      renderer.renderToString(new Vue({\n-        template: '<div>hi</div>'\n-      }), context, (err, res) => {\n-        expect(err).toBeNull()\n-        expect(res).toContain(\n-          `<html><head>` +\n"
          },
          {
            "+": "+      )\n",
            "-": "-        )\n-        done()\n-      })\n"
          },
          {
            "+": "+    it('renderToString + nonce', async () => {\n",
            "-": "-    it('renderToString + nonce', done => {\n"
          },
          {
            "+": "+      const res = await renderer.renderToString(\n+        new Vue({\n+          template: '<div>hi</div>'\n+        }),\n+        context\n+      )\n+      expect(res).toContain(\n+        `<html><head>` +\n",
            "-": "-      renderer.renderToString(new Vue({\n-        template: '<div>hi</div>'\n-      }), context, (err, res) => {\n-        expect(err).toBeNull()\n-        expect(res).toContain(\n-          `<html><head>` +\n"
          },
          {
            "+": "+      )\n",
            "-": "-        )\n-        done()\n-      })\n"
          },
          {
            "+": "+    it('renderToString + custom serializer', async () => {\n",
            "-": "-    it('renderToString + custom serializer', done => {\n"
          },
          {
            "+": "+      const res = await renderer.renderToString(\n+        new Vue({\n+          template: '<div>hi</div>'\n+        }),\n+        context\n+      )\n+      expect(res).toContain(\n+        `<script>window.__INITIAL_STATE__=${expected}</script>`\n+      )\n",
            "-": "-      renderer.renderToString(new Vue({\n-        template: '<div>hi</div>'\n-      }), context, (err, res) => {\n-        expect(err).toBeNull()\n-        expect(res).toContain(\n-          `<script>window.__INITIAL_STATE__=${expected}</script>`\n-        )\n-        done()\n-      })\n"
          }
        ],
        "a/test/vitest.setup.ts": [
          {
            "-": "-;(global as any).__SSR_TEST__ = false\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 25,
      "numOfChanges": 357,
      "qualityScore": 24
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "5fb1c9d62a08334393321c0b94aaa7cd07c2b40d",
      "url": "https://github.com/vuejs/vue/commit/5fb1c9d62a08334393321c0b94aaa7cd07c2b40d",
      "message": "test: fix ssr test imports",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T07:16:14Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-bundle-render.spec.ts": [
          {
            "+": "+import { createBundleRenderer } from 'web/entry-server-renderer'\n+import VueSSRServerPlugin from 'server/webpack-plugin/server'\n",
            "-": "-import { createBundleRenderer } from '../../packages/vue-server-renderer'\n-import VueSSRServerPlugin from '../../packages/vue-server-renderer/server-plugin'\n"
          }
        ],
        "a/test/ssr/ssr-template.spec.ts": [
          {
            "+": "+import Vue from 'vue'\n",
            "-": "-import Vue from '../../dist/vue.runtime.common.js'\n"
          },
          {
            "+": "+import { createRenderer } from 'web/entry-server-renderer'\n+import VueSSRClientPlugin from 'server/webpack-plugin/client'\n",
            "-": "-import { createRenderer } from '../../packages/vue-server-renderer'\n-import VueSSRClientPlugin from '../../packages/vue-server-renderer/client-plugin'\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "2d019e4e2549576766c43ffde08122587ee88912",
      "url": "https://github.com/vuejs/vue/commit/2d019e4e2549576766c43ffde08122587ee88912",
      "message": "test: partial ssr tests passing",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T04:01:16Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.eslintrc.js": [
          {
            "+": "+    __TEST__: true,\n",
            "-": "-    __WEEX__: true,\n"
          },
          {
            "+": "+    \"no-extra-semi\": 0\n",
            "-": ""
          }
        ],
        "a/package.json": [
          {
            "+": "+    \"file-loader\": \"^6.2.0\",\n",
            "-": ""
          },
          {
            "+": "+    \"memory-fs\": \"^0.5.0\",\n",
            "-": ""
          },
          {
            "+": "+    \"source-map\": \"0.5.6\",\n",
            "-": ""
          },
          {
            "+": "+    \"webpack\": \"^5.72.1\",\n",
            "-": ""
          }
        ],
        "a/pnpm-lock.yaml": [
          {
            "+": "+  file-loader: ^6.2.0\n",
            "-": ""
          },
          {
            "+": "+  memory-fs: ^0.5.0\n",
            "-": ""
          },
          {
            "+": "+  source-map: 0.5.6\n",
            "-": ""
          },
          {
            "+": "+  webpack: ^5.72.1\n",
            "-": ""
          },
          {
            "+": "+  file-loader: 6.2.0_webpack@5.72.1\n",
            "-": ""
          },
          {
            "+": "+  memory-fs: 0.5.0\n",
            "-": ""
          },
          {
            "+": "+  source-map: 0.5.6\n",
            "-": ""
          },
          {
            "+": "+  webpack: 5.72.1\n",
            "-": ""
          },
          {
            "+": "+  /@types/eslint-scope/3.7.3:\n+    resolution: {integrity: sha512-PB3ldyrcnAicT35TWPs5IcwKD8S333HMaa2VVv4+wdvebJkjWuW/xESoB8IwRcog8HYVYamb1g/R31Qv5Bx03g==}\n+    dependencies:\n+      '@types/eslint': 8.4.2\n+      '@types/estree': 0.0.51\n+    dev: true\n+\n+  /@types/eslint/8.4.2:\n+    resolution: {integrity: sha512-Z1nseZON+GEnFjJc04sv4NSALGjhFwy6K0HXt7qsn5ArfAKtb63dXNJHf+1YW6IpOIYRBGUbu3GwJdj8DGnCjA==}\n+    dependencies:\n+      '@types/estree': 0.0.51\n+      '@types/json-schema': 7.0.11\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /@webassemblyjs/ast/1.11.1:\n+    resolution: {integrity: sha512-ukBh14qFLjxTQNTXocdyksN5QdM28S1CxHt2rdskFyL+xFV7VremuBLVbmCePj+URalXBENx/9Lm7lnhihtCSw==}\n+    dependencies:\n+      '@webassemblyjs/helper-numbers': 1.11.1\n+      '@webassemblyjs/helper-wasm-bytecode': 1.11.1\n+    dev: true\n+\n+  /@webassemblyjs/floating-point-hex-parser/1.11.1:\n+    resolution: {integrity: sha512-iGRfyc5Bq+NnNuX8b5hwBrRjzf0ocrJPI6GWFodBFzmFnyvrQ83SHKhmilCU/8Jv67i4GJZBMhEzltxzcNagtQ==}\n+    dev: true\n+\n+  /@webassemblyjs/helper-api-error/1.11.1:\n+    resolution: {integrity: sha512-RlhS8CBCXfRUR/cwo2ho9bkheSXG0+NwooXcc3PAILALf2QLdFyj7KGsKRbVc95hZnhnERon4kW/D3SZpp6Tcg==}\n+    dev: true\n+\n+  /@webassemblyjs/helper-buffer/1.11.1:\n+    resolution: {integrity: sha512-gwikF65aDNeeXa8JxXa2BAk+REjSyhrNC9ZwdT0f8jc4dQQeDQ7G4m0f2QCLPJiMTTO6wfDmRmj/pW0PsUvIcA==}\n+    dev: true\n+\n+  /@webassemblyjs/helper-numbers/1.11.1:\n+    resolution: {integrity: sha512-vDkbxiB8zfnPdNK9Rajcey5C0w+QJugEglN0of+kmO8l7lDb77AnlKYQF7aarZuCrv+l0UvqL+68gSDr3k9LPQ==}\n+    dependencies:\n+      '@webassemblyjs/floating-point-hex-parser': 1.11.1\n+      '@webassemblyjs/helper-api-error': 1.11.1\n+      '@xtuc/long': 4.2.2\n+    dev: true\n+\n+  /@webassemblyjs/helper-wasm-bytecode/1.11.1:\n+    resolution: {integrity: sha512-PvpoOGiJwXeTrSf/qfudJhwlvDQxFgelbMqtq52WWiXC6Xgg1IREdngmPN3bs4RoO83PnL/nFrxucXj1+BX62Q==}\n+    dev: true\n+\n+  /@webassemblyjs/helper-wasm-section/1.11.1:\n+    resolution: {integrity: sha512-10P9No29rYX1j7F3EVPX3JvGPQPae+AomuSTPiF9eBQeChHI6iqjMIwR9JmOJXwpnn/oVGDk7I5IlskuMwU/pg==}\n+    dependencies:\n+      '@webassemblyjs/ast': 1.11.1\n+      '@webassemblyjs/helper-buffer': 1.11.1\n+      '@webassemblyjs/helper-wasm-bytecode': 1.11.1\n+      '@webassemblyjs/wasm-gen': 1.11.1\n+    dev: true\n+\n+  /@webassemblyjs/ieee754/1.11.1:\n+    resolution: {integrity: sha512-hJ87QIPtAMKbFq6CGTkZYJivEwZDbQUgYd3qKSadTNOhVY7p+gfP6Sr0lLRVTaG1JjFj+r3YchoqRYxNH3M0GQ==}\n+    dependencies:\n+      '@xtuc/ieee754': 1.2.0\n+    dev: true\n+\n+  /@webassemblyjs/leb128/1.11.1:\n+    resolution: {integrity: sha512-BJ2P0hNZ0u+Th1YZXJpzW6miwqQUGcIHT1G/sf72gLVD9DZ5AdYTqPNbHZh6K1M5VmKvFXwGSWZADz+qBWxeRw==}\n+    dependencies:\n+      '@xtuc/long': 4.2.2\n+    dev: true\n+\n+  /@webassemblyjs/utf8/1.11.1:\n+    resolution: {integrity: sha512-9kqcxAEdMhiwQkHpkNiorZzqpGrodQQ2IGrHHxCy+Ozng0ofyMA0lTqiLkVs1uzTRejX+/O0EOT7KxqVPuXosQ==}\n+    dev: true\n+\n+  /@webassemblyjs/wasm-edit/1.11.1:\n+    resolution: {integrity: sha512-g+RsupUC1aTHfR8CDgnsVRVZFJqdkFHpsHMfJuWQzWU3tvnLC07UqHICfP+4XyL2tnr1amvl1Sdp06TnYCmVkA==}\n+    dependencies:\n+      '@webassemblyjs/ast': 1.11.1\n+      '@webassemblyjs/helper-buffer': 1.11.1\n+      '@webassemblyjs/helper-wasm-bytecode': 1.11.1\n+      '@webassemblyjs/helper-wasm-section': 1.11.1\n+      '@webassemblyjs/wasm-gen': 1.11.1\n+      '@webassemblyjs/wasm-opt': 1.11.1\n+      '@webassemblyjs/wasm-parser': 1.11.1\n+      '@webassemblyjs/wast-printer': 1.11.1\n+    dev: true\n+\n+  /@webassemblyjs/wasm-gen/1.11.1:\n+    resolution: {integrity: sha512-F7QqKXwwNlMmsulj6+O7r4mmtAlCWfO/0HdgOxSklZfQcDu0TpLiD1mRt/zF25Bk59FIjEuGAIyn5ei4yMfLhA==}\n+    dependencies:\n+      '@webassemblyjs/ast': 1.11.1\n+      '@webassemblyjs/helper-wasm-bytecode': 1.11.1\n+      '@webassemblyjs/ieee754': 1.11.1\n+      '@webassemblyjs/leb128': 1.11.1\n+      '@webassemblyjs/utf8': 1.11.1\n+    dev: true\n+\n+  /@webassemblyjs/wasm-opt/1.11.1:\n+    resolution: {integrity: sha512-VqnkNqnZlU5EB64pp1l7hdm3hmQw7Vgqa0KF/KCNO9sIpI6Fk6brDEiX+iCOYrvMuBWDws0NkTOxYEb85XQHHw==}\n+    dependencies:\n+      '@webassemblyjs/ast': 1.11.1\n+      '@webassemblyjs/helper-buffer': 1.11.1\n+      '@webassemblyjs/wasm-gen': 1.11.1\n+      '@webassemblyjs/wasm-parser': 1.11.1\n+    dev: true\n+\n+  /@webassemblyjs/wasm-parser/1.11.1:\n+    resolution: {integrity: sha512-rrBujw+dJu32gYB7/Lup6UhdkPx9S9SnobZzRVL7VcBH9Bt9bCBLEuX/YXOOtBsOZ4NQrRykKhffRWHvigQvOA==}\n+    dependencies:\n+      '@webassemblyjs/ast': 1.11.1\n+      '@webassemblyjs/helper-api-error': 1.11.1\n+      '@webassemblyjs/helper-wasm-bytecode': 1.11.1\n+      '@webassemblyjs/ieee754': 1.11.1\n+      '@webassemblyjs/leb128': 1.11.1\n+      '@webassemblyjs/utf8': 1.11.1\n+    dev: true\n+\n+  /@webassemblyjs/wast-printer/1.11.1:\n+    resolution: {integrity: sha512-IQboUWM4eKzWW+N/jij2sRatKMh99QEelo3Eb2q0qXkvPRISAj8Qxtmw5itwqK+TTkBuUIE45AxYPToqPtL5gg==}\n+    dependencies:\n+      '@webassemblyjs/ast': 1.11.1\n+      '@xtuc/long': 4.2.2\n+    dev: true\n+\n+  /@xtuc/ieee754/1.2.0:\n+    resolution: {integrity: sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==}\n+    dev: true\n+\n+  /@xtuc/long/4.2.2:\n+    resolution: {integrity: sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /acorn-import-assertions/1.8.0_acorn@8.7.1:\n+    resolution: {integrity: sha512-m7VZ3jwz4eK6A4Vtt8Ew1/mNbP24u0FhdyfA7fSvnJR6LMdfOYnmuIrrJAgrYfYJ10F/otaHTtrtrtmHdMNzEw==}\n+    peerDependencies:\n+      acorn: ^8\n+    dependencies:\n+      acorn: 8.7.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ajv-keywords/3.5.2_ajv@6.12.6:\n+    resolution: {integrity: sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==}\n+    peerDependencies:\n+      ajv: ^6.9.1\n+    dependencies:\n+      ajv: 6.12.6\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /big.js/5.2.2:\n+    resolution: {integrity: sha512-vyL2OymJxmarO8gxMr0mhChsO9QGwhynfuu4+MHTAW6czfq9humCB7rKpUjDd9YUiDPU4mzpyupFSvOClAwbmQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /browserslist/4.20.3:\n+    resolution: {integrity: sha512-NBhymBQl1zM0Y5dQT/O+xiLP9/rzOIQdKM/eMJBAq7yBgaB6krIYLGejrwVYnSHZdqjscB1SPuAjHwxjvN6Wdg==}\n+    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n+    hasBin: true\n+    dependencies:\n+      caniuse-lite: 1.0.30001341\n+      electron-to-chromium: 1.4.137\n+      escalade: 3.1.1\n+      node-releases: 2.0.4\n+      picocolors: 1.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /caniuse-lite/1.0.30001341:\n+    resolution: {integrity: sha512-2SodVrFFtvGENGCv0ChVJIDQ0KPaS1cg7/qtfMaICgeMolDdo/Z2OD32F0Aq9yl6F4YFwGPBS5AaPqNYiW4PoA==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /chrome-trace-event/1.0.3:\n+    resolution: {integrity: sha512-p3KULyQg4S7NIHixdwbGX+nFHkoBiA4YQmyWtjb8XngSKV124nJmRysgAeujbUVb15vh+RvFUfCPqU7rXk+hZg==}\n+    engines: {node: '>=6.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /electron-to-chromium/1.4.137:\n+    resolution: {integrity: sha512-0Rcpald12O11BUogJagX3HsCN3FE83DSqWjgXoHo5a72KUKMSfI39XBgJpgNNxS9fuGzytaFjE06kZkiVFy2qA==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /emojis-list/3.0.0:\n+    resolution: {integrity: sha512-/kyM18EfinwXZbno9FyUGeFh87KC8HRQBQGildHZbEuRyWFOmv1U10o9BBp8XVZDVNNuQKyIGIu5ZYAAXJ0V2Q==}\n+    engines: {node: '>= 4'}\n+    dev: true\n+\n+  /enhanced-resolve/5.9.3:\n+    resolution: {integrity: sha512-Bq9VSor+kjvW3f9/MiiR4eE3XYgOl7/rS8lnSxbRbF3kS0B2r+Y9w5krBWxZgDxASVZbdYrn5wT4j/Wb0J9qow==}\n+    engines: {node: '>=10.13.0'}\n+    dependencies:\n+      graceful-fs: 4.2.10\n+      tapable: 2.2.1\n+    dev: true\n+\n+  /errno/0.1.8:\n+    resolution: {integrity: sha512-dJ6oBr5SQ1VSd9qkk7ByRgb/1SH4JZjCHSW/mr63/QcXO9zLVxvJ6Oy13nio03rxpSnVDDjFor75SjVeZWPW/A==}\n+    hasBin: true\n+    dependencies:\n+      prr: 1.0.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /es-module-lexer/0.9.3:\n+    resolution: {integrity: sha512-1HQ2M2sPtxwnvOvT1ZClHyQDiggdNjURWpY2we6aMKCQiUVxTmVs2UYPLIrD84sS+kMdUwfBSylbJPwNnBrnHQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /events/3.3.0:\n+    resolution: {integrity: sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==}\n+    engines: {node: '>=0.8.x'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /file-loader/6.2.0_webpack@5.72.1:\n+    resolution: {integrity: sha512-qo3glqyTa61Ytg4u73GultjHGjdRyig3tG6lPtyX/jOEJvHif9uB0/OCI2Kif6ctF3caQTW2G5gym21oAsI4pw==}\n+    engines: {node: '>= 10.13.0'}\n+    peerDependencies:\n+      webpack: ^4.0.0 || ^5.0.0\n+    dependencies:\n+      loader-utils: 2.0.2\n+      schema-utils: 3.1.1\n+      webpack: 5.72.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /glob-to-regexp/0.4.1:\n+    resolution: {integrity: sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /jest-worker/27.5.1:\n+    resolution: {integrity: sha512-7vuh85V5cdDofPyxn58nrPjBktZo0u9x1g8WtjQol+jZDaE+fhN+cIvTj11GndBnMnyfrUOG1sZQxCdjKh+DKg==}\n+    engines: {node: '>= 10.13.0'}\n+    dependencies:\n+      '@types/node': 17.0.34\n+      merge-stream: 2.0.0\n+      supports-color: 8.1.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /json5/2.2.1:\n+    resolution: {integrity: sha512-1hqLFMSrGHRHxav9q9gNjJ5EXznIxGVO09xQRrwplcS8qs28pZ8s8hupZAmqDwZUmVZ2Qb2jnyPOWcDH8m8dlA==}\n+    engines: {node: '>=6'}\n+    hasBin: true\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /loader-runner/4.3.0:\n+    resolution: {integrity: sha512-3R/1M+yS3j5ou80Me59j7F9IMs4PXs3VqRrm0TU3AbKPxlmpoY1TNscJV/oGJXo8qCatFGTfDbY6W6ipGOYXfg==}\n+    engines: {node: '>=6.11.5'}\n+    dev: true\n+\n+  /loader-utils/2.0.2:\n+    resolution: {integrity: sha512-TM57VeHptv569d/GKh6TAYdzKblwDNiumOdkFnejjD0XwTH87K90w3O7AiJRqdQoXygvi1VQTJTLGhJl7WqA7A==}\n+    engines: {node: '>=8.9.0'}\n+    dependencies:\n+      big.js: 5.2.2\n+      emojis-list: 3.0.0\n+      json5: 2.2.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /memory-fs/0.5.0:\n+    resolution: {integrity: sha512-jA0rdU5KoQMC0e6ppoNRtpp6vjFq6+NY7r8hywnC7V+1Xj/MtHwGIbB1QaK/dunyjWteJzmkpd7ooeWg10T7GA==}\n+    engines: {node: '>=4.3.0 <5.0.0 || >=5.10'}\n+    dependencies:\n+      errno: 0.1.8\n+      readable-stream: 2.3.7\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /node-releases/2.0.4:\n+    resolution: {integrity: sha512-gbMzqQtTtDz/00jQzZ21PQzdI9PyLYqUSvD0p3naOhX4odFji0ZxYdnVwPTxmSwkmxhcFImpozceidSG+AgoPQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /prr/1.0.1:\n+    resolution: {integrity: sha1-0/wRS6BplaRexok/SEzrHXj19HY=}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /schema-utils/3.1.1:\n+    resolution: {integrity: sha512-Y5PQxS4ITlC+EahLuXaY86TXfR7Dc5lw294alXOq86JAHCihAIZfqv8nNCWvaEJvaC51uN9hbLGeV0cFBdH+Fw==}\n+    engines: {node: '>= 10.13.0'}\n+    dependencies:\n+      '@types/json-schema': 7.0.11\n+      ajv: 6.12.6\n+      ajv-keywords: 3.5.2_ajv@6.12.6\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /source-map/0.5.6:\n+    resolution: {integrity: sha1-dc449SvwczxafwwRjYEzSiu19BI=}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /supports-color/8.1.1:\n+    resolution: {integrity: sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==}\n+    engines: {node: '>=10'}\n+    dependencies:\n+      has-flag: 4.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /tapable/2.2.1:\n+    resolution: {integrity: sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==}\n+    engines: {node: '>=6'}\n+    dev: true\n+\n+  /terser-webpack-plugin/5.3.1_webpack@5.72.1:\n+    resolution: {integrity: sha512-GvlZdT6wPQKbDNW/GDQzZFg/j4vKU96yl2q6mcUkzKOgW4gwf1Z8cZToUCrz31XHlPWH8MVb1r2tFtdDtTGJ7g==}\n+    engines: {node: '>= 10.13.0'}\n+    peerDependencies:\n+      '@swc/core': '*'\n+      esbuild: '*'\n+      uglify-js: '*'\n+      webpack: ^5.1.0\n+    peerDependenciesMeta:\n+      '@swc/core':\n+        optional: true\n+      esbuild:\n+        optional: true\n+      uglify-js:\n+        optional: true\n+    dependencies:\n+      jest-worker: 27.5.1\n+      schema-utils: 3.1.1\n+      serialize-javascript: 6.0.0\n+      source-map: 0.6.1\n+      terser: 5.13.1\n+      webpack: 5.72.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /watchpack/2.3.1:\n+    resolution: {integrity: sha512-x0t0JuydIo8qCNctdDrn1OzH/qDzk2+rdCOC3YzumZ42fiMqmQ7T3xQurykYMhYfHaPHTp4ZxAx2NfUo1K6QaA==}\n+    engines: {node: '>=10.13.0'}\n+    dependencies:\n+      glob-to-regexp: 0.4.1\n+      graceful-fs: 4.2.10\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /webpack-sources/3.2.3:\n+    resolution: {integrity: sha512-/DyMEOrDgLKKIG0fmvtz+4dUX/3Ghozwgm6iPp8KRhvn+eQf9+Q7GWxVNMk3+uCPWfdXYC4ExGBckIXdFEfH1w==}\n+    engines: {node: '>=10.13.0'}\n+    dev: true\n+\n+  /webpack/5.72.1:\n+    resolution: {integrity: sha512-dXG5zXCLspQR4krZVR6QgajnZOjW2K/djHvdcRaDQvsjV9z9vaW6+ja5dZOYbqBBjF6kGXka/2ZyxNdc+8Jung==}\n+    engines: {node: '>=10.13.0'}\n+    hasBin: true\n+    peerDependencies:\n+      webpack-cli: '*'\n+    peerDependenciesMeta:\n+      webpack-cli:\n+        optional: true\n+    dependencies:\n+      '@types/eslint-scope': 3.7.3\n+      '@types/estree': 0.0.51\n+      '@webassemblyjs/ast': 1.11.1\n+      '@webassemblyjs/wasm-edit': 1.11.1\n+      '@webassemblyjs/wasm-parser': 1.11.1\n+      acorn: 8.7.1\n+      acorn-import-assertions: 1.8.0_acorn@8.7.1\n+      browserslist: 4.20.3\n+      chrome-trace-event: 1.0.3\n+      enhanced-resolve: 5.9.3\n+      es-module-lexer: 0.9.3\n+      eslint-scope: 5.1.1\n+      events: 3.3.0\n+      glob-to-regexp: 0.4.1\n+      graceful-fs: 4.2.10\n+      json-parse-even-better-errors: 2.3.1\n+      loader-runner: 4.3.0\n+      mime-types: 2.1.35\n+      neo-async: 2.6.2\n+      schema-utils: 3.1.1\n+      tapable: 2.2.1\n+      terser-webpack-plugin: 5.3.1_webpack@5.72.1\n+      watchpack: 2.3.1\n+      webpack-sources: 3.2.3\n+    transitivePeerDependencies:\n+      - '@swc/core'\n+      - esbuild\n+      - uglify-js\n+    dev: true\n+\n",
            "-": ""
          }
        ],
        "a/scripts/config.js": [
          {
            "+": "+    __VERSION__: version,\n+    __SSR_TEST__: false\n",
            "-": "-    __VERSION__: version\n"
          }
        ],
        "a/src/core/util/error.ts": [
          {
            "+": "+  if (\n+    (inBrowser || inWeex) &&\n+    typeof console !== 'undefined' &&\n+    !__SSR_TEST__\n+  ) {\n",
            "-": "-  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n"
          }
        ],
        "a/src/global.d.ts": [
          {
            "+": "+declare const __SSR_TEST__: boolean;\n",
            "-": ""
          }
        ],
        "a/src/server/create-basic-renderer.ts": [
          {
            "+": "+    context?: any,\n+    done?: any\n",
            "-": "-    context: any,\n-    done: any\n"
          }
        ],
        "a/src/server/create-renderer.ts": [
          {
            "+": "+    context?: any,\n+    cb?: any\n",
            "-": "-    context: any,\n-    cb: any\n"
          },
          {
            "+": "+      context?: any,\n+      cb?: any\n",
            "-": "-      context: any,\n-      cb: any\n"
          }
        ],
        "a/test/helpers/shim-done.ts": [
          {
            "+": "+const shimmed =\n+  ((global as any).it =\n+  (global as any).test =\n+    (desc: string, fn?: any, timeout?: number) => {\n+      if (fn && fn.length > 0) {\n+        _test(\n+          desc,\n+          () => {\n+            const [done, p] = wait()\n+            fn(done)\n+            return p\n+          },\n+          timeout\n+        )\n+      } else {\n+        _test(desc, fn, timeout)\n+      }\n+    })\n+\n+;['skip', 'only', 'todo', 'concurrent'].forEach(key => {\n+  shimmed[key] = _test[key]\n+})\n",
            "-": "-;(global as any).it = (global as any).test = (\n-  desc: string,\n-  fn?: any,\n-  timeout?: number\n-) => {\n-  if (fn && fn.length > 0) {\n-    _test(\n-      desc,\n-      () => {\n-        const [done, p] = wait()\n-        fn(done)\n-        return p\n-      },\n-      timeout\n-    )\n-  } else {\n-    _test(desc, fn, timeout)\n-  }\n-}\n"
          }
        ],
        "a/test/ssr/.eslintrc": [
          {
            "-": "-{\n-  \"env\": {\n-    \"jasmine\": true\n-  },\n-  \"plugins\": [\"jasmine\"],\n-  \"rules\": {\n-    \"jasmine/no-focused-tests\": 2\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/ssr/async-loader.ts": [],
        "a/test/ssr/compile-with-webpack.ts": [
          {
            "-": "-        {\n-          test: /\\.js$/,\n-          loader: 'babel-loader'\n-        },\n",
            "+": ""
          }
        ],
        "a/test/ssr/jasmine.ts": [
          {
            "-": "-module.exports = {\n-  spec_dir: 'test/ssr',\n-  spec_files: [\n-    '*.spec.js'\n-  ],\n-  helpers: [\n-    require.resolve('@babel/register'),\n-    '../helpers/to-have-been-warned.js'\n-  ]\n-}\n",
            "+": ""
          }
        ],
        "a/test/ssr/ssr-basic-renderer.spec.ts": [
          {
            "+": "+import Vue from 'vue'\n+import renderToString from 'web/entry-server-basic-renderer'\n+\n+;(global as any).__SSR_TEST__ = true\n",
            "-": "-import Vue from '../../dist/vue.runtime.common.js'\n-import renderToString from '../../packages/vue-server-renderer/basic'\n"
          }
        ],
        "a/test/ssr/ssr-bundle-render.spec.ts": [
          {
            "+": "+;(global as any).__SSR_TEST__ = true\n+\n",
            "-": ""
          },
          {
            "+": "+describe.skip('SSR: bundle renderer', () => {\n",
            "-": "-describe('SSR: bundle renderer', () => {\n"
          }
        ],
        "a/test/ssr/ssr-stream.spec.ts": [
          {
            "+": "+import Vue from 'vue'\n+import { createRenderer } from 'web/entry-server-renderer'\n",
            "-": "-import Vue from '../../dist/vue.runtime.common.js'\n-import { createRenderer } from '../../packages/vue-server-renderer'\n"
          },
          {
            "+": "+;(global as any).__SSR_TEST__ = true\n+\n",
            "-": ""
          },
          {
            "-": "-    Vue.config.silent = true\n",
            "+": ""
          },
          {
            "+": "+      expect(`oops`).toHaveBeenWarned()\n",
            "-": "-      Vue.config.silent = false\n"
          }
        ],
        "a/test/ssr/ssr-string.spec.ts": [
          {
            "+": "+import Vue from 'vue'\n",
            "-": "-import Vue from '../../dist/vue.runtime.common.js'\n"
          },
          {
            "+": "+import { createRenderer } from 'web/entry-server-renderer'\n",
            "-": "-import { createRenderer } from '../../packages/vue-server-renderer'\n"
          },
          {
            "+": "+;(global as any).__SSR_TEST__ = true\n+\n",
            "-": ""
          },
          {
            "-": "-    Vue.config.silent = true\n",
            "+": ""
          },
          {
            "-": "-      Vue.config.silent = false\n",
            "+": ""
          },
          {
            "+": "+      expect('foo').toHaveBeenWarned()\n",
            "-": ""
          },
          {
            "-": "-    Vue.config.silent = true\n",
            "+": ""
          },
          {
            "+": "+      expect(`oops`).toHaveBeenWarned()\n",
            "-": "-      Vue.config.silent = false\n"
          },
          {
            "+": "+  it('return Promise', async () => {\n+    await renderToString(new Vue({\n",
            "-": "-  it('return Promise', done => {\n-    renderToString(new Vue({\n"
          },
          {
            "+": "+    }))!.then(res => {\n",
            "-": "-    })).then(res => {\n"
          },
          {
            "-": "-      done()\n",
            "+": ""
          },
          {
            "+": "+  it('return Promise (error)', async () => {\n+    await renderToString(new Vue({\n",
            "-": "-  it('return Promise (error)', done => {\n-    Vue.config.silent = true\n-    renderToString(new Vue({\n"
          },
          {
            "+": "+    }))!.catch(err => {\n+      expect('foobar').toHaveBeenWarned()\n",
            "-": "-    })).catch(err => {\n"
          },
          {
            "-": "-      Vue.config.silent = false\n-      done()\n",
            "+": ""
          },
          {
            "+": "+        return new Promise<void>((resolve) => {\n",
            "-": "-        return new Promise((resolve) => {\n"
          },
          {
            "+": "+        return new Promise<void>((resolve) => {\n",
            "-": "-        return new Promise((resolve) => {\n"
          },
          {
            "+": "+            return new Promise<void>((resolve) => {\n",
            "-": "-            return new Promise((resolve) => {\n"
          },
          {
            "+": "+        return new Promise<void>((resolve) => {\n",
            "-": "-        return new Promise((resolve) => {\n"
          },
          {
            "+": "+              return new Promise<void>((resolve) => {\n",
            "-": "-              return new Promise((resolve) => {\n"
          },
          {
            "+": "+        return new Promise<void>((resolve) => {\n",
            "-": "-        return new Promise((resolve) => {\n"
          },
          {
            "+": "+        return new Promise<void>((resolve) => {\n",
            "-": "-        return new Promise((resolve) => {\n"
          }
        ],
        "a/test/ssr/ssr-template.spec.ts": [
          {
            "+": "+;(global as any).__SSR_TEST__ = true\n+\n",
            "-": ""
          },
          {
            "+": "+describe.skip('SSR: template option', () => {\n",
            "-": "-describe('SSR: template option', () => {\n"
          }
        ],
        "a/test/unit/.eslintrc.json": [
          {
            "-": "-  \"env\": {\n-    \"jasmine\": true\n-  },\n",
            "+": ""
          },
          {
            "-": "-  },\n-  \"plugins\": [\"jasmine\"],\n-  \"rules\": {\n-    \"jasmine/no-focused-tests\": 2,\n-    \"no-unused-vars\": 0\n",
            "+": ""
          }
        ],
        "a/test/vitest.setup.ts": [
          {
            "+": "+;(global as any).__SSR_TEST__ = false\n",
            "-": ""
          }
        ],
        "a/test/weex/.eslintrc": [
          {
            "-": "-{\n-  \"env\": {\n-    \"jasmine\": true\n-  },\n-  \"plugins\": [\"jasmine\"],\n-  \"rules\": {\n-    \"jasmine/no-focused-tests\": 2\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/weex/jasmine.ts": [
          {
            "-": "-module.exports = {\n-  spec_dir: 'test/weex',\n-  spec_files: [\n-    '**/*[sS]pec.js'\n-  ],\n-  helpers: [\n-    require.resolve('@babel/register')\n-  ]\n-}\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 22,
      "numOfChanges": 85,
      "qualityScore": 27
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "23b1fb550373e4784f0ac4c25219f4df25f1f527",
      "url": "https://github.com/vuejs/vue/commit/23b1fb550373e4784f0ac4c25219f4df25f1f527",
      "message": "test: skip transition tests for now",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T02:30:13Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/transition/transition-group.spec.ts": [
          {
            "-": "-import { isIE9 } from 'core/util/env'\n",
            "+": ""
          },
          {
            "+": "+describe.skip('Transition group', () => {\n+  const { duration, buffer } = injectStyles()\n",
            "-": "-if (!isIE9) {\n-  describe('Transition group', () => {\n-    const { duration, buffer } = injectStyles()\n"
          },
          {
            "+": "+  let el\n+  beforeEach(() => {\n+    el = document.createElement('div')\n+    document.body.appendChild(el)\n+  })\n",
            "-": "-    let el\n-    beforeEach(() => {\n-      el = document.createElement('div')\n-      document.body.appendChild(el)\n-    })\n"
          },
          {
            "+": "+  function createBasicVM(useIs?, appear = false) {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    function createBasicVM (useIs, appear) {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+            ${\n+              useIs\n+                ? `<span is=\"transition-group\">`\n+                : `<transition-group${appear ? ` appear` : ``}>`\n+            }\n",
            "-": "-            ${useIs ? `<span is=\"transition-group\">` : `<transition-group${appear ? ` appear` : ``}>`}\n"
          },
          {
            "+": "+      data: {\n+        items: ['a', 'b', 'c']\n",
            "-": "-        data: {\n-          items: ['a', 'b', 'c']\n-        }\n-      }).$mount(el)\n-      if (!appear) {\n-        expect(vm.$el.innerHTML).toBe(\n-          `<span>` +\n-            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n-          `</span>`\n-        )\n"
          },
          {
            "+": "+    }).$mount(el)\n+    if (!appear) {\n+      expect(vm.$el.innerHTML).toBe(\n+        `<span>` +\n+          vm.items.map((i) => `<div class=\"test\">${i}</div>`).join('') +\n+          `</span>`\n+      )\n",
            "-": "-      return vm\n"
          },
          {
            "+": "+    return vm\n+  }\n",
            "-": ""
          },
          {
            "+": "+  it('enter', (done) => {\n+    const vm = createBasicVM()\n+    vm.items.push('d', 'e')\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        `<span>` +\n+          ['a', 'b', 'c'].map((i) => `<div class=\"test\">${i}</div>`).join('') +\n+          `<div class=\"test v-enter v-enter-active\">d</div>` +\n+          `<div class=\"test v-enter v-enter-active\">e</div>` +\n",
            "-": "-    it('enter', done => {\n-      const vm = createBasicVM()\n-      vm.items.push('d', 'e')\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          `<span>` +\n-            ['a', 'b', 'c'].map(i => `<div class=\"test\">${i}</div>`).join('') +\n-            `<div class=\"test v-enter v-enter-active\">d</div>` +\n-            `<div class=\"test v-enter v-enter-active\">e</div>` +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            ['a', 'b', 'c']\n+              .map((i) => `<div class=\"test\">${i}</div>`)\n+              .join('') +\n",
            "-": "-            ['a', 'b', 'c'].map(i => `<div class=\"test\">${i}</div>`).join('') +\n"
          },
          {
            "+": "+            `</span>`\n",
            "-": "-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+            vm.items.map((i) => `<div class=\"test\">${i}</div>`).join('') +\n+            `</span>`\n",
            "-": "-            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('leave', (done) => {\n+    const vm = createBasicVM()\n+    vm.items = ['b']\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        `<span>` +\n+          `<div class=\"test v-leave v-leave-active\">a</div>` +\n+          `<div class=\"test\">b</div>` +\n+          `<div class=\"test v-leave v-leave-active\">c</div>` +\n",
            "-": "-    it('leave', done => {\n-      const vm = createBasicVM()\n-      vm.items = ['b']\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          `<span>` +\n-            `<div class=\"test v-leave v-leave-active\">a</div>` +\n-            `<div class=\"test\">b</div>` +\n-            `<div class=\"test v-leave v-leave-active\">c</div>` +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            `</span>`\n",
            "-": "-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+            vm.items.map((i) => `<div class=\"test\">${i}</div>`).join('') +\n+            `</span>`\n",
            "-": "-            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('enter + leave', (done) => {\n+    const vm = createBasicVM()\n+    vm.items = ['b', 'c', 'd']\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        `<span>` +\n+          `<div class=\"test v-leave v-leave-active\">a</div>` +\n+          `<div class=\"test\">b</div>` +\n+          `<div class=\"test\">c</div>` +\n+          `<div class=\"test v-enter v-enter-active\">d</div>` +\n",
            "-": "-    it('enter + leave', done => {\n-      const vm = createBasicVM()\n-      vm.items = ['b', 'c', 'd']\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          `<span>` +\n-            `<div class=\"test v-leave v-leave-active\">a</div>` +\n-            `<div class=\"test\">b</div>` +\n-            `<div class=\"test\">c</div>` +\n-            `<div class=\"test v-enter v-enter-active\">d</div>` +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            `</span>`\n",
            "-": "-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+            vm.items.map((i) => `<div class=\"test\">${i}</div>`).join('') +\n+            `</span>`\n",
            "-": "-            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('use with \"is\" attribute', (done) => {\n+    const vm = createBasicVM(true)\n+    vm.items = ['b', 'c', 'd']\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        `<span>` +\n+          `<div class=\"test v-leave v-leave-active\">a</div>` +\n+          `<div class=\"test\">b</div>` +\n+          `<div class=\"test\">c</div>` +\n+          `<div class=\"test v-enter v-enter-active\">d</div>` +\n",
            "-": "-    it('use with \"is\" attribute', done => {\n-      const vm = createBasicVM(true)\n-      vm.items = ['b', 'c', 'd']\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          `<span>` +\n-            `<div class=\"test v-leave v-leave-active\">a</div>` +\n-            `<div class=\"test\">b</div>` +\n-            `<div class=\"test\">c</div>` +\n-            `<div class=\"test v-enter v-enter-active\">d</div>` +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            `</span>`\n",
            "-": "-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+            vm.items.map((i) => `<div class=\"test\">${i}</div>`).join('') +\n+            `</span>`\n",
            "-": "-            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('appear', (done) => {\n+    const vm = createBasicVM(false, true /* appear */)\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        `<span>` +\n+          vm.items\n+            .map((i) => `<div class=\"test v-enter v-enter-active\">${i}</div>`)\n+            .join('') +\n",
            "-": "-    it('appear', done => {\n-      const vm = createBasicVM(false, true /* appear */)\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          `<span>` +\n-            vm.items.map(i => `<div class=\"test v-enter v-enter-active\">${i}</div>`).join('') +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            vm.items\n+              .map(\n+                (i) => `<div class=\"test v-enter-active v-enter-to\">${i}</div>`\n+              )\n+              .join('') +\n+            `</span>`\n",
            "-": "-            vm.items.map(i => `<div class=\"test v-enter-active v-enter-to\">${i}</div>`).join('') +\n-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+            vm.items.map((i) => `<div class=\"test\">${i}</div>`).join('') +\n+            `</span>`\n",
            "-": "-            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('events', (done) => {\n+    let next\n+    const beforeEnterSpy = vi.fn()\n+    const afterEnterSpy = vi.fn()\n+    const afterLeaveSpy = vi.fn()\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('events', done => {\n-      let next\n-      const beforeEnterSpy = vi.fn()\n-      const afterEnterSpy = vi.fn()\n-      const afterLeaveSpy = vi.fn()\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: {\n+        items: ['a', 'b', 'c']\n+      },\n+      methods: {\n+        beforeEnter(el) {\n+          expect(el.textContent).toBe('d')\n+          beforeEnterSpy()\n",
            "-": "-        data: {\n-          items: ['a', 'b', 'c']\n"
          },
          {
            "+": "+        afterEnter(el) {\n+          expect(el.textContent).toBe('d')\n+          afterEnterSpy()\n+          next()\n+        },\n+        afterLeave(el) {\n+          expect(el.textContent).toBe('a')\n+          afterLeaveSpy()\n+          next()\n",
            "-": "-        methods: {\n-          beforeEnter (el) {\n-            expect(el.textContent).toBe('d')\n-            beforeEnterSpy()\n-          },\n-          afterEnter (el) {\n-            expect(el.textContent).toBe('d')\n-            afterEnterSpy()\n-            next()\n-          },\n-          afterLeave (el) {\n-            expect(el.textContent).toBe('a')\n-            afterLeaveSpy()\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n",
            "-": "-      }).$mount(el)\n"
          },
          {
            "+": "+    vm.items.push('d')\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        `<span>` +\n+          `<div class=\"test\">a</div>` +\n+          `<div class=\"test\">b</div>` +\n+          `<div class=\"test\">c</div>` +\n+          `<div class=\"test v-enter v-enter-active\">d</div>` +\n",
            "-": "-      vm.items.push('d')\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          `<span>` +\n-            `<div class=\"test\">a</div>` +\n-            `<div class=\"test\">b</div>` +\n-            `<div class=\"test\">c</div>` +\n-            `<div class=\"test v-enter v-enter-active\">d</div>` +\n"
          },
          {
            "+": "+      )\n+      expect(beforeEnterSpy.mock.calls.length).toBe(1)\n+    })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n",
            "-": "-        )\n-        expect(beforeEnterSpy.mock.calls.length).toBe(1)\n-      }).thenWaitFor(_next => { next = _next }).then(() => {\n"
          },
          {
            "+": "+            `</span>`\n",
            "-": "-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(_next => { next = _next }).then(() => {\n"
          },
          {
            "+": "+            `</span>`\n",
            "-": "-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('move', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('move', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: {\n+        items: ['a', 'b', 'c']\n+      }\n+    }).$mount(el)\n",
            "-": "-        data: {\n-          items: ['a', 'b', 'c']\n-        }\n-      }).$mount(el)\n"
          },
          {
            "+": "+    vm.items = ['d', 'b', 'a']\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML.replace(/\\s?style=\"\"(\\s?)/g, '$1')).toBe(\n+        `<span>` +\n+          `<div class=\"test group-enter group-enter-active\">d</div>` +\n+          `<div class=\"test\">b</div>` +\n+          `<div class=\"test group-move\">a</div>` +\n+          `<div class=\"test group-leave group-leave-active group-move\">c</div>` +\n",
            "-": "-      vm.items = ['d', 'b', 'a']\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML.replace(/\\s?style=\"\"(\\s?)/g, '$1')).toBe(\n-          `<span>` +\n-            `<div class=\"test group-enter group-enter-active\">d</div>` +\n-            `<div class=\"test\">b</div>` +\n-            `<div class=\"test group-move\">a</div>` +\n-            `<div class=\"test group-leave group-leave-active group-move\">c</div>` +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            `</span>`\n",
            "-": "-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration * 2)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(duration * 2).then(() => {\n"
          },
          {
            "+": "+            `</span>`\n",
            "-": "-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('warn unkeyed children', () => {\n+    new Vue({\n+      template: `<div><transition-group><div v-for=\"i in 3\"></div></transition-group></div>`\n+    }).$mount()\n+    expect(\n+      '<transition-group> children must be keyed: <div>'\n+    ).toHaveBeenWarned()\n+  })\n",
            "-": "-    it('warn unkeyed children', () => {\n-      new Vue({\n-        template: `<div><transition-group><div v-for=\"i in 3\"></div></transition-group></div>`\n-      }).$mount()\n-      expect('<transition-group> children must be keyed: <div>').toHaveBeenWarned()\n-    })\n"
          },
          {
            "+": "+  // GitHub issue #6006\n+  it('should work with dynamic name', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    // GitHub issue #6006\n-    it('should work with dynamic name', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: {\n+        items: ['a', 'b', 'c'],\n+        name: 'group'\n+      }\n+    }).$mount(el)\n",
            "-": "-        data: {\n-          items: ['a', 'b', 'c'],\n-          name: 'group'\n-        }\n-      }).$mount(el)\n"
          },
          {
            "+": "+    vm.name = 'invalid-name'\n+    vm.items = ['b', 'c', 'a']\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML.replace(/\\s?style=\"\"(\\s?)/g, '$1')).toBe(\n+        `<span>` + `<div>b</div>` + `<div>c</div>` + `<div>a</div>` + `</span>`\n+      )\n+      vm.name = 'group'\n+      vm.items = ['a', 'b', 'c']\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      vm.name = 'invalid-name'\n-      vm.items = ['b', 'c', 'a']\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML.replace(/\\s?style=\"\"(\\s?)/g, '$1')).toBe(\n-          `<span>` +\n-            `<div>b</div>` +\n-            `<div>c</div>` +\n-            `<div>a</div>` +\n-          `</span>`\n-        )\n-        vm.name = 'group'\n-        vm.items = ['a', 'b', 'c']\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            `</span>`\n",
            "-": "-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration * 2 + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(duration * 2 + buffer).then(() => {\n"
          },
          {
            "+": "+            `</span>`\n",
            "-": "-          `</span>`\n"
          },
          {
            "+": "+      })\n+      .then(done)\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+})\n",
            "-": "-}\n"
          }
        ],
        "a/test/unit/features/transition/transition-mode.spec.ts": [
          {
            "-": "-import { isIE9 } from 'core/util/env'\n",
            "+": ""
          },
          {
            "+": "+describe.skip('Transition mode', () => {\n+  const { duration, buffer } = injectStyles()\n+  const components = {\n+    one: { template: '<div>one</div>' },\n+    two: { template: '<div>two</div>' }\n+  }\n",
            "-": "-if (!isIE9) {\n-  describe('Transition mode', () => {\n-    const { duration, buffer } = injectStyles()\n-    const components = {\n-      one: { template: '<div>one</div>' },\n-      two: { template: '<div>two</div>' }\n-    }\n"
          },
          {
            "+": "+  let el\n+  beforeEach(() => {\n+    el = document.createElement('div')\n+    document.body.appendChild(el)\n+  })\n",
            "-": "-    let el\n-    beforeEach(() => {\n-      el = document.createElement('div')\n-      document.body.appendChild(el)\n-    })\n"
          },
          {
            "+": "+  it('dynamic components, simultaneous', (done) => {\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('dynamic components, simultaneous', done => {\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: { view: 'one' },\n+      components\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test v-leave v-leave-active\">one</div>' +\n",
            "-": "-        data: { view: 'one' },\n-        components\n-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test v-leave v-leave-active\">one</div>' +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test v-enter-active v-enter-to\">two</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+      })\n+      .then(done)\n+  })\n",
            "-": "-          '<div class=\"test v-enter-active v-enter-to\">two</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>'\n-        )\n-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('dynamic components, out-in', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('dynamic components, out-in', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: { view: 'one' },\n+      components,\n+      methods: {\n+        afterLeave() {\n+          next()\n",
            "-": "-        data: { view: 'one' },\n-        components,\n-        methods: {\n-          afterLeave () {\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(_next => { next = _next }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>'\n-        )\n-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  // #3440\n+  it('dynamic components, out-in (with extra re-render)', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    // #3440\n-    it('dynamic components, out-in (with extra re-render)', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: { view: 'one' },\n+      components,\n+      methods: {\n+        afterLeave() {\n+          next()\n",
            "-": "-        data: { view: 'one' },\n-        components,\n-        methods: {\n-          afterLeave () {\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(_next => { next = _next }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>'\n-        )\n-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('dynamic components, in-out', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('dynamic components, in-out', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: { view: 'one' },\n+      components,\n+      methods: {\n+        afterEnter() {\n+          next()\n",
            "-": "-        data: { view: 'one' },\n-        components,\n-        methods: {\n-          afterEnter () {\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test\">one</div>' +\n",
            "-": "-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>' +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n",
            "-": "-          '<div class=\"test test-enter-active test-enter-to\">two</div>'\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(_next => { next = _next }).then(() => {\n"
          },
          {
            "+": "+          '<div class=\"test\">one</div>' + '<div class=\"test\">two</div>'\n",
            "-": "-          '<div class=\"test\">one</div>' +\n-          '<div class=\"test\">two</div>'\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test\">two</div>'\n",
            "-": "-          '<div class=\"test\">two</div>'\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test\">two</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+      })\n+      .then(done)\n+  })\n",
            "-": "-          '<div class=\"test\">two</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>'\n-        )\n-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('dynamic components, in-out with early cancel', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('dynamic components, in-out with early cancel', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: { view: 'one' },\n+      components,\n+      methods: {\n+        afterEnter() {\n+          next()\n",
            "-": "-        data: { view: 'one' },\n-        components,\n-        methods: {\n-          afterEnter () {\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test\">one</div>' +\n",
            "-": "-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>' +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n",
            "-": "-          '<div class=\"test test-enter-active test-enter-to\">two</div>'\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test test-enter test-enter-active\">one</div>'\n",
            "-": "-          '<div class=\"test test-enter test-enter-active\">one</div>'\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test test-enter-active test-enter-to\">one</div>'\n",
            "-": "-          '<div class=\"test test-enter-active test-enter-to\">one</div>'\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(_next => { next = _next }).then(() => {\n"
          },
          {
            "+": "+          '<div class=\"test\">two</div>' + '<div class=\"test\">one</div>'\n",
            "-": "-          '<div class=\"test\">two</div>' +\n-          '<div class=\"test\">one</div>'\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test\">one</div>'\n",
            "-": "-          '<div class=\"test\">one</div>'\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test\">one</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+      })\n+      .then(done)\n+  })\n",
            "-": "-          '<div class=\"test\">one</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>'\n-        )\n-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('normal elements with different keys, simultaneous', (done) => {\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('normal elements with different keys, simultaneous', done => {\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: { view: 'one' },\n+      components\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test v-leave v-leave-active\">one</div>' +\n",
            "-": "-        data: { view: 'one' },\n-        components\n-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test v-leave v-leave-active\">one</div>' +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test v-enter-active v-enter-to\">two</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+      })\n+      .then(done)\n+  })\n",
            "-": "-          '<div class=\"test v-enter-active v-enter-to\">two</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>'\n-        )\n-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('normal elements with different keys, out-in', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('normal elements with different keys, out-in', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: { view: 'one' },\n+      components,\n+      methods: {\n+        afterLeave() {\n+          next()\n",
            "-": "-        data: { view: 'one' },\n-        components,\n-        methods: {\n-          afterLeave () {\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(_next => { next = _next }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>'\n-        )\n-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('normal elements with different keys, in-out', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('normal elements with different keys, in-out', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: { view: 'one' },\n+      components,\n+      methods: {\n+        afterEnter() {\n+          next()\n",
            "-": "-        data: { view: 'one' },\n-        components,\n-        methods: {\n-          afterEnter () {\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test\">one</div>' +\n",
            "-": "-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>' +\n"
          },
          {
            "+": "+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n",
            "-": "-          '<div class=\"test test-enter-active test-enter-to\">two</div>'\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(_next => { next = _next }).then(() => {\n"
          },
          {
            "+": "+          '<div class=\"test\">one</div>' + '<div class=\"test\">two</div>'\n",
            "-": "-          '<div class=\"test\">one</div>' +\n-          '<div class=\"test\">two</div>'\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test\">two</div>'\n",
            "-": "-          '<div class=\"test\">two</div>'\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+            '<div class=\"test\">two</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+      })\n+      .then(done)\n+  })\n",
            "-": "-          '<div class=\"test\">two</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>'\n-        )\n-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition out-in on async component (resolve before leave complete)', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition out-in on async component (resolve before leave complete)', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      components: {\n+        componentA: (resolve) => {\n+          setTimeout(() => {\n+            resolve({ template: '<div><h1>component A</h1></div>' })\n+            next1()\n+          }, duration / 2)\n",
            "-": "-        components: {\n-          componentA: resolve => {\n-            setTimeout(() => {\n-              resolve({ template: '<div><h1>component A</h1></div>' })\n-              next1()\n-            }, duration / 2)\n-          },\n-          componentB: resolve => {\n-            setTimeout(() => {\n-              resolve({ template: '<div><h1>component B</h1></div>' })\n-            }, duration / 2)\n-          }\n"
          },
          {
            "+": "+        componentB: (resolve) => {\n+          setTimeout(() => {\n+            resolve({ template: '<div><h1>component B</h1></div>' })\n+          }, duration / 2)\n",
            "-": "-        data: {\n-          ok: true\n"
          },
          {
            "+": "+      },\n+      data: {\n+        ok: true\n+      }\n+    }).$mount(el)\n",
            "-": "-      }).$mount(el)\n"
          },
          {
            "+": "+    expect(vm.$el.innerHTML).toBe('<!---->')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<!---->')\n"
          },
          {
            "+": "+    function next1() {\n+      Vue.nextTick(() => {\n+        expect(vm.$el.children.length).toBe(1)\n+        expect(vm.$el.textContent).toBe('component A')\n+        expect(vm.$el.children[0].className).toBe(\n+          'test-anim-enter test-anim-enter-active'\n+        )\n+        nextFrame(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test-anim-enter-active test-anim-enter-to'\n+          )\n+          setTimeout(() => {\n+            expect(vm.$el.children[0].className).toBe('')\n+            vm.ok = false\n+            next2()\n+          }, duration + buffer)\n",
            "-": "-      function next1 () {\n-        Vue.nextTick(() => {\n-          expect(vm.$el.children.length).toBe(1)\n-          expect(vm.$el.textContent).toBe('component A')\n-          expect(vm.$el.children[0].className).toBe('test-anim-enter test-anim-enter-active')\n-          nextFrame(() => {\n-            expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n-            setTimeout(() => {\n-              expect(vm.$el.children[0].className).toBe('')\n-              vm.ok = false\n-              next2()\n-            }, duration + buffer)\n-          })\n"
          },
          {
            "+": "+      })\n+    }\n",
            "-": "-      }\n"
          },
          {
            "+": "+    function next2() {\n+      waitForUpdate(() => {\n+        expect(vm.$el.children.length).toBe(1)\n+        expect(vm.$el.textContent).toBe('component A')\n+        expect(vm.$el.children[0].className).toBe(\n+          'test-anim-leave test-anim-leave-active'\n+        )\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test-anim-leave-active test-anim-leave-to'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n",
            "-": "-      function next2 () {\n-        waitForUpdate(() => {\n-          expect(vm.$el.children.length).toBe(1)\n-          expect(vm.$el.textContent).toBe('component A')\n-          expect(vm.$el.children[0].className).toBe('test-anim-leave test-anim-leave-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test-anim-leave-active test-anim-leave-to')\n-        }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .thenWaitFor(duration * 2)\n+        .then(() => {\n",
            "-": "-        }).thenWaitFor(duration * 2).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(done)\n+    }\n+  })\n",
            "-": "-        }).then(done)\n-      }\n-    })\n"
          },
          {
            "+": "+  it('transition out-in on async component (resolve after leave complete)', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition out-in on async component (resolve after leave complete)', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      components: {\n+        componentA: { template: '<div><h1>component A</h1></div>' },\n+        componentB: (resolve) => {\n+          setTimeout(() => {\n+            resolve({ template: '<div><h1>component B</h1></div>' })\n+            Vue.nextTick(next)\n+          }, (duration + buffer) * 1.7)\n",
            "-": "-        components: {\n-          componentA: { template: '<div><h1>component A</h1></div>' },\n-          componentB: resolve => {\n-            setTimeout(() => {\n-              resolve({ template: '<div><h1>component B</h1></div>' })\n-              Vue.nextTick(next)\n-            }, (duration + buffer) * 1.7)\n-          }\n-        },\n-        data: {\n-          ok: true\n"
          },
          {
            "+": "+      },\n+      data: {\n+        ok: true\n+      }\n+    }).$mount(el)\n",
            "-": "-      }).$mount(el)\n"
          },
          {
            "+": "+    expect(vm.$el.innerHTML).toBe('<div><h1>component A</h1></div>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<div><h1>component A</h1></div>')\n"
          },
          {
            "+": "+    let next\n",
            "-": "-      let next\n"
          },
          {
            "+": "+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children.length).toBe(1)\n+      expect(vm.$el.textContent).toBe('component A')\n+      expect(vm.$el.children[0].className).toBe(\n+        'test-anim-leave test-anim-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test-anim-leave-active test-anim-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children.length).toBe(1)\n-        expect(vm.$el.textContent).toBe('component A')\n-        expect(vm.$el.children[0].className).toBe('test-anim-leave test-anim-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test-anim-leave-active test-anim-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(_next => { next = _next }).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test-anim-enter test-anim-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test-anim-enter-active test-anim-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test-anim-enter test-anim-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition in-out on async component', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition in-out on async component', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      components: {\n+        componentA: (resolve) => {\n+          setTimeout(() => {\n+            resolve({ template: '<div><h1>component A</h1></div>' })\n+            next1()\n+          }, duration / 2)\n",
            "-": "-        components: {\n-          componentA: resolve => {\n-            setTimeout(() => {\n-              resolve({ template: '<div><h1>component A</h1></div>' })\n-              next1()\n-            }, duration / 2)\n-          },\n-          componentB: resolve => {\n-            setTimeout(() => {\n-              resolve({ template: '<div><h1>component B</h1></div>' })\n-              next2()\n-            }, duration / 2)\n-          }\n"
          },
          {
            "+": "+        componentB: (resolve) => {\n+          setTimeout(() => {\n+            resolve({ template: '<div><h1>component B</h1></div>' })\n+            next2()\n+          }, duration / 2)\n",
            "-": "-        data: {\n-          ok: true\n"
          },
          {
            "+": "+      },\n+      data: {\n+        ok: true\n+      }\n+    }).$mount(el)\n",
            "-": "-      }).$mount(el)\n"
          },
          {
            "+": "+    expect(vm.$el.innerHTML).toBe('<!---->')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<!---->')\n"
          },
          {
            "+": "+    function next1() {\n+      Vue.nextTick(() => {\n+        expect(vm.$el.children.length).toBe(1)\n+        expect(vm.$el.textContent).toBe('component A')\n+        expect(vm.$el.children[0].className).toBe(\n+          'test-anim-enter test-anim-enter-active'\n+        )\n+        nextFrame(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test-anim-enter-active test-anim-enter-to'\n+          )\n+          setTimeout(() => {\n+            expect(vm.$el.children[0].className).toBe('')\n+            vm.ok = false\n+          }, duration + buffer)\n",
            "-": "-      function next1 () {\n-        Vue.nextTick(() => {\n-          expect(vm.$el.children.length).toBe(1)\n-          expect(vm.$el.textContent).toBe('component A')\n-          expect(vm.$el.children[0].className).toBe('test-anim-enter test-anim-enter-active')\n-          nextFrame(() => {\n-            expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n-            setTimeout(() => {\n-              expect(vm.$el.children[0].className).toBe('')\n-              vm.ok = false\n-            }, duration + buffer)\n-          })\n"
          },
          {
            "+": "+      })\n+    }\n",
            "-": "-      }\n"
          },
          {
            "+": "+    function next2() {\n+      waitForUpdate(() => {\n+        expect(vm.$el.children.length).toBe(2)\n+        expect(vm.$el.textContent).toBe('component Acomponent B')\n+        expect(vm.$el.children[0].className).toBe('')\n+        expect(vm.$el.children[1].className).toBe(\n+          'test-anim-enter test-anim-enter-active'\n+        )\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[1].className).toBe(\n+            'test-anim-enter-active test-anim-enter-to'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n",
            "-": "-      function next2 () {\n-        waitForUpdate(() => {\n-          expect(vm.$el.children.length).toBe(2)\n-          expect(vm.$el.textContent).toBe('component Acomponent B')\n-          expect(vm.$el.children[0].className).toBe('')\n-          expect(vm.$el.children[1].className).toBe('test-anim-enter test-anim-enter-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[1].className).toBe('test-anim-enter-active test-anim-enter-to')\n-        }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n",
            "-": "-        }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(done)\n+    }\n+  })\n",
            "-": "-        }).then(done)\n-      }\n-    })\n"
          },
          {
            "+": "+  it('warn invalid mode', () => {\n+    new Vue({\n+      template: '<transition mode=\"foo\"><div>123</div></transition>'\n+    }).$mount()\n+    expect('invalid <transition> mode: foo').toHaveBeenWarned()\n",
            "-": "-    it('warn invalid mode', () => {\n-      new Vue({\n-        template: '<transition mode=\"foo\"><div>123</div></transition>'\n-      }).$mount()\n-      expect('invalid <transition> mode: foo').toHaveBeenWarned()\n-    })\n"
          },
          {
            "+": "+})\n",
            "-": "-}\n"
          }
        ],
        "a/test/unit/features/transition/transition-with-keep-alive.spec.ts": [
          {
            "+": "+import injectStyles from './inject-styles'\n",
            "-": "-import injectStyles from '../transition/inject-styles'\n-import { isIE9 } from 'core/util/env'\n"
          },
          {
            "+": "+describe.skip('Transition w/ KeepAlive', () => {\n+  const { duration, buffer } = injectStyles()\n",
            "-": "-if (!isIE9) {\n-  describe('Transition w/ KeepAlive', () => {\n-    const { duration, buffer } = injectStyles()\n"
          },
          {
            "+": "+  let components, one, two, el\n+  beforeEach(() => {\n+    one = {\n+      template: '<div>one</div>',\n+      created: vi.fn(),\n+      mounted: vi.fn(),\n+      activated: vi.fn(),\n+      deactivated: vi.fn(),\n+      destroyed: vi.fn()\n+    }\n+    two = {\n+      template: '<div>two</div>',\n+      created: vi.fn(),\n+      mounted: vi.fn(),\n+      activated: vi.fn(),\n+      deactivated: vi.fn(),\n+      destroyed: vi.fn()\n",
            "-": "-    let components, one, two, el\n-    beforeEach(() => {\n-      one = {\n-        template: '<div>one</div>',\n-        created: vi.fn(),\n-        mounted: vi.fn(),\n-        activated: vi.fn(),\n-        deactivated: vi.fn(),\n-        destroyed: vi.fn()\n-      }\n-      two = {\n-        template: '<div>two</div>',\n-        created: vi.fn(),\n-        mounted: vi.fn(),\n-        activated: vi.fn(),\n-        deactivated: vi.fn(),\n-        destroyed: vi.fn()\n-      }\n-      components = {\n-        one,\n-        two\n-      }\n-      el = document.createElement('div')\n-      document.body.appendChild(el)\n-    })\n-\n-    function assertHookCalls(component, callCounts) {\n-      expect([\n-        component.created.mock.calls.length,\n-        component.mounted.mock.calls.length,\n-        component.activated.mock.calls.length,\n-        component.deactivated.mock.calls.length,\n-        component.destroyed.mock.calls.length\n-      ]).toEqual(callCounts)\n"
          },
          {
            "+": "+    components = {\n+      one,\n+      two\n+    }\n+    el = document.createElement('div')\n+    document.body.appendChild(el)\n+  })\n",
            "-": ""
          },
          {
            "+": "+  function assertHookCalls(component, callCounts) {\n+    expect([\n+      component.created.mock.calls.length,\n+      component.mounted.mock.calls.length,\n+      component.activated.mock.calls.length,\n+      component.deactivated.mock.calls.length,\n+      component.destroyed.mock.calls.length\n+    ]).toEqual(callCounts)\n+  }\n+\n+  it('with transition-mode out-in', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('with transition-mode out-in', (done) => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: {\n+        view: 'one'\n+      },\n+      components,\n+      methods: {\n+        afterLeave() {\n+          next()\n",
            "-": "-        data: {\n-          view: 'one'\n-        },\n-        components,\n-        methods: {\n-          afterLeave() {\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    assertHookCalls(one, [1, 1, 1, 0, 0])\n+    assertHookCalls(two, [0, 0, 0, 0, 0])\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n+      )\n+      assertHookCalls(one, [1, 1, 1, 1, 0])\n",
            "-": "-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      assertHookCalls(one, [1, 1, 1, 0, 0])\n"
          },
          {
            "+": "+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      vm.view = 'two'\n-      waitForUpdate(() => {\n"
          },
          {
            "+": "+          '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n+        )\n+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<!---->')\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter test-enter-active\">two</div>'\n",
            "-": "-          '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n"
          },
          {
            "+": "+        assertHookCalls(two, [1, 1, 1, 0, 0])\n",
            "-": "-        assertHookCalls(two, [0, 0, 0, 0, 0])\n"
          },
          {
            "+": "+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter-active test-enter-to\">two</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 0, 0])\n+      })\n+      .then(() => {\n+        vm.view = 'one'\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave test-leave-active\">two</div><!---->'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active test-leave-to\">two</div><!---->'\n+        )\n+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<!---->')\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter test-enter-active\">one</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter-active test-enter-to\">one</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n+      })\n+      .then(done)\n+  })\n",
            "-": "-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n-          )\n-        })\n-        .thenWaitFor((_next) => {\n-          next = _next\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<!---->')\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter test-enter-active\">two</div>'\n-          )\n-          assertHookCalls(one, [1, 1, 1, 1, 0])\n-          assertHookCalls(two, [1, 1, 1, 0, 0])\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n-          )\n-        })\n-        .thenWaitFor(duration + buffer)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n-          assertHookCalls(one, [1, 1, 1, 1, 0])\n-          assertHookCalls(two, [1, 1, 1, 0, 0])\n-        })\n-        .then(() => {\n-          vm.view = 'one'\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave test-leave-active\">two</div><!---->'\n-          )\n-          assertHookCalls(one, [1, 1, 1, 1, 0])\n-          assertHookCalls(two, [1, 1, 1, 1, 0])\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave-active test-leave-to\">two</div><!---->'\n-          )\n-        })\n-        .thenWaitFor((_next) => {\n-          next = _next\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<!---->')\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter test-enter-active\">one</div>'\n-          )\n-          assertHookCalls(one, [1, 1, 2, 1, 0])\n-          assertHookCalls(two, [1, 1, 1, 1, 0])\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter-active test-enter-to\">one</div>'\n-          )\n-        })\n-        .thenWaitFor(duration + buffer)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n-          assertHookCalls(one, [1, 1, 2, 1, 0])\n-          assertHookCalls(two, [1, 1, 1, 1, 0])\n-        })\n-        .then(done)\n-    })\n"
          },
          {
            "+": "+  it('with transition-mode out-in + include', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('with transition-mode out-in + include', (done) => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: {\n+        view: 'one'\n+      },\n+      components,\n+      methods: {\n+        afterLeave() {\n+          next()\n",
            "-": "-        data: {\n-          view: 'one'\n-        },\n-        components,\n-        methods: {\n-          afterLeave() {\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    assertHookCalls(one, [1, 1, 1, 0, 0])\n+    assertHookCalls(two, [0, 0, 0, 0, 0])\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n+      )\n+      assertHookCalls(one, [1, 1, 1, 1, 0])\n",
            "-": "-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      assertHookCalls(one, [1, 1, 1, 0, 0])\n"
          },
          {
            "+": "+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n+        )\n+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<!---->')\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      vm.view = 'two'\n-      waitForUpdate(() => {\n"
          },
          {
            "+": "+          '<div class=\"test test-enter test-enter-active\">two</div>'\n",
            "-": "-          '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n"
          },
          {
            "+": "+        assertHookCalls(two, [1, 1, 0, 0, 0])\n",
            "-": "-        assertHookCalls(two, [0, 0, 0, 0, 0])\n"
          },
          {
            "+": "+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter-active test-enter-to\">two</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [1, 1, 0, 0, 0])\n+      })\n+      .then(() => {\n+        vm.view = 'one'\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave test-leave-active\">two</div><!---->'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [1, 1, 0, 0, 1])\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active test-leave-to\">two</div><!---->'\n+        )\n+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<!---->')\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter test-enter-active\">one</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 0, 0, 1])\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter-active test-enter-to\">one</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 0, 0, 1])\n+      })\n+      .then(done)\n+  })\n",
            "-": "-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n-          )\n-        })\n-        .thenWaitFor((_next) => {\n-          next = _next\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<!---->')\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter test-enter-active\">two</div>'\n-          )\n-          assertHookCalls(one, [1, 1, 1, 1, 0])\n-          assertHookCalls(two, [1, 1, 0, 0, 0])\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n-          )\n-        })\n-        .thenWaitFor(duration + buffer)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n-          assertHookCalls(one, [1, 1, 1, 1, 0])\n-          assertHookCalls(two, [1, 1, 0, 0, 0])\n-        })\n-        .then(() => {\n-          vm.view = 'one'\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave test-leave-active\">two</div><!---->'\n-          )\n-          assertHookCalls(one, [1, 1, 1, 1, 0])\n-          assertHookCalls(two, [1, 1, 0, 0, 1])\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave-active test-leave-to\">two</div><!---->'\n-          )\n-        })\n-        .thenWaitFor((_next) => {\n-          next = _next\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<!---->')\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter test-enter-active\">one</div>'\n-          )\n-          assertHookCalls(one, [1, 1, 2, 1, 0])\n-          assertHookCalls(two, [1, 1, 0, 0, 1])\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter-active test-enter-to\">one</div>'\n-          )\n-        })\n-        .thenWaitFor(duration + buffer)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n-          assertHookCalls(one, [1, 1, 2, 1, 0])\n-          assertHookCalls(two, [1, 1, 0, 0, 1])\n-        })\n-        .then(done)\n-    })\n"
          },
          {
            "+": "+  it('with transition-mode in-out', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('with transition-mode in-out', (done) => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: {\n+        view: 'one'\n+      },\n+      components,\n+      methods: {\n+        afterEnter() {\n+          next()\n",
            "-": "-        data: {\n-          view: 'one'\n-        },\n-        components,\n-        methods: {\n-          afterEnter() {\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    assertHookCalls(one, [1, 1, 1, 0, 0])\n+    assertHookCalls(two, [0, 0, 0, 0, 0])\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test\">one</div>' +\n+          '<div class=\"test test-enter test-enter-active\">two</div>'\n+      )\n+      assertHookCalls(one, [1, 1, 1, 1, 0])\n+      assertHookCalls(two, [1, 1, 1, 0, 0])\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      assertHookCalls(one, [1, 1, 1, 0, 0])\n-      assertHookCalls(two, [0, 0, 0, 0, 0])\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n"
          },
          {
            "+": "+            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n+        )\n+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' + '<div class=\"test\">two</div>'\n+        )\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave test-leave-active\">one</div>' +\n+            '<div class=\"test\">two</div>'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active test-leave-to\">one</div>' +\n+            '<div class=\"test\">two</div>'\n",
            "-": "-            '<div class=\"test test-enter test-enter-active\">two</div>'\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n",
            "-": ""
          },
          {
            "+": "+      .then(() => {\n+        vm.view = 'one'\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' +\n+            '<div class=\"test test-enter test-enter-active\">one</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' +\n+            '<div class=\"test test-enter-active test-enter-to\">one</div>'\n+        )\n+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' + '<div class=\"test\">one</div>'\n+        )\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave test-leave-active\">two</div>' +\n+            '<div class=\"test\">one</div>'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active test-leave-to\">two</div>' +\n+            '<div class=\"test\">one</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n+      })\n+      .then(done)\n+  })\n",
            "-": "-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test\">one</div>' +\n-              '<div class=\"test test-enter-active test-enter-to\">two</div>'\n-          )\n-        })\n-        .thenWaitFor((_next) => {\n-          next = _next\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test\">one</div>' + '<div class=\"test\">two</div>'\n-          )\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave test-leave-active\">one</div>' +\n-              '<div class=\"test\">two</div>'\n-          )\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave-active test-leave-to\">one</div>' +\n-              '<div class=\"test\">two</div>'\n-          )\n-        })\n-        .thenWaitFor(duration + buffer)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n-          assertHookCalls(one, [1, 1, 1, 1, 0])\n-          assertHookCalls(two, [1, 1, 1, 0, 0])\n-        })\n-        .then(() => {\n-          vm.view = 'one'\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test\">two</div>' +\n-              '<div class=\"test test-enter test-enter-active\">one</div>'\n-          )\n-          assertHookCalls(one, [1, 1, 2, 1, 0])\n-          assertHookCalls(two, [1, 1, 1, 1, 0])\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test\">two</div>' +\n-              '<div class=\"test test-enter-active test-enter-to\">one</div>'\n-          )\n-        })\n-        .thenWaitFor((_next) => {\n-          next = _next\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test\">two</div>' + '<div class=\"test\">one</div>'\n-          )\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave test-leave-active\">two</div>' +\n-              '<div class=\"test\">one</div>'\n-          )\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave-active test-leave-to\">two</div>' +\n-              '<div class=\"test\">one</div>'\n-          )\n-        })\n-        .thenWaitFor(duration + buffer)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n-          assertHookCalls(one, [1, 1, 2, 1, 0])\n-          assertHookCalls(two, [1, 1, 1, 1, 0])\n-        })\n-        .then(done)\n-    })\n"
          },
          {
            "+": "+  it('dynamic components, in-out with early cancel', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('dynamic components, in-out with early cancel', (done) => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: { view: 'one' },\n+      components,\n+      methods: {\n+        afterEnter() {\n+          next()\n",
            "-": "-        data: { view: 'one' },\n-        components,\n-        methods: {\n-          afterEnter() {\n-            next()\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('one')\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test\">one</div>' +\n+          '<div class=\"test test-enter test-enter-active\">two</div>'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n"
          },
          {
            "+": "+            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n",
            "-": "-            '<div class=\"test test-enter test-enter-active\">two</div>'\n"
          },
          {
            "+": "+        // switch again before enter finishes,\n+        // this cancels both enter and leave.\n+        vm.view = 'one'\n",
            "-": ""
          },
          {
            "+": "+      .then(() => {\n+        // 1. the pending leaving \"one\" should be removed instantly.\n+        // 2. the entering \"two\" should be placed into its final state instantly.\n+        // 3. a new \"one\" is created and entering\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' +\n+            '<div class=\"test test-enter test-enter-active\">one</div>'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' +\n+            '<div class=\"test test-enter-active test-enter-to\">one</div>'\n+        )\n+      })\n+      .thenWaitFor((_next) => {\n+        next = _next\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' + '<div class=\"test\">one</div>'\n+        )\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave test-leave-active\">two</div>' +\n+            '<div class=\"test\">one</div>'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active test-leave-to\">two</div>' +\n+            '<div class=\"test\">one</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+      })\n+      .then(done)\n+  })\n",
            "-": "-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test\">one</div>' +\n-              '<div class=\"test test-enter-active test-enter-to\">two</div>'\n-          )\n-          // switch again before enter finishes,\n-          // this cancels both enter and leave.\n-          vm.view = 'one'\n-        })\n-        .then(() => {\n-          // 1. the pending leaving \"one\" should be removed instantly.\n-          // 2. the entering \"two\" should be placed into its final state instantly.\n-          // 3. a new \"one\" is created and entering\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test\">two</div>' +\n-              '<div class=\"test test-enter test-enter-active\">one</div>'\n-          )\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test\">two</div>' +\n-              '<div class=\"test test-enter-active test-enter-to\">one</div>'\n-          )\n-        })\n-        .thenWaitFor((_next) => {\n-          next = _next\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test\">two</div>' + '<div class=\"test\">one</div>'\n-          )\n-        })\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave test-leave-active\">two</div>' +\n-              '<div class=\"test\">one</div>'\n-          )\n-        })\n-        .thenWaitFor(nextFrame)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave-active test-leave-to\">two</div>' +\n-              '<div class=\"test\">one</div>'\n-          )\n-        })\n-        .thenWaitFor(duration + buffer)\n-        .then(() => {\n-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n-        })\n-        .then(done)\n-    })\n"
          },
          {
            "+": "+  // #4339\n+  it('component with inner transition', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    // #4339\n-    it('component with inner transition', (done) => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { view: 'foo' },\n+      components: {\n+        foo: {\n+          template: '<transition><div class=\"test\">foo</div></transition>'\n+        },\n+        bar: {\n+          template:\n+            '<transition name=\"test\"><div class=\"test\">bar</div></transition>'\n",
            "-": "-        data: { view: 'foo' },\n-        components: {\n-          foo: {\n-            template: '<transition><div class=\"test\">foo</div></transition>'\n-          },\n-          bar: {\n-            template:\n-              '<transition name=\"test\"><div class=\"test\">bar</div></transition>'\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.view = 'bar'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test v-leave v-leave-active\">foo</div>' +\n+          '<div class=\"test test-enter test-enter-active\">bar</div>'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test v-leave-active v-leave-to\">foo</div>' +\n+            '<div class=\"test test-enter-active test-enter-to\">bar</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">bar</div>')\n+        vm.view = 'foo'\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave test-leave-active\">bar</div>' +\n+            '<div class=\"test v-enter v-enter-active\">foo</div>'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active test-leave-to\">bar</div>' +\n+            '<div class=\"test v-enter-active v-enter-to\">foo</div>'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).$mount(el)\n"
          },
          {
            "+": "+  it('async components with transition-mode out-in', (done) => {\n+    const barResolve = vi.fn()\n+    let next\n+    const foo = (resolve) => {\n+      setTimeout(() => {\n+        resolve(one)\n+        Vue.nextTick(next)\n+      }, duration / 2)\n+    }\n+    const bar = (resolve) => {\n+      setTimeout(() => {\n+        resolve(two)\n+        barResolve()\n+      }, duration / 2)\n+    }\n+    components = {\n+      foo,\n+      bar\n+    }\n+    const vm = new Vue({\n+      template: `<div>\n+          <transition name=\"test\" mode=\"out-in\" @after-enter=\"afterEnter\" @after-leave=\"afterLeave\">\n+            <keep-alive>\n+              <component :is=\"view\" class=\"test\"></component>\n+            </keep-alive>\n+          </transition>\n+        </div>`,\n+      data: {\n+        view: 'foo'\n+      },\n+      components,\n+      methods: {\n+        afterEnter() {\n+          next()\n+        },\n+        afterLeave() {\n+          next()\n+        }\n+      }\n+    }).$mount(el)\n+    expect(vm.$el.textContent).toBe('')\n+    next = () => {\n+      assertHookCalls(one, [1, 1, 1, 0, 0])\n+      assertHookCalls(two, [0, 0, 0, 0, 0])\n",
            "-": "-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.view = 'bar'\n"
          },
          {
            "+": "+          '<div class=\"test test-enter test-enter-active\">one</div>'\n",
            "-": "-          '<div class=\"test v-leave v-leave-active\">foo</div>' +\n-            '<div class=\"test test-enter test-enter-active\">bar</div>'\n"
          },
          {
            "+": "+            '<div class=\"test test-enter-active test-enter-to\">one</div>'\n",
            "-": "-            '<div class=\"test v-leave-active v-leave-to\">foo</div>' +\n-              '<div class=\"test test-enter-active test-enter-to\">bar</div>'\n"
          },
          {
            "+": "+        .thenWaitFor((_next) => {\n+          next = _next\n+        })\n",
            "-": "-        .thenWaitFor(duration + buffer)\n"
          },
          {
            "+": "+          // foo afterEnter get called\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+          vm.view = 'bar'\n",
            "-": "-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">bar</div>')\n-          vm.view = 'foo'\n"
          },
          {
            "+": "+        .thenWaitFor(nextFrame)\n",
            "-": ""
          },
          {
            "+": "+          assertHookCalls(one, [1, 1, 1, 1, 0])\n+          assertHookCalls(two, [0, 0, 0, 0, 0])\n",
            "-": ""
          },
          {
            "+": "+            '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n",
            "-": "-            '<div class=\"test test-leave test-leave-active\">bar</div>' +\n-              '<div class=\"test v-enter v-enter-active\">foo</div>'\n"
          },
          {
            "+": "+        .thenWaitFor((_next) => {\n+          next = _next\n+        })\n+        .then(() => {\n+          // foo afterLeave get called\n+          // and bar has already been resolved before afterLeave get called\n+          expect(barResolve.mock.calls.length).toBe(1)\n+          expect(vm.$el.innerHTML).toBe('<!---->')\n+        })\n",
            "-": ""
          },
          {
            "+": "+            '<div class=\"test test-enter test-enter-active\">two</div>'\n",
            "-": "-            '<div class=\"test test-leave-active test-leave-to\">bar</div>' +\n-              '<div class=\"test v-enter-active v-enter-to\">foo</div>'\n"
          },
          {
            "+": "+          assertHookCalls(one, [1, 1, 1, 1, 0])\n+          assertHookCalls(two, [1, 1, 1, 0, 0])\n",
            "-": ""
          },
          {
            "+": "+        .thenWaitFor(nextFrame)\n",
            "-": "-        .thenWaitFor(duration + buffer)\n"
          },
          {
            "-": "-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-        })\n-        .then(done)\n-    })\n-\n-    it('async components with transition-mode out-in', (done) => {\n-      const barResolve = vi.fn()\n-      let next\n-      const foo = (resolve) => {\n-        setTimeout(() => {\n-          resolve(one)\n-          Vue.nextTick(next)\n-        }, duration / 2)\n-      }\n-      const bar = (resolve) => {\n-        setTimeout(() => {\n-          resolve(two)\n-          barResolve()\n-        }, duration / 2)\n-      }\n-      components = {\n-        foo,\n-        bar\n-      }\n-      const vm = new Vue({\n-        template: `<div>\n-          <transition name=\"test\" mode=\"out-in\" @after-enter=\"afterEnter\" @after-leave=\"afterLeave\">\n-            <keep-alive>\n-              <component :is=\"view\" class=\"test\"></component>\n-            </keep-alive>\n-          </transition>\n-        </div>`,\n-        data: {\n-          view: 'foo'\n-        },\n-        components,\n-        methods: {\n-          afterEnter() {\n-            next()\n-          },\n-          afterLeave() {\n-            next()\n-          }\n-        }\n-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('')\n-      next = () => {\n-        assertHookCalls(one, [1, 1, 1, 0, 0])\n-        assertHookCalls(two, [0, 0, 0, 0, 0])\n-        waitForUpdate(() => {\n",
            "+": ""
          },
          {
            "+": "+            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n",
            "-": "-            '<div class=\"test test-enter test-enter-active\">one</div>'\n"
          },
          {
            "+": "+        .thenWaitFor((_next) => {\n+          next = _next\n+        })\n+        .then(() => {\n+          // bar afterEnter get called\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+        })\n+        .then(done)\n+    }\n+  })\n",
            "-": "-          .thenWaitFor(nextFrame)\n-          .then(() => {\n-            expect(vm.$el.innerHTML).toBe(\n-              '<div class=\"test test-enter-active test-enter-to\">one</div>'\n-            )\n-          })\n-          .thenWaitFor((_next) => {\n-            next = _next\n-          })\n-          .then(() => {\n-            // foo afterEnter get called\n-            expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n-            vm.view = 'bar'\n-          })\n-          .thenWaitFor(nextFrame)\n-          .then(() => {\n-            assertHookCalls(one, [1, 1, 1, 1, 0])\n-            assertHookCalls(two, [0, 0, 0, 0, 0])\n-            expect(vm.$el.innerHTML).toBe(\n-              '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n-            )\n-          })\n-          .thenWaitFor((_next) => {\n-            next = _next\n-          })\n-          .then(() => {\n-            // foo afterLeave get called\n-            // and bar has already been resolved before afterLeave get called\n-            expect(barResolve.mock.calls.length).toBe(1)\n-            expect(vm.$el.innerHTML).toBe('<!---->')\n-          })\n-          .thenWaitFor(nextFrame)\n-          .then(() => {\n-            expect(vm.$el.innerHTML).toBe(\n-              '<div class=\"test test-enter test-enter-active\">two</div>'\n-            )\n-            assertHookCalls(one, [1, 1, 1, 1, 0])\n-            assertHookCalls(two, [1, 1, 1, 0, 0])\n-          })\n-          .thenWaitFor(nextFrame)\n-          .then(() => {\n-            expect(vm.$el.innerHTML).toBe(\n-              '<div class=\"test test-enter-active test-enter-to\">two</div>'\n-            )\n-          })\n-          .thenWaitFor((_next) => {\n-            next = _next\n-          })\n-          .then(() => {\n-            // bar afterEnter get called\n-            expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n-          })\n-          .then(done)\n-      }\n-    })\n"
          },
          {
            "+": "+  // #10083\n+  it('should not attach event handler repeatedly', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    // #10083\n-    it('should not attach event handler repeatedly', (done) => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { showBtn: true, n: 0 },\n+      methods: {\n+        add() {\n+          this.n++\n",
            "-": "-        data: { showBtn: true, n: 0 },\n-        methods: {\n-          add() {\n-            this.n++\n-          }\n-        },\n-        components: {\n-          btn: { template: '<button>add 1</button>' }\n"
          },
          {
            "+": "+      },\n+      components: {\n+        btn: { template: '<button>add 1</button>' }\n+      }\n+    }).$mount()\n",
            "-": "-      }).$mount()\n"
          },
          {
            "+": "+    const btn = vm.$el\n+    expect(vm.n).toBe(0)\n+    btn.click()\n+    expect(vm.n).toBe(1)\n+    vm.showBtn = false\n+    waitForUpdate(() => {\n+      vm.showBtn = true\n",
            "-": "-      const btn = vm.$el\n-      expect(vm.n).toBe(0)\n-      btn.click()\n-      expect(vm.n).toBe(1)\n-      vm.showBtn = false\n-      waitForUpdate(() => {\n-        vm.showBtn = true\n-      })\n-        .then(() => {\n-          btn.click()\n-          expect(vm.n).toBe(2)\n-        })\n-        .then(done)\n"
          },
          {
            "+": "+      .then(() => {\n+        btn.click()\n+        expect(vm.n).toBe(2)\n+      })\n+      .then(done)\n",
            "-": ""
          },
          {
            "+": "+})\n",
            "-": "-}\n"
          }
        ],
        "a/test/unit/features/transition/transition.spec.ts": [
          {
            "-": "-import { isIE9 } from 'core/util/env'\n",
            "+": ""
          },
          {
            "+": "+describe.skip('Transition basic', () => {\n+  const { duration, buffer } = injectStyles() as {\n+    duration: number\n+    buffer: number\n+  }\n+  const explicitDuration = duration * 2\n+\n+  let el\n+  beforeEach(() => {\n+    el = document.createElement('div')\n+    document.body.appendChild(el)\n+  })\n",
            "-": "-if (!isIE9) {\n-  describe('Transition basic', () => {\n-    const { duration, buffer } = injectStyles() as { duration: number, buffer: number }\n-    const explicitDuration = duration * 2\n"
          },
          {
            "+": "+  it('basic transition', (done) => {\n+    const vm = new Vue({\n+      template:\n+        '<div><transition><div v-if=\"ok\" class=\"test\">foo</div></transition></div>',\n+      data: { ok: true }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n",
            "-": "-    let el\n-    beforeEach(() => {\n-      el = document.createElement('div')\n-      document.body.appendChild(el)\n"
          },
          {
            "+": "+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test v-leave-active v-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-\n-    it('basic transition', done => {\n-      const vm = new Vue({\n-        template: '<div><transition><div v-if=\"ok\" class=\"test\">foo</div></transition></div>',\n-        data: { ok: true }\n-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test v-enter-active v-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-enter-active v-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n-\n-    it('named transition', done => {\n-      const vm = new Vue({\n-        template: '<div><transition name=\"test\"><div v-if=\"ok\" class=\"test\">foo</div></transition></div>',\n-        data: { ok: true }\n-      }).$mount(el)\n"
          },
          {
            "+": "+  it('named transition', (done) => {\n+    const vm = new Vue({\n+      template:\n+        '<div><transition name=\"test\"><div v-if=\"ok\" class=\"test\">foo</div></transition></div>',\n+      data: { ok: true }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-leave test-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter test-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('custom transition classes', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('custom transition classes', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe('test bye byebye active more')\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test byebye active more bye-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        data: { ok: true }\n-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test bye byebye active more')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test byebye active more bye-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('dynamic transition', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('dynamic transition', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: {\n+        ok: true,\n+        trans: 'test'\n+      }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-leave test-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        data: {\n-          ok: true,\n-          trans: 'test'\n-        }\n-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test changed-enter changed-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test changed-enter-active changed-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test changed-enter changed-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test changed-enter-active changed-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('inline transition object', (done) => {\n+    const enter = vi.fn()\n+    const leave = vi.fn()\n+    const vm = new Vue({\n+      render(h) {\n+        return h('div', null, [\n+          h(\n+            'transition',\n+            {\n",
            "-": "-    it('inline transition object', done => {\n-      const enter = vi.fn()\n-      const leave = vi.fn()\n-      const vm = new Vue({\n-        render (h) {\n-          return h('div', null, [\n-            h('transition', {\n"
          },
          {
            "+": "+            },\n+            this.ok ? [h('div', { class: 'test' }, 'foo')] : undefined\n+          )\n+        ])\n+      },\n+      data: { ok: true }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe('test bye byebye active')\n+      expect(leave).toHaveBeenCalled()\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-            }, this.ok ? [h('div', { class: 'test' }, 'foo')] : undefined)\n-          ])\n-        },\n-        data: { ok: true }\n-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test bye byebye active')\n-        expect(leave).toHaveBeenCalled()\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition events', (done) => {\n+    const onLeaveSpy = vi.fn()\n+    const onEnterSpy = vi.fn()\n+    const beforeLeaveSpy = vi.fn()\n+    const beforeEnterSpy = vi.fn()\n+    const afterLeaveSpy = vi.fn()\n+    const afterEnterSpy = vi.fn()\n",
            "-": "-    it('transition events', done => {\n-      const onLeaveSpy = vi.fn()\n-      const onEnterSpy = vi.fn()\n-      const beforeLeaveSpy = vi.fn()\n-      const beforeEnterSpy = vi.fn()\n-      const afterLeaveSpy = vi.fn()\n-      const afterEnterSpy = vi.fn()\n"
          },
          {
            "+": "+    const vm = new Vue({\n+      template: `\n",
            "-": "-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      methods: {\n+        beforeLeave: (el) => {\n+          expect(el).toBe(vm.$el.children[0])\n+          expect(el.className).toBe('test')\n+          beforeLeaveSpy(el)\n+        },\n+        leave: (el) => onLeaveSpy(el),\n+        afterLeave: (el) => afterLeaveSpy(el),\n+        beforeEnter: (el) => {\n+          expect(vm.$el.contains(el)).toBe(false)\n+          expect(el.className).toBe('test')\n+          beforeEnterSpy(el)\n+        },\n+        enter: (el) => {\n+          expect(vm.$el.contains(el)).toBe(true)\n+          onEnterSpy(el)\n+        },\n+        afterEnter: (el) => afterEnterSpy(el)\n+      }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+\n+    let _el = vm.$el.children[0]\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(beforeLeaveSpy).toHaveBeenCalledWith(_el)\n+      expect(onLeaveSpy).toHaveBeenCalledWith(_el)\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-leave test-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        data: { ok: true },\n-        methods: {\n-          beforeLeave: (el) => {\n-            expect(el).toBe(vm.$el.children[0])\n-            expect(el.className).toBe('test')\n-            beforeLeaveSpy(el)\n-          },\n-          leave: (el) => onLeaveSpy(el),\n-          afterLeave: (el) => afterLeaveSpy(el),\n-          beforeEnter: (el) => {\n-            expect(vm.$el.contains(el)).toBe(false)\n-            expect(el.className).toBe('test')\n-            beforeEnterSpy(el)\n-          },\n-          enter: (el) => {\n-            expect(vm.$el.contains(el)).toBe(true)\n-            onEnterSpy(el)\n-          },\n-          afterEnter: (el) => afterEnterSpy(el)\n-        }\n-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-\n-      let _el = vm.$el.children[0]\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(beforeLeaveSpy).toHaveBeenCalledWith(_el)\n-        expect(onLeaveSpy).toHaveBeenCalledWith(_el)\n-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter test-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition events (v-show)', (done) => {\n+    const onLeaveSpy = vi.fn()\n+    const onEnterSpy = vi.fn()\n+    const beforeLeaveSpy = vi.fn()\n+    const beforeEnterSpy = vi.fn()\n+    const afterLeaveSpy = vi.fn()\n+    const afterEnterSpy = vi.fn()\n",
            "-": "-    it('transition events (v-show)', done => {\n-      const onLeaveSpy = vi.fn()\n-      const onEnterSpy = vi.fn()\n-      const beforeLeaveSpy = vi.fn()\n-      const beforeEnterSpy = vi.fn()\n-      const afterLeaveSpy = vi.fn()\n-      const afterEnterSpy = vi.fn()\n"
          },
          {
            "+": "+    const vm = new Vue({\n+      template: `\n",
            "-": "-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      methods: {\n+        beforeLeave: (el) => {\n+          expect(el.style.display).toBe('')\n+          expect(el).toBe(vm.$el.children[0])\n+          expect(el.className).toBe('test')\n+          beforeLeaveSpy(el)\n+        },\n+        leave: (el) => {\n+          expect(el.style.display).toBe('')\n+          onLeaveSpy(el)\n+        },\n+        afterLeave: (el) => {\n+          expect(el.style.display).toBe('none')\n+          afterLeaveSpy(el)\n+        },\n+        beforeEnter: (el) => {\n+          expect(el.className).toBe('test')\n+          expect(el.style.display).toBe('none')\n+          beforeEnterSpy(el)\n+        },\n+        enter: (el) => {\n+          expect(el.style.display).toBe('')\n+          onEnterSpy(el)\n+        },\n+        afterEnter: (el) => {\n+          expect(el.style.display).toBe('')\n+          afterEnterSpy(el)\n",
            "-": "-        data: { ok: true },\n-        methods: {\n-          beforeLeave: (el) => {\n-            expect(el.style.display).toBe('')\n-            expect(el).toBe(vm.$el.children[0])\n-            expect(el.className).toBe('test')\n-            beforeLeaveSpy(el)\n-          },\n-          leave: (el) => {\n-            expect(el.style.display).toBe('')\n-            onLeaveSpy(el)\n-          },\n-          afterLeave: (el) => {\n-            expect(el.style.display).toBe('none')\n-            afterLeaveSpy(el)\n-          },\n-          beforeEnter: (el) => {\n-            expect(el.className).toBe('test')\n-            expect(el.style.display).toBe('none')\n-            beforeEnterSpy(el)\n-          },\n-          enter: (el) => {\n-            expect(el.style.display).toBe('')\n-            onEnterSpy(el)\n-          },\n-          afterEnter: (el) => {\n-            expect(el.style.display).toBe('')\n-            afterEnterSpy(el)\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+\n+    let _el = vm.$el.children[0]\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(beforeLeaveSpy).toHaveBeenCalledWith(_el)\n+      expect(onLeaveSpy).toHaveBeenCalledWith(_el)\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-leave test-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-\n-      let _el = vm.$el.children[0]\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(beforeLeaveSpy).toHaveBeenCalledWith(_el)\n-        expect(onLeaveSpy).toHaveBeenCalledWith(_el)\n-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter test-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('explicit user callback in JavaScript hooks', (done) => {\n+    let next\n+    const vm = new Vue({\n+      template: `<div>\n",
            "-": "-    it('explicit user callback in JavaScript hooks', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n"
          },
          {
            "+": "+      data: { ok: true },\n+      methods: {\n+        enter: (el, cb) => {\n+          next = cb\n+        },\n+        leave: (el, cb) => {\n+          next = cb\n",
            "-": "-        data: { ok: true },\n-        methods: {\n-          enter: (el, cb) => {\n-            next = cb\n-          },\n-          leave: (el, cb) => {\n-            next = cb\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-leave test-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n",
            "-": "-      }).$mount(el)\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter test-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('css: false', (done) => {\n+    const enterSpy = vi.fn()\n+    const leaveSpy = vi.fn()\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('css: false', done => {\n-      const enterSpy = vi.fn()\n-      const leaveSpy = vi.fn()\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      methods: {\n+        enter: enterSpy,\n+        leave: leaveSpy\n+      }\n+    }).$mount(el)\n+\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(leaveSpy).toHaveBeenCalled()\n+      expect(vm.$el.innerHTML).toBe('<!---->')\n+      vm.ok = true\n+    })\n+      .then(() => {\n",
            "-": "-        data: { ok: true },\n-        methods: {\n-          enter: enterSpy,\n-          leave: leaveSpy\n-        }\n-      }).$mount(el)\n-\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(leaveSpy).toHaveBeenCalled()\n-        expect(vm.$el.innerHTML).toBe('<!---->')\n-        vm.ok = true\n-      }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n-\n-    it('no transition detected', done => {\n-      const enterSpy = vi.fn()\n-      const leaveSpy = vi.fn()\n-      const vm = new Vue({\n-        template: '<div><transition name=\"nope\" @enter=\"enter\" @leave=\"leave\"><div v-if=\"ok\">foo</div></transition></div>',\n-        data: { ok: true },\n-        methods: {\n-          enter: enterSpy,\n-          leave: leaveSpy\n-        }\n-      }).$mount(el)\n"
          },
          {
            "+": "+  it('no transition detected', (done) => {\n+    const enterSpy = vi.fn()\n+    const leaveSpy = vi.fn()\n+    const vm = new Vue({\n+      template:\n+        '<div><transition name=\"nope\" @enter=\"enter\" @leave=\"leave\"><div v-if=\"ok\">foo</div></transition></div>',\n+      data: { ok: true },\n+      methods: {\n+        enter: enterSpy,\n+        leave: leaveSpy\n+      }\n+    }).$mount(el)\n+\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(leaveSpy).toHaveBeenCalled()\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"nope-leave nope-leave-active\">foo</div><!---->'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(leaveSpy).toHaveBeenCalled()\n-        expect(vm.$el.innerHTML).toBe('<div class=\"nope-leave nope-leave-active\">foo</div><!---->')\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"nope-enter nope-enter-active\">foo</div>'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.innerHTML).toBe('<div class=\"nope-enter nope-enter-active\">foo</div>')\n-      }).thenWaitFor(nextFrame).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('enterCancelled', (done) => {\n+    const spy = vi.fn()\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('enterCancelled', done => {\n-      const spy = vi.fn()\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: false },\n+      methods: {\n+        enterCancelled: spy\n+      }\n+    }).$mount(el)\n+\n+    expect(vm.$el.innerHTML).toBe('<!---->')\n+    vm.ok = true\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-enter test-enter-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration / 2)\n+      .then(() => {\n",
            "-": "-        data: { ok: false },\n-        methods: {\n-          enterCancelled: spy\n-        }\n-      }).$mount(el)\n-\n-      expect(vm.$el.innerHTML).toBe('<!---->')\n-      vm.ok = true\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration / 2).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave test-leave-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('should remove stale leaving elements', (done) => {\n+    const spy = vi.fn()\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('should remove stale leaving elements', done => {\n-      const spy = vi.fn()\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      methods: {\n+        afterLeave: spy\n+      }\n+    }).$mount(el)\n+\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-leave test-leave-active'\n+      )\n+    })\n+      .thenWaitFor(duration / 2)\n+      .then(() => {\n",
            "-": "-        data: { ok: true },\n-        methods: {\n-          afterLeave: spy\n-        }\n-      }).$mount(el)\n-\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(duration / 2).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter test-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition with v-show', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition with v-show', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.textContent).toBe('foo')\n+    expect(vm.$el.children[0].style.display).toBe('')\n+    expect(vm.$el.children[0].className).toBe('test')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-leave test-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        data: { ok: true }\n-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.textContent).toBe('foo')\n-      expect(vm.$el.children[0].style.display).toBe('')\n-      expect(vm.$el.children[0].className).toBe('test')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter test-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition with v-show, inside child component', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition with v-show, inside child component', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      components: {\n+        test: {\n+          template: `<transition name=\"test\"><div class=\"test\">foo</div></transition>`\n",
            "-": "-        data: { ok: true },\n-        components: {\n-          test: {\n-            template: `<transition name=\"test\"><div class=\"test\">foo</div></transition>`\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.textContent).toBe('foo')\n+    expect(vm.$el.children[0].style.display).toBe('')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-leave test-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.textContent).toBe('foo')\n-      expect(vm.$el.children[0].style.display).toBe('')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter test-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('leaveCancelled (v-show only)', (done) => {\n+    const spy = vi.fn()\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('leaveCancelled (v-show only)', done => {\n-      const spy = vi.fn()\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      methods: {\n+        leaveCancelled: spy\n+      }\n+    }).$mount(el)\n+\n+    expect(vm.$el.children[0].style.display).toBe('')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-leave test-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(10)\n+      .then(() => {\n",
            "-": "-        data: { ok: true },\n-        methods: {\n-          leaveCancelled: spy\n-        }\n-      }).$mount(el)\n-\n-      expect(vm.$el.children[0].style.display).toBe('')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(10).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter test-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('leave transition with v-show: cancelled on next frame', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('leave transition with v-show: cancelled on next frame', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true }\n+    }).$mount(el)\n",
            "-": "-        data: { ok: true }\n-      }).$mount(el)\n"
          },
          {
            "+": "+    vm.ok = false\n+    waitForUpdate(() => {\n+      vm.ok = true\n",
            "-": "-      vm.ok = false\n-      waitForUpdate(() => {\n-        vm.ok = true\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test')\n-      }).then(done)\n"
          },
          {
            "+": "+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe('test')\n+      })\n+      .then(done)\n+  })\n",
            "-": ""
          },
          {
            "+": "+  it('enter transition with v-show: cancelled on next frame', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('enter transition with v-show: cancelled on next frame', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: false }\n+    }).$mount(el)\n",
            "-": "-        data: { ok: false }\n-      }).$mount(el)\n"
          },
          {
            "+": "+    vm.ok = true\n+    waitForUpdate(() => {\n+      vm.ok = false\n",
            "-": "-      vm.ok = true\n-      waitForUpdate(() => {\n-        vm.ok = false\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test')\n-      }).then(done)\n"
          },
          {
            "+": "+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe('test')\n+      })\n+      .then(done)\n+  })\n",
            "-": ""
          },
          {
            "+": "+  it('animations', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('animations', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div>foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test-anim-leave test-anim-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test-anim-leave-active test-anim-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        data: { ok: true }\n-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div>foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test-anim-leave test-anim-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test-anim-leave-active test-anim-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test-anim-enter test-anim-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test-anim-enter-active test-anim-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test-anim-enter test-anim-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('explicit transition type', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('explicit transition type', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-anim-long-leave test-anim-long-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-anim-long-leave-active test-anim-long-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + 5)\n+      .then(() => {\n",
            "-": "-        data: { ok: true }\n-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-anim-long-leave test-anim-long-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-anim-long-leave-active test-anim-long-leave-to')\n-      }).thenWaitFor(duration + 5).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.children[0].className).toBe(\n+          'test test-anim-long-leave-active test-anim-long-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + 5)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.children[0].className).toBe('test test-anim-long-leave-active test-anim-long-leave-to')\n-      }).thenWaitFor(duration + 5).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-anim-long-enter test-anim-long-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-anim-long-enter-active test-anim-long-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + 5)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-anim-long-enter-active test-anim-long-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + 5)\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-anim-long-enter test-anim-long-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-anim-long-enter-active test-anim-long-enter-to')\n-      }).thenWaitFor(duration + 5).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-anim-long-enter-active test-anim-long-enter-to')\n-      }).thenWaitFor(duration + 5).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition on appear', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition on appear', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true }\n+    }).$mount(el)\n",
            "-": "-        data: { ok: true }\n-      }).$mount(el)\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-appear test-appear-active'\n+      )\n",
            "-": "-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-appear test-appear-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-appear-active test-appear-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test')\n-      }).then(done)\n"
          },
          {
            "+": "+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-appear-active test-appear-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe('test')\n+      })\n+      .then(done)\n+  })\n",
            "-": ""
          },
          {
            "+": "+  it('transition on appear with v-show', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition on appear with v-show', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true }\n+    }).$mount(el)\n",
            "-": "-        data: { ok: true }\n-      }).$mount(el)\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-enter test-enter-active'\n+      )\n",
            "-": "-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test')\n-      }).then(done)\n"
          },
          {
            "+": "+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe('test')\n+      })\n+      .then(done)\n+  })\n",
            "-": ""
          },
          {
            "+": "+  it('transition on SVG elements', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition on SVG elements', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.childNodes[0].getAttribute('class')).toBe(\n+        'test v-leave v-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.childNodes[0].getAttribute('class')).toBe(\n+          'test v-leave-active v-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        data: { ok: true }\n-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test v-leave v-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test v-leave-active v-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n+        expect(vm.$el.childNodes[0].getAttribute('class')).toBe(\n+          'test v-enter v-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.childNodes[0].getAttribute('class')).toBe(\n+          'test v-enter-active v-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test v-enter v-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test v-enter-active v-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition on child components', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition on child components', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      components: {\n+        test: {\n+          template: `\n",
            "-": "-        data: { ok: true },\n-        components: {\n-          test: {\n-            template: `\n"
          },
          {
            "-": "-          }\n",
            "+": ""
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test v-leave-active v-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test v-enter-active v-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-enter-active v-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition inside child component with v-if', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition inside child component with v-if', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      components: {\n+        test: {\n+          template: `\n",
            "-": "-        data: { ok: true },\n-        components: {\n-          test: {\n-            template: `\n"
          },
          {
            "-": "-          }\n",
            "+": ""
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test v-leave-active v-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition with appear inside child component with v-if', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition with appear inside child component with v-if', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      components: {\n+        test: {\n+          template: `\n",
            "-": "-        data: { ok: true },\n-        components: {\n-          test: {\n-            template: `\n"
          },
          {
            "-": "-          }\n",
            "+": ""
          },
          {
            "+": "+      }\n+    }).$mount(el)\n",
            "-": "-      }).$mount(el)\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-appear test-appear-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-appear-active test-appear-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-appear test-appear-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-appear-active test-appear-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test v-leave-active v-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition inside nested child component with v-if', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition inside nested child component with v-if', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      components: {\n+        foo: {\n+          template: '<bar></bar>',\n+          components: {\n+            bar: {\n+              template: '<transition><div>foo</div></transition>'\n",
            "-": "-        data: { ok: true },\n-        components: {\n-          foo: {\n-            template: '<bar></bar>',\n-            components: {\n-              bar: {\n-                template: '<transition><div>foo</div></transition>'\n-              }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test v-leave-active v-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('transition with appear inside nested child component with v-if', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    it('transition with appear inside nested child component with v-if', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true },\n+      components: {\n+        foo: {\n+          template: '<bar></bar>',\n+          components: {\n+            bar: {\n+              template: `\n",
            "-": "-        data: { ok: true },\n-        components: {\n-          foo: {\n-            template: '<bar></bar>',\n-            components: {\n-              bar: {\n-                template: `\n"
          },
          {
            "-": "-              }\n",
            "+": ""
          },
          {
            "+": "+      }\n+    }).$mount(el)\n",
            "-": "-      }).$mount(el)\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-appear test-appear-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-appear-active test-appear-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-appear test-appear-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-appear-active test-appear-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test v-leave-active v-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('custom transition higher-order component', (done) => {\n+    const vm = new Vue({\n+      template:\n+        '<div><my-transition><div v-if=\"ok\" class=\"test\">foo</div></my-transition></div>',\n+      data: { ok: true },\n+      components: {\n+        'my-transition': {\n+          functional: true,\n+          render(h, { data, children }) {\n+            ;(data.props || (data.props = {})).name = 'test'\n+            return h('transition', data, children)\n",
            "-": "-    it('custom transition higher-order component', done => {\n-      const vm = new Vue({\n-        template: '<div><my-transition><div v-if=\"ok\" class=\"test\">foo</div></my-transition></div>',\n-        data: { ok: true },\n-        components: {\n-          'my-transition': {\n-            functional: true,\n-            render (h, { data, children }) {\n-              (data.props || (data.props = {})).name = 'test'\n-              return h('transition', data, children)\n-            }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].className).toBe(\n+        'test test-leave test-leave-active'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-leave-active test-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-leave-active test-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter test-enter-active'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test test-enter-active test-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test test-enter-active test-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  it('warn when used on multiple elements', () => {\n+    new Vue({\n+      template: `<transition><p>1</p><p>2</p></transition>`\n+    }).$mount()\n+    expect(\n+      `<transition> can only be used on a single element`\n+    ).toHaveBeenWarned()\n+  })\n",
            "-": "-    it('warn when used on multiple elements', () => {\n-      new Vue({\n-        template: `<transition><p>1</p><p>2</p></transition>`\n-      }).$mount()\n-      expect(`<transition> can only be used on a single element`).toHaveBeenWarned()\n-    })\n"
          },
          {
            "+": "+  describe('explicit durations -', () => {\n+    it('single value', (done) => {\n+      const vm = new Vue({\n+        template: `\n",
            "-": "-    describe('explicit durations -', () => {\n-      it('single value', done => {\n-        const vm = new Vue({\n-          template: `\n"
          },
          {
            "+": "+        data: { ok: true }\n+      }).$mount(el)\n",
            "-": "-          data: { ok: true }\n-        }).$mount(el)\n"
          },
          {
            "+": "+      vm.ok = false\n",
            "-": "-        vm.ok = false\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-leave-active v-leave-to'\n+          )\n+        })\n+        .thenWaitFor(explicitDuration + buffer)\n+        .then(() => {\n",
            "-": "-        waitForUpdate(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-        }).thenWaitFor(explicitDuration + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter v-enter-active'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter-active v-enter-to'\n+          )\n+        })\n+        .thenWaitFor(explicitDuration + buffer)\n+        .then(() => {\n",
            "-": "-        }).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter v-enter-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter-active v-enter-to')\n-        }).thenWaitFor(explicitDuration + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(done)\n+    })\n",
            "-": "-        }).then(done)\n-      })\n"
          },
          {
            "+": "+    it('enter and auto leave', (done) => {\n+      const vm = new Vue({\n+        template: `\n",
            "-": "-      it('enter and auto leave', done => {\n-        const vm = new Vue({\n-          template: `\n"
          },
          {
            "+": "+        data: { ok: true }\n+      }).$mount(el)\n",
            "-": "-          data: { ok: true }\n-        }).$mount(el)\n"
          },
          {
            "+": "+      vm.ok = false\n",
            "-": "-        vm.ok = false\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-leave-active v-leave-to'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n",
            "-": "-        waitForUpdate(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-        }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter v-enter-active'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter-active v-enter-to'\n+          )\n+        })\n+        .thenWaitFor(explicitDuration + buffer)\n+        .then(() => {\n",
            "-": "-        }).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter v-enter-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter-active v-enter-to')\n-        }).thenWaitFor(explicitDuration + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(done)\n+    })\n",
            "-": "-        }).then(done)\n-      })\n"
          },
          {
            "+": "+    it('leave and auto enter', (done) => {\n+      const vm = new Vue({\n+        template: `\n",
            "-": "-      it('leave and auto enter', done => {\n-        const vm = new Vue({\n-          template: `\n"
          },
          {
            "+": "+        data: { ok: true }\n+      }).$mount(el)\n",
            "-": "-          data: { ok: true }\n-        }).$mount(el)\n"
          },
          {
            "+": "+      vm.ok = false\n",
            "-": "-        vm.ok = false\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-leave-active v-leave-to'\n+          )\n+        })\n+        .thenWaitFor(explicitDuration + buffer)\n+        .then(() => {\n",
            "-": "-        waitForUpdate(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-        }).thenWaitFor(explicitDuration + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter v-enter-active'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter-active v-enter-to'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n",
            "-": "-        }).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter v-enter-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter-active v-enter-to')\n-        }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(done)\n+    })\n",
            "-": "-        }).then(done)\n-      })\n"
          },
          {
            "+": "+    it('separate enter and leave', (done) => {\n+      const enter = explicitDuration\n+      const leave = explicitDuration * 2\n",
            "-": "-      it('separate enter and leave', done => {\n-        const enter = explicitDuration\n-        const leave = explicitDuration * 2\n"
          },
          {
            "+": "+      const vm = new Vue({\n+        template: `\n",
            "-": "-        const vm = new Vue({\n-          template: `\n"
          },
          {
            "+": "+        data: { ok: true }\n+      }).$mount(el)\n",
            "-": "-          data: { ok: true }\n-        }).$mount(el)\n"
          },
          {
            "+": "+      vm.ok = false\n",
            "-": "-        vm.ok = false\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-leave-active v-leave-to'\n+          )\n+        })\n+        .thenWaitFor(leave + buffer)\n+        .then(() => {\n",
            "-": "-        waitForUpdate(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-        }).thenWaitFor(leave + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter v-enter-active'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter-active v-enter-to'\n+          )\n+        })\n+        .thenWaitFor(enter + buffer)\n+        .then(() => {\n",
            "-": "-        }).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter v-enter-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter-active v-enter-to')\n-        }).thenWaitFor(enter + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(done)\n+    })\n",
            "-": "-        }).then(done)\n-      })\n"
          },
          {
            "+": "+    it('enter and leave + duration change', (done) => {\n+      const enter1 = explicitDuration * 2\n+      const enter2 = explicitDuration\n+      const leave1 = explicitDuration * 0.5\n+      const leave2 = explicitDuration * 3\n",
            "-": "-      it('enter and leave + duration change', done => {\n-        const enter1 = explicitDuration * 2\n-        const enter2 = explicitDuration\n-        const leave1 = explicitDuration * 0.5\n-        const leave2 = explicitDuration * 3\n"
          },
          {
            "+": "+      const vm = new Vue({\n+        template: `\n",
            "-": "-        const vm = new Vue({\n-          template: `\n"
          },
          {
            "+": "+        data: {\n+          ok: true,\n+          enter: enter1,\n+          leave: leave1\n+        }\n+      }).$mount(el)\n",
            "-": "-          data: {\n-            ok: true,\n-            enter: enter1,\n-            leave: leave1\n-          }\n-        }).$mount(el)\n"
          },
          {
            "+": "+      vm.ok = false\n",
            "-": "-        vm.ok = false\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-leave-active v-leave-to'\n+          )\n+        })\n+        .thenWaitFor(leave1 + buffer)\n+        .then(() => {\n",
            "-": "-        waitForUpdate(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-        }).thenWaitFor(leave1 + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter v-enter-active'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter-active v-enter-to'\n+          )\n+        })\n+        .thenWaitFor(enter1 + buffer)\n+        .then(() => {\n",
            "-": "-        }).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter v-enter-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter-active v-enter-to')\n-        }).thenWaitFor(enter1 + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(() => {\n",
            "-": "-        }).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-leave v-leave-active'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-leave-active v-leave-to'\n+          )\n+        })\n+        .thenWaitFor(leave2 + buffer)\n+        .then(() => {\n",
            "-": "-        }).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave v-leave-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-        }).thenWaitFor(leave2 + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter v-enter-active'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.children[0].className).toBe(\n+            'test v-enter-active v-enter-to'\n+          )\n+        })\n+        .thenWaitFor(enter2 + buffer)\n+        .then(() => {\n",
            "-": "-        }).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter v-enter-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test v-enter-active v-enter-to')\n-        }).thenWaitFor(enter2 + buffer).then(() => {\n"
          },
          {
            "+": "+        })\n+        .then(done)\n+    }, 10000)\n",
            "-": "-        }).then(done)\n-      }, 10000)\n"
          },
          {
            "+": "+    it('warn invalid durations', (done) => {\n+      const vm = new Vue({\n+        template: `\n",
            "-": "-      it('warn invalid durations', done => {\n-        const vm = new Vue({\n-          template: `\n"
          },
          {
            "+": "+        data: {\n+          ok: true\n+        }\n+      }).$mount(el)\n",
            "-": "-          data: {\n-            ok: true\n-          }\n-        }).$mount(el)\n"
          },
          {
            "+": "+      vm.ok = false\n+      waitForUpdate(() => {\n+        expect(\n+          `<transition> explicit leave duration is not a valid number - got \"foo\"`\n+        ).toHaveBeenWarned()\n",
            "-": "-        vm.ok = false\n-        waitForUpdate(() => {\n-          expect(`<transition> explicit leave duration is not a valid number - got \"foo\"`).toHaveBeenWarned()\n-        }).thenWaitFor(duration + buffer).then(() => {\n-          vm.ok = true\n-        }).then(() => {\n-          expect(`<transition> explicit enter duration is NaN`).toHaveBeenWarned()\n-        }).then(done)\n"
          },
          {
            "+": "+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n+          vm.ok = true\n+        })\n+        .then(() => {\n+          expect(\n+            `<transition> explicit enter duration is NaN`\n+          ).toHaveBeenWarned()\n+        })\n+        .then(done)\n",
            "-": ""
          },
          {
            "+": "+  })\n",
            "-": ""
          },
          {
            "+": "+  // #6687\n+  it('transition on child components with empty root node', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    // #6687\n-    it('transition on child components with empty root node', done => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { view: 'one' },\n+      components: {\n+        one: {\n+          template: '<div v-if=\"false\">one</div>'\n+        },\n+        two: {\n+          template: '<div>two</div>'\n",
            "-": "-        data: { view: 'one' },\n-        components: {\n-          'one': {\n-            template: '<div v-if=\"false\">one</div>'\n-          },\n-          'two': {\n-            template: '<div>two</div>'\n-          }\n"
          },
          {
            "+": "+      }\n+    }).$mount(el)\n+\n+    // should not apply transition on initial render by default\n+    expect(vm.$el.innerHTML).toBe('<!---->')\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe(\n+        '<div class=\"test v-enter v-enter-active\">two</div>'\n+      )\n+    })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test v-enter-active v-enter-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<!---->')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe('<div class=\"test v-enter v-enter-active\">two</div>')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-enter-active v-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(() => {\n",
            "-": "-      }).then(() => {\n"
          },
          {
            "+": "+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test v-leave v-leave-active\">two</div><!---->'\n+        )\n+      })\n+      .thenWaitFor(nextFrame)\n+      .then(() => {\n+        expect(vm.$el.children[0].className).toBe(\n+          'test v-leave-active v-leave-to'\n+        )\n+      })\n+      .thenWaitFor(duration + buffer)\n+      .then(() => {\n",
            "-": "-        expect(vm.$el.innerHTML).toBe('<div class=\"test v-leave v-leave-active\">two</div><!---->')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n"
          },
          {
            "+": "+      })\n+      .then(done)\n+  })\n",
            "-": "-      }).then(done)\n-    })\n"
          },
          {
            "+": "+  // #8199\n+  it('should not throw error when replaced by v-html contents', (done) => {\n+    const vm = new Vue({\n+      template: `\n",
            "-": "-    // #8199\n-    it('should not throw error when replaced by v-html contents', (done) => {\n-      const vm = new Vue({\n-        template: `\n"
          },
          {
            "+": "+      data: { ok: true }\n+    }).$mount(el)\n",
            "-": "-        data: { ok: true }\n-      }).$mount(el)\n"
          },
          {
            "+": "+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$el.children[0].innerHTML).toBe('false')\n+    }).then(done)\n",
            "-": "-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children[0].innerHTML).toBe('false')\n-      }).then(done)\n-    })\n"
          },
          {
            "+": "+})\n",
            "-": "-}\n"
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 421,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "fed8c3bfd260d3a5a5d33797f1e84f819ee53696",
      "url": "https://github.com/vuejs/vue/commit/fed8c3bfd260d3a5a5d33797f1e84f819ee53696",
      "message": "test: all unit tests except transition passing",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T02:27:57Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/observer/observer.spec.ts": [
          {
            "+": "+    const obj: any = {\n",
            "-": "-    const obj = {\n"
          },
          {
            "+": "+    const ob1 = observe(obj)!\n",
            "-": "-    const ob1 = observe(obj)\n"
          },
          {
            "+": "+    const ob2 = observe(obj)!\n",
            "-": "-    const ob2 = observe(obj)\n"
          },
          {
            "+": "+    const obj: any =Object.create(null)\n",
            "-": "-    const obj = Object.create(null)\n"
          },
          {
            "+": "+    const ob1 = observe(obj)!\n",
            "-": "-    const ob1 = observe(obj)\n"
          },
          {
            "+": "+    const ob2 = observe(obj)!\n",
            "-": "-    const ob2 = observe(obj)\n"
          },
          {
            "+": "+    const obj: any = {}\n",
            "-": "-    const obj = {}\n"
          },
          {
            "+": "+    const ob1 = observe(obj)!\n",
            "-": "-    const ob1 = observe(obj)\n"
          },
          {
            "+": "+    const ob2 = observe(obj)!\n",
            "-": "-    const ob2 = observe(obj)\n"
          },
          {
            "+": "+    const obj: any = {}\n",
            "-": "-    const obj = {}\n"
          },
          {
            "+": "+    const ob1 = observe(obj)!\n",
            "-": "-    const ob1 = observe(obj)\n"
          },
          {
            "+": "+    const ob2 = observe(obj)!\n",
            "-": "-    const ob2 = observe(obj)\n"
          },
          {
            "+": "+    const obj: any ={}\n",
            "-": "-    const obj = {}\n"
          },
          {
            "+": "+    const ob1 = observe(obj)!\n",
            "-": "-    const ob1 = observe(obj)\n"
          },
          {
            "+": "+    const ob2 = observe(obj)!\n",
            "-": "-    const ob2 = observe(obj)\n"
          },
          {
            "+": "+    const obj: any ={}\n",
            "-": "-    const obj = {}\n"
          },
          {
            "+": "+      value: 10\n",
            "-": "-      val: 10\n"
          },
          {
            "+": "+    const ob1 = observe(obj)!\n",
            "-": "-    const ob1 = observe(obj)\n"
          },
          {
            "+": "+    const arr: any = [{}, {}]\n+    const ob1 = observe(arr)!\n",
            "-": "-    const arr = [{}, {}]\n-    const ob1 = observe(arr)\n"
          },
          {
            "+": "+    const obj: any ={ a: { b: 2 }, c: NaN }\n+    observe(obj)!\n",
            "-": "-    const obj = { a: { b: 2 }, c: NaN }\n-    observe(obj)\n"
          },
          {
            "+": "+    const watcher: any = {\n",
            "-": "-    const watcher = {\n"
          },
          {
            "+": "+    const obj: any ={ val: 2 }\n",
            "-": "-    const obj = { val: 2 }\n"
          },
          {
            "+": "+    observe(obj)!\n",
            "-": "-    observe(obj)\n"
          },
          {
            "+": "+    const obj1: any = { a: 1 }\n+    const ob1 = observe(obj1) as any\n",
            "-": "-    const obj1 = { a: 1 }\n-    const ob1 = observe(obj1)\n"
          },
          {
            "+": "+    vi.spyOn(dep1, 'notify')\n",
            "-": "-    spyOn(dep1, 'notify')\n"
          },
          {
            "+": "+    const obj3: any = Object.create(null)\n",
            "-": "-    const obj3 = Object.create(null)\n"
          },
          {
            "+": "+    const ob3 = observe(obj3) as any\n",
            "-": "-    const ob3 = observe(obj3)\n"
          },
          {
            "+": "+    vi.spyOn(dep3, 'notify')\n",
            "-": "-    spyOn(dep3, 'notify')\n"
          },
          {
            "+": "+    const arr2: any = ['a']\n+    const ob2 = observe(arr2) as any\n",
            "-": "-    const arr2 = ['a']\n-    const ob2 = observe(arr2)\n"
          },
          {
            "+": "+    vi.spyOn(dep2, 'notify')\n",
            "-": "-    spyOn(dep2, 'notify')\n"
          },
          {
            "+": "+    const ob = observe(arr) as any\n",
            "-": "-    const ob = observe(arr)\n"
          },
          {
            "+": "+    vi.spyOn(dep, 'notify')\n",
            "-": "-    spyOn(dep, 'notify')\n"
          },
          {
            "+": "+    objs.forEach((obj: any) => {\n",
            "-": "-    objs.forEach(obj => {\n"
          },
          {
            "+": "+      // @ts-expect-error\n",
            "-": ""
          },
          {
            "+": "+      // @ts-expect-error\n",
            "-": ""
          },
          {
            "+": "+    const obj: any ={}\n",
            "-": "-    const obj = {}\n"
          },
          {
            "+": "+    observe(obj)!\n",
            "-": "-    observe(obj)\n"
          }
        ],
        "a/test/unit/modules/server-compiler/optimizer.spec.ts": [],
        "a/test/unit/modules/sfc/sfc-parser.spec.ts": [
          {
            "+": "+    expect(res.template!.content.trim()).toBe('<div>hi</div>')\n",
            "-": "-    expect(res.template.content.trim()).toBe('<div>hi</div>')\n"
          },
          {
            "+": "+    expect(res.script!.content.trim()).toBe('export default {}')\n",
            "-": "-    expect(res.script.content.trim()).toBe('export default {}')\n"
          },
          {
            "+": "+    expect(res.template!.content.trim()).toBe('<input type=\"text\"/>')\n",
            "-": "-    expect(res.template.content.trim()).toBe('<input type=\"text\"/>')\n"
          },
          {
            "+": "+    expect(res.template!.content.trim()).toBe('<div><template v-if=\"ok\">hi</template></div>')\n",
            "-": "-    expect(res.template.content.trim()).toBe('<div><template v-if=\"ok\">hi</template></div>')\n"
          },
          {
            "+": "+    expect(deindentDefault.template!.content).toBe('\\n<div></div>\\n')\n+    expect(deindentDefault.script!.content).toBe('\\nexport default {}\\n')\n",
            "-": "-    expect(deindentDefault.template.content).toBe('\\n<div></div>\\n')\n-    expect(deindentDefault.script.content).toBe('\\nexport default {}\\n')\n"
          },
          {
            "+": "+    expect(deindentEnabled.template!.content).toBe('\\n<div></div>\\n')\n+    expect(deindentEnabled.script!.content).toBe('\\nexport default {}\\n')\n",
            "-": "-    expect(deindentEnabled.template.content).toBe('\\n<div></div>\\n')\n-    expect(deindentEnabled.script.content).toBe('\\nexport default {}\\n')\n"
          },
          {
            "+": "+    expect(deindentDisabled.template!.content).toBe('\\n        <div></div>\\n      ')\n+    expect(deindentDisabled.script!.content).toBe('\\n        export default {}\\n      ')\n",
            "-": "-    expect(deindentDisabled.template.content).toBe('\\n        <div></div>\\n      ')\n-    expect(deindentDisabled.script.content).toBe('\\n        export default {}\\n      ')\n"
          },
          {
            "+": "+    expect(padDefault.script!.content).toBe(Array(3 + 1).join('//\\n') + '\\nexport default {}\\n')\n",
            "-": "-    expect(padDefault.script.content).toBe(Array(3 + 1).join('//\\n') + '\\nexport default {}\\n')\n"
          },
          {
            "+": "+    expect(padLine.script!.content).toBe(Array(3 + 1).join('//\\n') + '\\nexport default {}\\n')\n",
            "-": "-    expect(padLine.script.content).toBe(Array(3 + 1).join('//\\n') + '\\nexport default {}\\n')\n"
          },
          {
            "+": "+    expect(padSpace.script!.content).toBe(`<template>\n",
            "-": "-    expect(padSpace.script.content).toBe(`<template>\n"
          },
          {
            "+": "+    expect(res.template!.content.trim()).toBe(`div\\n  h1(v-if='1 < 2') hello`)\n",
            "-": "-    expect(res.template.content.trim()).toBe(`div\\n  h1(v-if='1 < 2') hello`)\n"
          },
          {
            "+": "+    expect(res.template!.content.trim()).toBe(`<span><</span>`)\n",
            "-": "-    expect(res.template.content.trim()).toBe(`<span><</span>`)\n"
          },
          {
            "+": "+    expect(res.template!.content.trim()).toBe(raw)\n",
            "-": "-    expect(res.template.content.trim()).toBe(raw)\n"
          },
          {
            "+": "+    expect(res.template!.content).toBe('hi')\n",
            "-": "-    expect(res.template.content).toBe('hi')\n"
          },
          {
            "+": "+    expect((res.errors[0] as WarningMessage).start).toBe(0)\n",
            "-": "-    expect(res.errors[0].start).toBe(0)\n"
          }
        ],
        "a/test/unit/modules/vdom/create-component.spec.ts": [
          {
            "+": "+  beforeEach(() => {\n",
            "-": "-  beforeEach(done => {\n"
          },
          {
            "+": "+    return new Promise(r => Vue.nextTick(r))\n",
            "-": "-    Vue.nextTick(done)\n"
          },
          {
            "+": "+    vi.spyOn(vm, '$forceUpdate')\n",
            "-": "-    spyOn(vm, '$forceUpdate')\n"
          },
          {
            "+": "+    vi.spyOn(vm, '$forceUpdate')\n",
            "-": "-    spyOn(vm, '$forceUpdate')\n"
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 56,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "73bcd0719447070c05789fffd457cfc167c38d88",
      "url": "https://github.com/vuejs/vue/commit/73bcd0719447070c05789fffd457cfc167c38d88",
      "message": "test: all features except transition pass",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T02:12:40Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.gitignore": [
          {
            "-": "-debug.spec.ts\n",
            "+": ""
          }
        ],
        "a/test/helpers/to-have-warned.ts": [
          {
            "+": "+    const passed = warn.mock.calls.some((args) =>\n+      String(args[0]).includes(received)\n+    )\n",
            "-": "-    const passed = warn.mock.calls.some((args) => args[0].includes(received))\n"
          },
          {
            "+": "+        return String(received).includes(assertedMsg)\n",
            "-": "-        return received.includes(assertedMsg)\n"
          }
        ],
        "a/test/ssr/ssr-bundle-render.spec.ts": [
          {
            "+": "+        const setArgs = set.mock.calls[0]\n",
            "-": "-        const setArgs = set.calls.argsFor(0)\n"
          },
          {
            "+": "+        const setArgs = set.mock.calls[0]\n",
            "-": "-        const setArgs = set.calls.argsFor(0)\n"
          }
        ],
        "a/test/unit/features/debug.spec.ts": [
          {
            "-": "-    // @ts-expect-error\n",
            "+": ""
          },
          {
            "-": "-    // @ts-expect-error\n",
            "+": ""
          },
          {
            "+": "+      const spy = Vue.config.warnHandler = vi.fn()\n",
            "-": "-      Vue.config.warnHandler = vi.fn()\n"
          },
          {
            "+": "+      expect(spy.mock.calls[0][0]).toBe(msg)\n+      expect(spy.mock.calls[0][1]).toBe(vm)\n",
            "-": "-      expect(Vue.config.warnHandler).toHaveBeenCalledWith(msg, vm, jasmine.any(String))\n"
          }
        ],
        "a/test/unit/features/error-handling.spec.ts": [
          {
            "+": "+    const args = spy.mock.calls[0]\n",
            "-": "-    const args = spy.calls.argsFor(0)\n"
          },
          {
            "-": "-      // @ts-expect-error\n",
            "+": ""
          }
        ],
        "a/test/unit/features/instance/init.spec.ts": [
          {
            "-": "-    // @ts-expect-error\n",
            "+": ""
          },
          {
            "-": "-    // @ts-expect-error\n",
            "+": ""
          }
        ],
        "a/test/unit/features/instance/methods-events.spec.ts": [
          {
            "+": "+    vm = new Vue({})\n",
            "-": "-    // @ts-expect-error\n-    const vm = new Vue()\n"
          }
        ],
        "a/test/unit/features/instance/methods-lifecycle.spec.ts": [
          {
            "+": "+      new Vue({\n",
            "-": "-      const vm = new Vue({\n"
          },
          {
            "+": "+              this.msg\n",
            "-": "-              const _msg = this.msg\n"
          }
        ],
        "a/test/unit/features/instance/properties.spec.ts": [
          {
            "+": "+    expect(typeof vm.$options.methods?.a).toBe('function')\n+    expect(typeof vm.$options.methods?.b).toBe('function')\n",
            "-": "-    expect(typeof vm.$options.methods.a).toBe('function')\n-    expect(typeof vm.$options.methods.b).toBe('function')\n"
          },
          {
            "-": "-    // @ts-expect-error\n",
            "+": ""
          },
          {
            "-": "-    // @ts-expect-error\n",
            "+": ""
          }
        ],
        "a/test/unit/features/options/data.spec.ts": [
          {
            "+": "+    const Test = Vue.extend({\n",
            "-": "-    const Test: Vue = Vue.extend({\n"
          }
        ],
        "a/test/unit/features/options/directives.spec.ts": [
          {
            "+": "+import { SpyInstanceFn } from 'vitest'\n",
            "-": ""
          },
          {
            "+": "+    const spies: Record<string, SpyInstanceFn> = {}\n",
            "-": "-    const spies = {}\n"
          },
          {
            "+": "+    expect(dir.bind.mock.calls[0][0]).toBe(oldEl)\n",
            "-": "-    expect(dir.bind.calls.argsFor(0)[0]).toBe(oldEl)\n"
          },
          {
            "+": "+    expect(dir.inserted.mock.calls[0][0]).toBe(oldEl)\n",
            "-": "-    expect(dir.inserted.calls.argsFor(0)[0]).toBe(oldEl)\n"
          },
          {
            "+": "+      expect(dir.bind.mock.calls[1][0]).toBe(vm.$el)\n",
            "-": "-      expect(dir.bind.calls.argsFor(1)[0]).toBe(vm.$el)\n"
          },
          {
            "+": "+      expect(dir.inserted.mock.calls[1][0]).toBe(vm.$el)\n",
            "-": "-      expect(dir.inserted.calls.argsFor(1)[0]).toBe(vm.$el)\n"
          },
          {
            "+": "+      expect(dir.unbind.mock.calls[0][0]).toBe(oldEl)\n",
            "-": "-      expect(dir.unbind.calls.argsFor(0)[0]).toBe(oldEl)\n"
          }
        ],
        "a/test/unit/features/options/functional.spec.ts": [
          {
            "+": "+    expect(foo.mock.calls[0][0].type).toBe('click') // should have click event\n",
            "-": "-    expect(foo.calls.argsFor(0)[0].type).toBe('click') // should have click event\n"
          }
        ],
        "a/test/unit/features/options/lifecycle.spec.ts": [
          {
            "+": "+      const parent = new Vue()\n",
            "-": "-      // @ts-expect-error\n-      const vm = new Vue()\n"
          }
        ],
        "a/test/unit/features/options/mixins.spec.ts": [
          {
            "+": "+    expect(result.directives?.a).toBe(a)\n+    expect(result.directives?.b).toBe(b)\n+    expect(result.directives?.c).toBe(c)\n+    expect(result.created?.[0]).toBe(f1)\n+    expect(result.created?.[1]).toBe(f2)\n+    expect(result.created?.[2]).toBe(f3)\n",
            "-": "-    expect(result.directives.a).toBe(a)\n-    expect(result.directives.b).toBe(b)\n-    expect(result.directives.c).toBe(c)\n-    expect(result.created[0]).toBe(f1)\n-    expect(result.created[1]).toBe(f2)\n-    expect(result.created[2]).toBe(f3)\n"
          },
          {
            "+": "+    expect(result.methods?.xyz).toBe(f3)\n",
            "-": "-    expect(result.methods.xyz).toBe(f3)\n"
          }
        ],
        "a/test/unit/features/options/name.spec.ts": [
          {
            "+": "+    })!\n",
            "-": "-    })\n"
          }
        ],
        "a/test/unit/features/options/props.spec.ts": [
          {
            "+": "+    function makeInstance (value, type, validator?, required?) {\n",
            "-": "-    function makeInstance (value, type, validator, required) {\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+        expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-        expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+        expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-        expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(1)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(1)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(2)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(2)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+      expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+    expect((console.error as any).mock.calls.length).toBe(0)\n",
            "-": "-    expect(console.error.mock.calls.length).toBe(0)\n"
          },
          {
            "+": "+    new Vue({\n",
            "-": "-    const vm = new Vue({\n"
          }
        ],
        "a/test/unit/features/options/render.spec.ts": [
          {
            "-": "-    // @ts-expect-error\n",
            "+": ""
          }
        ],
        "a/test/unit/features/options/watch.spec.ts": [
          {
            "-": "-import { finished } from 'stream';\n",
            "+": ""
          },
          {
            "+": "+    new Vue({\n",
            "-": "-    const vm = new Vue({\n"
          }
        ],
        "a/test/unit/modules/observer/observer.spec.ts": [
          {
            "-": "-    // @ts-expect-error\n",
            "+": ""
          }
        ],
        "a/types/tsconfig.json": [
          {
            "+": "+    \"lib\": [\"dom\", \"es2015\"],\n+    \"types\": [\"node\"],\n",
            "-": "-    \"lib\": [\n-      \"dom\",\n-      \"es2015\"\n-    ],\n-    \"types\": [\n-      \"node\",\n-      \"jasmine\",\n-      \"webpack-env\"\n-    ],\n"
          },
          {
            "+": "+    }\n",
            "-": "-    },\n"
          },
          {
            "+": "+  \"include\": [\"./*.d.ts\", \"*.ts\"],\n",
            "-": "-  \"include\": [\n-    \"./*.d.ts\",\n-    \"*.ts\"\n-  ],\n"
          },
          {
            "+": "+}\n",
            "-": "-}\n"
          }
        ],
        "a/typescript/component.d.ts": [
          {
            "+": "+import type VNode from '../src/core/vdom/vnode'\n+import type Watcher from '../src/core/observer/watcher'\n+import { ComponentOptions } from './options'\n+import { ScopedSlotsData, VNodeChildren, VNodeData } from './vnode'\n",
            "-": "-import type VNode from \"../src/core/vdom/vnode\";\n-import type Watcher from \"../src/core/observer/watcher\";\n-import { ComponentOptions } from \"./options\";\n-import { ScopedSlotsData, VNodeChildren, VNodeData } from \"./vnode\";\n"
          },
          {
            "+": "+export declare class Component {\n+  constructor(options?: any)\n",
            "-": "-declare class Component {\n"
          },
          {
            "+": "+  static cid: number\n+  static options: Record<string, any>\n",
            "-": "-  static cid: number;\n-  static options: Record<string, any>;\n"
          },
          {
            "+": "+  static extend: (options: Record<string, any>) => typeof Component\n+  static superOptions: Record<string, any>\n+  static extendOptions: Record<string, any>\n+  static sealedOptions: Record<string, any>\n+  static super: Component\n",
            "-": "-  static extend: (options: Record<string, any>) => Function;\n-  static superOptions: Record<string, any>;\n-  static extendOptions: Record<string, any>;\n-  static sealedOptions: Record<string, any>;\n-  static super: Component;\n"
          },
          {
            "+": "+  ) => Function | Record<string, any> | void\n",
            "-": "-  ) => Function | Record<string, any> | void;\n"
          },
          {
            "+": "+  ) => Component\n+  static filter: (id: string, def?: Function) => Function | void\n",
            "-": "-  ) => Component;\n-  static filter: (id: string, def?: Function) => Function | void;\n"
          },
          {
            "+": "+  static FunctionalRenderContext: Function\n",
            "-": "-  static FunctionalRenderContext: Function;\n"
          },
          {
            "+": "+  $el: any // so that we can attach __vue__ to it\n+  $data: Record<string, any>\n+  $props: Record<string, any>\n+  $options: ComponentOptions\n+  $parent: Component | undefined\n+  $root: Component\n+  $children: Array<Component>\n",
            "-": "-  $el: any; // so that we can attach __vue__ to it\n-  $data: Record<string, any>;\n-  $props: Record<string, any>;\n-  $options: ComponentOptions;\n-  $parent: Component | undefined;\n-  $root: Component;\n-  $children: Array<Component>;\n"
          },
          {
            "+": "+    [key: string]: Component | Element | Array<Component | Element> | undefined\n+  }\n+  $slots: { [key: string]: Array<VNode> }\n+  $scopedSlots: { [key: string]: () => VNodeChildren }\n+  $vnode: VNode // the placeholder node for the component in parent's render tree\n+  $attrs: { [key: string]: string }\n+  $listeners: Record<string, Function | Array<Function>>\n+  $isServer: boolean\n",
            "-": "-    [key: string]: Component | Element | Array<Component | Element> | undefined;\n-  };\n-  $slots: { [key: string]: Array<VNode> };\n-  $scopedSlots: { [key: string]: () => VNodeChildren };\n-  $vnode: VNode; // the placeholder node for the component in parent's render tree\n-  $attrs: { [key: string]: string };\n-  $listeners: Record<string, Function | Array<Function>>;\n-  $isServer: boolean;\n"
          },
          {
            "+": "+  $mount: (el?: Element | string, hydrating?: boolean) => Component\n+  $forceUpdate: () => void\n+  $destroy: () => void\n",
            "-": "-  $mount: (el?: Element | string, hydrating?: boolean) => Component;\n-  $forceUpdate: () => void;\n-  $destroy: () => void;\n"
          },
          {
            "+": "+  ) => T\n",
            "-": "-  ) => T;\n"
          },
          {
            "+": "+  ) => void\n",
            "-": "-  ) => void;\n"
          },
          {
            "+": "+  ) => Function\n+  $on: (event: string | Array<string>, fn: Function) => Component\n+  $once: (event: string, fn: Function) => Component\n+  $off: (event?: string | Array<string>, fn?: Function) => Component\n+  $emit: (event: string, ...args: Array<any>) => Component\n+  $nextTick: (fn: Function) => void | Promise<any>\n",
            "-": "-  ) => Function;\n-  $on: (event: string | Array<string>, fn: Function) => Component;\n-  $once: (event: string, fn: Function) => Component;\n-  $off: (event?: string | Array<string>, fn?: Function) => Component;\n-  $emit: (event: string, ...args: Array<any>) => Component;\n-  $nextTick: (fn: Function) => void | Promise<any>;\n"
          },
          {
            "+": "+  ) => VNode\n",
            "-": "-  ) => VNode;\n"
          },
          {
            "+": "+  _uid: number | string\n+  _name: string // this only exists in dev mode\n+  _isVue: true\n+  _self: Component\n+  _renderProxy: Component\n+  _renderContext?: Component\n+  _watcher: Watcher | null\n+  _watchers: Array<Watcher>\n+  _computedWatchers: { [key: string]: Watcher }\n+  _data: Record<string, any>\n+  _props: Record<string, any>\n+  _events: Record<string, any>\n+  _inactive: boolean | null\n+  _directInactive: boolean\n+  _isMounted: boolean\n+  _isDestroyed: boolean\n+  _isBeingDestroyed: boolean\n+  _vnode?: VNode | null // self root node\n+  _staticTrees?: Array<VNode> | null // v-once cached trees\n+  _hasHookEvent: boolean\n+  _provided?: Record<string, any>\n",
            "-": "-  _uid: number | string;\n-  _name: string; // this only exists in dev mode\n-  _isVue: true;\n-  _self: Component;\n-  _renderProxy: Component;\n-  _renderContext?: Component;\n-  _watcher: Watcher | null;\n-  _watchers: Array<Watcher>;\n-  _computedWatchers: { [key: string]: Watcher };\n-  _data: Record<string, any>;\n-  _props: Record<string, any>;\n-  _events: Record<string, any>;\n-  _inactive: boolean | null;\n-  _directInactive: boolean;\n-  _isMounted: boolean;\n-  _isDestroyed: boolean;\n-  _isBeingDestroyed: boolean;\n-  _vnode?: VNode | null; // self root node\n-  _staticTrees?: Array<VNode> | null; // v-once cached trees\n-  _hasHookEvent: boolean;\n-  _provided?: Record<string, any>;\n"
          },
          {
            "+": "+  _init: Function\n+  _mount: (el?: Element | void, hydrating?: boolean) => Component\n+  _update: (vnode: VNode, hydrating?: boolean) => void\n",
            "-": "-  _init: Function;\n-  _mount: (el?: Element | void, hydrating?: boolean) => Component;\n-  _update: (vnode: VNode, hydrating?: boolean) => void;\n"
          },
          {
            "+": "+  _render: () => VNode\n",
            "-": "-  _render: () => VNode;\n"
          },
          {
            "+": "+  ) => any\n",
            "-": "-  ) => any;\n"
          },
          {
            "+": "+  ) => VNode | void\n",
            "-": "-  ) => VNode | void;\n"
          },
          {
            "+": "+  _m: (index: number, isInFor?: boolean) => VNode | VNodeChildren\n",
            "-": "-  _m: (index: number, isInFor?: boolean) => VNode | VNodeChildren;\n"
          },
          {
            "+": "+  ) => VNode | VNodeChildren\n",
            "-": "-  ) => VNode | VNodeChildren;\n"
          },
          {
            "+": "+  _s: (value: any) => string\n",
            "-": "-  _s: (value: any) => string;\n"
          },
          {
            "+": "+  _v: (value: string | number) => VNode\n",
            "-": "-  _v: (value: string | number) => VNode;\n"
          },
          {
            "+": "+  _n: (value: string) => number | string\n",
            "-": "-  _n: (value: string) => number | string;\n"
          },
          {
            "+": "+  _e: () => VNode\n",
            "-": "-  _e: () => VNode;\n"
          },
          {
            "+": "+  _q: (a: any, b: any) => boolean\n",
            "-": "-  _q: (a: any, b: any) => boolean;\n"
          },
          {
            "+": "+  _i: (arr: Array<any>, val: any) => number\n",
            "-": "-  _i: (arr: Array<any>, val: any) => number;\n"
          },
          {
            "+": "+  _f: (id: string) => Function\n",
            "-": "-  _f: (id: string) => Function;\n"
          },
          {
            "+": "+  _l: (val: any, render: Function) => Array<VNode> | null\n",
            "-": "-  _l: (val: any, render: Function) => Array<VNode> | null;\n"
          },
          {
            "+": "+  ) => Array<VNode> | null\n",
            "-": "-  ) => Array<VNode> | null;\n"
          },
          {
            "+": "+  ) => VNodeData\n",
            "-": "-  ) => VNodeData;\n"
          },
          {
            "+": "+  _g: (data: any, value: any) => VNodeData\n",
            "-": "-  _g: (data: any, value: any) => VNodeData;\n"
          },
          {
            "+": "+  ) => boolean | null\n",
            "-": "-  ) => boolean | null;\n"
          },
          {
            "+": "+  ) => { [key: string]: Function }\n",
            "-": "-  ) => { [key: string]: Function };\n"
          },
          {
            "+": "+  _ssrNode: Function\n+  _ssrList: Function\n+  _ssrEscape: Function\n+  _ssrAttr: Function\n+  _ssrAttrs: Function\n+  _ssrDOMProps: Function\n+  _ssrClass: Function\n",
            "-": "-  _ssrNode: Function;\n-  _ssrList: Function;\n-  _ssrEscape: Function;\n-  _ssrAttr: Function;\n-  _ssrAttrs: Function;\n-  _ssrDOMProps: Function;\n-  _ssrClass: Function;\n"
          },
          {
            "+": "+  [key: string]: any\n",
            "-": "-  [key: string]: any;\n"
          }
        ],
        "a/typescript/global-api.d.ts": [
          {
            "+": "+import { Config } from '../src/core/config'\n+import { Component } from './component'\n",
            "-": "-import { Config } from \"../src/core/config\";\n-import { Component } from \"./component\";\n"
          },
          {
            "+": "+  // new(options?: any): Component\n+  (options?: any): void\n+  cid: number\n+  options: Record<string, any>\n+  config: Config\n+  util: Object\n",
            "-": "-  (options: any): void;\n-  cid: number;\n-  options: Record<string, any>;\n-  config: Config;\n-  util: Object;\n"
          },
          {
            "+": "+  extend: (options: Object) => typeof Component\n+  set: <T>(target: Object | Array<T>, key: string | number, value: T) => T\n+  delete: <T>(target: Object | Array<T>, key: string | number) => void\n+  nextTick: (fn: Function, context?: Object) => void | Promise<any>\n+  use: (plugin: Function | Object) => GlobalAPI\n+  mixin: (mixin: Object) => GlobalAPI\n+  compile: (template: string) => {\n+    render: Function\n+    staticRenderFns: Array<Function>\n+  }\n",
            "-": "-  extend: (options: Object) => Component;\n-  set: <T>(target: Object | Array<T>, key: string | number, value: T) => T;\n-  delete: <T>(target: Object | Array<T>, key: string | number) => void;\n-  nextTick: (fn: Function, context?: Object) => void | Promise<any>;\n-  use: (plugin: Function | Object) => GlobalAPI;\n-  mixin: (mixin: Object) => GlobalAPI;\n-  compile: (\n-    template: string\n-  ) => { render: Function; staticRenderFns: Array<Function> };\n"
          },
          {
            "+": "+  directive: (id: string, def?: Function | Object) => Function | Object | void\n+  component: (\n+    id: string,\n+    def?: typeof Component | Object\n+  ) => typeof Component | void\n+  filter: (id: string, def?: Function) => Function | void\n",
            "-": "-  directive: (id: string, def?: Function | Object) => Function | Object | void;\n-  component: (id: string, def?: Component | Object) => Component;\n-  filter: (id: string, def?: Function) => Function | void;\n"
          },
          {
            "+": "+  observable: <T>(value: T) => T\n",
            "-": "-  observable: <T>(value: T) => T;\n"
          },
          {
            "+": "+  [key: string]: any\n",
            "-": "-  [key: string]: any;\n"
          }
        ],
        "a/typescript/options.d.ts": [
          {
            "+": "+  [key: string]: any\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 23,
      "numOfChanges": 113,
      "qualityScore": 73
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "906907f88def66c2f0cc74c2e049e61666ec8f83",
      "url": "https://github.com/vuejs/vue/commit/906907f88def66c2f0cc74c2e049e61666ec8f83",
      "message": "test: all directive tests passing",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T01:34:55Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.gitignore": [
          {
            "+": "+debug.spec.ts\n",
            "-": ""
          }
        ],
        "a/test/test-env.d.ts": [
          {
            "+": "+  process?: (e: any) => void\n",
            "-": "-  process?: (e: Event) => void\n"
          }
        ],
        "a/test/unit/features/directives/for.spec.ts": [
          {
            "+": "+  it('should render array of primitive values', (done) => {\n",
            "-": "-  it('should render array of primitive values', done => {\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>d</span><span>b</span><span>c</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>d</span><span>b</span><span>c</span>')\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>d</span><span>b</span><span>c</span><span>d</span>'\n+        )\n+        vm.list.splice(1, 2)\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<span>d</span><span>d</span>')\n+        vm.list = ['x', 'y']\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<span>x</span><span>y</span>')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>d</span><span>b</span><span>c</span><span>d</span>')\n-      vm.list.splice(1, 2)\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>d</span><span>d</span>')\n-      vm.list = ['x', 'y']\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>x</span><span>y</span>')\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should render array of primitive values with index', (done) => {\n",
            "-": "-  it('should render array of primitive values with index', done => {\n"
          },
          {
            "+": "+    expect(vm.$el.innerHTML).toBe(\n+      '<span>0-a</span><span>1-b</span><span>2-c</span>'\n+    )\n",
            "-": "-    expect(vm.$el.innerHTML).toBe('<span>0-a</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>0-d</span><span>1-b</span><span>2-c</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>0-d</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>0-d</span><span>1-b</span><span>2-c</span><span>3-d</span>'\n+        )\n+        vm.list.splice(1, 2)\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<span>0-d</span><span>1-d</span>')\n+        vm.list = ['x', 'y']\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<span>0-x</span><span>1-y</span>')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>0-d</span><span>1-b</span><span>2-c</span><span>3-d</span>')\n-      vm.list.splice(1, 2)\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>0-d</span><span>1-d</span>')\n-      vm.list = ['x', 'y']\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>0-x</span><span>1-y</span>')\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should render array of object values', (done) => {\n",
            "-": "-  it('should render array of object values', done => {\n"
          },
          {
            "+": "+        list: [{ value: 'a' }, { value: 'b' }, { value: 'c' }]\n",
            "-": "-        list: [\n-          { value: 'a' },\n-          { value: 'b' },\n-          { value: 'c' }\n-        ]\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>d</span><span>b</span><span>c</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>d</span><span>b</span><span>c</span>')\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>e</span><span>b</span><span>c</span>'\n+        )\n+        vm.list.push({})\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>e</span><span>b</span><span>c</span><span></span>'\n+        )\n+        vm.list.splice(1, 2)\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<span>e</span><span></span>')\n+        vm.list = [{ value: 'x' }, { value: 'y' }]\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<span>x</span><span>y</span>')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>e</span><span>b</span><span>c</span>')\n-      vm.list.push({})\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>e</span><span>b</span><span>c</span><span></span>')\n-      vm.list.splice(1, 2)\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>e</span><span></span>')\n-      vm.list = [{ value: 'x' }, { value: 'y' }]\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>x</span><span>y</span>')\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should render array of object values with index', (done) => {\n",
            "-": "-  it('should render array of object values with index', done => {\n"
          },
          {
            "+": "+        list: [{ value: 'a' }, { value: 'b' }, { value: 'c' }]\n",
            "-": "-        list: [\n-          { value: 'a' },\n-          { value: 'b' },\n-          { value: 'c' }\n-        ]\n"
          },
          {
            "+": "+    expect(vm.$el.innerHTML).toBe(\n+      '<span>0-a</span><span>1-b</span><span>2-c</span>'\n+    )\n",
            "-": "-    expect(vm.$el.innerHTML).toBe('<span>0-a</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>0-d</span><span>1-b</span><span>2-c</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>0-d</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>0-e</span><span>1-b</span><span>2-c</span>'\n+        )\n+        vm.list.push({})\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>0-e</span><span>1-b</span><span>2-c</span><span>3-</span>'\n+        )\n+        vm.list.splice(1, 2)\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<span>0-e</span><span>1-</span>')\n+        vm.list = [{ value: 'x' }, { value: 'y' }]\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe('<span>0-x</span><span>1-y</span>')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>0-e</span><span>1-b</span><span>2-c</span>')\n-      vm.list.push({})\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>0-e</span><span>1-b</span><span>2-c</span><span>3-</span>')\n-      vm.list.splice(1, 2)\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>0-e</span><span>1-</span>')\n-      vm.list = [{ value: 'x' }, { value: 'y' }]\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>0-x</span><span>1-y</span>')\n-    }).then(done)\n"
          },
          {
            "+": "+          list: new Map([\n+            [1, 'foo'],\n+            [2, 'bar']\n+          ])\n",
            "-": "-          list: new Map([[1, 'foo'], [2, 'bar']])\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        `<span>1</span><span>2</span><span>3</span>`\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe(`<span>1</span><span>2</span><span>3</span>`)\n"
          },
          {
            "+": "+    it('should render iterable of primitive values', (done) => {\n",
            "-": "-    it('should render iterable of primitive values', done => {\n"
          },
          {
            "+": "+        [Symbol.iterator]() {\n",
            "-": "-        [Symbol.iterator] () {\n"
          },
          {
            "+": "+            next() {\n",
            "-": "-            next () {\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>a</span><span>b</span><span>c</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>a</span><span>b</span><span>c</span>')\n"
          },
          {
            "+": "+        expect(vm.$el.innerHTML).toBe(\n+          '<span>d</span><span>b</span><span>c</span>'\n+        )\n",
            "-": "-        expect(vm.$el.innerHTML).toBe('<span>d</span><span>b</span><span>c</span>')\n"
          },
          {
            "+": "+      })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<span>d</span><span>b</span><span>c</span><span>d</span>'\n+          )\n+          vm.list.models.splice(1, 2)\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<span>d</span><span>d</span>')\n+          vm.list.models = ['x', 'y']\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<span>x</span><span>y</span>')\n+        })\n+        .then(done)\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>d</span><span>b</span><span>c</span><span>d</span>')\n-        vm.list.models.splice(1, 2)\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>d</span><span>d</span>')\n-        vm.list.models = ['x', 'y']\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>x</span><span>y</span>')\n-      }).then(done)\n"
          },
          {
            "+": "+    it('should render iterable of primitive values with index', (done) => {\n",
            "-": "-    it('should render iterable of primitive values with index', done => {\n"
          },
          {
            "+": "+        [Symbol.iterator]() {\n",
            "-": "-        [Symbol.iterator] () {\n"
          },
          {
            "+": "+            next() {\n",
            "-": "-            next () {\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>0-a</span><span>1-b</span><span>2-c</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>0-a</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+        expect(vm.$el.innerHTML).toBe(\n+          '<span>0-d</span><span>1-b</span><span>2-c</span>'\n+        )\n",
            "-": "-        expect(vm.$el.innerHTML).toBe('<span>0-d</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+      })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<span>0-d</span><span>1-b</span><span>2-c</span><span>3-d</span>'\n+          )\n+          vm.list.models.splice(1, 2)\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<span>0-d</span><span>1-d</span>')\n+          vm.list.models = ['x', 'y']\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<span>0-x</span><span>1-y</span>')\n+        })\n+        .then(done)\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>0-d</span><span>1-b</span><span>2-c</span><span>3-d</span>')\n-        vm.list.models.splice(1, 2)\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>0-d</span><span>1-d</span>')\n-        vm.list.models = ['x', 'y']\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>0-x</span><span>1-y</span>')\n-      }).then(done)\n"
          },
          {
            "+": "+    it('should render iterable of object values', (done) => {\n",
            "-": "-    it('should render iterable of object values', done => {\n"
          },
          {
            "+": "+        models: [{ value: 'a' }, { value: 'b' }, { value: 'c' }],\n",
            "-": "-        models: [\n-          { value: 'a' },\n-          { value: 'b' },\n-          { value: 'c' }\n-        ],\n"
          },
          {
            "+": "+        [Symbol.iterator]() {\n",
            "-": "-        [Symbol.iterator] () {\n"
          },
          {
            "+": "+            next() {\n",
            "-": "-            next () {\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>a</span><span>b</span><span>c</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>a</span><span>b</span><span>c</span>')\n"
          },
          {
            "+": "+        expect(vm.$el.innerHTML).toBe(\n+          '<span>d</span><span>b</span><span>c</span>'\n+        )\n",
            "-": "-        expect(vm.$el.innerHTML).toBe('<span>d</span><span>b</span><span>c</span>')\n"
          },
          {
            "+": "+      })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<span>e</span><span>b</span><span>c</span>'\n+          )\n+          vm.list.models.push({})\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<span>e</span><span>b</span><span>c</span><span></span>'\n+          )\n+          vm.list.models.splice(1, 2)\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<span>e</span><span></span>')\n+          vm.list.models = [{ value: 'x' }, { value: 'y' }]\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<span>x</span><span>y</span>')\n+        })\n+        .then(done)\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>e</span><span>b</span><span>c</span>')\n-        vm.list.models.push({})\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>e</span><span>b</span><span>c</span><span></span>')\n-        vm.list.models.splice(1, 2)\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>e</span><span></span>')\n-        vm.list.models = [{ value: 'x' }, { value: 'y' }]\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>x</span><span>y</span>')\n-      }).then(done)\n"
          },
          {
            "+": "+    it('should render iterable of object values with index', (done) => {\n",
            "-": "-    it('should render iterable of object values with index', done => {\n"
          },
          {
            "+": "+        models: [{ value: 'a' }, { value: 'b' }, { value: 'c' }],\n",
            "-": "-        models: [\n-          { value: 'a' },\n-          { value: 'b' },\n-          { value: 'c' }\n-        ],\n"
          },
          {
            "+": "+        [Symbol.iterator]() {\n",
            "-": "-        [Symbol.iterator] () {\n"
          },
          {
            "+": "+            next() {\n",
            "-": "-            next () {\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>0-a</span><span>1-b</span><span>2-c</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>0-a</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+        expect(vm.$el.innerHTML).toBe(\n+          '<span>0-d</span><span>1-b</span><span>2-c</span>'\n+        )\n",
            "-": "-        expect(vm.$el.innerHTML).toBe('<span>0-d</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+      })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<span>0-e</span><span>1-b</span><span>2-c</span>'\n+          )\n+          vm.list.models.push({})\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<span>0-e</span><span>1-b</span><span>2-c</span><span>3-</span>'\n+          )\n+          vm.list.models.splice(1, 2)\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<span>0-e</span><span>1-</span>')\n+          vm.list.models = [{ value: 'x' }, { value: 'y' }]\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<span>0-x</span><span>1-y</span>')\n+        })\n+        .then(done)\n",
            "-": "-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>0-e</span><span>1-b</span><span>2-c</span>')\n-        vm.list.models.push({})\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>0-e</span><span>1-b</span><span>2-c</span><span>3-</span>')\n-        vm.list.models.splice(1, 2)\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>0-e</span><span>1-</span>')\n-        vm.list.models = [{ value: 'x' }, { value: 'y' }]\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<span>0-x</span><span>1-y</span>')\n-      }).then(done)\n"
          },
          {
            "+": "+  it('should render an Object', (done) => {\n",
            "-": "-  it('should render an Object', done => {\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>3</span><span>1</span><span>2</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>3</span><span>1</span><span>2</span>')\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>3</span><span>1</span><span>2</span><span>4</span>'\n+        )\n+        Vue.delete(vm.obj, 'a')\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>1</span><span>2</span><span>4</span>'\n+        )\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>3</span><span>1</span><span>2</span><span>4</span>')\n-      Vue.delete(vm.obj, 'a')\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>1</span><span>2</span><span>4</span>')\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should render an Object with key', (done) => {\n",
            "-": "-  it('should render an Object with key', done => {\n"
          },
          {
            "+": "+    expect(vm.$el.innerHTML).toBe(\n+      '<span>0-a</span><span>1-b</span><span>2-c</span>'\n+    )\n",
            "-": "-    expect(vm.$el.innerHTML).toBe('<span>0-a</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>3-a</span><span>1-b</span><span>2-c</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>3-a</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>3-a</span><span>1-b</span><span>2-c</span><span>4-d</span>'\n+        )\n+        Vue.delete(vm.obj, 'a')\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>1-b</span><span>2-c</span><span>4-d</span>'\n+        )\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>3-a</span><span>1-b</span><span>2-c</span><span>4-d</span>')\n-      Vue.delete(vm.obj, 'a')\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>1-b</span><span>2-c</span><span>4-d</span>')\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should render an Object with key and index', (done) => {\n",
            "-": "-  it('should render an Object with key and index', done => {\n"
          },
          {
            "+": "+    expect(vm.$el.innerHTML).toBe(\n+      '<span>0-a-0</span><span>1-b-1</span><span>2-c-2</span>'\n+    )\n",
            "-": "-    expect(vm.$el.innerHTML).toBe('<span>0-a-0</span><span>1-b-1</span><span>2-c-2</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>3-a-0</span><span>1-b-1</span><span>2-c-2</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>3-a-0</span><span>1-b-1</span><span>2-c-2</span>')\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>3-a-0</span><span>1-b-1</span><span>2-c-2</span><span>4-d-3</span>'\n+        )\n+        Vue.delete(vm.obj, 'a')\n+      })\n+      .then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<span>1-b-0</span><span>2-c-1</span><span>4-d-2</span>'\n+        )\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>3-a-0</span><span>1-b-1</span><span>2-c-2</span><span>4-d-3</span>')\n-      Vue.delete(vm.obj, 'a')\n-    }).then(() => {\n-      expect(vm.$el.innerHTML).toBe('<span>1-b-0</span><span>2-c-1</span><span>4-d-2</span>')\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should render each key of data', (done) => {\n",
            "-": "-  it('should render each key of data', done => {\n"
          },
          {
            "+": "+    expect(vm.$el.innerHTML).toBe(\n+      '<span>0-a</span><span>1-b</span><span>2-c</span>'\n+    )\n",
            "-": "-    expect(vm.$el.innerHTML).toBe('<span>0-a</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML).toBe(\n+        '<span>3-a</span><span>1-b</span><span>2-c</span>'\n+      )\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>3-a</span><span>1-b</span><span>2-c</span>')\n"
          },
          {
            "+": "+      template:\n+        '<div><div v-if=\"item < 3\" v-for=\"item in items\">{{item}}</div></div>'\n",
            "-": "-      template: '<div><div v-if=\"item < 3\" v-for=\"item in items\">{{item}}</div></div>'\n"
          },
          {
            "+": "+      template:\n+        '<div><div v-for=\"item in items\" v-if=\"item < 3\">{{item}}</div></div>'\n",
            "-": "-      template: '<div><div v-for=\"item in items\" v-if=\"item < 3\">{{item}}</div></div>'\n"
          },
          {
            "+": "+  it('without key', (done) => {\n",
            "-": "-  it('without key', done => {\n"
          },
          {
            "+": "+  it('with key', (done) => {\n",
            "-": "-  it('with key', done => {\n"
          },
          {
            "+": "+      template:\n+        '<div><div v-for=\"item in items\" :key=\"item.id\">{{ item.msg }}</div></div>'\n",
            "-": "-      template: '<div><div v-for=\"item in items\" :key=\"item.id\">{{ item.msg }}</div></div>'\n"
          },
          {
            "+": "+        '<div v-for=\"(item, i) in items\">' +\n+        '<p v-for=\"(subItem, j) in item.items\">{{j}} {{subItem.a}} {{i}} {{item.a}}</p>' +\n+        '</div>' +\n",
            "-": "-          '<div v-for=\"(item, i) in items\">' +\n-            '<p v-for=\"(subItem, j) in item.items\">{{j}} {{subItem.a}} {{i}} {{item.a}}</p>' +\n-          '</div>' +\n"
          },
          {
            "+": "+        '<div><p>0 3 1 2</p><p>1 4 1 2</p></div>'\n",
            "-": "-      '<div><p>0 3 1 2</p><p>1 4 1 2</p></div>'\n"
          },
          {
            "+": "+  it('template v-for', (done) => {\n",
            "-": "-  it('template v-for', done => {\n"
          },
          {
            "+": "+        list: [{ a: 1 }, { a: 2 }, { a: 3 }]\n",
            "-": "-        list: [\n-          { a: 1 },\n-          { a: 2 },\n-          { a: 3 }\n-        ]\n"
          },
          {
            "+": "+        '<template v-for=\"item in list\">' +\n+        '<p>{{item.a}}</p>' +\n+        '<p>{{item.a + 1}}</p>' +\n+        '</template>' +\n",
            "-": "-          '<template v-for=\"item in list\">' +\n-            '<p>{{item.a}}</p>' +\n-            '<p>{{item.a + 1}}</p>' +\n-          '</template>' +\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        assertMarkup()\n+        vm.list.splice(1, 0, { a: 2 })\n+      })\n+      .then(done)\n+\n+    function assertMarkup() {\n+      const markup = vm.list\n+        .map(function (item) {\n+          return '<p>' + item.a + '</p><p>' + (item.a + 1) + '</p>'\n+        })\n+        .join('')\n",
            "-": "-    }).then(() => {\n-      assertMarkup()\n-      vm.list.splice(1, 0, { a: 2 })\n-    }).then(done)\n-\n-    function assertMarkup () {\n-      const markup = vm.list.map(function (item) {\n-        return '<p>' + item.a + '</p><p>' + (item.a + 1) + '</p>'\n-      }).join('')\n"
          },
          {
            "+": "+  it('component v-for', (done) => {\n",
            "-": "-  it('component v-for', done => {\n"
          },
          {
            "+": "+        list: [{ a: 1 }, { a: 2 }, { a: 3 }]\n",
            "-": "-        list: [\n-          { a: 1 },\n-          { a: 2 },\n-          { a: 3 }\n-        ]\n"
          },
          {
            "+": "+        '<test v-for=\"item in list\" :msg=\"item.a\" :key=\"item.a\">' +\n+        '<span>{{item.a}}</span>' +\n+        '</test>' +\n",
            "-": "-          '<test v-for=\"item in list\" :msg=\"item.a\" :key=\"item.a\">' +\n-            '<span>{{item.a}}</span>' +\n-          '</test>' +\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        assertMarkup()\n+        vm.list.splice(1, 0, { a: 2 })\n+      })\n+      .then(done)\n+\n+    function assertMarkup() {\n+      const markup = vm.list\n+        .map(function (item) {\n+          return `<p>${item.a}<span>${item.a}</span></p>`\n+        })\n+        .join('')\n",
            "-": "-    }).then(() => {\n-      assertMarkup()\n-      vm.list.splice(1, 0, { a: 2 })\n-    }).then(done)\n-\n-    function assertMarkup () {\n-      const markup = vm.list.map(function (item) {\n-        return `<p>${item.a}<span>${item.a}</span></p>`\n-      }).join('')\n"
          },
          {
            "+": "+  it('dynamic component v-for', (done) => {\n",
            "-": "-  it('dynamic component v-for', done => {\n"
          },
          {
            "+": "+        list: [{ type: 'one' }, { type: 'two' }]\n",
            "-": "-        list: [\n-          { type: 'one' },\n-          { type: 'two' }\n-        ]\n"
          },
          {
            "+": "+        '<component v-for=\"item in list\" :key=\"item.type\" :is=\"item.type\"></component>' +\n",
            "-": "-          '<component v-for=\"item in list\" :key=\"item.type\" :is=\"item.type\"></component>' +\n"
          },
          {
            "-": "-    const warn = console.warn\n-    console.warn = vi.fn()\n",
            "+": ""
          },
          {
            "+": "+          render() {}\n",
            "-": "-          render () {}\n"
          },
          {
            "+": "+    expect(\n",
            "-": "-    expect(console.warn.calls.argsFor(0)[0]).toContain(\n"
          },
          {
            "+": "+    ).toHaveBeenTipped()\n",
            "-": "-    )\n-    console.warn = warn\n"
          },
          {
            "+": "+  it('multi nested array reactivity', (done) => {\n",
            "-": "-  it('multi nested array reactivity', done => {\n"
          },
          {
            "+": "+  it('should work with strings', (done) => {\n",
            "-": "-  it('should work with strings', done => {\n"
          },
          {
            "+": "+  it('components with v-for and empty list', (done) => {\n",
            "-": "-  it('components with v-for and empty list', done => {\n"
          },
          {
            "+": "+        '<foo v-for=\"item in list\" :key=\"item\">{{ item }}</foo>' +\n",
            "-": "-          '<foo v-for=\"item in list\" :key=\"item\">{{ item }}</foo>' +\n"
          },
          {
            "+": "+        }\n",
            "-": "-        },\n"
          },
          {
            "+": "+  it('elements with v-for and empty list', (done) => {\n",
            "-": "-  it('elements with v-for and empty list', done => {\n"
          },
          {
            "+": "+        '<div attr>' + '<div v-for=\"item in list\">{{ item }}</div>' + '</div>',\n",
            "-": "-        '<div attr>' +\n-          '<div v-for=\"item in list\">{{ item }}</div>' +\n-        '</div>',\n"
          },
          {
            "+": "+        template:\n+          '<div><div v-for=\"({ foo, bar }, i) in list\">{{ foo }} {{ bar }} {{ i }}</div></div>'\n",
            "-": "-        template: '<div><div v-for=\"({ foo, bar }, i) in list\">{{ foo }} {{ bar }} {{ i }}</div></div>'\n"
          },
          {
            "+": "+        data: {\n+          list: [\n+            [1, 2],\n+            [3, 4]\n+          ]\n+        },\n+        template:\n+          '<div><div v-for=\"([ foo, bar ], i) in list\">{{ foo }} {{ bar }} {{ i }}</div></div>'\n",
            "-": "-        data: { list: [[1, 2], [3, 4]] },\n-        template: '<div><div v-for=\"([ foo, bar ], i) in list\">{{ foo }} {{ bar }} {{ i }}</div></div>'\n"
          }
        ],
        "a/test/unit/features/directives/on.spec.ts": [
          {
            "+": "+import { SpyInstanceFn } from 'vitest'\n",
            "-": ""
          },
          {
            "+": "+  let vm, spy: SpyInstanceFn, el: HTMLElement\n",
            "-": "-  let vm, spy, el\n"
          },
          {
            "+": "+    const args = spy.mock.calls\n",
            "-": "-    const args = spy.calls.allArgs()\n"
          },
          {
            "+": "+    const args = spy.mock.calls\n",
            "-": "-    const args = spy.calls.allArgs()\n"
          },
          {
            "+": "+    expect(spy.mock.calls).toEqual([['regular']]); // Regular @click should work for dynamic components resolved to native HTML elements.\n",
            "-": "-    expect(spy.calls.allArgs()).toEqual([['regular']]); // Regular @click should work for dynamic components resolved to native HTML elements.\n"
          }
        ],
        "a/test/unit/features/directives/style.spec.ts": [
          {
            "+": "+function checkPrefixedProp(prop) {\n",
            "-": "-function checkPrefixedProp (prop) {\n"
          },
          {
            "+": "+      if (prefixes[i] + upper in el.style) {\n",
            "-": "-      if ((prefixes[i] + upper) in el.style) {\n"
          },
          {
            "+": "+      data() {\n",
            "-": "-      data () {\n"
          },
          {
            "+": "+  it('string', (done) => {\n",
            "-": "-  it('string', done => {\n"
          },
          {
            "+": "+  it('falsy number', (done) => {\n",
            "-": "-  it('falsy number', done => {\n"
          },
          {
            "+": "+  it('plain object', (done) => {\n",
            "-": "-  it('plain object', done => {\n"
          },
          {
            "+": "+  it('camelCase', (done) => {\n",
            "-": "-  it('camelCase', done => {\n"
          },
          {
            "+": "+  it('remove if falsy value', (done) => {\n",
            "-": "-  it('remove if falsy value', done => {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.style.color).toBe('')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.style.color).toBe('')\n-    }).then(done)\n"
          },
          {
            "+": "+  it('ignore unsupported property', (done) => {\n",
            "-": "-  it('ignore unsupported property', done => {\n"
          },
          {
            "+": "+  it('auto prefix', (done) => {\n",
            "-": "-  it('auto prefix', done => {\n"
          },
          {
            "+": "+  it('auto-prefixed style value as array', (done) => {\n",
            "-": "-  it('auto-prefixed style value as array', done => {\n"
          },
          {
            "+": "+    vm.styles.display.forEach((value) => {\n",
            "-": "-    vm.styles.display.forEach(value => {\n"
          },
          {
            "+": "+  it('!important', (done) => {\n",
            "-": "-  it('!important', done => {\n"
          },
          {
            "+": "+  it('camelCase with !important', (done) => {\n",
            "-": "-  it('camelCase with !important', done => {\n"
          },
          {
            "+": "+  it('object with multiple entries', (done) => {\n",
            "-": "-  it('object with multiple entries', done => {\n"
          },
          {
            "+": "+      fontSize: '10px'\n",
            "-": "-      marginLeft: '10px',\n-      marginRight: '15px'\n"
          },
          {
            "+": "+      expect(vm.$el.style.color).toBe('red')\n+      expect(vm.$el.style.fontSize).toBe('10px')\n+      expect(vm.$el.style.getPropertyValue('font-size')).toBe('10px')\n",
            "-": "-      expect(vm.$el.style.getPropertyValue('color')).toBe('red')\n-      expect(vm.$el.style.getPropertyValue('margin-left')).toBe('10px')\n-      expect(vm.$el.style.getPropertyValue('margin-right')).toBe('15px')\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.style.color).toBe('blue')\n+        expect(vm.$el.style.padding).toBeFalsy()\n+        expect(vm.$el.style.fontSize).toBeFalsy()\n+        expect(vm.$el.style.getPropertyValue('font-size')).toBeFalsy()\n+        // handle falsy value\n+        vm.styles = null\n+      })\n+      .then(() => {\n+        expect(vm.$el.style.color).toBeFalsy()\n+        expect(vm.$el.style.padding).toBeFalsy()\n+        expect(vm.$el.style.fontSize).toBeFalsy()\n+        expect(vm.$el.style.getPropertyValue('font-size')).toBeFalsy()\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.style.getPropertyValue('color')).toBe('blue')\n-      expect(vm.$el.style.getPropertyValue('padding')).toBeFalsy()\n-      expect(vm.$el.style.getPropertyValue('margin-left')).toBeFalsy()\n-      expect(vm.$el.style.getPropertyValue('margin-right')).toBeFalsy()\n-      // handle falsy value\n-      vm.styles = null\n-    }).then(() => {\n-      expect(vm.$el.style.getPropertyValue('color')).toBeFalsy()\n-      expect(vm.$el.style.getPropertyValue('padding')).toBeFalsy()\n-      expect(vm.$el.style.getPropertyValue('margin-left')).toBeFalsy()\n-      expect(vm.$el.style.getPropertyValue('margin-right')).toBeFalsy()\n-    }).then(done)\n"
          },
          {
            "+": "+  it('array of objects', (done) => {\n",
            "-": "-  it('array of objects', done => {\n"
          },
          {
            "+": "+    vm.styles = [{ color: 'red' }, { fontSize: '20px' }]\n",
            "-": "-    vm.styles = [{ color: 'red' }, { marginRight: '20px' }]\n"
          },
          {
            "+": "+      expect(vm.$el.style.color).toBe('red')\n+      expect(vm.$el.style.fontSize).toBe('20px')\n+      expect(vm.$el.style.padding).toBe('10px')\n",
            "-": "-      expect(vm.$el.style.getPropertyValue('color')).toBe('red')\n-      expect(vm.$el.style.getPropertyValue('margin-right')).toBe('20px')\n-      expect(vm.$el.style.getPropertyValue('padding')).toBe('10px')\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.style.color).toBe('blue')\n+        expect(vm.$el.style.fontSize).toBeFalsy()\n+        expect(vm.$el.style.padding).toBeFalsy()\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.style.getPropertyValue('color')).toBe('blue')\n-      expect(vm.$el.style.getPropertyValue('margin-right')).toBeFalsy()\n-      expect(vm.$el.style.getPropertyValue('padding')).toBeFalsy()\n-    }).then(done)\n"
          },
          {
            "+": "+  it('updates objects deeply', (done) => {\n",
            "-": "-  it('updates objects deeply', done => {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.style.display).toBe('block')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.style.display).toBe('block')\n-    }).then(done)\n"
          },
          {
            "+": "+  it('background size with only one value', (done) => {\n",
            "-": "-  it('background size with only one value', done => {\n"
          },
          {
            "+": "+      expect(vm.$el.style.cssText.replace(/\\s/g, '')).toMatch(\n+        /background-size:100%(auto)?;/\n+      )\n",
            "-": "-      expect(vm.$el.style.cssText.replace(/\\s/g, '')).toMatch(/background-size:100%(auto)?;/)\n"
          },
          {
            "+": "+  it('should work with interpolation', (done) => {\n",
            "-": "-  it('should work with interpolation', done => {\n"
          },
          {
            "+": "+    it('CSS variables', (done) => {\n",
            "-": "-    it('CSS variables', done => {\n"
          },
          {
            "+": "+      template:\n+        '<div style=\"background: url(https://vuejs.org/images/logo.png);color: blue\" :style=\"test\"></div>',\n",
            "-": "-      template: '<div style=\"background: url(https://vuejs.org/images/logo.png);color: blue\" :style=\"test\"></div>',\n"
          },
          {
            "+": "+    expect(style.backgroundImage).toMatch('https://vuejs.org/images/logo.png')\n+    expect(style.color).toBe('red')\n+    expect(style.fontSize).toBe('12px')\n",
            "-": "-    expect(style.getPropertyValue('background-image')).toMatch('https://vuejs.org/images/logo.png')\n-    expect(style.getPropertyValue('color')).toBe('red')\n-    expect(style.getPropertyValue('font-size')).toBe('12px')\n"
          },
          {
            "+": "+  it('should merge between parent and child', (done) => {\n",
            "-": "-  it('should merge between parent and child', done => {\n"
          },
          {
            "+": "+      template:\n+        '<child style=\"text-align: left;margin-right:20px\" :style=\"test\"></child>',\n",
            "-": "-      template: '<child style=\"text-align: left;margin-right:20px\" :style=\"test\"></child>',\n"
          },
          {
            "+": "+          template:\n+            '<div style=\"margin-right:10px;\" :style=\"{marginLeft: marginLeft}\"></div>',\n",
            "-": "-          template: '<div style=\"margin-right:10px;\" :style=\"{marginLeft: marginLeft}\"></div>',\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(style.marginLeft).toBe('30px')\n+        child.fontSize = '30px'\n+      })\n+      .then(() => {\n+        expect(style.fontSize).toBe('12px')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(style.marginLeft).toBe('30px')\n-      child.fontSize = '30px'\n-    }).then(() => {\n-      expect(style.fontSize).toBe('12px')\n-    }).then(done)\n"
          },
          {
            "+": "+          template:\n+            '<div><nested ref=\"nested\" style=\"color: blue;text-align:left\"></nested></div>',\n",
            "-": "-          template: '<div><nested ref=\"nested\" style=\"color: blue;text-align:left\"></nested></div>',\n"
          },
          {
            "+": "+              template:\n+                '<div style=\"margin-left: 12px;\" :style=\"nestedStyle\"></div>',\n+              data: () => ({ nestedStyle: { marginLeft: '30px' } })\n",
            "-": "-              template: '<div style=\"margin-left: 12px;\" :style=\"nestedStyle\"></div>',\n-              data: () => ({ nestedStyle: { marginLeft: '30px' }})\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(style.marginLeft).toBe('60px')\n+        child.nestedStyle = {\n+          fontSize: '14px',\n+          marginLeft: '40px'\n+        }\n+      })\n+      .then(() => {\n+        expect(style.fontSize).toBe('12px')\n+        expect(style.marginLeft).toBe('40px')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(style.marginLeft).toBe('60px')\n-      child.nestedStyle = {\n-        fontSize: '14px',\n-        marginLeft: '40px'\n-      }\n-    }).then(() => {\n-      expect(style.fontSize).toBe('12px')\n-      expect(style.marginLeft).toBe('40px')\n-    }).then(done)\n"
          },
          {
            "+": "+        '<section style=\"color: blue\" :style=\"style\" v-if=\"!bool\"></section>' +\n+        '<div></div>' +\n+        '<section style=\"margin-top: 12px\" v-if=\"bool\"></section>' +\n",
            "-": "-          '<section style=\"color: blue\" :style=\"style\" v-if=\"!bool\"></section>' +\n-          '<div></div>' +\n-          '<section style=\"margin-top: 12px\" v-if=\"bool\"></section>' +\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(style.color).toBe('')\n+        expect(style.fontSize).toBe('')\n+        expect(style.marginTop).toBe('12px')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(style.color).toBe('')\n-      expect(style.fontSize).toBe('')\n-      expect(style.marginTop).toBe('12px')\n-    }).then(done)\n"
          },
          {
            "+": "+        '<section style=\"color: blue\" :style=\"style\" v-if=\"foo\"></section>' +\n+        '<section style=\"margin: 12px\" v-else-if=\"bar\"></section>' +\n+        '<section style=\"padding: 24px\" v-else></section>' +\n+        '<div></div>' +\n",
            "-": "-          '<section style=\"color: blue\" :style=\"style\" v-if=\"foo\"></section>' +\n-          '<section style=\"margin-top: 12px\" v-else-if=\"bar\"></section>' +\n-          '<section style=\"margin-bottom: 24px\" v-else></section>' +\n-          '<div></div>' +\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(style.color).toBe('')\n+        expect(style.fontSize).toBe('')\n+        expect(style.padding).toBe('24px')\n+        vm.bar = true\n+      })\n+      .then(() => {\n+        expect(style.color).toBe('')\n+        expect(style.fontSize).toBe('')\n+        expect(style.padding).toBe('')\n+        expect(style.margin).toBe('12px')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(style.color).toBe('')\n-      expect(style.fontSize).toBe('')\n-      expect(style.marginBottom).toBe('24px')\n-      vm.bar = true\n-    }).then(() => {\n-      expect(style.color).toBe('')\n-      expect(style.fontSize).toBe('')\n-      expect(style.marginBottom).toBe('')\n-      expect(style.marginTop).toBe('12px')\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should work for elements passed down as a slot', (done) => {\n",
            "-": "-  it('should work for elements passed down as a slot', done => {\n"
          }
        ]
      },
      "numOfFiles": 5,
      "numOfChanges": 139,
      "qualityScore": 60
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "250bc17d51d746992aac57960ad1268c43fb3e2d",
      "url": "https://github.com/vuejs/vue/commit/250bc17d51d746992aac57960ad1268c43fb3e2d",
      "message": "test: unit/features/component passing",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T00:46:15Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/helpers/to-have-warned.ts": [
          {
            "+": "+  },\n+\n+  toHaveBeenTipped(received: string) {\n+    const passed = tip.mock.calls.some((args) => args[0].includes(received))\n+    if (passed) {\n+      return {\n+        pass: true,\n+        message: () => `expected \"${received}\" not to have been tipped.`\n+      }\n+    } else {\n+      const msgs = warn.mock.calls.map((args) => args[0]).join('\\n - ')\n+      return {\n+        pass: false,\n+        message: () =>\n+          `expected \"${received}\" to have been tipped` +\n+          (msgs.length\n+            ? `.\\n\\nActual messages:\\n\\n - ${msgs}`\n+            : ` but no tip was recorded.`)\n+      }\n+    }\n",
            "-": ""
          },
          {
            "+": "+let tip: SpyInstance\n",
            "-": ""
          },
          {
            "+": "+  tip = vi.spyOn(console, 'warn').mockImplementation(() => {})\n",
            "-": ""
          }
        ],
        "a/test/test-env.d.ts": [
          {
            "+": "+    toHaveBeenTipped(): R\n",
            "-": ""
          }
        ],
        "a/test/unit/features/component/component-scoped-slot.spec.ts": [
          {
            "+": "+        new Vue({\n",
            "-": "-        const vm = new Vue({\n"
          },
          {
            "+": "+        new Vue({\n",
            "-": "-        const vm = new Vue({\n"
          },
          {
            "+": "+      new Vue({\n",
            "-": "-      const vm = new Vue({\n"
          },
          {
            "-": "-    let p\n",
            "+": ""
          }
        ],
        "a/test/vitest.setup.ts": [
          {
            "+": "+;(global as any).__WEEX__ = false\n+process.env.NEW_SLOT_SYNTAX = 'true'\n",
            "-": "-(global as any).__WEEX__ = false\n"
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 9,
      "qualityScore": 50
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "29989a10745aa82322569e01d879cad90d3fbb3a",
      "url": "https://github.com/vuejs/vue/commit/29989a10745aa82322569e01d879cad90d3fbb3a",
      "message": "test: move transition + keep alive test cases",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T00:30:41Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/test-env.d.ts": [
          {
            "+": "+  thenWaitFor(n: number | Function): this\n",
            "-": "-  thenWaitFor(n: number): this\n"
          }
        ],
        "a/test/unit/features/component/component-keep-alive.spec.ts": [
          {
            "-": "-import injectStyles from '../transition/inject-styles'\n-import { isIE9 } from 'core/util/env'\n-import { nextFrame } from 'web/runtime/transition-util'\n",
            "+": ""
          },
          {
            "-": "-  const { duration, buffer } = injectStyles()\n",
            "+": ""
          },
          {
            "+": "+  function assertHookCalls(component, callCounts) {\n",
            "-": "-  function assertHookCalls (component, callCounts) {\n"
          },
          {
            "+": "+  it('should work', (done) => {\n",
            "-": "-  it('should work', done => {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('one')\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n+        vm.view = 'two'\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('two')\n+        assertHookCalls(one, [1, 1, 2, 2, 0])\n+        assertHookCalls(two, [1, 1, 2, 1, 0])\n+        vm.ok = false // teardown\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('')\n+        assertHookCalls(one, [1, 1, 2, 2, 1])\n+        assertHookCalls(two, [1, 1, 2, 2, 1])\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('one')\n-      assertHookCalls(one, [1, 1, 2, 1, 0])\n-      assertHookCalls(two, [1, 1, 1, 1, 0])\n-      vm.view = 'two'\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('two')\n-      assertHookCalls(one, [1, 1, 2, 2, 0])\n-      assertHookCalls(two, [1, 1, 2, 1, 0])\n-      vm.ok = false // teardown\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('')\n-      assertHookCalls(one, [1, 1, 2, 2, 1])\n-      assertHookCalls(two, [1, 1, 2, 2, 1])\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should invoke hooks on the entire sub tree', (done) => {\n",
            "-": "-  it('should invoke hooks on the entire sub tree', done => {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('two')\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 2, 1, 0])\n+        vm.ok = false\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('')\n+        assertHookCalls(one, [1, 1, 2, 2, 0])\n+        assertHookCalls(two, [1, 1, 2, 2, 0])\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('two')\n-      assertHookCalls(one, [1, 1, 2, 1, 0])\n-      assertHookCalls(two, [1, 1, 2, 1, 0])\n-      vm.ok = false\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('')\n-      assertHookCalls(one, [1, 1, 2, 2, 0])\n-      assertHookCalls(two, [1, 1, 2, 2, 0])\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should handle nested keep-alive hooks properly', (done) => {\n",
            "-": "-  it('should handle nested keep-alive hooks properly', done => {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        vm.ok = true\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('two')\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 2, 1, 0])\n+      })\n+      .then(() => {\n+        // toggle sub component when activated\n+        oneInstance.ok = false\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('')\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 2, 2, 0])\n+      })\n+      .then(() => {\n+        oneInstance.ok = true\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('two')\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 3, 2, 0])\n+      })\n+      .then(() => {\n+        vm.ok = false\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('')\n+        assertHookCalls(one, [1, 1, 2, 2, 0])\n+        assertHookCalls(two, [1, 1, 3, 3, 0])\n+      })\n+      .then(() => {\n+        // toggle sub component when parent is deactivated\n+        oneInstance.ok = false\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('')\n+        assertHookCalls(one, [1, 1, 2, 2, 0])\n+        assertHookCalls(two, [1, 1, 3, 3, 0]) // should not be affected\n+      })\n+      .then(() => {\n+        oneInstance.ok = true\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('')\n+        assertHookCalls(one, [1, 1, 2, 2, 0])\n+        assertHookCalls(two, [1, 1, 3, 3, 0]) // should not be affected\n+      })\n+      .then(() => {\n+        vm.ok = true\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('two')\n+        assertHookCalls(one, [1, 1, 3, 2, 0])\n+        assertHookCalls(two, [1, 1, 4, 3, 0])\n+      })\n+      .then(() => {\n+        oneInstance.ok = false\n+        vm.ok = false\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('')\n+        assertHookCalls(one, [1, 1, 3, 3, 0])\n+        assertHookCalls(two, [1, 1, 4, 4, 0])\n+      })\n+      .then(() => {\n+        vm.ok = true\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('')\n+        assertHookCalls(one, [1, 1, 4, 3, 0])\n+        assertHookCalls(two, [1, 1, 4, 4, 0]) // should remain inactive\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      vm.ok = true\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('two')\n-      assertHookCalls(one, [1, 1, 2, 1, 0])\n-      assertHookCalls(two, [1, 1, 2, 1, 0])\n-    }).then(() => {\n-      // toggle sub component when activated\n-      oneInstance.ok = false\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('')\n-      assertHookCalls(one, [1, 1, 2, 1, 0])\n-      assertHookCalls(two, [1, 1, 2, 2, 0])\n-    }).then(() => {\n-      oneInstance.ok = true\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('two')\n-      assertHookCalls(one, [1, 1, 2, 1, 0])\n-      assertHookCalls(two, [1, 1, 3, 2, 0])\n-    }).then(() => {\n-      vm.ok = false\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('')\n-      assertHookCalls(one, [1, 1, 2, 2, 0])\n-      assertHookCalls(two, [1, 1, 3, 3, 0])\n-    }).then(() => {\n-      // toggle sub component when parent is deactivated\n-      oneInstance.ok = false\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('')\n-      assertHookCalls(one, [1, 1, 2, 2, 0])\n-      assertHookCalls(two, [1, 1, 3, 3, 0]) // should not be affected\n-    }).then(() => {\n-      oneInstance.ok = true\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('')\n-      assertHookCalls(one, [1, 1, 2, 2, 0])\n-      assertHookCalls(two, [1, 1, 3, 3, 0]) // should not be affected\n-    }).then(() => {\n-      vm.ok = true\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('two')\n-      assertHookCalls(one, [1, 1, 3, 2, 0])\n-      assertHookCalls(two, [1, 1, 4, 3, 0])\n-    }).then(() => {\n-      oneInstance.ok = false\n-      vm.ok = false\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('')\n-      assertHookCalls(one, [1, 1, 3, 3, 0])\n-      assertHookCalls(two, [1, 1, 4, 4, 0])\n-    }).then(() => {\n-      vm.ok = true\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('')\n-      assertHookCalls(one, [1, 1, 4, 3, 0])\n-      assertHookCalls(two, [1, 1, 4, 4, 0]) // should remain inactive\n-    }).then(done)\n"
          },
          {
            "+": "+  function sharedAssertions(vm, done) {\n",
            "-": "-  function sharedAssertions (vm, done) {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('one')\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 0, 0, 1])\n+        vm.view = 'two'\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('two')\n+        assertHookCalls(one, [1, 1, 2, 2, 0])\n+        assertHookCalls(two, [2, 2, 0, 0, 1])\n+        vm.ok = false // teardown\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('')\n+        assertHookCalls(one, [1, 1, 2, 2, 1])\n+        assertHookCalls(two, [2, 2, 0, 0, 2])\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('one')\n-      assertHookCalls(one, [1, 1, 2, 1, 0])\n-      assertHookCalls(two, [1, 1, 0, 0, 1])\n-      vm.view = 'two'\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('two')\n-      assertHookCalls(one, [1, 1, 2, 2, 0])\n-      assertHookCalls(two, [2, 2, 0, 0, 1])\n-      vm.ok = false // teardown\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('')\n-      assertHookCalls(one, [1, 1, 2, 2, 1])\n-      assertHookCalls(two, [2, 2, 0, 0, 2])\n-    }).then(done)\n"
          },
          {
            "+": "+  it('include (string)', (done) => {\n",
            "-": "-  it('include (string)', done => {\n"
          },
          {
            "+": "+  it('include (regex)', (done) => {\n",
            "-": "-  it('include (regex)', done => {\n"
          },
          {
            "+": "+  it('include (array)', (done) => {\n",
            "-": "-  it('include (array)', done => {\n"
          },
          {
            "+": "+  it('exclude (string)', (done) => {\n",
            "-": "-  it('exclude (string)', done => {\n"
          },
          {
            "+": "+  it('exclude (regex)', (done) => {\n",
            "-": "-  it('exclude (regex)', done => {\n"
          },
          {
            "+": "+  it('exclude (array)', (done) => {\n",
            "-": "-  it('exclude (array)', done => {\n"
          },
          {
            "+": "+  it('include + exclude', (done) => {\n",
            "-": "-  it('include + exclude', done => {\n"
          },
          {
            "+": "+  it('prune cache on include/exclude change', (done) => {\n",
            "-": "-  it('prune cache on include/exclude change', done => {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        assertHookCalls(one, [1, 1, 1, 1, 1])\n+        assertHookCalls(two, [1, 1, 1, 0, 0])\n+        vm.view = 'one'\n+      })\n+      .then(() => {\n+        assertHookCalls(one, [2, 2, 1, 1, 1])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      assertHookCalls(one, [1, 1, 1, 1, 1])\n-      assertHookCalls(two, [1, 1, 1, 0, 0])\n-      vm.view = 'one'\n-    }).then(() => {\n-      assertHookCalls(one, [2, 2, 1, 1, 1])\n-      assertHookCalls(two, [1, 1, 1, 1, 0])\n-    }).then(done)\n"
          },
          {
            "+": "+  it('prune cache on include/exclude change + view switch', (done) => {\n",
            "-": "-  it('prune cache on include/exclude change + view switch', done => {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        // two should be pruned\n+        assertHookCalls(two, [1, 1, 1, 1, 1])\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      assertHookCalls(one, [1, 1, 2, 1, 0])\n-      // two should be pruned\n-      assertHookCalls(two, [1, 1, 1, 1, 1])\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should not prune currently active instance', (done) => {\n",
            "-": "-  it('should not prune currently active instance', done => {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        assertHookCalls(one, [1, 1, 1, 0, 1])\n+        assertHookCalls(two, [1, 1, 1, 0, 0])\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      assertHookCalls(one, [1, 1, 1, 0, 1])\n-      assertHookCalls(two, [1, 1, 1, 0, 0])\n-    }).then(done)\n"
          },
          {
            "+": "+  it('deeply nested keep-alive should be destroyed properly', (done) => {\n",
            "-": "-  it('deeply nested keep-alive should be destroyed properly', done => {\n"
          },
          {
            "+": "+  it('should update latest props/listeners for a re-activated component', (done) => {\n",
            "-": "-  it('should update latest props/listeners for a re-activated component', done => {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('two 2')\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('two 2')\n-    }).then(done)\n"
          },
          {
            "+": "+  it('max', (done) => {\n",
            "-": "-  it('max', done => {\n"
          },
          {
            "+": "+    function assertCount(calls) {\n",
            "-": "-    function assertCount (calls) {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        // should prune A because max cache reached\n+        assertCount([1, 1, 1, 0, 1, 0])\n+        vm.n = 'bb'\n+      })\n+      .then(() => {\n+        // B should be reused, and made latest\n+        assertCount([1, 1, 1, 0, 1, 0])\n+        vm.n = 'aa'\n+      })\n+      .then(() => {\n+        // C should be pruned because B was used last so C is the oldest cached\n+        assertCount([2, 1, 1, 0, 1, 1])\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      // should prune A because max cache reached\n-      assertCount([1, 1, 1, 0, 1, 0])\n-      vm.n = 'bb'\n-    }).then(() => {\n-      // B should be reused, and made latest\n-      assertCount([1, 1, 1, 0, 1, 0])\n-      vm.n = 'aa'\n-    }).then(() => {\n-      // C should be pruned because B was used last so C is the oldest cached\n-      assertCount([2, 1, 1, 0, 1, 1])\n-    }).then(done)\n"
          },
          {
            "+": "+  it('max=1', (done) => {\n",
            "-": "-  it('max=1', done => {\n"
          },
          {
            "+": "+    function assertCount(calls) {\n",
            "-": "-    function assertCount (calls) {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        // should prune B because max cache reached\n+        assertCount([1, 1, 1, 1, 1, 0])\n+        vm.n = 'bb'\n+      })\n+      .then(() => {\n+        // B is recreated\n+        assertCount([1, 1, 2, 1, 1, 1])\n+        vm.n = 'aa'\n+      })\n+      .then(() => {\n+        // B is destroyed and A recreated\n+        assertCount([2, 1, 2, 2, 1, 1])\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      // should prune B because max cache reached\n-      assertCount([1, 1, 1, 1, 1, 0])\n-      vm.n = 'bb'\n-    }).then(() => {\n-      // B is recreated\n-      assertCount([1, 1, 2, 1, 1, 1])\n-      vm.n = 'aa'\n-    }).then(() => {\n-      // B is destroyed and A recreated\n-      assertCount([2, 1, 2, 2, 1, 1])\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should not cache anonymous component when include is specified', (done) => {\n",
            "-": "-  it('should not cache anonymous component when include is specified', done => {\n"
          },
          {
            "+": "+      render(h, ctx) {\n",
            "-": "-      render (h, ctx) {\n"
          },
          {
            "+": "+    function assert(foo, bar) {\n",
            "-": "-    function assert (foo, bar) {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('foo')\n+        assert(1, 1)\n+        vm.view = false\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('bar')\n+        assert(1, 2)\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('foo')\n-      assert(1, 1)\n-      vm.view = false\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('bar')\n-      assert(1, 2)\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should cache anonymous components if include is not specified', (done) => {\n",
            "-": "-  it('should cache anonymous components if include is not specified', done => {\n"
          },
          {
            "+": "+      render(h, ctx) {\n",
            "-": "-      render (h, ctx) {\n"
          },
          {
            "+": "+    function assert(foo, bar) {\n",
            "-": "-    function assert (foo, bar) {\n"
          },
          {
            "+": "+    })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('foo')\n+        assert(1, 1)\n+        vm.view = false\n+      })\n+      .then(() => {\n+        expect(vm.$el.textContent).toBe('bar')\n+        assert(1, 1)\n+      })\n+      .then(done)\n",
            "-": "-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('foo')\n-      assert(1, 1)\n-      vm.view = false\n-    }).then(() => {\n-      expect(vm.$el.textContent).toBe('bar')\n-      assert(1, 1)\n-    }).then(done)\n"
          },
          {
            "+": "+  it('should not destroy active instance when pruning cache', (done) => {\n",
            "-": "-  it('should not destroy active instance when pruning cache', done => {\n"
          },
          {
            "-": "-    }).then(() => {\n-      expect(Foo.destroyed).not.toHaveBeenCalled()\n-    }).then(done)\n-  })\n-\n-  if (!isIE9) {\n-    it('with transition-mode out-in', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n-          <transition name=\"test\" mode=\"out-in\" @after-leave=\"afterLeave\">\n-            <keep-alive>\n-              <component :is=\"view\" class=\"test\"></component>\n-            </keep-alive>\n-          </transition>\n-        </div>`,\n-        data: {\n-          view: 'one'\n-        },\n-        components,\n-        methods: {\n-          afterLeave () {\n-            next()\n-          }\n-        }\n-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      assertHookCalls(one, [1, 1, 1, 0, 0])\n-      assertHookCalls(two, [0, 0, 0, 0, 0])\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n-        )\n-        assertHookCalls(one, [1, 1, 1, 1, 0])\n-        assertHookCalls(two, [0, 0, 0, 0, 0])\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n-        )\n-      }).thenWaitFor(_next => { next = _next }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<!---->')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-enter test-enter-active\">two</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 1, 1, 0])\n-        assertHookCalls(two, [1, 1, 1, 0, 0])\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-enter-active test-enter-to\">two</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 1, 1, 0])\n-        assertHookCalls(two, [1, 1, 1, 0, 0])\n-      }).then(() => {\n-        vm.view = 'one'\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">two</div><!---->'\n-        )\n-        assertHookCalls(one, [1, 1, 1, 1, 0])\n-        assertHookCalls(two, [1, 1, 1, 1, 0])\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave-active test-leave-to\">two</div><!---->'\n-        )\n-      }).thenWaitFor(_next => { next = _next }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<!---->')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-enter test-enter-active\">one</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 2, 1, 0])\n-        assertHookCalls(two, [1, 1, 1, 1, 0])\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-enter-active test-enter-to\">one</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 2, 1, 0])\n-        assertHookCalls(two, [1, 1, 1, 1, 0])\n-      }).then(done)\n-    })\n-\n-    it('with transition-mode out-in + include', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n-          <transition name=\"test\" mode=\"out-in\" @after-leave=\"afterLeave\">\n-            <keep-alive include=\"one\">\n-              <component :is=\"view\" class=\"test\"></component>\n-            </keep-alive>\n-          </transition>\n-        </div>`,\n-        data: {\n-          view: 'one'\n-        },\n-        components,\n-        methods: {\n-          afterLeave () {\n-            next()\n-          }\n-        }\n-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      assertHookCalls(one, [1, 1, 1, 0, 0])\n-      assertHookCalls(two, [0, 0, 0, 0, 0])\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n-        )\n-        assertHookCalls(one, [1, 1, 1, 1, 0])\n-        assertHookCalls(two, [0, 0, 0, 0, 0])\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n-        )\n-      }).thenWaitFor(_next => { next = _next }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<!---->')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-enter test-enter-active\">two</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 1, 1, 0])\n-        assertHookCalls(two, [1, 1, 0, 0, 0])\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-enter-active test-enter-to\">two</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 1, 1, 0])\n-        assertHookCalls(two, [1, 1, 0, 0, 0])\n-      }).then(() => {\n-        vm.view = 'one'\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">two</div><!---->'\n-        )\n-        assertHookCalls(one, [1, 1, 1, 1, 0])\n-        assertHookCalls(two, [1, 1, 0, 0, 1])\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave-active test-leave-to\">two</div><!---->'\n-        )\n-      }).thenWaitFor(_next => { next = _next }).then(() => {\n-        expect(vm.$el.innerHTML).toBe('<!---->')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-enter test-enter-active\">one</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 2, 1, 0])\n-        assertHookCalls(two, [1, 1, 0, 0, 1])\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-enter-active test-enter-to\">one</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 2, 1, 0])\n-        assertHookCalls(two, [1, 1, 0, 0, 1])\n-      }).then(done)\n-    })\n-\n-    it('with transition-mode in-out', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n-          <transition name=\"test\" mode=\"in-out\" @after-enter=\"afterEnter\">\n-            <keep-alive>\n-              <component :is=\"view\" class=\"test\"></component>\n-            </keep-alive>\n-          </transition>\n-        </div>`,\n-        data: {\n-          view: 'one'\n-        },\n-        components,\n-        methods: {\n-          afterEnter () {\n-            next()\n-          }\n-        }\n-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      assertHookCalls(one, [1, 1, 1, 0, 0])\n-      assertHookCalls(two, [0, 0, 0, 0, 0])\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>' +\n-          '<div class=\"test test-enter test-enter-active\">two</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 1, 1, 0])\n-        assertHookCalls(two, [1, 1, 1, 0, 0])\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>' +\n-          '<div class=\"test test-enter-active test-enter-to\">two</div>'\n-        )\n-      }).thenWaitFor(_next => { next = _next }).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>' +\n-          '<div class=\"test\">two</div>'\n-        )\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">one</div>' +\n-          '<div class=\"test\">two</div>'\n-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave-active test-leave-to\">one</div>' +\n-          '<div class=\"test\">two</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 1, 1, 0])\n-        assertHookCalls(two, [1, 1, 1, 0, 0])\n-      }).then(() => {\n-        vm.view = 'one'\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>' +\n-          '<div class=\"test test-enter test-enter-active\">one</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 2, 1, 0])\n-        assertHookCalls(two, [1, 1, 1, 1, 0])\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>' +\n-          '<div class=\"test test-enter-active test-enter-to\">one</div>'\n-        )\n-      }).thenWaitFor(_next => { next = _next }).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>' +\n-          '<div class=\"test\">one</div>'\n-        )\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">two</div>' +\n-          '<div class=\"test\">one</div>'\n-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave-active test-leave-to\">two</div>' +\n-          '<div class=\"test\">one</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>'\n-        )\n-        assertHookCalls(one, [1, 1, 2, 1, 0])\n-        assertHookCalls(two, [1, 1, 1, 1, 0])\n-      }).then(done)\n-    })\n-\n-    it('dynamic components, in-out with early cancel', done => {\n-      let next\n-      const vm = new Vue({\n-        template: `<div>\n-          <transition name=\"test\" mode=\"in-out\" @after-enter=\"afterEnter\">\n-            <keep-alive>\n-              <component :is=\"view\" class=\"test\"></component>\n-            </keep-alive>\n-          </transition>\n-        </div>`,\n-        data: { view: 'one' },\n-        components,\n-        methods: {\n-          afterEnter () {\n-            next()\n-          }\n-        }\n-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('one')\n-      vm.view = 'two'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>' +\n-          '<div class=\"test test-enter test-enter-active\">two</div>'\n-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>' +\n-          '<div class=\"test test-enter-active test-enter-to\">two</div>'\n-        )\n-        // switch again before enter finishes,\n-        // this cancels both enter and leave.\n-        vm.view = 'one'\n-      }).then(() => {\n-        // 1. the pending leaving \"one\" should be removed instantly.\n-        // 2. the entering \"two\" should be placed into its final state instantly.\n-        // 3. a new \"one\" is created and entering\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>' +\n-          '<div class=\"test test-enter test-enter-active\">one</div>'\n-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>' +\n-          '<div class=\"test test-enter-active test-enter-to\">one</div>'\n-        )\n-      }).thenWaitFor(_next => { next = _next }).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">two</div>' +\n-          '<div class=\"test\">one</div>'\n-        )\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">two</div>' +\n-          '<div class=\"test\">one</div>'\n-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave-active test-leave-to\">two</div>' +\n-          '<div class=\"test\">one</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">one</div>'\n-        )\n-      }).then(done)\n",
            "+": ""
          },
          {
            "+": "+      .then(() => {\n+        expect(Foo.destroyed).not.toHaveBeenCalled()\n+      })\n+      .then(done)\n+  })\n",
            "-": "-\n-    // #4339\n-    it('component with inner transition', done => {\n-      const vm = new Vue({\n-        template: `\n-          <div>\n-            <keep-alive>\n-              <component ref=\"test\" :is=\"view\"></component>\n-            </keep-alive>\n-          </div>\n-        `,\n-        data: { view: 'foo' },\n-        components: {\n-          foo: { template: '<transition><div class=\"test\">foo</div></transition>' },\n-          bar: { template: '<transition name=\"test\"><div class=\"test\">bar</div></transition>' }\n-        }\n-      }).$mount(el)\n-\n-      // should not apply transition on initial render by default\n-      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n-      vm.view = 'bar'\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test v-leave v-leave-active\">foo</div>' +\n-          '<div class=\"test test-enter test-enter-active\">bar</div>'\n-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test v-leave-active v-leave-to\">foo</div>' +\n-          '<div class=\"test test-enter-active test-enter-to\">bar</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">bar</div>'\n-        )\n-        vm.view = 'foo'\n-      }).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave test-leave-active\">bar</div>' +\n-          '<div class=\"test v-enter v-enter-active\">foo</div>'\n-        )\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test test-leave-active test-leave-to\">bar</div>' +\n-          '<div class=\"test v-enter-active v-enter-to\">foo</div>'\n-        )\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.innerHTML).toBe(\n-          '<div class=\"test\">foo</div>'\n-        )\n-      }).then(done)\n-    })\n-\n-    it('async components with transition-mode out-in', done => {\n-      const barResolve = vi.fn()\n-      let next\n-      const foo = (resolve) => {\n-        setTimeout(() => {\n-          resolve(one)\n-          Vue.nextTick(next)\n-        }, duration / 2)\n-      }\n-      const bar = (resolve) => {\n-        setTimeout(() => {\n-          resolve(two)\n-          barResolve()\n-        }, duration / 2)\n-      }\n-      components = {\n-        foo,\n-        bar\n-      }\n-      const vm = new Vue({\n-        template: `<div>\n-          <transition name=\"test\" mode=\"out-in\" @after-enter=\"afterEnter\" @after-leave=\"afterLeave\">\n-            <keep-alive>\n-              <component :is=\"view\" class=\"test\"></component>\n-            </keep-alive>\n-          </transition>\n-        </div>`,\n-        data: {\n-          view: 'foo'\n-        },\n-        components,\n-        methods: {\n-          afterEnter () {\n-            next()\n-          },\n-          afterLeave () {\n-            next()\n-          }\n-        }\n-      }).$mount(el)\n-      expect(vm.$el.textContent).toBe('')\n-      next = () => {\n-        assertHookCalls(one, [1, 1, 1, 0, 0])\n-        assertHookCalls(two, [0, 0, 0, 0, 0])\n-        waitForUpdate(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter test-enter-active\">one</div>'\n-          )\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter-active test-enter-to\">one</div>'\n-          )\n-        }).thenWaitFor(_next => { next = _next }).then(() => {\n-          // foo afterEnter get called\n-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n-          vm.view = 'bar'\n-        }).thenWaitFor(nextFrame).then(() => {\n-          assertHookCalls(one, [1, 1, 1, 1, 0])\n-          assertHookCalls(two, [0, 0, 0, 0, 0])\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n-          )\n-        }).thenWaitFor(_next => { next = _next }).then(() => {\n-          // foo afterLeave get called\n-          // and bar has already been resolved before afterLeave get called\n-          expect(barResolve.mock.calls.length).toBe(1)\n-          expect(vm.$el.innerHTML).toBe('<!---->')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter test-enter-active\">two</div>'\n-          )\n-          assertHookCalls(one, [1, 1, 1, 1, 0])\n-          assertHookCalls(two, [1, 1, 1, 0, 0])\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.innerHTML).toBe(\n-            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n-          )\n-        }).thenWaitFor(_next => { next = _next }).then(() => {\n-          // bar afterEnter get called\n-          expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n-        }).then(done)\n-      }\n-    })\n-\n-    // #10083\n-    it('should not attach event handler repeatedly', done => {\n-      const vm = new Vue({\n-        template: `\n-          <keep-alive>\n-            <btn v-if=\"showBtn\" @click.native=\"add\" />\n-          </keep-alive>\n-        `,\n-        data: { showBtn: true, n: 0 },\n-        methods: {\n-          add () {\n-            this.n++\n-          }\n-        },\n-        components: {\n-          btn: { template: '<button>add 1</button>' }\n-        }\n-      }).$mount()\n-\n-      const btn = vm.$el\n-      expect(vm.n).toBe(0)\n-      btn.click()\n-      expect(vm.n).toBe(1)\n-      vm.showBtn = false\n-      waitForUpdate(() => {\n-        vm.showBtn = true\n-      }).then(() => {\n-        btn.click()\n-        expect(vm.n).toBe(2)\n-      }).then(done)\n-    })\n-  }\n"
          }
        ],
        "a/test/unit/features/transition/transition-with-keep-alive.spec.ts": [
          {
            "+": "+import Vue from 'vue'\n+import injectStyles from '../transition/inject-styles'\n+import { isIE9 } from 'core/util/env'\n+import { nextFrame } from 'web/runtime/transition-util'\n+\n+if (!isIE9) {\n+  describe('Transition w/ KeepAlive', () => {\n+    const { duration, buffer } = injectStyles()\n+\n+    let components, one, two, el\n+    beforeEach(() => {\n+      one = {\n+        template: '<div>one</div>',\n+        created: vi.fn(),\n+        mounted: vi.fn(),\n+        activated: vi.fn(),\n+        deactivated: vi.fn(),\n+        destroyed: vi.fn()\n+      }\n+      two = {\n+        template: '<div>two</div>',\n+        created: vi.fn(),\n+        mounted: vi.fn(),\n+        activated: vi.fn(),\n+        deactivated: vi.fn(),\n+        destroyed: vi.fn()\n+      }\n+      components = {\n+        one,\n+        two\n+      }\n+      el = document.createElement('div')\n+      document.body.appendChild(el)\n+    })\n+\n+    function assertHookCalls(component, callCounts) {\n+      expect([\n+        component.created.mock.calls.length,\n+        component.mounted.mock.calls.length,\n+        component.activated.mock.calls.length,\n+        component.deactivated.mock.calls.length,\n+        component.destroyed.mock.calls.length\n+      ]).toEqual(callCounts)\n+    }\n+\n+    it('with transition-mode out-in', (done) => {\n+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <transition name=\"test\" mode=\"out-in\" @after-leave=\"afterLeave\">\n+            <keep-alive>\n+              <component :is=\"view\" class=\"test\"></component>\n+            </keep-alive>\n+          </transition>\n+        </div>`,\n+        data: {\n+          view: 'one'\n+        },\n+        components,\n+        methods: {\n+          afterLeave() {\n+            next()\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      assertHookCalls(one, [1, 1, 1, 0, 0])\n+      assertHookCalls(two, [0, 0, 0, 0, 0])\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [0, 0, 0, 0, 0])\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n+          )\n+        })\n+        .thenWaitFor((_next) => {\n+          next = _next\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<!---->')\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-enter test-enter-active\">two</div>'\n+          )\n+          assertHookCalls(one, [1, 1, 1, 1, 0])\n+          assertHookCalls(two, [1, 1, 1, 0, 0])\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+          assertHookCalls(one, [1, 1, 1, 1, 0])\n+          assertHookCalls(two, [1, 1, 1, 0, 0])\n+        })\n+        .then(() => {\n+          vm.view = 'one'\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave test-leave-active\">two</div><!---->'\n+          )\n+          assertHookCalls(one, [1, 1, 1, 1, 0])\n+          assertHookCalls(two, [1, 1, 1, 1, 0])\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave-active test-leave-to\">two</div><!---->'\n+          )\n+        })\n+        .thenWaitFor((_next) => {\n+          next = _next\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<!---->')\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-enter test-enter-active\">one</div>'\n+          )\n+          assertHookCalls(one, [1, 1, 2, 1, 0])\n+          assertHookCalls(two, [1, 1, 1, 1, 0])\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-enter-active test-enter-to\">one</div>'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+          assertHookCalls(one, [1, 1, 2, 1, 0])\n+          assertHookCalls(two, [1, 1, 1, 1, 0])\n+        })\n+        .then(done)\n+    })\n+\n+    it('with transition-mode out-in + include', (done) => {\n+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <transition name=\"test\" mode=\"out-in\" @after-leave=\"afterLeave\">\n+            <keep-alive include=\"one\">\n+              <component :is=\"view\" class=\"test\"></component>\n+            </keep-alive>\n+          </transition>\n+        </div>`,\n+        data: {\n+          view: 'one'\n+        },\n+        components,\n+        methods: {\n+          afterLeave() {\n+            next()\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      assertHookCalls(one, [1, 1, 1, 0, 0])\n+      assertHookCalls(two, [0, 0, 0, 0, 0])\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave test-leave-active\">one</div><!---->'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [0, 0, 0, 0, 0])\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n+          )\n+        })\n+        .thenWaitFor((_next) => {\n+          next = _next\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<!---->')\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-enter test-enter-active\">two</div>'\n+          )\n+          assertHookCalls(one, [1, 1, 1, 1, 0])\n+          assertHookCalls(two, [1, 1, 0, 0, 0])\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-enter-active test-enter-to\">two</div>'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+          assertHookCalls(one, [1, 1, 1, 1, 0])\n+          assertHookCalls(two, [1, 1, 0, 0, 0])\n+        })\n+        .then(() => {\n+          vm.view = 'one'\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave test-leave-active\">two</div><!---->'\n+          )\n+          assertHookCalls(one, [1, 1, 1, 1, 0])\n+          assertHookCalls(two, [1, 1, 0, 0, 1])\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave-active test-leave-to\">two</div><!---->'\n+          )\n+        })\n+        .thenWaitFor((_next) => {\n+          next = _next\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<!---->')\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-enter test-enter-active\">one</div>'\n+          )\n+          assertHookCalls(one, [1, 1, 2, 1, 0])\n+          assertHookCalls(two, [1, 1, 0, 0, 1])\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-enter-active test-enter-to\">one</div>'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+          assertHookCalls(one, [1, 1, 2, 1, 0])\n+          assertHookCalls(two, [1, 1, 0, 0, 1])\n+        })\n+        .then(done)\n+    })\n+\n+    it('with transition-mode in-out', (done) => {\n+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <transition name=\"test\" mode=\"in-out\" @after-enter=\"afterEnter\">\n+            <keep-alive>\n+              <component :is=\"view\" class=\"test\"></component>\n+            </keep-alive>\n+          </transition>\n+        </div>`,\n+        data: {\n+          view: 'one'\n+        },\n+        components,\n+        methods: {\n+          afterEnter() {\n+            next()\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      assertHookCalls(one, [1, 1, 1, 0, 0])\n+      assertHookCalls(two, [0, 0, 0, 0, 0])\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+            '<div class=\"test test-enter test-enter-active\">two</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 0, 0])\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test\">one</div>' +\n+              '<div class=\"test test-enter-active test-enter-to\">two</div>'\n+          )\n+        })\n+        .thenWaitFor((_next) => {\n+          next = _next\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test\">one</div>' + '<div class=\"test\">two</div>'\n+          )\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave test-leave-active\">one</div>' +\n+              '<div class=\"test\">two</div>'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave-active test-leave-to\">one</div>' +\n+              '<div class=\"test\">two</div>'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+          assertHookCalls(one, [1, 1, 1, 1, 0])\n+          assertHookCalls(two, [1, 1, 1, 0, 0])\n+        })\n+        .then(() => {\n+          vm.view = 'one'\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test\">two</div>' +\n+              '<div class=\"test test-enter test-enter-active\">one</div>'\n+          )\n+          assertHookCalls(one, [1, 1, 2, 1, 0])\n+          assertHookCalls(two, [1, 1, 1, 1, 0])\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test\">two</div>' +\n+              '<div class=\"test test-enter-active test-enter-to\">one</div>'\n+          )\n+        })\n+        .thenWaitFor((_next) => {\n+          next = _next\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test\">two</div>' + '<div class=\"test\">one</div>'\n+          )\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave test-leave-active\">two</div>' +\n+              '<div class=\"test\">one</div>'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave-active test-leave-to\">two</div>' +\n+              '<div class=\"test\">one</div>'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+          assertHookCalls(one, [1, 1, 2, 1, 0])\n+          assertHookCalls(two, [1, 1, 1, 1, 0])\n+        })\n+        .then(done)\n+    })\n+\n+    it('dynamic components, in-out with early cancel', (done) => {\n+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <transition name=\"test\" mode=\"in-out\" @after-enter=\"afterEnter\">\n+            <keep-alive>\n+              <component :is=\"view\" class=\"test\"></component>\n+            </keep-alive>\n+          </transition>\n+        </div>`,\n+        data: { view: 'one' },\n+        components,\n+        methods: {\n+          afterEnter() {\n+            next()\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+            '<div class=\"test test-enter test-enter-active\">two</div>'\n+        )\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test\">one</div>' +\n+              '<div class=\"test test-enter-active test-enter-to\">two</div>'\n+          )\n+          // switch again before enter finishes,\n+          // this cancels both enter and leave.\n+          vm.view = 'one'\n+        })\n+        .then(() => {\n+          // 1. the pending leaving \"one\" should be removed instantly.\n+          // 2. the entering \"two\" should be placed into its final state instantly.\n+          // 3. a new \"one\" is created and entering\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test\">two</div>' +\n+              '<div class=\"test test-enter test-enter-active\">one</div>'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test\">two</div>' +\n+              '<div class=\"test test-enter-active test-enter-to\">one</div>'\n+          )\n+        })\n+        .thenWaitFor((_next) => {\n+          next = _next\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test\">two</div>' + '<div class=\"test\">one</div>'\n+          )\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave test-leave-active\">two</div>' +\n+              '<div class=\"test\">one</div>'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave-active test-leave-to\">two</div>' +\n+              '<div class=\"test\">one</div>'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+        })\n+        .then(done)\n+    })\n+\n+    // #4339\n+    it('component with inner transition', (done) => {\n+      const vm = new Vue({\n+        template: `\n+          <div>\n+            <keep-alive>\n+              <component ref=\"test\" :is=\"view\"></component>\n+            </keep-alive>\n+          </div>\n+        `,\n+        data: { view: 'foo' },\n+        components: {\n+          foo: {\n+            template: '<transition><div class=\"test\">foo</div></transition>'\n+          },\n+          bar: {\n+            template:\n+              '<transition name=\"test\"><div class=\"test\">bar</div></transition>'\n+          }\n+        }\n+      }).$mount(el)\n+\n+      // should not apply transition on initial render by default\n+      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+      vm.view = 'bar'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test v-leave v-leave-active\">foo</div>' +\n+            '<div class=\"test test-enter test-enter-active\">bar</div>'\n+        )\n+      })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test v-leave-active v-leave-to\">foo</div>' +\n+              '<div class=\"test test-enter-active test-enter-to\">bar</div>'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">bar</div>')\n+          vm.view = 'foo'\n+        })\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave test-leave-active\">bar</div>' +\n+              '<div class=\"test v-enter v-enter-active\">foo</div>'\n+          )\n+        })\n+        .thenWaitFor(nextFrame)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-leave-active test-leave-to\">bar</div>' +\n+              '<div class=\"test v-enter-active v-enter-to\">foo</div>'\n+          )\n+        })\n+        .thenWaitFor(duration + buffer)\n+        .then(() => {\n+          expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+        })\n+        .then(done)\n+    })\n+\n+    it('async components with transition-mode out-in', (done) => {\n+      const barResolve = vi.fn()\n+      let next\n+      const foo = (resolve) => {\n+        setTimeout(() => {\n+          resolve(one)\n+          Vue.nextTick(next)\n+        }, duration / 2)\n+      }\n+      const bar = (resolve) => {\n+        setTimeout(() => {\n+          resolve(two)\n+          barResolve()\n+        }, duration / 2)\n+      }\n+      components = {\n+        foo,\n+        bar\n+      }\n+      const vm = new Vue({\n+        template: `<div>\n+          <transition name=\"test\" mode=\"out-in\" @after-enter=\"afterEnter\" @after-leave=\"afterLeave\">\n+            <keep-alive>\n+              <component :is=\"view\" class=\"test\"></component>\n+            </keep-alive>\n+          </transition>\n+        </div>`,\n+        data: {\n+          view: 'foo'\n+        },\n+        components,\n+        methods: {\n+          afterEnter() {\n+            next()\n+          },\n+          afterLeave() {\n+            next()\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('')\n+      next = () => {\n+        assertHookCalls(one, [1, 1, 1, 0, 0])\n+        assertHookCalls(two, [0, 0, 0, 0, 0])\n+        waitForUpdate(() => {\n+          expect(vm.$el.innerHTML).toBe(\n+            '<div class=\"test test-enter test-enter-active\">one</div>'\n+          )\n+        })\n+          .thenWaitFor(nextFrame)\n+          .then(() => {\n+            expect(vm.$el.innerHTML).toBe(\n+              '<div class=\"test test-enter-active test-enter-to\">one</div>'\n+            )\n+          })\n+          .thenWaitFor((_next) => {\n+            next = _next\n+          })\n+          .then(() => {\n+            // foo afterEnter get called\n+            expect(vm.$el.innerHTML).toBe('<div class=\"test\">one</div>')\n+            vm.view = 'bar'\n+          })\n+          .thenWaitFor(nextFrame)\n+          .then(() => {\n+            assertHookCalls(one, [1, 1, 1, 1, 0])\n+            assertHookCalls(two, [0, 0, 0, 0, 0])\n+            expect(vm.$el.innerHTML).toBe(\n+              '<div class=\"test test-leave-active test-leave-to\">one</div><!---->'\n+            )\n+          })\n+          .thenWaitFor((_next) => {\n+            next = _next\n+          })\n+          .then(() => {\n+            // foo afterLeave get called\n+            // and bar has already been resolved before afterLeave get called\n+            expect(barResolve.mock.calls.length).toBe(1)\n+            expect(vm.$el.innerHTML).toBe('<!---->')\n+          })\n+          .thenWaitFor(nextFrame)\n+          .then(() => {\n+            expect(vm.$el.innerHTML).toBe(\n+              '<div class=\"test test-enter test-enter-active\">two</div>'\n+            )\n+            assertHookCalls(one, [1, 1, 1, 1, 0])\n+            assertHookCalls(two, [1, 1, 1, 0, 0])\n+          })\n+          .thenWaitFor(nextFrame)\n+          .then(() => {\n+            expect(vm.$el.innerHTML).toBe(\n+              '<div class=\"test test-enter-active test-enter-to\">two</div>'\n+            )\n+          })\n+          .thenWaitFor((_next) => {\n+            next = _next\n+          })\n+          .then(() => {\n+            // bar afterEnter get called\n+            expect(vm.$el.innerHTML).toBe('<div class=\"test\">two</div>')\n+          })\n+          .then(done)\n+      }\n+    })\n+\n+    // #10083\n+    it('should not attach event handler repeatedly', (done) => {\n+      const vm = new Vue({\n+        template: `\n+          <keep-alive>\n+            <btn v-if=\"showBtn\" @click.native=\"add\" />\n+          </keep-alive>\n+        `,\n+        data: { showBtn: true, n: 0 },\n+        methods: {\n+          add() {\n+            this.n++\n+          }\n+        },\n+        components: {\n+          btn: { template: '<button>add 1</button>' }\n+        }\n+      }).$mount()\n+\n+      const btn = vm.$el\n+      expect(vm.n).toBe(0)\n+      btn.click()\n+      expect(vm.n).toBe(1)\n+      vm.showBtn = false\n+      waitForUpdate(() => {\n+        vm.showBtn = true\n+      })\n+        .then(() => {\n+          btn.click()\n+          expect(vm.n).toBe(2)\n+        })\n+        .then(done)\n+    })\n+  })\n+}\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 46,
      "qualityScore": 66
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "69edc9aec6da6ac82dd2589fe7c0593cc8b4928d",
      "url": "https://github.com/vuejs/vue/commit/69edc9aec6da6ac82dd2589fe7c0593cc8b4928d",
      "message": "test: move __WEEX__ flag to runtime for tests",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T00:24:05Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/vitest.setup.ts": [
          {
            "+": "+(global as any).__WEEX__ = false\n+\n",
            "-": ""
          }
        ],
        "a/vitest.config.ts": [
          {
            "-": "-  define: {\n-    __WEEX__: false\n-  },\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "5ec77f32be74c427b95a5b045b506b91171fdb24",
      "url": "https://github.com/vuejs/vue/commit/5ec77f32be74c427b95a5b045b506b91171fdb24",
      "message": "test: shim done interface for tests",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-20T00:22:26Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/helpers/classlist.ts": [
          {
            "+": "+expect.extend({\n+  toHaveClass(el: Element, cls: string) {\n+    const pass = el.classList\n+      ? el.classList.contains(cls)\n+      : (el.getAttribute('class') || '').split(/\\s+/g).indexOf(cls) > -1\n+    return {\n+      pass,\n+      message: () =>\n+        `Expected element${pass ? ' ' : ' not '}to have class ${cls}`\n",
            "-": "-beforeEach(() => {\n-  jasmine.addMatchers({\n-    // since classList may not be supported in all browsers\n-    toHaveClass: () => {\n-      return {\n-        compare: (el, cls) => {\n-          const pass = el.classList\n-            ? el.classList.contains(cls)\n-            : el.getAttribute('class').split(/\\s+/g).indexOf(cls) > -1\n-          return {\n-            pass,\n-            message: `Expected element${pass ? ' ' : ' not '}to have class ${cls}`\n-          }\n-        }\n-      }\n"
          },
          {
            "+": "+  }\n",
            "-": "-  })\n"
          }
        ],
        "a/test/helpers/shim-done.ts": [
          {
            "+": "+// wrap tests to support test('foo', done => {...}) interface\n+const _test = test\n+\n+const wait = (): [() => void, Promise<void>] => {\n+  let done\n+  const p = new Promise<void>((resolve, reject) => {\n+    done = resolve\n+    done.fail = reject\n+  })\n+  return [done, p]\n+}\n+\n+;(global as any).it = (global as any).test = (\n+  desc: string,\n+  fn?: any,\n+  timeout?: number\n+) => {\n+  if (fn && fn.length > 0) {\n+    _test(\n+      desc,\n+      () => {\n+        const [done, p] = wait()\n+        fn(done)\n+        return p\n+      },\n+      timeout\n+    )\n+  } else {\n+    _test(desc, fn, timeout)\n+  }\n+}\n+\n+export {}\n",
            "-": ""
          }
        ],
        "a/test/helpers/to-equal.ts": [
          {
            "-": "-import { isEqual } from 'lodash'\n-\n-beforeEach(() => {\n-  jasmine.addMatchers({\n-    // override built-in toEqual because it behaves incorrectly\n-    // on Vue-observed arrays in Safari\n-    toEqual: () => {\n-      return {\n-        compare: (a, b) => {\n-          const pass = isEqual(a, b)\n-          return {\n-            pass,\n-            message: `Expected ${a} to equal ${b}`\n-          }\n-        }\n-      }\n-    }\n-  })\n-})\n",
            "+": ""
          }
        ],
        "a/test/helpers/to-have-warned.ts": [
          {
            "+": "+import { SpyInstance } from 'vitest'\n+\n+expect.extend({\n+  toHaveBeenWarned(received: string) {\n+    asserted.add(received)\n+    const passed = warn.mock.calls.some((args) => args[0].includes(received))\n+    if (passed) {\n+      return {\n+        pass: true,\n+        message: () => `expected \"${received}\" not to have been warned.`\n+      }\n+    } else {\n+      const msgs = warn.mock.calls.map((args) => args[0]).join('\\n - ')\n+      return {\n+        pass: false,\n+        message: () =>\n+          `expected \"${received}\" to have been warned` +\n+          (msgs.length\n+            ? `.\\n\\nActual messages:\\n\\n - ${msgs}`\n+            : ` but no warning was recorded.`)\n+      }\n+    }\n+  },\n+\n+  toHaveBeenWarnedLast(received: string) {\n+    asserted.add(received)\n+    const passed =\n+      warn.mock.calls[warn.mock.calls.length - 1][0].includes(received)\n+    if (passed) {\n+      return {\n+        pass: true,\n+        message: () => `expected \"${received}\" not to have been warned last.`\n+      }\n+    } else {\n+      const msgs = warn.mock.calls.map((args) => args[0]).join('\\n - ')\n+      return {\n+        pass: false,\n+        message: () =>\n+          `expected \"${received}\" to have been warned last.\\n\\nActual messages:\\n\\n - ${msgs}`\n+      }\n+    }\n+  },\n+\n+  toHaveBeenWarnedTimes(received: string, n: number) {\n+    asserted.add(received)\n+    let found = 0\n+    warn.mock.calls.forEach((args) => {\n+      if (args[0].includes(received)) {\n+        found++\n+      }\n+    })\n+\n+    if (found === n) {\n+      return {\n+        pass: true,\n+        message: () => `expected \"${received}\" to have been warned ${n} times.`\n+      }\n+    } else {\n+      return {\n+        pass: false,\n+        message: () =>\n+          `expected \"${received}\" to have been warned ${n} times but got ${found}.`\n+      }\n+    }\n+  }\n+})\n+\n+let warn: SpyInstance\n+const asserted: Set<string> = new Set()\n+\n+beforeEach(() => {\n+  asserted.clear()\n+  warn = vi.spyOn(console, 'error')\n+  warn.mockImplementation(() => {})\n+})\n+\n+afterEach(() => {\n+  const assertedArray = Array.from(asserted)\n+  const nonAssertedWarnings = warn.mock.calls\n+    .map((args) => args[0])\n+    .filter((received) => {\n+      return !assertedArray.some((assertedMsg) => {\n+        return received.includes(assertedMsg)\n+      })\n+    })\n+  warn.mockRestore()\n+  if (nonAssertedWarnings.length) {\n+    throw new Error(\n+      `test case threw unexpected warnings:\\n - ${nonAssertedWarnings.join(\n+        '\\n - '\n+      )}`\n+    )\n+  }\n+})\n",
            "-": ""
          }
        ],
        "a/test/helpers/trigger-event.ts": [
          {
            "+": "+global.triggerEvent = function triggerEvent (target, event, process) {\n",
            "-": "-window.triggerEvent = function triggerEvent (target, event, process) {\n"
          }
        ],
        "a/test/helpers/wait-for-update.ts": [
          {
            "+": "+interface Job extends Function {\n+  wait?: boolean\n+  fail?: (e: any) => void\n+}\n+\n+global.waitForUpdate = (initialCb: Job) => {\n",
            "-": "-window.waitForUpdate = initialCb => {\n"
          },
          {
            "+": "+  const queue: Job[] = initialCb ? [initialCb] : []\n",
            "-": "-  const queue = initialCb ? [initialCb] : []\n"
          },
          {
            "+": "+  function shift() {\n",
            "-": "-  function shift () {\n"
          },
          {
            "+": "+        job!.wait ? job!(shift) : job!()\n",
            "-": "-        job.wait ? job(shift) : job()\n"
          },
          {
            "+": "+    then: (nextCb) => {\n",
            "-": "-    then: nextCb => {\n"
          },
          {
            "+": "+    end: (endFn) => {\n",
            "-": "-    end: endFn => {\n"
          },
          {
            "+": "+function timeout(n) {\n+  return (next) => setTimeout(next, n)\n",
            "-": "-function timeout (n) {\n-  return next => setTimeout(next, n)\n"
          }
        ],
        "a/test/test-env.d.ts": [
          {
            "+": "+interface Chainer {\n+  then(next: Function): this\n+  thenWaitFor(n: number): this\n+  end(endFn: Function): void\n+}\n+\n+declare function waitForUpdate(cb: Function): Chainer\n+\n+declare function createTextVNode(arg?: string): any\n+\n+declare function triggerEvent(\n+  target: Element,\n+  event: string,\n+  process?: (e: Event) => void\n+): void\n+\n+// vitest extends jest namespace so we can just extend jest.Matchers\n+declare namespace jest {\n+  interface Matchers<R, T> {\n+    toHaveBeenWarned(): R\n+    toHaveBeenWarnedLast(): R\n+    toHaveBeenWarnedTimes(n: number): R\n+    toHaveClass(cls: string): R\n+  }\n+}\n",
            "-": ""
          }
        ],
        "a/test/unit/features/component/component-async.spec.ts": [
          {
            "-": "-function wait(): [() => void, Promise<void>] {\n-  let done\n-  const p = new Promise<void>((resolve, reject) => {\n-    done = resolve\n-    done.fail = reject\n-  })\n-  return [done, p]\n-}\n-\n",
            "+": ""
          },
          {
            "+": "+  it('normal', (done) => {\n",
            "-": "-  it('normal', () => {\n"
          },
          {
            "-": "-    const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-    return p\n",
            "+": ""
          },
          {
            "+": "+  it('resolve ES module default', (done) => {\n",
            "-": "-  it('resolve ES module default', () => {\n"
          },
          {
            "-": "-    const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-    return p\n",
            "+": ""
          },
          {
            "+": "+  it('as root', (done) => {\n",
            "-": "-  it('as root', () => {\n"
          },
          {
            "-": "-    const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-    return p\n",
            "+": ""
          },
          {
            "+": "+  it('dynamic', (done) => {\n",
            "-": "-  it('dynamic', () => {\n"
          },
          {
            "+": "+\n",
            "-": "-    const [done, p] = wait()\n"
          },
          {
            "-": "-    return p\n",
            "+": ""
          },
          {
            "+": "+  it('with v-for', (done) => {\n",
            "-": "-  it('with v-for', () => {\n"
          },
          {
            "+": "+\n",
            "-": "-    const [done, p] = wait()\n"
          },
          {
            "-": "-    return p\n",
            "+": ""
          },
          {
            "+": "+  it('returning Promise', (done) => {\n",
            "-": "-  it('returning Promise', () => {\n"
          },
          {
            "-": "-    const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-    return p\n",
            "+": ""
          },
          {
            "+": "+    it('with loading component', (done) => {\n",
            "-": "-    it('with loading component', () => {\n"
          },
          {
            "-": "-      const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-      return p\n",
            "+": ""
          },
          {
            "+": "+    it('with loading component (0 delay)', (done) => {\n",
            "-": "-    it('with loading component (0 delay)', () => {\n"
          },
          {
            "-": "-      const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-      return p\n",
            "+": ""
          },
          {
            "+": "+    it('with error component', (done) => {\n",
            "-": "-    it('with error component', () => {\n"
          },
          {
            "-": "-      const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-      return p\n",
            "+": ""
          },
          {
            "+": "+    it('with error component + timeout', (done) => {\n",
            "-": "-    it('with error component + timeout', () => {\n"
          },
          {
            "-": "-      const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-      return p\n",
            "+": ""
          },
          {
            "+": "+    it('should not trigger timeout if resolved', (done) => {\n",
            "-": "-    it('should not trigger timeout if resolved', () => {\n"
          },
          {
            "-": "-      const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-      return p\n",
            "+": ""
          },
          {
            "+": "+    it('should not have running timeout/loading if resolved', (done) => {\n",
            "-": "-    it('should not have running timeout/loading if resolved', () => {\n"
          },
          {
            "-": "-      const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-      return p\n",
            "+": ""
          },
          {
            "+": "+    it(`should work when resolving sync in sibling component's mounted hook`, (done) => {\n",
            "-": "-    it(`should work when resolving sync in sibling component's mounted hook`, () => {\n"
          },
          {
            "-": "-      const [done, p] = wait()\n",
            "+": ""
          },
          {
            "-": "-      return p\n",
            "+": ""
          }
        ],
        "a/test/unit/global.d.ts": [
          {
            "-": "-declare function waitForUpdate(\n-  cb: Function\n-): any;\n-\n-declare function createTextVNode(\n-  arg?: any\n-): any;\n-\n-// vitest extends jest namespace so we can just extend jest.Matchers\n-declare namespace jest {\n-  interface Matchers<R, T> {\n-    toHaveBeenWarned(): R\n-    toHaveBeenWarnedLast(): R\n-    toHaveBeenWarnedTimes(n: number): R\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/vitest.setup.ts": [
          {
            "+": "+import './helpers/shim-done'\n+import './helpers/to-have-warned'\n+import './helpers/wait-for-update'\n+import './helpers/trigger-event'\n+import './helpers/vdom'\n+import './helpers/classlist'\n",
            "-": "-import { SpyInstance } from 'vitest'\n-\n-expect.extend({\n-  toHaveBeenWarned(received: string) {\n-    asserted.add(received)\n-    const passed = warn.mock.calls.some((args) => args[0].includes(received))\n-    if (passed) {\n-      return {\n-        pass: true,\n-        message: () => `expected \"${received}\" not to have been warned.`\n-      }\n-    } else {\n-      const msgs = warn.mock.calls.map((args) => args[0]).join('\\n - ')\n-      return {\n-        pass: false,\n-        message: () =>\n-          `expected \"${received}\" to have been warned` +\n-          (msgs.length\n-            ? `.\\n\\nActual messages:\\n\\n - ${msgs}`\n-            : ` but no warning was recorded.`)\n-      }\n-    }\n-  },\n-\n-  toHaveBeenWarnedLast(received: string) {\n-    asserted.add(received)\n-    const passed =\n-      warn.mock.calls[warn.mock.calls.length - 1][0].includes(received)\n-    if (passed) {\n-      return {\n-        pass: true,\n-        message: () => `expected \"${received}\" not to have been warned last.`\n-      }\n-    } else {\n-      const msgs = warn.mock.calls.map((args) => args[0]).join('\\n - ')\n-      return {\n-        pass: false,\n-        message: () =>\n-          `expected \"${received}\" to have been warned last.\\n\\nActual messages:\\n\\n - ${msgs}`\n-      }\n-    }\n-  },\n-\n-  toHaveBeenWarnedTimes(received: string, n: number) {\n-    asserted.add(received)\n-    let found = 0\n-    warn.mock.calls.forEach((args) => {\n-      if (args[0].includes(received)) {\n-        found++\n-      }\n-    })\n-\n-    if (found === n) {\n-      return {\n-        pass: true,\n-        message: () => `expected \"${received}\" to have been warned ${n} times.`\n-      }\n-    } else {\n-      return {\n-        pass: false,\n-        message: () =>\n-          `expected \"${received}\" to have been warned ${n} times but got ${found}.`\n-      }\n-    }\n-  }\n-})\n-\n-let warn: SpyInstance\n-const asserted: Set<string> = new Set()\n-\n-beforeEach(() => {\n-  asserted.clear()\n-  warn = vi.spyOn(console, 'error')\n-  warn.mockImplementation(() => {})\n-})\n-\n-afterEach(() => {\n-  const assertedArray = Array.from(asserted)\n-  const nonAssertedWarnings = warn.mock.calls\n-    .map((args) => args[0])\n-    .filter((received) => {\n-      return !assertedArray.some((assertedMsg) => {\n-        return received.includes(assertedMsg)\n-      })\n-    })\n-  warn.mockRestore()\n-  if (nonAssertedWarnings.length) {\n-    throw new Error(\n-      `test case threw unexpected warnings:\\n - ${nonAssertedWarnings.join(\n-        '\\n - '\n-      )}`\n-    )\n-  }\n-})\n-\n-import Vue from 'vue'\n-\n-// helper for async assertions.\n-// Use like this:\n-//\n-// vm.a = 123\n-// waitForUpdate(() => {\n-//   expect(vm.$el.textContent).toBe('123')\n-//   vm.a = 234\n-// })\n-// .then(() => {\n-//   // more assertions...\n-// })\n-// .then(done)\n-\n-interface Job extends Function {\n-  wait?: boolean\n-  fail?: (e: any) => void\n-}\n-\n-global.waitForUpdate = (initialCb: Job) => {\n-  let end\n-  let reject\n-  const queue: Job[] = initialCb ? [initialCb] : []\n-\n-  function shift() {\n-    const job = queue.shift()\n-    if (queue.length) {\n-      let hasError = false\n-      try {\n-        job!.wait ? job!(shift) : job!()\n-      } catch (e) {\n-        hasError = true\n-        if (reject) {\n-          reject()\n-        } else {\n-          const done = queue[queue.length - 1]\n-          if (done && done.fail) {\n-            done.fail(e)\n-          }\n-        }\n-      }\n-      if (!hasError && !job!.wait) {\n-        if (queue.length) {\n-          Vue.nextTick(shift)\n-        }\n-      }\n-    } else if (job && (job.fail || job === end)) {\n-      job() // done\n-    }\n-  }\n-\n-  Vue.nextTick(() => {\n-    if (!queue.length || (!end && !queue[queue.length - 1]!.fail)) {\n-      throw new Error('waitForUpdate chain is missing .then(done)')\n-    }\n-    shift()\n-  })\n-\n-  const chainer = {\n-    then: (nextCb) => {\n-      queue.push(nextCb)\n-      return chainer\n-    },\n-    thenWaitFor: (wait) => {\n-      if (typeof wait === 'number') {\n-        wait = timeout(wait)\n-      }\n-      wait.wait = true\n-      queue.push(wait)\n-      return chainer\n-    },\n-    end: (endFn) => {\n-      queue.push(endFn)\n-      end = endFn\n-    },\n-    promise() {\n-      return new Promise((resolve, rej) => {\n-        end = resolve\n-        reject = rej\n-      })\n-    }\n-  }\n-\n-  return chainer\n-}\n-\n-function timeout(n) {\n-  return (next) => setTimeout(next, n)\n-}\n"
          }
        ]
      },
      "numOfFiles": 10,
      "numOfChanges": 56,
      "qualityScore": 20
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "63e7d59a0366237678bcae3f92a2ac7b1b34116b",
      "url": "https://github.com/vuejs/vue/commit/63e7d59a0366237678bcae3f92a2ac7b1b34116b",
      "message": "test: remove global before waitForUpdate",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-19T23:57:07Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/component/component-keep-alive.spec.ts": [
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+        waitForUpdate(() => {\n",
            "-": "-        global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          }
        ],
        "a/test/unit/features/component/component-slot.spec.ts": [
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          }
        ],
        "a/test/unit/features/error-handling.spec.ts": [
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+  return waitForUpdate(() => {\n",
            "-": "-  return global.waitForUpdate(() => {\n"
          },
          {
            "+": "+  return waitForUpdate(() => {\n",
            "-": "-  return global.waitForUpdate(() => {\n"
          }
        ],
        "a/test/unit/features/transition/transition.spec.ts": [
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+        waitForUpdate(() => {\n",
            "-": "-        global.waitForUpdate(() => {\n"
          },
          {
            "+": "+        waitForUpdate(() => {\n",
            "-": "-        global.waitForUpdate(() => {\n"
          },
          {
            "+": "+        waitForUpdate(() => {\n",
            "-": "-        global.waitForUpdate(() => {\n"
          },
          {
            "+": "+        waitForUpdate(() => {\n",
            "-": "-        global.waitForUpdate(() => {\n"
          },
          {
            "+": "+        waitForUpdate(() => {\n",
            "-": "-        global.waitForUpdate(() => {\n"
          },
          {
            "+": "+        waitForUpdate(() => {\n",
            "-": "-        global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          }
        ],
        "a/test/unit/modules/vdom/modules/dom-props.spec.ts": [
          {
            "+": "+    waitForUpdate(() => {\n",
            "-": "-    global.waitForUpdate(() => {\n"
          }
        ],
        "a/test/unit/modules/vdom/patch/edge-cases.spec.ts": [
          {
            "+": "+            waitForUpdate(() => {\n",
            "-": "-            global.waitForUpdate(() => {\n"
          }
        ]
      },
      "numOfFiles": 6,
      "numOfChanges": 71,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "52627b95ce3f91916237619da4ca5bdfdbbcfc34",
      "url": "https://github.com/vuejs/vue/commit/52627b95ce3f91916237619da4ca5bdfdbbcfc34",
      "message": "test: jasmine.createSpy -> vi.fn",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-19T23:56:02Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-bundle-render.spec.ts": [
          {
            "+": "+    const get = vi.fn()\n+    const set = vi.fn()\n",
            "-": "-    const get = jasmine.createSpy('get')\n-    const set = jasmine.createSpy('set')\n"
          },
          {
            "+": "+          expect(get.mock.calls.length).toBe(2)\n+          expect(set.mock.calls.length).toBe(1)\n",
            "-": "-          expect(get.calls.count()).toBe(2)\n-          expect(set.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const has = vi.fn()\n+    const get = vi.fn()\n+    const set = vi.fn()\n",
            "-": "-    const has = jasmine.createSpy('has')\n-    const get = jasmine.createSpy('get')\n-    const set = jasmine.createSpy('set')\n"
          },
          {
            "+": "+          expect(has.mock.calls.length).toBe(2)\n+          expect(get.mock.calls.length).toBe(1)\n+          expect(set.mock.calls.length).toBe(1)\n",
            "-": "-          expect(has.calls.count()).toBe(2)\n-          expect(get.calls.count()).toBe(1)\n-          expect(set.calls.count()).toBe(1)\n"
          },
          {
            "+": "+        expect(cache.set.mock.calls.length).toBe(3) // 3 nested components cached\n",
            "-": "-        expect(cache.set.calls.count()).toBe(3) // 3 nested components cached\n"
          },
          {
            "+": "+        expect(cache.get.mock.calls.length).toBe(1)\n",
            "-": "-        expect(cache.get.calls.count()).toBe(1)\n"
          },
          {
            "+": "+          expect(cache.set.mock.calls.length).toBe(3) // no new cache sets\n+          expect(cache.get.mock.calls.length).toBe(2) // 1 get for root\n",
            "-": "-          expect(cache.set.calls.count()).toBe(3) // no new cache sets\n-          expect(cache.get.calls.count()).toBe(2) // 1 get for root\n"
          },
          {
            "+": "+    const get = vi.fn()\n+    const set = vi.fn()\n",
            "-": "-    const get = jasmine.createSpy('get')\n-    const set = jasmine.createSpy('set')\n"
          }
        ],
        "a/test/unit/features/component/component-keep-alive.spec.ts": [
          {
            "+": "+      created: vi.fn(),\n+      mounted: vi.fn(),\n+      activated: vi.fn(),\n+      deactivated: vi.fn(),\n+      destroyed: vi.fn()\n",
            "-": "-      created: jasmine.createSpy('one created'),\n-      mounted: jasmine.createSpy('one mounted'),\n-      activated: jasmine.createSpy('one activated'),\n-      deactivated: jasmine.createSpy('one deactivated'),\n-      destroyed: jasmine.createSpy('one destroyed')\n"
          },
          {
            "+": "+      created: vi.fn(),\n+      mounted: vi.fn(),\n+      activated: vi.fn(),\n+      deactivated: vi.fn(),\n+      destroyed: vi.fn()\n",
            "-": "-      created: jasmine.createSpy('two created'),\n-      mounted: jasmine.createSpy('two mounted'),\n-      activated: jasmine.createSpy('two activated'),\n-      deactivated: jasmine.createSpy('two deactivated'),\n-      destroyed: jasmine.createSpy('two destroyed')\n"
          },
          {
            "+": "+      component.created.mock.calls.length,\n+      component.mounted.mock.calls.length,\n+      component.activated.mock.calls.length,\n+      component.deactivated.mock.calls.length,\n+      component.destroyed.mock.calls.length\n",
            "-": "-      component.created.calls.count(),\n-      component.mounted.calls.count(),\n-      component.activated.calls.count(),\n-      component.deactivated.calls.count(),\n-      component.destroyed.calls.count()\n"
          },
          {
            "+": "+    const spyA = vi.fn()\n+    const spyB = vi.fn()\n+    const spyC = vi.fn()\n+    const spyAD = vi.fn()\n+    const spyBD = vi.fn()\n+    const spyCD = vi.fn()\n",
            "-": "-    const spyA = jasmine.createSpy()\n-    const spyB = jasmine.createSpy()\n-    const spyC = jasmine.createSpy()\n-    const spyAD = jasmine.createSpy()\n-    const spyBD = jasmine.createSpy()\n-    const spyCD = jasmine.createSpy()\n"
          },
          {
            "+": "+        spyA.mock.calls.length,\n+        spyAD.mock.calls.length,\n+        spyB.mock.calls.length,\n+        spyBD.mock.calls.length,\n+        spyC.mock.calls.length,\n+        spyCD.mock.calls.length\n",
            "-": "-        spyA.calls.count(),\n-        spyAD.calls.count(),\n-        spyB.calls.count(),\n-        spyBD.calls.count(),\n-        spyC.calls.count(),\n-        spyCD.calls.count()\n"
          },
          {
            "+": "+    const spyA = vi.fn()\n+    const spyB = vi.fn()\n+    const spyC = vi.fn()\n+    const spyAD = vi.fn()\n+    const spyBD = vi.fn()\n+    const spyCD = vi.fn()\n",
            "-": "-    const spyA = jasmine.createSpy()\n-    const spyB = jasmine.createSpy()\n-    const spyC = jasmine.createSpy()\n-    const spyAD = jasmine.createSpy()\n-    const spyBD = jasmine.createSpy()\n-    const spyCD = jasmine.createSpy()\n"
          },
          {
            "+": "+        spyA.mock.calls.length,\n+        spyAD.mock.calls.length,\n+        spyB.mock.calls.length,\n+        spyBD.mock.calls.length,\n+        spyC.mock.calls.length,\n+        spyCD.mock.calls.length\n",
            "-": "-        spyA.calls.count(),\n-        spyAD.calls.count(),\n-        spyB.calls.count(),\n-        spyBD.calls.count(),\n-        spyC.calls.count(),\n-        spyCD.calls.count()\n"
          },
          {
            "+": "+      created: vi.fn()\n",
            "-": "-      created: jasmine.createSpy('foo')\n"
          },
          {
            "+": "+      created: vi.fn()\n",
            "-": "-      created: jasmine.createSpy('bar')\n"
          },
          {
            "+": "+      expect(Foo.created.mock.calls.length).toBe(foo)\n+      expect(Bar.created.mock.calls.length).toBe(bar)\n",
            "-": "-      expect(Foo.created.calls.count()).toBe(foo)\n-      expect(Bar.created.calls.count()).toBe(bar)\n"
          },
          {
            "+": "+      created: vi.fn()\n",
            "-": "-      created: jasmine.createSpy('foo')\n"
          },
          {
            "+": "+      created: vi.fn()\n",
            "-": "-      created: jasmine.createSpy('bar')\n"
          },
          {
            "+": "+      expect(Foo.created.mock.calls.length).toBe(foo)\n+      expect(Bar.created.mock.calls.length).toBe(bar)\n",
            "-": "-      expect(Foo.created.calls.count()).toBe(foo)\n-      expect(Bar.created.calls.count()).toBe(bar)\n"
          },
          {
            "+": "+      destroyed: vi.fn()\n",
            "-": "-      destroyed: jasmine.createSpy('destroyed')\n"
          },
          {
            "+": "+      const barResolve = vi.fn()\n",
            "-": "-      const barResolve = jasmine.createSpy('bar resolved')\n"
          },
          {
            "+": "+          expect(barResolve.mock.calls.length).toBe(1)\n",
            "-": "-          expect(barResolve.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/features/component/component-scoped-slot.spec.ts": [
          {
            "+": "+    const parentUpdate = vi.fn()\n+    const childUpdate = vi.fn()\n",
            "-": "-    const parentUpdate = jasmine.createSpy()\n-    const childUpdate = jasmine.createSpy()\n"
          },
          {
            "+": "+      expect(parentUpdate.mock.calls.length).toBe(1)\n+      expect(childUpdate.mock.calls.length).toBe(0)\n",
            "-": "-      expect(parentUpdate.calls.count()).toBe(1)\n-      expect(childUpdate.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(parentUpdate.mock.calls.length).toBe(1)\n+      expect(childUpdate.mock.calls.length).toBe(1)\n",
            "-": "-      expect(parentUpdate.calls.count()).toBe(1)\n-      expect(childUpdate.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      updated: vi.fn(),\n",
            "-": "-      updated: jasmine.createSpy(),\n"
          }
        ],
        "a/test/unit/features/component/component-slot.spec.ts": [
          {
            "+": "+    const test = vi.fn()\n",
            "-": "-    const test = jasmine.createSpy('test')\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/features/component/component.spec.ts": [
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/features/debug.spec.ts": [
          {
            "+": "+      Vue.config.warnHandler = vi.fn()\n",
            "-": "-      Vue.config.warnHandler = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/features/directives/for.spec.ts": [
          {
            "+": "+    console.warn = vi.fn()\n",
            "-": "-    console.warn = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/features/directives/if.spec.ts": [
          {
            "+": "+    const created = vi.fn()\n+    const destroyed = vi.fn()\n",
            "-": "-    const created = jasmine.createSpy()\n-    const destroyed = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(created.mock.calls.length).toBe(1)\n",
            "-": "-    expect(created.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(created.mock.calls.length).toBe(1)\n",
            "-": "-      expect(created.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/features/directives/model-component.spec.ts": [
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('update')\n"
          }
        ],
        "a/test/unit/features/directives/model-radio.spec.ts": [
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/features/directives/model-select.spec.ts": [
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-      expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/features/directives/model-text.spec.ts": [
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-      expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-      expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-      expect(spy.calls.count()).toBe(2)\n"
          }
        ],
        "a/test/unit/features/directives/on.spec.ts": [
          {
            "+": "+    spy = vi.fn()\n",
            "-": "-    spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1) // should no longer trigger\n",
            "-": "-    expect(spy.calls.count()).toBe(1) // should no longer trigger\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-    expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-    expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-    expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-    expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(3)\n",
            "-": "-    expect(spy.calls.count()).toBe(3)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(3)\n",
            "-": "-    expect(spy.calls.count()).toBe(3)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(4)\n",
            "-": "-    expect(spy.calls.count()).toBe(4)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spyLeft = vi.fn()\n+    const spyMiddle = vi.fn()\n+    const spyRight = vi.fn()\n",
            "-": "-    const spyLeft = jasmine.createSpy()\n-    const spyMiddle = jasmine.createSpy()\n-    const spyRight = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-    expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(3)\n",
            "-": "-    expect(spy.calls.count()).toBe(3)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(4)\n",
            "-": "-    expect(spy.calls.count()).toBe(4)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(5)\n",
            "-": "-    expect(spy.calls.count()).toBe(5)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(6)\n",
            "-": "-    expect(spy.calls.count()).toBe(6)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1) // should not be called again\n",
            "-": "-    expect(spy.calls.count()).toBe(1) // should not be called again\n"
          },
          {
            "+": "+    const spy2 = vi.fn()\n",
            "-": "-    const spy2 = jasmine.createSpy('remove listener')\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n+    expect(spy2.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n-    expect(spy2.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1) // should no longer trigger\n",
            "-": "-      expect(spy.calls.count()).toBe(1) // should no longer trigger\n"
          },
          {
            "+": "+      expect(spy2.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spy2 = vi.fn()\n",
            "-": "-    const spy2 = jasmine.createSpy('remove listener')\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n+    expect(spy2.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n-    expect(spy2.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1) // should no longer trigger\n",
            "-": "-      expect(spy.calls.count()).toBe(1) // should no longer trigger\n"
          },
          {
            "+": "+      expect(spy2.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spy2 = vi.fn()\n",
            "-": "-    const spy2 = jasmine.createSpy('remove listener')\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1) // should no longer trigger\n+    expect(spy2.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(1) // should no longer trigger\n-    expect(spy2.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1) // should no longer trigger\n",
            "-": "-      expect(spy.calls.count()).toBe(1) // should no longer trigger\n"
          },
          {
            "+": "+      expect(spy2.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spy2 = vi.fn()\n",
            "-": "-    const spy2 = jasmine.createSpy('remove listener')\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1) // should no longer trigger\n+    expect(spy2.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(1) // should no longer trigger\n-    expect(spy2.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1) // should no longer trigger\n",
            "-": "-      expect(spy.calls.count()).toBe(1) // should no longer trigger\n"
          },
          {
            "+": "+      expect(spy2.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spy2 = vi.fn()\n",
            "-": "-    const spy2 = jasmine.createSpy('remove listener')\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n+    expect(spy2.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n-    expect(spy2.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1) // should no longer trigger\n",
            "-": "-      expect(spy.calls.count()).toBe(1) // should no longer trigger\n"
          },
          {
            "+": "+      expect(spy2.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spyLeft = vi.fn()\n+    const spyRight = vi.fn()\n+    const spyUp = vi.fn()\n+    const spyDown = vi.fn()\n",
            "-": "-    const spyLeft = jasmine.createSpy()\n-    const spyRight = jasmine.createSpy()\n-    const spyUp = jasmine.createSpy()\n-    const spyDown = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(spyLeft.mock.calls.length).toBe(1)\n+    expect(spyRight.mock.calls.length).toBe(1)\n+    expect(spyUp.mock.calls.length).toBe(1)\n+    expect(spyDown.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spyLeft.calls.count()).toBe(1)\n-    expect(spyRight.calls.count()).toBe(1)\n-    expect(spyUp.calls.count()).toBe(1)\n-    expect(spyDown.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('click.right')\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('click.middle')\n"
          },
          {
            "+": "+    const click = vi.fn()\n+    const mouseup = vi.fn()\n",
            "-": "-    const click = jasmine.createSpy('click')\n-    const mouseup = jasmine.createSpy('mouseup')\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n+    expect(mouseup.mock.calls.length).toBe(0)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n-    expect(mouseup.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n+    expect(mouseup.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n-    expect(mouseup.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const click1 = vi.fn()\n+    const click2 = vi.fn()\n+    const mouseup = vi.fn()\n",
            "-": "-    const click1 = jasmine.createSpy('click1')\n-    const click2 = jasmine.createSpy('click2')\n-    const mouseup = jasmine.createSpy('mouseup')\n"
          },
          {
            "+": "+    expect(click1.mock.calls.length).toBe(1)\n+    expect(click2.mock.calls.length).toBe(1)\n+    expect(mouseup.mock.calls.length).toBe(0)\n",
            "-": "-    expect(click1.calls.count()).toBe(1)\n-    expect(click2.calls.count()).toBe(1)\n-    expect(mouseup.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(click1.mock.calls.length).toBe(1)\n+    expect(click2.mock.calls.length).toBe(1)\n+    expect(mouseup.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click1.calls.count()).toBe(1)\n-    expect(click2.calls.count()).toBe(1)\n-    expect(mouseup.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const click = vi.fn()\n+    const mouseup = vi.fn()\n+    const mousedown = vi.fn()\n",
            "-": "-    const click = jasmine.createSpy('click')\n-    const mouseup = jasmine.createSpy('mouseup')\n-    const mousedown = jasmine.createSpy('mousedown')\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n+    expect(mouseup.mock.calls.length).toBe(0)\n+    expect(mousedown.mock.calls.length).toBe(0)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n-    expect(mouseup.calls.count()).toBe(0)\n-    expect(mousedown.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n+    expect(mouseup.mock.calls.length).toBe(1)\n+    expect(mousedown.mock.calls.length).toBe(0)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n-    expect(mouseup.calls.count()).toBe(1)\n-    expect(mousedown.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n+    expect(mouseup.mock.calls.length).toBe(1)\n+    expect(mousedown.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n-    expect(mouseup.calls.count()).toBe(1)\n-    expect(mousedown.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-      expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+        expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-        expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+        expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-        expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+        expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-        expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+        expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-        expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+        expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-        expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+        expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-        expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1) // should no longer trigger\n",
            "-": "-      expect(spy.calls.count()).toBe(1) // should no longer trigger\n"
          }
        ],
        "a/test/unit/features/error-handling.spec.ts": [
          {
            "+": "+    const spy = Vue.config.errorHandler = vi.fn()\n",
            "-": "-    const spy = Vue.config.errorHandler = jasmine.createSpy('errorHandler')\n"
          },
          {
            "+": "+    const spy = Vue.config.errorHandler = vi.fn()\n",
            "-": "-    const spy = Vue.config.errorHandler = jasmine.createSpy('errorHandler')\n"
          }
        ],
        "a/test/unit/features/global-api/config.spec.ts": [
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy('option merging')\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-      expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/features/global-api/mixin.spec.ts": [
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('global mixin')\n"
          },
          {
            "+": "+    const baseSpy = vi.fn()\n",
            "-": "-    const baseSpy = jasmine.createSpy('base')\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('late attached')\n"
          },
          {
            "+": "+    const mixinSpy = vi.fn()\n",
            "-": "-    const mixinSpy = jasmine.createSpy('mixin')\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n+    expect(baseSpy.mock.calls.length).toBe(1)\n+    expect(mixinSpy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n-    expect(baseSpy.calls.count()).toBe(1)\n-    expect(mixinSpy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('global mixin')\n"
          },
          {
            "+": "+    const base = vi.fn()\n",
            "-": "-    const base = jasmine.createSpy('base')\n"
          },
          {
            "+": "+    const injected = vi.fn()\n",
            "-": "-    const injected = jasmine.createSpy('injected')\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('global mixed in lifecycle hook')\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/features/instance/methods-data.spec.ts": [
          {
            "+": "+      spy = vi.fn()\n",
            "-": "-      spy = jasmine.createSpy('watch')\n"
          },
          {
            "+": "+        expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-        expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+        expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-        expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+        expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-        expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/features/instance/methods-events.spec.ts": [
          {
            "+": "+    spy = vi.fn()\n",
            "-": "-    spy = jasmine.createSpy('emitter')\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-    expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spy2 = vi.fn()\n",
            "-": "-    const spy2 = jasmine.createSpy('emitter')\n"
          },
          {
            "+": "+    expect(spy2.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy2.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/features/instance/methods-lifecycle.spec.ts": [
          {
            "+": "+      const parentUpdate = vi.fn()\n",
            "-": "-      const parentUpdate = jasmine.createSpy()\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy('destroy')\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/features/instance/properties.spec.ts": [
          {
            "+": "+    const spyA = vi.fn()\n+    const spyB = vi.fn()\n",
            "-": "-    const spyA = jasmine.createSpy('A')\n-    const spyB = jasmine.createSpy('B')\n"
          },
          {
            "+": "+    expect(spyA.mock.calls.length).toBe(1)\n+    expect(spyB.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spyA.calls.count()).toBe(1)\n-    expect(spyB.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(spyA.mock.calls.length).toBe(1)\n+      expect(spyB.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spyA.calls.count()).toBe(1)\n-      expect(spyB.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/features/options/computed.spec.ts": [
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('watch computed')\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('cached computed')\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('cached computed')\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spy.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-    expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-    expect(spy.calls.count()).toBe(2)\n"
          }
        ],
        "a/test/unit/features/options/directives.spec.ts": [
          {
            "+": "+    const bindSpy = vi.fn()\n+    const insertedSpy = vi.fn()\n+    const updateSpy = vi.fn()\n+    const componentUpdatedSpy = vi.fn()\n+    const unbindSpy = vi.fn()\n",
            "-": "-    const bindSpy = jasmine.createSpy('bind')\n-    const insertedSpy = jasmine.createSpy('inserted')\n-    const updateSpy = jasmine.createSpy('update')\n-    const componentUpdatedSpy = jasmine.createSpy('componentUpdated')\n-    const unbindSpy = jasmine.createSpy('unbind')\n"
          },
          {
            "+": "+      expect(componentUpdatedSpy.mock.calls.length).toBe(2)\n",
            "-": "-      expect(componentUpdatedSpy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('directive')\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy('directive')\n"
          },
          {
            "+": "+    const createSpy = name => (spies[name] = vi.fn())\n",
            "-": "-    const createSpy = name => (spies[name] = jasmine.createSpy(name))\n"
          },
          {
            "+": "+    expect(spies.bind1.mock.calls.length).toBe(2)\n+    expect(spies.inserted1.mock.calls.length).toBe(2)\n+    expect(spies.bind2.mock.calls.length).toBe(0)\n+    expect(spies.inserted2.mock.calls.length).toBe(0)\n",
            "-": "-    expect(spies.bind1.calls.count()).toBe(2)\n-    expect(spies.inserted1.calls.count()).toBe(2)\n-    expect(spies.bind2.calls.count()).toBe(0)\n-    expect(spies.inserted2.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(spies.update1.mock.calls.length).toBe(1)\n+      expect(spies.componentUpdated1.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spies.update1.calls.count()).toBe(1)\n-      expect(spies.componentUpdated1.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spies.unbind1.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spies.unbind1.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spies.bind2.mock.calls.length).toBe(1)\n+      expect(spies.inserted2.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spies.bind2.calls.count()).toBe(1)\n-      expect(spies.inserted2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spies.bind1.mock.calls.length).toBe(3)\n+      expect(spies.inserted1.mock.calls.length).toBe(3)\n",
            "-": "-      expect(spies.bind1.calls.count()).toBe(3)\n-      expect(spies.inserted1.calls.count()).toBe(3)\n"
          },
          {
            "+": "+      expect(spies.unbind2.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spies.unbind2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spies.update1.mock.calls.length).toBe(2)\n+      expect(spies.componentUpdated1.mock.calls.length).toBe(2)\n",
            "-": "-      expect(spies.update1.calls.count()).toBe(2)\n-      expect(spies.componentUpdated1.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      expect(spies.update1.mock.calls.length).toBe(4)\n+      expect(spies.componentUpdated1.mock.calls.length).toBe(4)\n",
            "-": "-      expect(spies.update1.calls.count()).toBe(4)\n-      expect(spies.componentUpdated1.calls.count()).toBe(4)\n"
          },
          {
            "+": "+      bind: vi.fn(),\n+      inserted: vi.fn(),\n+      unbind: vi.fn()\n",
            "-": "-      bind: jasmine.createSpy('bind'),\n-      inserted: jasmine.createSpy('inserted'),\n-      unbind: jasmine.createSpy('unbind')\n"
          },
          {
            "+": "+    expect(dir.bind.mock.calls.length).toBe(1)\n",
            "-": "-    expect(dir.bind.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(dir.inserted.mock.calls.length).toBe(1)\n",
            "-": "-    expect(dir.inserted.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(dir.bind.mock.calls.length).toBe(2)\n",
            "-": "-      expect(dir.bind.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      expect(dir.inserted.mock.calls.length).toBe(2)\n",
            "-": "-      expect(dir.inserted.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      expect(dir.unbind.mock.calls.length).toBe(1)\n",
            "-": "-      expect(dir.unbind.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/features/options/errorCaptured.spec.ts": [
          {
            "+": "+    globalSpy = Vue.config.errorHandler = vi.fn()\n",
            "-": "-    globalSpy = Vue.config.errorHandler = jasmine.createSpy()\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/features/options/extends.spec.ts": [
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy('watch')\n"
          }
        ],
        "a/test/unit/features/options/functional.spec.ts": [
          {
            "+": "+    const foo = vi.fn()\n+    const bar = vi.fn()\n",
            "-": "-    const foo = jasmine.createSpy('foo')\n-    const bar = jasmine.createSpy('bar')\n"
          },
          {
            "+": "+    const onValid = vi.fn()\n",
            "-": "-    const onValid = jasmine.createSpy('valid')\n"
          }
        ],
        "a/test/unit/features/options/lifecycle.spec.ts": [
          {
            "+": "+    spy = vi.fn()\n",
            "-": "-    spy = jasmine.createSpy('hook')\n"
          },
          {
            "+": "+      const beforeUpdate = vi.fn()\n+      const destroyed = vi.fn()\n",
            "-": "-      const beforeUpdate = jasmine.createSpy('beforeUpdate')\n-      const destroyed = jasmine.createSpy('destroyed')\n"
          },
          {
            "+": "+      const updated = vi.fn()\n+      const destroyed = vi.fn()\n",
            "-": "-      const updated = jasmine.createSpy('updated')\n-      const destroyed = jasmine.createSpy('destroyed')\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const created = vi.fn()\n+    const mounted = vi.fn()\n+    const destroyed = vi.fn()\n",
            "-": "-    const created = jasmine.createSpy()\n-    const mounted = jasmine.createSpy()\n-    const destroyed = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/features/options/mixins.spec.ts": [
          {
            "+": "+    const spy1 = vi.fn()\n+    const spy2 = vi.fn()\n",
            "-": "-    const spy1 = jasmine.createSpy('mixinA')\n-    const spy2 = jasmine.createSpy('mixinB')\n"
          }
        ],
        "a/test/unit/features/options/props.spec.ts": [
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+        expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-        expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+\n",
            "-": "-\t\n"
          },
          {
            "+": "+        expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-        expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(1)\n",
            "-": "-      expect(console.error.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(2)\n",
            "-": "-      expect(console.error.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+      expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-      expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(console.error.mock.calls.length).toBe(0)\n",
            "-": "-    expect(console.error.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-      expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-      expect(spy.calls.count()).toBe(2)\n"
          }
        ],
        "a/test/unit/features/options/renderError.spec.ts": [
          {
            "+": "+    const spy = Vue.config.errorHandler = vi.fn()\n",
            "-": "-    const spy = Vue.config.errorHandler = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/features/options/watch.spec.ts": [
          {
            "+": "+    spy = vi.fn()\n",
            "-": "-    spy = jasmine.createSpy('watch')\n"
          },
          {
            "+": "+    const spy1 = vi.fn()\n",
            "-": "-    const spy1 = jasmine.createSpy('watch')\n"
          },
          {
            "+": "+    const spy2 = vi.fn()\n+    const spy3 = vi.fn()\n",
            "-": "-    const spy2 = jasmine.createSpy('A')\n-    const spy3 = jasmine.createSpy('B')\n"
          }
        ],
        "a/test/unit/features/transition/transition-group.spec.ts": [
          {
            "+": "+      const beforeEnterSpy = vi.fn()\n+      const afterEnterSpy = vi.fn()\n+      const afterLeaveSpy = vi.fn()\n",
            "-": "-      const beforeEnterSpy = jasmine.createSpy()\n-      const afterEnterSpy = jasmine.createSpy()\n-      const afterLeaveSpy = jasmine.createSpy()\n"
          },
          {
            "+": "+        expect(beforeEnterSpy.mock.calls.length).toBe(1)\n",
            "-": "-        expect(beforeEnterSpy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+        expect(afterEnterSpy.mock.calls.length).toBe(1)\n",
            "-": "-        expect(afterEnterSpy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+        expect(afterLeaveSpy.mock.calls.length).toBe(1)\n",
            "-": "-        expect(afterLeaveSpy.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/features/transition/transition.spec.ts": [
          {
            "+": "+      const enter = vi.fn()\n+      const leave = vi.fn()\n",
            "-": "-      const enter = jasmine.createSpy('enter')\n-      const leave = jasmine.createSpy('leave')\n"
          },
          {
            "+": "+      const onLeaveSpy = vi.fn()\n+      const onEnterSpy = vi.fn()\n+      const beforeLeaveSpy = vi.fn()\n+      const beforeEnterSpy = vi.fn()\n+      const afterLeaveSpy = vi.fn()\n+      const afterEnterSpy = vi.fn()\n",
            "-": "-      const onLeaveSpy = jasmine.createSpy('leave')\n-      const onEnterSpy = jasmine.createSpy('enter')\n-      const beforeLeaveSpy = jasmine.createSpy('beforeLeave')\n-      const beforeEnterSpy = jasmine.createSpy('beforeEnter')\n-      const afterLeaveSpy = jasmine.createSpy('afterLeave')\n-      const afterEnterSpy = jasmine.createSpy('afterEnter')\n"
          },
          {
            "+": "+      const onLeaveSpy = vi.fn()\n+      const onEnterSpy = vi.fn()\n+      const beforeLeaveSpy = vi.fn()\n+      const beforeEnterSpy = vi.fn()\n+      const afterLeaveSpy = vi.fn()\n+      const afterEnterSpy = vi.fn()\n",
            "-": "-      const onLeaveSpy = jasmine.createSpy('leave')\n-      const onEnterSpy = jasmine.createSpy('enter')\n-      const beforeLeaveSpy = jasmine.createSpy('beforeLeave')\n-      const beforeEnterSpy = jasmine.createSpy('beforeEnter')\n-      const afterLeaveSpy = jasmine.createSpy('afterLeave')\n-      const afterEnterSpy = jasmine.createSpy('afterEnter')\n"
          },
          {
            "+": "+      const enterSpy = vi.fn()\n+      const leaveSpy = vi.fn()\n",
            "-": "-      const enterSpy = jasmine.createSpy('enter')\n-      const leaveSpy = jasmine.createSpy('leave')\n"
          },
          {
            "+": "+      const enterSpy = vi.fn()\n+      const leaveSpy = vi.fn()\n",
            "-": "-      const enterSpy = jasmine.createSpy('enter')\n-      const leaveSpy = jasmine.createSpy('leave')\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy('enterCancelled')\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy('afterLeave')\n"
          },
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy('leaveCancelled')\n"
          }
        ],
        "a/test/unit/modules/compiler/codegen.spec.ts": [
          {
            "+": "+    expect(console.error.mock.calls.length).toBe(3)\n",
            "-": "-    expect(console.error.calls.count()).toBe(3)\n"
          }
        ],
        "a/test/unit/modules/compiler/parser.spec.ts": [
          {
            "+": "+    const spy1 = vi.fn()\n+    const spy2 = vi.fn()\n",
            "-": "-    const spy1 = jasmine.createSpy('preTransform')\n-    const spy2 = jasmine.createSpy('postTransform')\n"
          }
        ],
        "a/test/unit/modules/observer/observer.spec.ts": [
          {
            "+": "+      update: vi.fn()\n",
            "-": "-      update: jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(watcher.update.mock.calls.length).toBe(1)\n",
            "-": "-    expect(watcher.update.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(watcher.update.mock.calls.length).toBe(2)\n",
            "-": "-    expect(watcher.update.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(watcher.update.mock.calls.length).toBe(3)\n",
            "-": "-    expect(watcher.update.calls.count()).toBe(3)\n"
          },
          {
            "+": "+    expect(watcher.update.mock.calls.length).toBe(3)\n",
            "-": "-    expect(watcher.update.calls.count()).toBe(3)\n"
          },
          {
            "+": "+    expect(dep1.notify.mock.calls.length).toBe(1)\n",
            "-": "-    expect(dep1.notify.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(dep1.notify.mock.calls.length).toBe(2)\n",
            "-": "-    expect(dep1.notify.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(dep1.notify.mock.calls.length).toBe(2)\n",
            "-": "-    expect(dep1.notify.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(dep1.notify.mock.calls.length).toBe(3)\n",
            "-": "-    expect(dep1.notify.calls.count()).toBe(3)\n"
          },
          {
            "+": "+    expect(dep1.notify.mock.calls.length).toBe(3)\n",
            "-": "-    expect(dep1.notify.calls.count()).toBe(3)\n"
          },
          {
            "+": "+    expect(dep3.notify.mock.calls.length).toBe(1)\n",
            "-": "-    expect(dep3.notify.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(dep3.notify.mock.calls.length).toBe(2)\n",
            "-": "-    expect(dep3.notify.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(dep2.notify.mock.calls.length).toBe(1)\n",
            "-": "-    expect(dep2.notify.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(dep2.notify.mock.calls.length).toBe(2)\n",
            "-": "-    expect(dep2.notify.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(dep.notify.mock.calls.length).toBe(7)\n",
            "-": "-    expect(dep.notify.calls.count()).toBe(7)\n"
          }
        ],
        "a/test/unit/modules/observer/scheduler.spec.ts": [
          {
            "+": "+    spy = vi.fn()\n",
            "-": "-    spy = jasmine.createSpy('scheduler')\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-      expect(spy.calls.count()).toBe(2)\n"
          }
        ],
        "a/test/unit/modules/observer/watcher.spec.ts": [
          {
            "+": "+    spy = vi.fn()\n",
            "-": "-    spy = jasmine.createSpy('watcher')\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-      expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(3)\n",
            "-": "-      expect(spy.calls.count()).toBe(3)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-      expect(spy.calls.count()).toBe(2)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(1)\n",
            "-": "-      expect(spy.calls.count()).toBe(1)\n"
          },
          {
            "+": "+      expect(spy.mock.calls.length).toBe(2)\n",
            "-": "-      expect(spy.calls.count()).toBe(2)\n"
          }
        ],
        "a/test/unit/modules/util/error.spec.ts": [
          {
            "+": "+      const handler = Vue.config.errorHandler = vi.fn()\n+      const userCatch = vi.fn()\n",
            "-": "-      const handler = Vue.config.errorHandler = jasmine.createSpy()\n-      const userCatch = jasmine.createSpy()\n"
          },
          {
            "+": "+        expect(handler.mock.calls.length).toBe(1)\n",
            "-": "-        expect(handler.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/modules/util/next-tick.spec.ts": [
          {
            "+": "+      const spy = vi.fn()\n",
            "-": "-      const spy = jasmine.createSpy()\n"
          }
        ],
        "a/test/unit/modules/vdom/modules/directive.spec.ts": [
          {
            "+": "+      bind: vi.fn(),\n+      update: vi.fn(),\n+      unbind: vi.fn()\n",
            "-": "-      bind: jasmine.createSpy('bind'),\n-      update: jasmine.createSpy('update'),\n-      unbind: jasmine.createSpy('unbind')\n"
          }
        ],
        "a/test/unit/modules/vdom/modules/events.spec.ts": [
          {
            "+": "+    const click = vi.fn()\n",
            "-": "-    const click = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const click = vi.fn()\n",
            "-": "-    const click = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const click = vi.fn()\n+    const click2 = vi.fn()\n",
            "-": "-    const click = jasmine.createSpy()\n-    const click2 = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n+    expect(click2.mock.calls.length).toBe(0)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n-    expect(click2.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n+    expect(click2.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n-    expect(click2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const click = vi.fn()\n",
            "-": "-    const click = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(2)\n",
            "-": "-    expect(click.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    const click = vi.fn()\n+    const click2 = vi.fn()\n",
            "-": "-    const click = jasmine.createSpy()\n-    const click2 = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n+    expect(click2.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n-    expect(click2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(2)\n+    expect(click2.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(2)\n-    expect(click2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const click = vi.fn()\n",
            "-": "-    const click = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    const click = vi.fn()\n",
            "-": "-    const click = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(2)\n",
            "-": "-    expect(click.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(2)\n",
            "-": "-    expect(click.calls.count()).toBe(2)\n"
          },
          {
            "+": "+    const click = vi.fn()\n+    const click2 = vi.fn()\n+    const click3 = vi.fn()\n",
            "-": "-    const click = jasmine.createSpy()\n-    const click2 = jasmine.createSpy()\n-    const click3 = jasmine.createSpy()\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(1)\n+    expect(click2.mock.calls.length).toBe(0)\n",
            "-": "-    expect(click.calls.count()).toBe(1)\n-    expect(click2.calls.count()).toBe(0)\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(2)\n+    expect(click2.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(2)\n-    expect(click2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(3)\n+    expect(click2.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(3)\n-    expect(click2.calls.count()).toBe(1)\n"
          },
          {
            "+": "+    expect(click.mock.calls.length).toBe(3)\n+    expect(click2.mock.calls.length).toBe(2)\n+    expect(click3.mock.calls.length).toBe(1)\n",
            "-": "-    expect(click.calls.count()).toBe(3)\n-    expect(click2.calls.count()).toBe(2)\n-    expect(click3.calls.count()).toBe(1)\n"
          }
        ],
        "a/test/unit/modules/vdom/patch/edge-cases.spec.ts": [
          {
            "+": "+    const spy = vi.fn()\n",
            "-": "-    const spy = jasmine.createSpy()\n"
          },
          {
            "+": "+    const log = vi.fn()\n",
            "-": "-    const log = jasmine.createSpy()\n"
          },
          {
            "+": "+    const inlineHookSpy = vi.fn()\n",
            "-": "-    const inlineHookSpy = jasmine.createSpy('inlineInit')\n"
          },
          {
            "+": "+    expect(inlineHookSpy.mock.calls.length).toBe(2)\n",
            "-": "-    expect(inlineHookSpy.calls.count()).toBe(2)\n"
          }
        ]
      },
      "numOfFiles": 42,
      "numOfChanges": 335,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "8e672c4251a15c1a65a0b0108ab750e0ab440750",
      "url": "https://github.com/vuejs/vue/commit/8e672c4251a15c1a65a0b0108ab750e0ab440750",
      "message": "test: first full test suite passing",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-19T23:29:25Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/component/component-async.spec.ts": [
          {
            "+": "+      if (delay >= 1000) {\n+        // skip vitest internal timeouts\n+        return\n+      }\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "972d8066d7be0fd5d10e4f1ba5e08c148c851e6b",
      "url": "https://github.com/vuejs/vue/commit/972d8066d7be0fd5d10e4f1ba5e08c148c851e6b",
      "message": "test: migrate tests to vitest (wip)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2022-05-19T10:21:26Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/package.json": [
          {
            "+": "+    \"jsdom\": \"^19.0.0\",\n",
            "-": ""
          }
        ],
        "a/pnpm-lock.yaml": [
          {
            "+": "+  jsdom: ^19.0.0\n",
            "-": ""
          },
          {
            "+": "+  jsdom: 19.0.0\n",
            "-": ""
          },
          {
            "+": "+  vitest: 0.12.6_jsdom@19.0.0\n",
            "-": "-  vitest: 0.12.6\n"
          },
          {
            "+": "+  /@tootallnate/once/2.0.0:\n+    resolution: {integrity: sha512-XCuKFP5PS55gnMVu3dty8KPatLqUoy/ZYzDzAGCQ8JNFCkLXzmI7vNHCR+XpbZaMWQK/vQubr7PkYq8g470J/A==}\n+    engines: {node: '>= 10'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /abab/2.0.6:\n+    resolution: {integrity: sha512-j2afSsaIENvHZN2B8GOpF566vZ5WVk5opAiMTvWgaQT8DkbOqsTfvNAvHoRGU2zzP8cPoqys+xHTRDWW8L+/BA==}\n+    dev: true\n+\n+  /acorn-globals/6.0.0:\n+    resolution: {integrity: sha512-ZQl7LOWaF5ePqqcX4hLuv/bLXYQNfNWw2c0/yX/TsPRKamzHcTGQnlCjHT3TsmkOUVEPS3crCxiPfdzE/Trlhg==}\n+    dependencies:\n+      acorn: 7.4.1\n+      acorn-walk: 7.2.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /acorn-walk/7.2.0:\n+    resolution: {integrity: sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA==}\n+    engines: {node: '>=0.4.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /acorn/7.4.1:\n+    resolution: {integrity: sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==}\n+    engines: {node: '>=0.4.0'}\n+    hasBin: true\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /agent-base/6.0.2:\n+    resolution: {integrity: sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==}\n+    engines: {node: '>= 6.0.0'}\n+    dependencies:\n+      debug: 4.3.4\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /asynckit/0.4.0:\n+    resolution: {integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /browser-process-hrtime/1.0.0:\n+    resolution: {integrity: sha512-9o5UecI3GhkpM6DrXr69PblIuWxPKk9Y0jHBRhdocZ2y7YECBFCsHm79Pr3OyR2AvjhDkabFJaDJMYRazHgsow==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /combined-stream/1.0.8:\n+    resolution: {integrity: sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==}\n+    engines: {node: '>= 0.8'}\n+    dependencies:\n+      delayed-stream: 1.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /cssom/0.3.8:\n+    resolution: {integrity: sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg==}\n+    dev: true\n+\n+  /cssom/0.5.0:\n+    resolution: {integrity: sha512-iKuQcq+NdHqlAcwUY0o/HL69XQrUaQdMjmStJ8JFmUaiiQErlhrmuigkg/CU4E2J0IyUKUrMAgl36TvN67MqTw==}\n+    dev: true\n+\n+  /cssstyle/2.3.0:\n+    resolution: {integrity: sha512-AZL67abkUzIuvcHqk7c09cezpGNcxUxU4Ioi/05xHk4DQeTkWmGYftIE6ctU6AEt+Gn4n1lDStOtj7FKycP71A==}\n+    engines: {node: '>=8'}\n+    dependencies:\n+      cssom: 0.3.8\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /data-urls/3.0.2:\n+    resolution: {integrity: sha512-Jy/tj3ldjZJo63sVAvg6LHt2mHvl4V6AgRAmNDtLdm7faqtsx+aJG42rsyCo9JCoRVKwPFzKlIPx3DIibwSIaQ==}\n+    engines: {node: '>=12'}\n+    dependencies:\n+      abab: 2.0.6\n+      whatwg-mimetype: 3.0.0\n+      whatwg-url: 11.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /decimal.js/10.3.1:\n+    resolution: {integrity: sha512-V0pfhfr8suzyPGOx3nmq4aHqabehUZn6Ch9kyFpV79TGDTWFmHqUqXdabR7QHqxzrYolF4+tVmJhUG4OURg5dQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /delayed-stream/1.0.0:\n+    resolution: {integrity: sha1-3zrhmayt+31ECqrgsp4icrJOxhk=}\n+    engines: {node: '>=0.4.0'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /domexception/4.0.0:\n+    resolution: {integrity: sha512-A2is4PLG+eeSfoTMA95/s4pvAoSo2mKtiM5jlHkAVewmiO8ISFTFKZjH7UAM1Atli/OT/7JHOrJRJiMKUZKYBw==}\n+    engines: {node: '>=12'}\n+    dependencies:\n+      webidl-conversions: 7.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /form-data/4.0.0:\n+    resolution: {integrity: sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==}\n+    engines: {node: '>= 6'}\n+    dependencies:\n+      asynckit: 0.4.0\n+      combined-stream: 1.0.8\n+      mime-types: 2.1.35\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /http-proxy-agent/5.0.0:\n+    resolution: {integrity: sha512-n2hY8YdoRE1i7r6M0w9DIw5GgZN0G25P8zLCRQ8rjXtTU3vsNFBI/vWK/UIeE6g5MUUz6avwAPXmL6Fy9D/90w==}\n+    engines: {node: '>= 6'}\n+    dependencies:\n+      '@tootallnate/once': 2.0.0\n+      agent-base: 6.0.2\n+      debug: 4.3.4\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /https-proxy-agent/5.0.1:\n+    resolution: {integrity: sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==}\n+    engines: {node: '>= 6'}\n+    dependencies:\n+      agent-base: 6.0.2\n+      debug: 4.3.4\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /is-potential-custom-element-name/1.0.1:\n+    resolution: {integrity: sha512-bCYeRA2rVibKZd+s2625gGnGF/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPKJ1hrN3nzPNKFEKOUiQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /jsdom/19.0.0:\n+    resolution: {integrity: sha512-RYAyjCbxy/vri/CfnjUWJQQtZ3LKlLnDqj+9XLNnJPgEGeirZs3hllKR20re8LUZ6o1b1X4Jat+Qd26zmP41+A==}\n+    engines: {node: '>=12'}\n+    peerDependencies:\n+      canvas: ^2.5.0\n+    peerDependenciesMeta:\n+      canvas:\n+        optional: true\n+    dependencies:\n+      abab: 2.0.6\n+      acorn: 8.7.1\n+      acorn-globals: 6.0.0\n+      cssom: 0.5.0\n+      cssstyle: 2.3.0\n+      data-urls: 3.0.2\n+      decimal.js: 10.3.1\n+      domexception: 4.0.0\n+      escodegen: 2.0.0\n+      form-data: 4.0.0\n+      html-encoding-sniffer: 3.0.0\n+      http-proxy-agent: 5.0.0\n+      https-proxy-agent: 5.0.1\n+      is-potential-custom-element-name: 1.0.1\n+      nwsapi: 2.2.0\n+      parse5: 6.0.1\n+      saxes: 5.0.1\n+      symbol-tree: 3.2.4\n+      tough-cookie: 4.0.0\n+      w3c-hr-time: 1.0.2\n+      w3c-xmlserializer: 3.0.0\n+      webidl-conversions: 7.0.0\n+      whatwg-encoding: 2.0.0\n+      whatwg-mimetype: 3.0.0\n+      whatwg-url: 10.0.0\n+      ws: 8.6.0\n+      xml-name-validator: 4.0.0\n+    transitivePeerDependencies:\n+      - bufferutil\n+      - supports-color\n+      - utf-8-validate\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /mime-db/1.52.0:\n+    resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}\n+    engines: {node: '>= 0.6'}\n+    dev: true\n+\n+  /mime-types/2.1.35:\n+    resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}\n+    engines: {node: '>= 0.6'}\n+    dependencies:\n+      mime-db: 1.52.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /nwsapi/2.2.0:\n+    resolution: {integrity: sha512-h2AatdwYH+JHiZpv7pt/gSX1XoRGb7L/qSIeuqA6GwYoF9w1vP1cw42TO0aI2pNyshRK5893hNSl+1//vHK7hQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /parse5/6.0.1:\n+    resolution: {integrity: sha512-Ofn/CTFzRGTTxwpNEs9PP93gXShHcTq255nzRYSKe8AkVpZY7e1fpmTfOyoIvjP5HG7Z2ZM7VS9PPhQGW2pOpw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /psl/1.8.0:\n+    resolution: {integrity: sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /saxes/5.0.1:\n+    resolution: {integrity: sha512-5LBh1Tls8c9xgGjw3QrMwETmTMVk0oFgvrFSvWx62llR2hcEInrKNZ2GZCCuuy2lvWrdl5jhbpeqc5hRYKFOcw==}\n+    engines: {node: '>=10'}\n+    dependencies:\n+      xmlchars: 2.2.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /symbol-tree/3.2.4:\n+    resolution: {integrity: sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /tough-cookie/4.0.0:\n+    resolution: {integrity: sha512-tHdtEpQCMrc1YLrMaqXXcj6AxhYi/xgit6mZu1+EDWUn+qhUf8wMQoFIy9NXuq23zAwtcB0t/MjACGR18pcRbg==}\n+    engines: {node: '>=6'}\n+    dependencies:\n+      psl: 1.8.0\n+      punycode: 2.1.1\n+      universalify: 0.1.2\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /tr46/3.0.0:\n+    resolution: {integrity: sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==}\n+    engines: {node: '>=12'}\n+    dependencies:\n+      punycode: 2.1.1\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /vitest/0.12.6_jsdom@19.0.0:\n",
            "-": "-  /vitest/0.12.6:\n"
          },
          {
            "+": "+      jsdom: 19.0.0\n",
            "-": ""
          },
          {
            "+": "+  /w3c-hr-time/1.0.2:\n+    resolution: {integrity: sha512-z8P5DvDNjKDoFIHK7q8r8lackT6l+jo/Ye3HOle7l9nICP9lf1Ci25fy9vHd0JOWewkIFzXIEig3TdKT7JQ5fQ==}\n+    dependencies:\n+      browser-process-hrtime: 1.0.0\n+    dev: true\n+\n+  /w3c-xmlserializer/3.0.0:\n+    resolution: {integrity: sha512-3WFqGEgSXIyGhOmAFtlicJNMjEps8b1MG31NCA0/vOF9+nKMUW1ckhi9cnNHmf88Rzw5V+dwIwsm2C7X8k9aQg==}\n+    engines: {node: '>=12'}\n+    dependencies:\n+      xml-name-validator: 4.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /webidl-conversions/7.0.0:\n+    resolution: {integrity: sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==}\n+    engines: {node: '>=12'}\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /whatwg-mimetype/3.0.0:\n+    resolution: {integrity: sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==}\n+    engines: {node: '>=12'}\n+    dev: true\n+\n+  /whatwg-url/10.0.0:\n+    resolution: {integrity: sha512-CLxxCmdUby142H5FZzn4D8ikO1cmypvXVQktsgosNy4a4BHrDHeciBBGZhb0bNoR5/MltoCatso+vFjjGx8t0w==}\n+    engines: {node: '>=12'}\n+    dependencies:\n+      tr46: 3.0.0\n+      webidl-conversions: 7.0.0\n+    dev: true\n+\n+  /whatwg-url/11.0.0:\n+    resolution: {integrity: sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==}\n+    engines: {node: '>=12'}\n+    dependencies:\n+      tr46: 3.0.0\n+      webidl-conversions: 7.0.0\n+    dev: true\n+\n",
            "-": ""
          },
          {
            "+": "+  /ws/8.6.0:\n+    resolution: {integrity: sha512-AzmM3aH3gk0aX7/rZLYvjdvZooofDu3fFOzGqcSnQ1tOcTWwhM/o+q++E8mAyVVIyUdajrkzWUGftaVSDLn1bw==}\n+    engines: {node: '>=10.0.0'}\n+    peerDependencies:\n+      bufferutil: ^4.0.1\n+      utf-8-validate: ^5.0.2\n+    peerDependenciesMeta:\n+      bufferutil:\n+        optional: true\n+      utf-8-validate:\n+        optional: true\n+    dev: true\n+\n+  /xml-name-validator/4.0.0:\n+    resolution: {integrity: sha512-ICP2e+jsHvAj2E2lIHxa5tjXRlKDJo4IdvPvCXbXQGdzSfmSpNVyIKMvoZHjDY9DP0zV17iI85o90vRFXNccRw==}\n+    engines: {node: '>=12'}\n+    dev: true\n+\n+  /xmlchars/2.2.0:\n+    resolution: {integrity: sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw==}\n+    dev: true\n+\n",
            "-": ""
          }
        ],
        "a/test/helpers/to-have-been-warned.ts": [
          {
            "-": "-function noop () {}\n-\n-if (typeof console === 'undefined') {\n-  // @ts-expect-error\n-  window.console = {\n-    warn: noop,\n-    error: noop\n-  }\n-}\n-\n-// avoid info messages during test\n-console.info = noop\n-\n-let asserted\n-\n-function createCompareFn (spy) {\n-  const hasWarned = msg => {\n-    let count = spy.calls.count()\n-    let args\n-    while (count--) {\n-      args = spy.calls.argsFor(count)\n-      if (args.some(containsMsg)) {\n-        return true\n-      }\n-    }\n-\n-    function containsMsg (arg) {\n-      return arg.toString().indexOf(msg) > -1\n-    }\n-  }\n-\n-  return {\n-    compare: msg => {\n-      asserted = asserted.concat(msg)\n-      const warned = Array.isArray(msg)\n-        ? msg.some(hasWarned)\n-        : hasWarned(msg)\n-      return {\n-        pass: warned,\n-        message: warned\n-          ? 'Expected message \"' + msg + '\" not to have been warned'\n-          : 'Expected message \"' + msg + '\" to have been warned'\n-      }\n-    }\n-  }\n-}\n-\n-// define custom matcher for warnings\n-beforeEach(() => {\n-  asserted = []\n-  spyOn(console, 'warn')\n-  spyOn(console, 'error')\n-  jasmine.addMatchers({\n-    toHaveBeenWarned: () => \n-      // @ts-expect-error\n-      createCompareFn(console.error),\n-    toHaveBeenTipped: () => \n-      // @ts-expect-error\n-      createCompareFn(console.warn)\n-  })\n-})\n-\n-afterEach(done => {\n-  const warned = msg => asserted.some(assertedMsg => msg.toString().indexOf(assertedMsg) > -1)\n-  let count = console.error.calls.count()\n-  let args\n-  while (count--) {\n-    args = console.error.calls.argsFor(count)\n-    if (!warned(args[0])) {\n-      done.fail(`Unexpected console.error message: ${args[0]}`)\n-      return\n-    }\n-  }\n-  done()\n-})\n",
            "+": ""
          }
        ],
        "a/test/unit/features/component/component-async.spec.ts": [
          {
            "+": "+function wait(): [() => void, Promise<void>] {\n+  let done\n+  const p = new Promise<void>((resolve, reject) => {\n+    done = resolve\n+    done.fail = reject\n+  })\n+  return [done, p]\n+}\n",
            "-": "-describe('Component async', () => {\n"
          },
          {
            "+": "+describe('Component async', () => {\n+  const oldSetTimeout = setTimeout\n+  const oldClearTimeout = clearTimeout\n",
            "-": "-  const oldSetTimeout = window.setTimeout;\n-  const oldClearTimeout = window.clearTimeout;\n"
          },
          {
            "+": "+  let timeoutsPending = {}\n",
            "-": "-  let timeoutsPending = {};\n-\n-  beforeEach(function () {\n-    // reset the timeouts for this iteration\n-    timeoutsPending = {};\n"
          },
          {
            "+": "+  beforeAll(function () {\n",
            "-": ""
          },
          {
            "+": "+    global.setTimeout = function (func, delay) {\n+      const id = oldSetTimeout(function () {\n+        delete timeoutsPending[id]\n+        func()\n+      }, delay) as any\n+      timeoutsPending[id] = delay\n",
            "-": "-    global.setTimeout = function(func, delay) {\n-      const id = oldSetTimeout(function() {\n-        delete timeoutsPending[id];\n-        func();\n-      }, delay);\n-      timeoutsPending[id] = delay;\n"
          },
          {
            "+": "+    }\n+\n+    global.clearTimeout = function (id) {\n+      oldClearTimeout(id)\n+      delete timeoutsPending[id]\n+    }\n+  })\n+\n+  afterAll(function () {\n+    global.setTimeout = oldSetTimeout\n+    global.clearTimeout = oldClearTimeout\n+  })\n",
            "-": "-    };\n"
          },
          {
            "+": "+  beforeEach(() => {\n+    // reset the timeouts for this iteration\n+    timeoutsPending = {}\n",
            "-": "-    window.clearTimeout = function(id) {\n-      oldClearTimeout(id);\n-      delete timeoutsPending[id];\n-    };\n"
          },
          {
            "+": "+  afterEach(() => {\n",
            "-": "-  afterEach(function () {\n-    window.setTimeout = oldSetTimeout;\n-    window.clearTimeout = oldClearTimeout;\n"
          },
          {
            "+": "+  it('normal', () => {\n",
            "-": "-  it('normal', done => {\n"
          },
          {
            "+": "+\n+    const [done, p] = wait()\n+    function next() {\n",
            "-": "-    function next () {\n"
          },
          {
            "+": "+    return p\n",
            "-": ""
          },
          {
            "+": "+  it('resolve ES module default', () => {\n",
            "-": "-  it('resolve ES module default', done => {\n"
          },
          {
            "+": "+\n+    const [done, p] = wait()\n+    function next() {\n",
            "-": "-    function next () {\n"
          },
          {
            "+": "+    return p\n",
            "-": ""
          },
          {
            "+": "+  it('as root', () => {\n",
            "-": "-  it('as root', done => {\n"
          },
          {
            "+": "+        test: (resolve) => {\n",
            "-": "-        test: resolve => {\n"
          },
          {
            "+": "+\n+    const [done, p] = wait()\n+    function next() {\n",
            "-": "-    function next () {\n"
          },
          {
            "+": "+    return p\n",
            "-": ""
          },
          {
            "+": "+  it('dynamic', () => {\n",
            "-": "-  it('dynamic', done => {\n"
          },
          {
            "+": "+        'view-a': (resolve) => {\n",
            "-": "-        'view-a': resolve => {\n"
          },
          {
            "+": "+        'view-b': (resolve) => {\n",
            "-": "-        'view-b': resolve => {\n"
          },
          {
            "+": "+    function step1() {\n",
            "-": "-    function step1 () {\n"
          },
          {
            "+": "+    const [done, p] = wait()\n+    function step2() {\n",
            "-": "-    function step2 () {\n"
          },
          {
            "+": "+\n+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(function () {\n"
          },
          {
            "+": "+    return p\n",
            "-": ""
          },
          {
            "+": "+  it('with v-for', () => {\n",
            "-": "-  it('with v-for', done => {\n"
          },
          {
            "+": "+        test: (resolve) => {\n",
            "-": "-        test: resolve => {\n"
          },
          {
            "+": "+    const [done, p] = wait()\n+    function next() {\n",
            "-": "-    function next () {\n"
          },
          {
            "+": "+    return p\n",
            "-": ""
          },
          {
            "+": "+  it('returning Promise', () => {\n",
            "-": "-  it('returning Promise', done => {\n"
          },
          {
            "+": "+          return new Promise((resolve) => {\n",
            "-": "-          return new Promise(resolve => {\n"
          },
          {
            "+": "+\n+    const [done, p] = wait()\n+    function next() {\n",
            "-": "-    function next () {\n"
          },
          {
            "+": "+    return p\n",
            "-": ""
          },
          {
            "+": "+    it('with loading component', () => {\n",
            "-": "-    it('with loading component', done => {\n"
          },
          {
            "+": "+            component: new Promise((resolve) => {\n",
            "-": "-            component: new Promise(resolve => {\n"
          },
          {
            "+": "+      const [done, p] = wait()\n+      function next() {\n",
            "-": "-      function next () {\n"
          },
          {
            "+": "+      return p\n",
            "-": ""
          },
          {
            "+": "+    it('with loading component (0 delay)', () => {\n",
            "-": "-    it('with loading component (0 delay)', done => {\n"
          },
          {
            "+": "+            component: new Promise((resolve) => {\n",
            "-": "-            component: new Promise(resolve => {\n"
          },
          {
            "+": "+      const [done, p] = wait()\n+      function next() {\n",
            "-": "-      function next () {\n"
          },
          {
            "+": "+      return p\n",
            "-": ""
          },
          {
            "+": "+    it('with error component', () => {\n",
            "-": "-    it('with error component', done => {\n"
          },
          {
            "+": "+      const [done, p] = wait()\n+      function next() {\n",
            "-": "-      function next () {\n"
          },
          {
            "+": "+      return p\n",
            "-": ""
          },
          {
            "+": "+    it('with error component + timeout', () => {\n",
            "-": "-    it('with error component + timeout', done => {\n"
          },
          {
            "+": "+      const [done, p] = wait()\n+      function next() {\n",
            "-": "-      function next () {\n"
          },
          {
            "+": "+      return p\n",
            "-": ""
          },
          {
            "+": "+    it('should not trigger timeout if resolved', () => {\n",
            "-": "-    it('should not trigger timeout if resolved', done => {\n"
          },
          {
            "+": "+      const [done, p] = wait()\n",
            "-": ""
          },
          {
            "+": "+      return p\n",
            "-": ""
          },
          {
            "+": "+    it('should not have running timeout/loading if resolved', () => {\n",
            "-": "-    it('should not have running timeout/loading if resolved', done => {\n"
          },
          {
            "+": "+      const [done, p] = wait()\n+      function next() {\n",
            "-": "-      function next () {\n"
          },
          {
            "+": "+      return p\n",
            "-": ""
          },
          {
            "+": "+    it(`should work when resolving sync in sibling component's mounted hook`, () => {\n",
            "-": "-    it(`should work when resolving sync in sibling component's mounted hook`, done => {\n"
          },
          {
            "+": "+            mounted() {\n",
            "-": "-            mounted () {\n"
          },
          {
            "+": "+          two: (resolve) => {\n",
            "-": "-          two: resolve => {\n"
          },
          {
            "+": "+\n+      const [done, p] = wait()\n+      waitForUpdate(() => {\n",
            "-": "-      global.waitForUpdate(() => {\n"
          },
          {
            "+": "+      return p\n",
            "-": ""
          }
        ],
        "a/test/unit/global.d.ts": [
          {
            "+": "+// vitest extends jest namespace so we can just extend jest.Matchers\n+declare namespace jest {\n+  interface Matchers<R, T> {\n+    toHaveBeenWarned(): R\n+    toHaveBeenWarnedLast(): R\n+    toHaveBeenWarnedTimes(n: number): R\n",
            "-": "-declare namespace jasmine {\n-  interface Matchers<T> {\n-    toHaveBeenWarned(): void;\n-    toHaveBeenTipped(): void;\n"
          },
          {
            "+": "+}\n",
            "-": "-\n-  interface ArrayLikeMatchers<T> {\n-    toHaveBeenWarned(): void;\n-    toHaveBeenTipped(): void;\n-  }\n-}\n"
          }
        ],
        "a/test/unit/index.js": [
          {
            "-": "-// NOTE: do not convert this to typescript (or karma will be unhappy)\n-require('es6-promise/auto')\n-\n-// import all helpers\n-const helpersContext = require.context('../helpers', true)\n-helpersContext.keys().forEach(helpersContext)\n-\n-// require all test files\n-const testsContext = require.context('./', true, /\\.spec$/)\n-testsContext.keys().forEach(testsContext)\n",
            "+": ""
          }
        ],
        "a/test/unit/karma.base.config.ts": [
          {
            "-": "-const alias = require('../../scripts/alias')\n-const featureFlags = require('../../scripts/feature-flags')\n-const webpack = require('webpack')\n-\n-const webpackConfig = {\n-  mode: 'development',\n-  module: {\n-    rules: [\n-      {\n-        test: /\\.js$/,\n-        loader: 'babel-loader',\n-        exclude: /node_modules/\n-      },\n-      {\n-        test: /\\.tsx?$/,\n-        exclude: /node_modules/,\n-        // loader: 'ts-loader',\n-        // loader: 'babel-loader!ts-loader',\n-        use: ['babel-loader', 'ts-loader']\n-      },\n-    ]\n-  },\n-  resolve: {\n-    alias: alias,\n-    extensions: ['.tsx', '.ts', '.js'],\n-    fallback: {\n-      'stream': require.resolve(\"stream-browserify\")\n-    }\n-  },\n-  plugins: [\n-    new webpack.DefinePlugin({\n-      __WEEX__: false,\n-      'process.env': {\n-        TRANSITION_DURATION: process.env.CI ? 100 : 50,\n-        TRANSITION_BUFFER: 10,\n-        ...featureFlags\n-      }\n-    })\n-  ],\n-  devtool: 'inline-source-map'\n-}\n-\n-// shared config for all unit tests\n-module.exports = {\n-  frameworks: ['jasmine', 'webpack', 'karma-typescript'],\n-  files: [\n-    './index.js',\n-    \"../../src/**/*.ts\" // *.tsx for React Jsx\n-  ],\n-  preprocessors: {\n-    './index.js': ['webpack', 'sourcemap'],\n-    \"**/*.ts\": [\"karma-typescript\", 'webpack', 'sourcemap'] // *.tsx for React Jsx\n-  },\n-  webpack: webpackConfig,\n-  webpackMiddleware: {\n-    noInfo: true\n-  },\n-  plugins: [\n-    'karma-jasmine',\n-    'karma-mocha-reporter',\n-    'karma-sourcemap-loader',\n-    'karma-webpack',\n-    'karma-typescript'\n-  ],\n-  karmaTypescriptConfig: {\n-  //   \"compilerOptions\": {\n-  //     \"baseUrl\": \".\",\n-  //     \"outDir\": \"dist\",\n-  //     \"sourceMap\": true,\n-  //     \"target\": \"ESNext\",\n-  //     \"module\": \"ESNext\",\n-  //     \"moduleResolution\": \"node\",\n-  //     \"strict\": true,\n-      \n-  //     \"allowJs\": true,\n-  //     \"noImplicitAny\": false,\n-  //     \"noImplicitThis\": false,\n-  \n-  //     \"noUnusedLocals\": true,\n-  //     \"experimentalDecorators\": true,\n-  //     \"resolveJsonModule\": true,\n-  //     \"esModuleInterop\": true,\n-  //     \"removeComments\": false,\n-  //     \"jsx\": \"preserve\",\n-  //     \"lib\": [\"esnext\", \"dom\"],\n-  //     \"types\": [\n-  //       \"node\",\n-  //       \"jasmine\",\n-  //       \"webpack-env\"\n-  //     ],\n-  //     \"paths\": {\n-  //       \"compiler/*\": [\"../../src/compiler/*\"],\n-  //       \"core/*\": [\"../../src/core/*\"],\n-  \n-  //       \"server/*\": [\"../../src/server/*\"],\n-  //       \"sfc/*\": [\"../../src/sfc/*\"],\n-  //       \"shared/*\": [\"../../src/shared/*\"],\n-  \n-  //       \"web/*\": [\"../../src/platforms/web/*\"],\n-  //       \"weex/*\": [\"../../src/platforms/weex/*\"],\n-  \n-  //       \"vue\": [\"../../src/platforms/web/entry-runtime-with-compiler\"]\n-  //     }\n-  //   },\n-    \"include\": [\"./global.d.ts\"],\n-  \n-  //   \"exclude\": [\"flow\", \"node_modules\", \"packages\", \"types\"]\n-  // //   bundlerOptions: {\n-  // //     transforms: [require(\"karma-typescript-es6-transform\")()]\n-  // //   }\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/test/unit/karma.cover.config.ts": [
          {
            "-": "-const base = require('./karma.base.config.ts')\n-\n-process.env.CHROME_BIN = require('puppeteer').executablePath()\n-\n-module.exports = function (config: any) {\n-  const options = Object.assign(base, {\n-    browsers: ['ChromeHeadlessCI'],\n-    customLaunchers: {\n-      'ChromeHeadlessCI': {\n-        base: 'ChromeHeadless',\n-        flags: ['--no-sandbox']\n-      }\n-    },\n-    reporters: ['mocha', 'coverage', 'karma-typescript'],\n-    coverageReporter: {\n-      reporters: [\n-        { type: 'lcov', dir: '../../coverage', subdir: '.' },\n-        { type: 'text-summary', dir: '../../coverage', subdir: '.' }\n-      ]\n-    },\n-    singleRun: true,\n-    plugins: base.plugins.concat([\n-      'karma-coverage',\n-      'karma-chrome-launcher'\n-    ])\n-  })\n-\n-  // add babel-plugin-istanbul for code instrumentation\n-  options.webpack.module.rules[0].options = {\n-    plugins: [['istanbul', {\n-      exclude: [\n-        'test/',\n-        'src/compiler/parser/html-parser.ts',\n-        'src/core/instance/proxy.ts',\n-        'src/sfc/deindent.ts',\n-        'src/platforms/weex/'\n-      ]\n-    }]]\n-  }\n-\n-  config.set(options)\n-}\n",
            "+": ""
          }
        ],
        "a/test/unit/karma.dev.config.ts": [
          {
            "-": "-const base = require('./karma.base.config.ts')\n-\n-process.env.CHROME_BIN = require('puppeteer').executablePath()\n-\n-module.exports = function (config) {\n-  config.set(Object.assign(base, {\n-    browsers: ['ChromeHeadless'],\n-    reporters: ['progress'],\n-    plugins: base.plugins.concat([\n-      'karma-chrome-launcher'\n-    ])\n-  }))\n-}\n",
            "+": ""
          }
        ],
        "a/test/unit/karma.sauce.config.ts": [
          {
            "-": "-const webpack = require('webpack')\n-const base = require('./karma.base.config.ts')\n-\n-base.webpack.plugins = [\n-  new webpack.DefinePlugin({\n-    __WEEX__: false,\n-    'process.env': {\n-      NODE_ENV: '\"development\"',\n-      // sauce lab vms are slow!\n-      TRANSITION_DURATION: 500,\n-      TRANSITION_BUFFER: 50\n-    }\n-  })\n-]\n-\n-/**\n- * Having too many tests running concurrently on saucelabs\n- * causes timeouts and errors, so we have to run them in\n- * smaller batches.\n- */\n-\n-const batches = [\n-  // the cool kids\n-  {\n-    sl_chrome: {\n-      base: 'SauceLabs',\n-      browserName: 'chrome',\n-      platform: 'Windows 7'\n-    },\n-    sl_firefox: {\n-      base: 'SauceLabs',\n-      browserName: 'firefox'\n-    },\n-    sl_mac_safari: {\n-      base: 'SauceLabs',\n-      browserName: 'safari',\n-      platform: 'OS X 10.10'\n-    }\n-  },\n-  // ie family\n-  {\n-    sl_ie_9: {\n-      base: 'SauceLabs',\n-      browserName: 'internet explorer',\n-      platform: 'Windows 7',\n-      version: '9'\n-    },\n-    sl_ie_10: {\n-      base: 'SauceLabs',\n-      browserName: 'internet explorer',\n-      platform: 'Windows 8',\n-      version: '10'\n-    },\n-    sl_ie_11: {\n-      base: 'SauceLabs',\n-      browserName: 'internet explorer',\n-      platform: 'Windows 8.1',\n-      version: '11'\n-    },\n-    sl_edge: {\n-      base: 'SauceLabs',\n-      browserName: 'MicrosoftEdge',\n-      platform: 'Windows 10'\n-    }\n-  },\n-  // mobile\n-  {\n-    sl_ios_safari_9: {\n-      base: 'SauceLabs',\n-      browserName: 'iphone',\n-      version: '10.3'\n-    },\n-    sl_android_6_0: {\n-      base: 'SauceLabs',\n-      browserName: 'android',\n-      version: '6.0'\n-    }\n-  }\n-]\n-\n-module.exports = function (config) {\n-  const batch = batches[process.argv[4] || 0]\n-\n-  config.set(Object.assign(base, {\n-    singleRun: true,\n-    browsers: Object.keys(batch),\n-    customLaunchers: batch,\n-    reporters: process.env.CI\n-      ? ['dots', 'saucelabs'] // avoid spamming CI output\n-      : ['progress', 'saucelabs'],\n-    sauceLabs: {\n-      testName: 'Vue.js unit tests',\n-      recordScreenshots: false,\n-      connectOptions: {\n-        'no-ssl-bump-domains': 'all' // Ignore SSL error on Android emulator\n-      },\n-      build: process.env.CIRCLE_BUILD_NUM || process.env.SAUCE_BUILD_ID || Date.now()\n-    },\n-    // mobile emulators are really slow\n-    captureTimeout: 300000,\n-    browserNoActivityTimeout: 300000,\n-    plugins: base.plugins.concat([\n-      'karma-sauce-launcher'\n-    ])\n-  }))\n-}\n",
            "+": ""
          }
        ],
        "a/test/unit/karma.unit.config.ts": [
          {
            "-": "-const base = require('./karma.base.config.ts')\n-\n-module.exports = function (config) {\n-  config.set(Object.assign(base, {\n-    browsers: ['Chrome', 'Firefox', 'Safari'],\n-    reporters: ['progress'],\n-    singleRun: true,\n-    plugins: base.plugins.concat([\n-      'karma-chrome-launcher',\n-      'karma-firefox-launcher',\n-      'karma-safari-launcher'\n-    ])\n-  }))\n-}\n",
            "+": ""
          }
        ],
        "a/test/unit/modules/observer/dep.spec.ts": [
          {
            "+": "+      Dep.target = { addDep: vi.fn() } as any\n",
            "-": "-      Dep.target = jasmine.createSpyObj('TARGET', ['addDep'])\n"
          },
          {
            "+": "+      expect(Dep.target!.addDep).toHaveBeenCalledWith(dep)\n",
            "-": "-      expect(Dep.target.addDep).toHaveBeenCalledWith(dep)\n"
          },
          {
            "+": "+      dep.subs.push({ update: vi.fn() })\n",
            "-": "-      dep.subs.push(jasmine.createSpyObj('SUB', ['update']))\n"
          }
        ],
        "a/test/vitest.setup.ts": [
          {
            "+": "+import { SpyInstance } from 'vitest'\n+\n+expect.extend({\n+  toHaveBeenWarned(received: string) {\n+    asserted.add(received)\n+    const passed = warn.mock.calls.some((args) => args[0].includes(received))\n+    if (passed) {\n+      return {\n+        pass: true,\n+        message: () => `expected \"${received}\" not to have been warned.`\n+      }\n+    } else {\n+      const msgs = warn.mock.calls.map((args) => args[0]).join('\\n - ')\n+      return {\n+        pass: false,\n+        message: () =>\n+          `expected \"${received}\" to have been warned` +\n+          (msgs.length\n+            ? `.\\n\\nActual messages:\\n\\n - ${msgs}`\n+            : ` but no warning was recorded.`)\n+      }\n+    }\n+  },\n+\n+  toHaveBeenWarnedLast(received: string) {\n+    asserted.add(received)\n+    const passed =\n+      warn.mock.calls[warn.mock.calls.length - 1][0].includes(received)\n+    if (passed) {\n+      return {\n+        pass: true,\n+        message: () => `expected \"${received}\" not to have been warned last.`\n+      }\n+    } else {\n+      const msgs = warn.mock.calls.map((args) => args[0]).join('\\n - ')\n+      return {\n+        pass: false,\n+        message: () =>\n+          `expected \"${received}\" to have been warned last.\\n\\nActual messages:\\n\\n - ${msgs}`\n+      }\n+    }\n+  },\n+\n+  toHaveBeenWarnedTimes(received: string, n: number) {\n+    asserted.add(received)\n+    let found = 0\n+    warn.mock.calls.forEach((args) => {\n+      if (args[0].includes(received)) {\n+        found++\n+      }\n+    })\n+\n+    if (found === n) {\n+      return {\n+        pass: true,\n+        message: () => `expected \"${received}\" to have been warned ${n} times.`\n+      }\n+    } else {\n+      return {\n+        pass: false,\n+        message: () =>\n+          `expected \"${received}\" to have been warned ${n} times but got ${found}.`\n+      }\n+    }\n+  }\n+})\n+\n+let warn: SpyInstance\n+const asserted: Set<string> = new Set()\n+\n+beforeEach(() => {\n+  asserted.clear()\n+  warn = vi.spyOn(console, 'error')\n+  warn.mockImplementation(() => {})\n+})\n+\n+afterEach(() => {\n+  const assertedArray = Array.from(asserted)\n+  const nonAssertedWarnings = warn.mock.calls\n+    .map((args) => args[0])\n+    .filter((received) => {\n+      return !assertedArray.some((assertedMsg) => {\n+        return received.includes(assertedMsg)\n+      })\n+    })\n+  warn.mockRestore()\n+  if (nonAssertedWarnings.length) {\n+    throw new Error(\n+      `test case threw unexpected warnings:\\n - ${nonAssertedWarnings.join(\n+        '\\n - '\n+      )}`\n+    )\n+  }\n+})\n+\n+import Vue from 'vue'\n+\n+// helper for async assertions.\n+// Use like this:\n+//\n+// vm.a = 123\n+// waitForUpdate(() => {\n+//   expect(vm.$el.textContent).toBe('123')\n+//   vm.a = 234\n+// })\n+// .then(() => {\n+//   // more assertions...\n+// })\n+// .then(done)\n+\n+interface Job extends Function {\n+  wait?: boolean\n+  fail?: (e: any) => void\n+}\n+\n+global.waitForUpdate = (initialCb: Job) => {\n+  let end\n+  let reject\n+  const queue: Job[] = initialCb ? [initialCb] : []\n+\n+  function shift() {\n+    const job = queue.shift()\n+    if (queue.length) {\n+      let hasError = false\n+      try {\n+        job!.wait ? job!(shift) : job!()\n+      } catch (e) {\n+        hasError = true\n+        if (reject) {\n+          reject()\n+        } else {\n+          const done = queue[queue.length - 1]\n+          if (done && done.fail) {\n+            done.fail(e)\n+          }\n+        }\n+      }\n+      if (!hasError && !job!.wait) {\n+        if (queue.length) {\n+          Vue.nextTick(shift)\n+        }\n+      }\n+    } else if (job && (job.fail || job === end)) {\n+      job() // done\n+    }\n+  }\n+\n+  Vue.nextTick(() => {\n+    if (!queue.length || (!end && !queue[queue.length - 1]!.fail)) {\n+      throw new Error('waitForUpdate chain is missing .then(done)')\n+    }\n+    shift()\n+  })\n+\n+  const chainer = {\n+    then: (nextCb) => {\n+      queue.push(nextCb)\n+      return chainer\n+    },\n+    thenWaitFor: (wait) => {\n+      if (typeof wait === 'number') {\n+        wait = timeout(wait)\n+      }\n+      wait.wait = true\n+      queue.push(wait)\n+      return chainer\n+    },\n+    end: (endFn) => {\n+      queue.push(endFn)\n+      end = endFn\n+    },\n+    promise() {\n+      return new Promise((resolve, rej) => {\n+        end = resolve\n+        reject = rej\n+      })\n+    }\n+  }\n+\n+  return chainer\n+}\n+\n+function timeout(n) {\n+  return (next) => setTimeout(next, n)\n+}\n",
            "-": ""
          }
        ],
        "a/tsconfig.json": [
          {
            "+": "+    \"target\": \"esnext\",\n",
            "-": "-    \"target\": \"es5\",\n"
          },
          {
            "+": "+    \"types\": [\"node\", \"vitest/globals\"],\n",
            "-": "-    \"types\": [\"node\"],\n"
          }
        ],
        "a/vitest.config.ts": [
          {
            "+": "+import { resolve as _resolve } from 'path'\n+import { defineConfig } from 'vitest/config'\n+\n+const resolve = (p: string) => _resolve(__dirname, p)\n+\n+export default defineConfig({\n+  resolve: {\n+    alias: {\n+      compiler: resolve('src/compiler'),\n+      core: resolve('src/core'),\n+      server: resolve('src/server'),\n+      sfc: resolve('src/sfc'),\n+      shared: resolve('src/shared'),\n+      web: resolve('src/platforms/web'),\n+      weex: resolve('src/platforms/weex'),\n+      vue: resolve('src/platforms/web/entry-runtime-with-compiler')\n+    }\n+  },\n+  define: {\n+    __WEEX__: false\n+  },\n+  test: {\n+    globals: true,\n+    environment: 'jsdom',\n+    setupFiles: resolve('test/vitest.setup.ts')\n+  }\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 15,
      "numOfChanges": 110,
      "qualityScore": 26
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "67901e78ef9d31809ea154f359f0512c5a913bf4",
      "url": "https://github.com/vuejs/vue/commit/67901e78ef9d31809ea154f359f0512c5a913bf4",
      "message": "test(ssr): add missing test for async component in slot",
      "author": {
        "name": "Eduardo San Martin Morote",
        "email": "posva13@gmail.com",
        "date": "2021-06-02T12:14:42Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/664177?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-string.spec.js": [
          {
            "+": "+  // #11963, #10391\n+  it('renders async children passed in slots', done => {\n+    const Parent = {\n+      template: `<div><slot name=\"child\"/></div>`\n+    }\n+    const Child = {\n+      template: `<p>child</p>`\n+    }\n+    renderVmWithOptions({\n+      template: `\n+      <Parent>\n+        <template #child>\n+          <Child/>\n+        </template>\n+      </Parent>\n+      `,\n+      components: {\n+        Parent,\n+        Child: () => Promise.resolve(Child)\n+      }\n+    }, result => {\n+      expect(result).toContain(\n+        `<div data-server-rendered=\"true\"><p>child</p></div>`\n+      )\n+      done()\n+    })\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "f036db5dd4ab2ac519efc3d374822543a6b3b621",
      "url": "https://github.com/vuejs/vue/commit/f036db5dd4ab2ac519efc3d374822543a6b3b621",
      "message": "remove custom modules and use the typescript ones",
      "author": {
        "name": "pikax",
        "email": "carlos@hypermob.co.uk",
        "date": "2021-04-07T16:31:25Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/4620458?v=4"
      },
      "diffObj": {
        "a/package.json": [
          {
            "+": "+  },\n+  \"dependencies\": {\n+    \"@types/he\": \"^1.1.1\"\n",
            "-": ""
          }
        ],
        "a/src/compiler/parser/index.ts": [
          {
            "-": "-// const he = require('he')\n",
            "+": ""
          }
        ],
        "a/src/sfc/parser.ts": [
          {
            "-": "-        //@ts-expect-error\n",
            "+": ""
          }
        ],
        "a/typescript/modules.d.ts": [
          {
            "-": "-declare module 'he' {\n-  function escape(html: string): string\n-  function decode(html: string): string\n-}\n-\n-declare module 'source-map' {\n-  class SourceMapGenerator {\n-    setSourceContent(filename: string, content: string): void\n-    addMapping(mapping: Object): void\n-    toString(): string\n-  }\n-  class SourceMapConsumer {\n-    constructor(map: Object)\n-    originalPositionFor(position: {\n-      line: number\n-      column: number\n-    }): {\n-      source: string | null\n-      line: number | null\n-      column: number | null\n-    }\n-  }\n-}\n-\n-declare module 'lru-cache' {\n-  var exports: {\n-    (): any\n-  }\n-}\n-\n",
            "+": ""
          },
          {
            "+": "+}\n",
            "-": "-}\n-\n-declare module 'serialize-javascript' {\n-  var exports: {\n-    (input: string, options: { isJSON: boolean }): string\n-  }\n-}\n-\n-declare module 'lodash.template' {\n-  var exports: {\n-    (input: string, options: { interpolate: RegExp; escape: RegExp }): Function\n-  }\n-}\n"
          }
        ],
        "a/yarn.lock": [
          {
            "+": "+\"@types/he@^1.1.1\":\n+  version \"1.1.1\"\n+  resolved \"https://registry.yarnpkg.com/@types/he/-/he-1.1.1.tgz#19e14033c4ee8f1a702c74dcc6182664839ac2b7\"\n+  integrity sha512-jpzrsR1ns0n3kyWt92QfOUQhIuJGQ9+QGa7M62rO6toe98woQjnsnzjdMtsQXCdvjjmqjS2ZBCC7xKw0cdzU+Q==\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 5,
      "numOfChanges": 6,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "e643e44daf3f0fd26093fe7201260c245c89e69e",
      "url": "https://github.com/vuejs/vue/commit/e643e44daf3f0fd26093fe7201260c245c89e69e",
      "message": "removed jasmine types",
      "author": {
        "name": "pikax",
        "email": "carlos@hypermob.co.uk",
        "date": "2021-04-07T11:21:31Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/4620458?v=4"
      },
      "diffObj": {
        "a/package.json": [
          {
            "-": "-    \"@types/jasmine\": \"^3.6.9\",\n-    \"@types/mocha\": \"^8.2.2\",\n",
            "+": ""
          }
        ],
        "a/tsconfig.json": [
          {
            "+": "+    \"types\": [\"node\"],\n",
            "-": "-    \"types\": [\"node\", \"jasmine\"],\n"
          },
          {
            "+": "+  \"include\": [\"src\", \"test-dts\", \"typescript\", \"types\"],\n",
            "-": "-  \"include\": [\"src\", \"test-dts\", \"typescript\"],\n"
          }
        ],
        "a/yarn.lock": [
          {
            "-": "-\"@types/jasmine@^3.6.9\":\n-  version \"3.6.9\"\n-  resolved \"https://registry.yarnpkg.com/@types/jasmine/-/jasmine-3.6.9.tgz#8785870f87839b7d91b45d7b226380f28dee5d9f\"\n-  integrity sha512-B53NIwMj/AO0O+xfSWLYmKB0Mo6TYxfv2Mk8/c1T2w/e38t55iaPR6p7pHXTTtqfTmevPK3i8T1YweYFTZlxDw==\n-\n",
            "+": ""
          },
          {
            "-": "-\"@types/mocha@^8.2.2\":\n-  version \"8.2.2\"\n-  resolved \"https://registry.yarnpkg.com/@types/mocha/-/mocha-8.2.2.tgz#91daa226eb8c2ff261e6a8cbf8c7304641e095e0\"\n-  integrity sha512-Lwh0lzzqT5Pqh6z61P3c3P5nm6fzQK/MMHl9UKeneAeInVflBSz1O2EkX6gM6xfJd7FBXBY5purtLx7fUiZ7Hw==\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 5,
      "qualityScore": 66
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "0af78c57b3dbe6bf5296f87b7be542a475a26e12",
      "url": "https://github.com/vuejs/vue/commit/0af78c57b3dbe6bf5296f87b7be542a475a26e12",
      "message": "remove @flow",
      "author": {
        "name": "pikax",
        "email": "carlos@hypermob.co.uk",
        "date": "2021-04-06T16:11:58Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/4620458?v=4"
      },
      "diffObj": {
        "a/packages/vue-server-renderer/build.dev.js": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          },
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/packages/vue-template-compiler/browser.js": [
          {
            "+": "+    var emptyObject = Object.freeze({});\n",
            "-": "-  /* @flow */\n-  var emptyObject = Object.freeze({});\n"
          },
          {
            "+": "+    var isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n",
            "-": "-  /* @flow */\n-  var isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n"
          },
          {
            "+": "+    /**\n",
            "-": "-  /* @flow */\n-  /**\n"
          },
          {
            "+": "+    var splitRE = /\\r?\\n/g;\n",
            "-": "-  /* @flow */\n-  var splitRE = /\\r?\\n/g;\n"
          },
          {
            "+": "+    // can we use __proto__?\n",
            "-": "-  /* @flow */\n-  // can we use __proto__?\n"
          },
          {
            "+": "+    var config = {\n",
            "-": "-  /* @flow */\n-  var config = {\n"
          },
          {
            "+": "+    var warn$2 = noop;\n",
            "-": "-  /* @flow */\n-  var warn$2 = noop;\n"
          },
          {
            "+": "+    /**\n",
            "-": "-  /* @flow */\n-  /**\n"
          },
          {
            "+": "+    var callbacks = [];\n",
            "-": "-  /* @flow */\n-  var callbacks = [];\n"
          },
          {
            "+": "+    // these are reserved for web because they are directly compiled away\n",
            "-": "-  /* @flow */\n-  // these are reserved for web because they are directly compiled away\n"
          },
          {
            "+": "+    var isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' +\n",
            "-": "-  /* @flow */\n-  var isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' +\n"
          },
          {
            "+": "+    var validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n",
            "-": "-  /* @flow */\n-  var validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n"
          },
          {
            "+": "+    var defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n",
            "-": "-  /* @flow */\n-  var defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n"
          },
          {
            "+": "+    /* eslint-disable no-unused-vars */\n",
            "-": "-  /* @flow */\n-  /* eslint-disable no-unused-vars */\n"
          },
          {
            "+": "+    function transformNode$1(el, options) {\n",
            "-": "-  /* @flow */\n-  function transformNode$1(el, options) {\n"
          },
          {
            "+": "+    var parseStyleText = cached(function (cssText) {\n",
            "-": "-  /* @flow */\n-  var parseStyleText = cached(function (cssText) {\n"
          },
          {
            "+": "+    function transformNode(el, options) {\n",
            "-": "-  /* @flow */\n-  function transformNode(el, options) {\n"
          },
          {
            "+": "+    /**\n",
            "-": "-  /* @flow */\n-  /**\n"
          },
          {
            "+": "+    var he = require('he');\n",
            "-": "-  /* @flow */\n-  var he = require('he');\n"
          },
          {
            "+": "+    function preTransformNode(el, options) {\n",
            "-": "-  /* @flow */\n-  function preTransformNode(el, options) {\n"
          },
          {
            "+": "+    var warn;\n",
            "-": "-  /* @flow */\n-  var warn;\n"
          },
          {
            "+": "+    function text(el, dir) {\n",
            "-": "-  /* @flow */\n-  function text(el, dir) {\n"
          },
          {
            "+": "+    function html(el, dir) {\n",
            "-": "-  /* @flow */\n-  function html(el, dir) {\n"
          },
          {
            "+": "+    var baseOptions = {\n",
            "-": "-  /* @flow */\n-  var baseOptions = {\n"
          },
          {
            "+": "+    var isStaticKey;\n",
            "-": "-  /* @flow */\n-  var isStaticKey;\n"
          },
          {
            "+": "+    var fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/;\n",
            "-": "-  /* @flow */\n-  var fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/;\n"
          },
          {
            "+": "+    function on(el, dir) {\n",
            "-": "-  /* @flow */\n-  function on(el, dir) {\n"
          },
          {
            "+": "+    function bind(el, dir) {\n",
            "-": "-  /* @flow */\n-  function bind(el, dir) {\n"
          },
          {
            "+": "+    var baseDirectives = {\n",
            "-": "-  /* @flow */\n-  var baseDirectives = {\n"
          },
          {
            "+": "+    var CodegenState = /** @class */ (function () {\n",
            "-": "-  /* @flow */\n-  var CodegenState = /** @class */ (function () {\n"
          },
          {
            "+": "+    // these keywords should not appear inside expressions, but operators like\n",
            "-": "-  /* @flow */\n-  // these keywords should not appear inside expressions, but operators like\n"
          },
          {
            "+": "+    var range = 2;\n",
            "-": "-  /* @flow */\n-  var range = 2;\n"
          },
          {
            "+": "+    function createFunction(code, errors) {\n",
            "-": "-  /* @flow */\n-  function createFunction(code, errors) {\n"
          },
          {
            "+": "+    function createCompilerCreator(baseCompile) {\n",
            "-": "-  /* @flow */\n-  function createCompilerCreator(baseCompile) {\n"
          },
          {
            "+": "+    // `createCompilerCreator` allows creating compilers that use alternative\n",
            "-": "-  /* @flow */\n-  // `createCompilerCreator` allows creating compilers that use alternative\n"
          },
          {
            "+": "+    var _a$1 = createCompiler$1(baseOptions), compile$1 = _a$1.compile, compileToFunctions$1 = _a$1.compileToFunctions;\n",
            "-": "-  /* @flow */\n-  var _a$1 = createCompiler$1(baseOptions), compile$1 = _a$1.compile, compileToFunctions$1 = _a$1.compileToFunctions;\n"
          },
          {
            "+": "+    var isAttr = makeMap('accept,accept-charset,accesskey,action,align,alt,async,autocomplete,' +\n",
            "-": "-  /* @flow */\n-  var isAttr = makeMap('accept,accept-charset,accesskey,action,align,alt,async,autocomplete,' +\n"
          },
          {
            "+": "+    var plainStringRE = /^\"(?:[^\"\\\\]|\\\\.)*\"$|^'(?:[^'\\\\]|\\\\.)*'$/;\n",
            "-": "-  /* @flow */\n-  var plainStringRE = /^\"(?:[^\"\\\\]|\\\\.)*\"$|^'(?:[^'\\\\]|\\\\.)*'$/;\n"
          },
          {
            "+": "+    // optimizability constants\n",
            "-": "-  /* @flow */\n-  // optimizability constants\n"
          },
          {
            "+": "+    // segment types\n",
            "-": "-  /* @flow */\n-  // segment types\n"
          },
          {
            "+": "+    var createCompiler = createCompilerCreator(function baseCompile(template, options) {\n",
            "-": "-  /* @flow */\n-  var createCompiler = createCompilerCreator(function baseCompile(template, options) {\n"
          },
          {
            "+": "+    var _a = createCompiler(baseOptions), compile = _a.compile, compileToFunctions = _a.compileToFunctions;\n",
            "-": "-  /* @flow */\n-  var _a = createCompiler(baseOptions), compile = _a.compile, compileToFunctions = _a.compileToFunctions;\n"
          }
        ],
        "a/scripts/config.js": [
          {
            "+": "+// const babel = require('@rollup/plugin-babel').babel\n",
            "-": "-const babel = require('@rollup/plugin-babel').babel\n"
          }
        ],
        "a/src/compiler/codeframe.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/codegen/events.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/codegen/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/create-compiler.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/directives/bind.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/directives/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/directives/model.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/directives/on.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/error-detector.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/helpers.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/optimizer.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/parser/entity-decoder.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/parser/filter-parser.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/parser/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/parser/text-parser.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/compiler/to-function.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/config.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/global-api/assets.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/global-api/extend.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/global-api/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/global-api/mixin.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/global-api/use.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/events.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/init.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/inject.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/lifecycle.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/render-helpers/bind-dynamic-keys.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/render-helpers/bind-object-listeners.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/render-helpers/bind-object-props.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/render-helpers/check-keycodes.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/render-helpers/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/render-helpers/resolve-slots.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/render.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/instance/state.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/observer/scheduler.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/observer/traverse.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/observer/watcher.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/util/debug.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/util/env.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/util/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/util/lang.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/util/next-tick.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/util/options.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/util/props.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/create-component.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/create-element.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/create-functional-component.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/helpers/extract-props.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/helpers/get-first-component-child.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/helpers/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/helpers/is-async-placeholder.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/helpers/merge-hook.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/helpers/normalize-children.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/helpers/normalize-scoped-slots.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/helpers/resolve-async-component.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/modules/directives.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/modules/ref.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/compiler/directives/html.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/compiler/directives/model.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/compiler/directives/text.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/compiler/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/compiler/modules/class.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/compiler/modules/model.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/compiler/modules/style.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/compiler/options.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/compiler/util.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/entry-compiler.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/entry-runtime-with-compiler.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/entry-runtime.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/entry-server-basic-renderer.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/entry-server-renderer.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/class-util.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/components/transition.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/directives/show.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/modules/attrs.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/modules/class.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/modules/dom-props.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/modules/events.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/modules/style.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/modules/transition.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/node-ops.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/patch.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/server/compiler.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/server/directives/model.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/server/directives/show.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/server/modules/attrs.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/server/modules/class.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/server/modules/dom-props.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/server/modules/style.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/server/util.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/util/attrs.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/util/class.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/util/compat.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/util/element.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/util/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/util/style.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/directives/model.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/append.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/class.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/props.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/recycle-list/component-root.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/recycle-list/component.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/recycle-list/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/recycle-list/recycle-list.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/recycle-list/text.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/recycle-list/v-bind.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/recycle-list/v-for.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/recycle-list/v-if.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/recycle-list/v-on.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/recycle-list/v-once.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/compiler/modules/style.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/entry-framework.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/runtime/components/richtext.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/runtime/modules/attrs.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/runtime/modules/class.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/runtime/modules/events.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/runtime/modules/style.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/runtime/node-ops.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/runtime/patch.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/runtime/recycle-list/render-component-template.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/runtime/recycle-list/virtual-component.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/util/element.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/util/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/platforms/weex/util/parser.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/bundle-renderer/create-bundle-renderer.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/bundle-renderer/source-map-support.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/create-basic-renderer.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/create-renderer.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/optimizing-compiler/codegen.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/optimizing-compiler/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/optimizing-compiler/modules.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/optimizing-compiler/optimizer.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/optimizing-compiler/runtime-helpers.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/render-context.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/render-stream.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/render.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/template-renderer/create-async-file-mapper.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/template-renderer/index.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/template-renderer/parse-template.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/template-renderer/template-stream.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/util.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/server/write.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/sfc/parser.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ],
        "a/src/shared/util.ts": [
          {
            "-": "-/* @flow */\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 149,
      "numOfChanges": 268,
      "qualityScore": 98
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "b51430f598b354ed60851bb62885539bd25de3d8",
      "url": "https://github.com/vuejs/vue/commit/b51430f598b354ed60851bb62885539bd25de3d8",
      "message": "doc(contributing): add missing donation link (#11692)",
      "author": {
        "name": "Manny Quizhpi",
        "email": "mquizhpidev@gmail.com",
        "date": "2020-10-02T07:07:03Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/20647343?v=4"
      },
      "diffObj": {
        "a/.github/CONTRIBUTING.md": [
          {
            "+": "+- [One-time donation via PayPal or crypto-currencies](https://vuejs.org/support-vuejs/#One-time-Donations)\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "468c323af1f7e296886d5df1a05d3793f60f9e8f",
      "url": "https://github.com/vuejs/vue/commit/468c323af1f7e296886d5df1a05d3793f60f9e8f",
      "message": "docs: fix typo (#11050)",
      "author": {
        "name": "Alan",
        "email": "alanmatw@gmail.com",
        "date": "2020-01-26T14:08:17Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/59830948?v=4"
      },
      "diffObj": {
        "a/dist/README.md": [
          {
            "+": "+- **Full**: builds that contain both the compiler and the runtime.\n",
            "-": "-- **Full**: builds that contains both the compiler and the runtime.\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "5bbb077cd9d79eabab0002c459d373d75e532ef0",
      "url": "https://github.com/vuejs/vue/commit/5bbb077cd9d79eabab0002c459d373d75e532ef0",
      "message": "docs: fix link to point to ModuleOptions lines (#10531)",
      "author": {
        "name": "Tommy Lebel",
        "email": "tommy@tomicio.com",
        "date": "2019-09-19T07:52:32Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/1448836?v=4"
      },
      "diffObj": {
        "a/packages/vue-template-compiler/README.md": [
          {
            "+": "+  An array of compiler modules. For details on compiler modules, refer to the `ModuleOptions` type in [flow declarations](https://github.com/vuejs/vue/blob/dev/flow/compiler.js#L47-L59) and the [built-in modules](https://github.com/vuejs/vue/tree/dev/src/platforms/web/compiler/modules).\n",
            "-": "-  An array of compiler modules. For details on compiler modules, refer to the `ModuleOptions` type in [flow declarations](https://github.com/vuejs/vue/blob/dev/flow/compiler.js#L38-L45) and the [built-in modules](https://github.com/vuejs/vue/tree/dev/src/platforms/web/compiler/modules).\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "bd6cea0973247e2a8e1d4a2250614c0bf44f0b26",
      "url": "https://github.com/vuejs/vue/commit/bd6cea0973247e2a8e1d4a2250614c0bf44f0b26",
      "message": "test: fix running e2e test on windows (#9909)",
      "author": {
        "name": "zrh122",
        "email": "46116414+zrh122@users.noreply.github.com",
        "date": "2019-04-25T02:35:16Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/46116414?v=4"
      },
      "diffObj": {
        "a/test/e2e/nightwatch.config.js": [
          {
            "+": "+        'acceptSslCerts': true,\n+        'phantomjs.binary.path': require('phantomjs-prebuilt').path\n",
            "-": "-        'acceptSslCerts': true\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "ea113d261835d14b7fb7a14896972efc3c8a75b9",
      "url": "https://github.com/vuejs/vue/commit/ea113d261835d14b7fb7a14896972efc3c8a75b9",
      "message": "test: separate failing test for TS 3.4",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2019-04-25T02:13:32Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/types/test/options-test.ts": [
          {
            "-": "-    mixed: [RegExp, Array],\n-    object: [Cat, User],\n-    primitive: [String, Number],\n-    regex: RegExp,\n",
            "+": ""
          },
          {
            "-": "-    this.mixed;\n-    this.object;\n-    this.primitive;\n-    this.regex.compile;\n",
            "+": ""
          },
          {
            "+": "+// stopped working since TS 3.4\n+// Vue.component('union-prop-with-no-casting', {\n+//   props: {\n+//     mixed: [RegExp, Array],\n+//     object: [Cat, User],\n+//     primitive: [String, Number],\n+//     regex: RegExp\n+//   },\n+//   data() {\n+//     this.mixed;\n+//     this.object;\n+//     this.primitive;\n+//     this.regex.compile;\n+//   }\n+// })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "91b8cda0b28d6774d7319d646c999e04d948a8cd",
      "url": "https://github.com/vuejs/vue/commit/91b8cda0b28d6774d7319d646c999e04d948a8cd",
      "message": "docs(contributing): fix a grammar error (#9858)",
      "author": {
        "name": "Billy Zou",
        "email": "yz3352@nyu.edu",
        "date": "2019-04-10T15:45:47Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/23213763?v=4"
      },
      "diffObj": {
        "a/.github/CONTRIBUTING.md": [
          {
            "+": "+# run the full test suite, including linting/type checking\n",
            "-": "-# run the full test suite, include linting/type checking\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "546e7d14adddad643f0065ba91c95d69cbbb020e",
      "url": "https://github.com/vuejs/vue/commit/546e7d14adddad643f0065ba91c95d69cbbb020e",
      "message": "docs(contributing): add yarn requirement to guide (#9848)",
      "author": {
        "name": "Billy Zou",
        "email": "yz3352@nyu.edu",
        "date": "2019-04-08T18:06:47Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/23213763?v=4"
      },
      "diffObj": {
        "a/.github/CONTRIBUTING.md": [
          {
            "+": "+You will need [Node.js](http://nodejs.org) **version 8+**, [Java Runtime Environment](http://www.oracle.com/technetwork/java/javase/downloads/index.html) (for running Selenium server during e2e tests) and [yarn](https://yarnpkg.com/en/docs/install).\n",
            "-": "-You will need [Node.js](http://nodejs.org) **version 8+** and [Java Runtime Environment](http://www.oracle.com/technetwork/java/javase/downloads/index.html) (for running Selenium server during e2e tests).\n"
          },
          {
            "+": "+$ yarn # install the dependencies of the project\n",
            "-": "-$ yarn # it install the dependencies of the project\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "a8184917a26215629d6194c079c953dff4caacf5",
      "url": "https://github.com/vuejs/vue/commit/a8184917a26215629d6194c079c953dff4caacf5",
      "message": "docs(contributing): replace npm install with yarn\n\nRelated to #9831",
      "author": {
        "name": "Eduardo San Martin Morote",
        "email": "posva@users.noreply.github.com",
        "date": "2019-04-05T20:18:50Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/664177?v=4"
      },
      "diffObj": {
        "a/.github/CONTRIBUTING.md": [
          {
            "+": "+You will need [Node.js](http://nodejs.org) **version 8+** and [Java Runtime Environment](http://www.oracle.com/technetwork/java/javase/downloads/index.html) (for running Selenium server during e2e tests).\n",
            "-": "-You will need [Node.js](http://nodejs.org) **version 6+** and [Java Runtime Environment](http://www.oracle.com/technetwork/java/javase/downloads/index.html) (for running Selenium server during e2e tests).\n"
          },
          {
            "+": "+$ yarn # it install the dependencies of the project\n",
            "-": "-$ npm install # or yarn\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "2747a657654d1006bf7061faec1b3029fb9b4432",
      "url": "https://github.com/vuejs/vue/commit/2747a657654d1006bf7061faec1b3029fb9b4432",
      "message": "test: remove unused code (#9684)",
      "author": {
        "name": "Decade",
        "email": "decadef20@users.noreply.github.com",
        "date": "2019-03-13T02:19:19Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/7866718?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/observer/observer.spec.js": [
          {
            "-": "-    // mock a watcher!\n-    const watcher = {\n-      deps: [],\n-      addDep: function (dep) {\n-        this.deps.push(dep)\n-        dep.addSub(this)\n-      },\n-      update: jasmine.createSpy()\n-    }\n-    // collect dep\n-    Dep.target = watcher\n",
            "+": ""
          },
          {
            "-": "-    Dep.target = null\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "6ad99796c747987142c21b45c9361cca60e54e68",
      "url": "https://github.com/vuejs/vue/commit/6ad99796c747987142c21b45c9361cca60e54e68",
      "message": "docs: fix spelling and grammatical errors (#9619)",
      "author": {
        "name": "Jagannath Bhat",
        "email": "jagannathbhatjb@gmail.com",
        "date": "2019-03-04T16:53:59Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/29631578?v=4"
      },
      "diffObj": {
        "a/.github/CODE_OF_CONDUCT.md": [
          {
            "+": "+We are committed to making participation in this project a harassment-free experience for everyone, regardless of the level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, age, or religion.\n",
            "-": "-We are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, age, or religion.\n"
          }
        ],
        "a/.github/COMMIT_CONVENTION.md": [
          {
            "+": "+If the commit reverts a previous commit, it should begin with `revert: `, followed by the header of the reverted commit. In the body, it should say: `This reverts commit <hash>.`, where the hash is the SHA of the commit being reverted.\n",
            "-": "-If the commit reverts a previous commit, it should begin with `revert: `, followed by the header of the reverted commit. In the body it should say: `This reverts commit <hash>.`, where the hash is the SHA of the commit being reverted.\n"
          },
          {
            "+": "+If the prefix is `feat`, `fix` or `perf`, it will appear in the changelog. However, if there is any [BREAKING CHANGE](#footer), the commit will always appear in the changelog.\n",
            "-": "-If the prefix is `feat`, `fix` or `perf`, it will appear in the changelog. However if there is any [BREAKING CHANGE](#footer), the commit will always appear in the changelog.\n"
          },
          {
            "+": "+The scope could be anything specifying the place of the commit change. For example `core`, `compiler`, `ssr`, `v-model`, `transition` etc...\n",
            "-": "-The scope could be anything specifying place of the commit change. For example `core`, `compiler`, `ssr`, `v-model`, `transition` etc...\n"
          },
          {
            "+": "+The subject contains a succinct description of the change:\n",
            "-": "-The subject contains succinct description of the change:\n"
          },
          {
            "+": "+* don't capitalize the first letter\n",
            "-": "-* don't capitalize first letter\n"
          }
        ],
        "a/.github/CONTRIBUTING.md": [
          {
            "+": "+- If adding a new feature:\n",
            "-": "-- If adding new feature:\n"
          },
          {
            "+": "+  - Provide a convincing reason to add this feature. Ideally, you should open a suggestion issue first and have it approved before working on it.\n",
            "-": "-  - Provide convincing reason to add this feature. Ideally, you should open a suggestion issue first and have it approved before working on it.\n"
          },
          {
            "+": "+  - Provide a detailed description of the bug in the PR. Live demo preferred.\n",
            "-": "-  - Provide detailed description of the bug in the PR. Live demo preferred.\n"
          },
          {
            "+": "+# run the full test suite, include linting/type checking\n",
            "-": "-# run the full test suite, include linting / type checking\n"
          },
          {
            "+": "+    The Vue 2.0 core is platform-agnostic. That is, the code inside `core` is able to be run in any JavaScript environment, be it the browser, Node.js, or an embedded JavaScript runtime in native applications.\n",
            "-": "-    The Vue 2.0 core is platform-agnostic. That is, code inside `core` is able to be run in any JavaScript environment, be it the browser, Node.js, or an embedded JavaScript runtime in native applications.\n"
          }
        ],
        "a/benchmarks/ssr/README.md": [
          {
            "+": "+To view the results follow the run section. Note that the overall completion time for the results is variable, this is due to other system related variants at run time (available memory, processing power, etc). In ideal circumstances, both should finish within similar results.\n",
            "-": "-To view the results follow the run section. Note that the overall completion time for the results are variable, this is due to other system related variants at run time (available memory, processing power, etc). In ideal circumstances both should finish within similar results.\n"
          }
        ],
        "a/benchmarks/uptime/index.html": [
          {
            "+": "+      // functional components are perfect for small, presentational components\n",
            "-": "-      // functional components are prefect for small, presentational components\n"
          }
        ],
        "a/dist/README.md": [
          {
            "+": "+When using `vue-loader` or `vueify`, templates inside `*.vue` files are compiled into JavaScript at build time. You don't really need the compiler in the final bundle, and can therefore, use the runtime-only build.\n",
            "-": "-When using `vue-loader` or `vueify`, templates inside `*.vue` files are compiled into JavaScript at build time. You don't really need the compiler in the final bundle, and can therefore use the runtime-only build.\n"
          }
        ],
        "a/packages/vue-template-compiler/README.md": [
          {
            "+": "+  Set this to true will cause the `errors` returned in the compiled result become objects in the form of `{ msg, start, end }`. The `start` and `end` properties are numbers that mark the code range of the error source in the template. This can be passed on to the `compiler.generateCodeFrame` API to generate a code frame for the error.\n",
            "-": "-  Set this to true will cause the `errors` returned in the compiled result become objects in the form of `{ msg, start, end }`. The `start` and `end` properties are numbers that mark the code range of the error source in the template. This can be passed on to the `compiler.generateCodeFrame` API to generate code frame for the error.\n"
          },
          {
            "+": "+  - Consecutive whitespaces inside a non-whitespace-only text node are condensed into a single space.\n",
            "-": "-  - Consecutive whitespaces inside a non-whitespace-only text node is condensed into a single space.\n"
          }
        ]
      },
      "numOfFiles": 7,
      "numOfChanges": 16,
      "qualityScore": 85
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "372d71cbfe717186e12d1fffc1cb3fe570dd943c",
      "url": "https://github.com/vuejs/vue/commit/372d71cbfe717186e12d1fffc1cb3fe570dd943c",
      "message": "docs: clarify docs about using template compiler (#9508)\n\nThis commit is for https://github.com/vuejs/vue-loader/issues/1494",
      "author": {
        "name": "ULIVZ",
        "email": "472590061@qq.com",
        "date": "2019-03-01T15:00:01Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/23133919?v=4"
      },
      "diffObj": {
        "a/packages/vue-template-compiler/README.md": [
          {
            "+": "+This package can be used to pre-compile Vue 2.0 templates into render functions to avoid runtime-compilation overhead and CSP restrictions. In most cases you should be using it with [`vue-loader`](https://github.com/vuejs/vue-loader), you will only need it separately if you are writing build tools with very specific needs.\n",
            "-": "-This package can be used to pre-compile Vue 2.0 templates into render functions to avoid runtime-compilation overhead and CSP restrictions. You will only need it if you are writing build tools with very specific needs. In most cases you should be using [`vue-loader`](https://github.com/vuejs/vue-loader) or [`vueify`](https://github.com/vuejs/vueify) instead, both of which use this package internally.\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "1574ade607499bf4e3cf270c69249893e29eb259",
      "url": "https://github.com/vuejs/vue/commit/1574ade607499bf4e3cf270c69249893e29eb259",
      "message": "test: Add a unit test for \"$off event and this event added by $once\" (#9550)",
      "author": {
        "name": "Luxiaosong",
        "email": "2878354193@qq.com",
        "date": "2019-02-28T22:54:51Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/18702209?v=4"
      },
      "diffObj": {
        "a/test/unit/features/instance/methods-events.spec.js": [
          {
            "+": "+  it('$off event added by $once', () => {\n+    vm.$once('test', spy)\n+    vm.$off('test', spy) // test off event and this event added by once\n+    vm.$emit('test', 1, 2, 3)\n+    expect(spy).not.toHaveBeenCalled()\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "38825ff6754d61a350d8892462cecaa3eceb93c6",
      "url": "https://github.com/vuejs/vue/commit/38825ff6754d61a350d8892462cecaa3eceb93c6",
      "message": "test: add a test case for ssr max stack size limit",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2019-02-28T22:52:20Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-string.spec.js": [
          {
            "+": "+\n+  it('handling max stack size limit', done => {\n+    const vueInstance = new Vue({\n+      template: `<div class=\"root\">\n+        <child v-for=\"(x, i) in items\" :key=\"i\"></child>\n+      </div>`,\n+      components: {\n+        child: {\n+          template: '<div class=\"child\"><span class=\"child\">hi</span></div>'\n+        }\n+      },\n+      data: {\n+        items: Array(1000).fill(0)\n+      }\n+    })\n+\n+    renderToString(vueInstance, err => done(err))\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "8cb2069aa44f833259781f135c7b6cf9e21e15c8",
      "url": "https://github.com/vuejs/vue/commit/8cb2069aa44f833259781f135c7b6cf9e21e15c8",
      "message": "test: fix tests in IE/Edge",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2019-01-24T15:05:39Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/component/component-scoped-slot.spec.js": [
          {
            "+": "+      template: `<foo>before <div slot=\"bar\" slot-scope=\"scope\">{{ scope.msg }}</div> after</foo>`,\n",
            "-": "-      template: `<foo>before <div slot=\"bar\" slot-scope=\"{ msg }\">{{ msg }}</div> after</foo>`,\n"
          }
        ],
        "a/test/unit/features/instance/properties.spec.js": [
          {
            "+": "+      template: `<foo ref=\"foo\" />`,\n",
            "-": "-      template: `<foo/>`,\n"
          },
          {
            "+": "+          template: `<div>foo</div>`\n",
            "-": "-          template: `<div>{{ this.foo }}</div>`\n"
          },
          {
            "+": "+    expect(vm.$refs.foo.$attrs).toBeDefined()\n",
            "-": "-    expect(vm.$attrs).toBeDefined()\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 4,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "df064cedd11d43173b550762ae850c507638db76",
      "url": "https://github.com/vuejs/vue/commit/df064cedd11d43173b550762ae850c507638db76",
      "message": "test: tests for ssr template function (#9324)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2019-01-18T16:25:37Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-template.spec.js": [
          {
            "+": "+  it('renderToString w/ template function', done => {\n+    const renderer = createRenderer({\n+      template: (content, context) => `<html><head>${context.head}</head>${content}</html>`\n+    })\n+\n+    const context = {\n+      head: '<meta name=\"viewport\" content=\"width=device-width\">'\n+    }\n+\n+    renderer.renderToString(new Vue({\n+      template: '<div>hi</div>'\n+    }), context, (err, res) => {\n+      expect(err).toBeNull()\n+      expect(res).toContain(`<html><head>${context.head}</head><div data-server-rendered=\"true\">hi</div></html>`)\n+      done()\n+    })\n+  })\n+\n+  it('renderToString w/ template function returning Promise', done => {\n+    const renderer = createRenderer({\n+      template: (content, context) => new Promise((resolve) => {\n+        setTimeout(() => {\n+          resolve(`<html><head>${context.head}</head>${content}</html>`)\n+        }, 0)\n+      })\n+    })\n+\n+    const context = {\n+      head: '<meta name=\"viewport\" content=\"width=device-width\">'\n+    }\n+\n+    renderer.renderToString(new Vue({\n+      template: '<div>hi</div>'\n+    }), context, (err, res) => {\n+      expect(err).toBeNull()\n+      expect(res).toContain(`<html><head>${context.head}</head><div data-server-rendered=\"true\">hi</div></html>`)\n+      done()\n+    })\n+  })\n+\n+  it('renderToString w/ template function returning Promise w/ rejection', done => {\n+    const renderer = createRenderer({\n+      template: () => new Promise((resolve, reject) => {\n+        setTimeout(() => {\n+          reject(new Error(`foo`))\n+        }, 0)\n+      })\n+    })\n+\n+    const context = {\n+      head: '<meta name=\"viewport\" content=\"width=device-width\">'\n+    }\n+\n+    renderer.renderToString(new Vue({\n+      template: '<div>hi</div>'\n+    }), context, (err, res) => {\n+      expect(err.message).toBe(`foo`)\n+      expect(res).toBeUndefined()\n+      done()\n+    })\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "d855027741d4f602cc9f507c18ede75c3e7ce84a",
      "url": "https://github.com/vuejs/vue/commit/d855027741d4f602cc9f507c18ede75c3e7ce84a",
      "message": "test: more test cases for $slot usage detection",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2019-01-10T16:18:06Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/parser/index.js": [
          {
            "+": "+const $slotRE = /(^|[^\\w_$])\\$slot($|[^\\w_$])/\n",
            "-": "-const $slotRE = /\\$slot/\n"
          }
        ],
        "a/test/unit/features/component/component-scoped-slot.spec.js": [
          {
            "+": "+    // testing $slot detection: bracket access, using $slot alone, passing as arguments...\n+    it('should work for alternative $slot usage', () => {\n+      const vm = new Vue({\n+        template: `<foo>{{ $slot['foo'] }}<div slot=\"foo\">{{ $slot }}</div><div>{{ pick($slot) }}</div></foo>`,\n+        methods: { pick: s => s.foo },\n+        components: { foo: { template: `<div><slot foo=\"default\"/><slot name=\"foo\"/></div>` }}\n+      }).$mount()\n+      expect(vm.$el.innerHTML).toBe(`default<div>default</div><div>{}</div>`)\n+    })\n+\n+    // should not consider detection if $slot is inside longer valid identifier\n",
            "-": ""
          },
          {
            "+": "+        data: { some$slot: 123 },\n+        template: `<foo>{{ some$slot }}<div slot=\"foo\">{{ $slots }}</div></foo>`,\n+        components: {\n+          foo: {\n+            render(h) {\n+              // should be compiled as normal slots\n+              expect(this.$slots.default).toBeTruthy()\n+              expect(this.$slots.foo).toBeTruthy()\n+              return h('div', [this.$slots.default, this.$slots.foo])\n+            }\n+          }\n+        }\n+      }).$mount()\n+      expect(vm.$el.innerHTML).toBe(`123<div>{}</div>`)\n",
            "-": "-        template: ``\n-      })\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 3,
      "qualityScore": 50
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "1e5174d21399eec115ae1b1930f218853311558d",
      "url": "https://github.com/vuejs/vue/commit/1e5174d21399eec115ae1b1930f218853311558d",
      "message": "test: add more test case for watch option",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2019-01-10T15:33:02Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/util/lang.js": [
          {
            "+": "+const bailRE = new RegExp(`[^${unicodeLetters}.$_\\\\d]`)\n",
            "-": "-const bailRE = new RegExp(`[^${unicodeLetters}.$_]`)\n"
          }
        ],
        "a/test/unit/features/component/component-scoped-slot.spec.js": [
          {
            "+": "+\n+    it('should not break when template expression uses $slots', () => {\n+      const vm = new Vue({\n+        template: ``\n+      })\n+    })\n",
            "-": ""
          }
        ],
        "a/test/unit/features/options/watch.spec.js": [
          {
            "+": "+import { finished } from 'stream';\n",
            "-": ""
          },
          {
            "+": "+\n+  it('should support watching unicode paths', done => {\n+    const vm = new Vue({\n+      data: {\n+        数据: 1\n+      },\n+      watch: {\n+        数据: spy\n+      }\n+    })\n+    expect(spy).not.toHaveBeenCalled()\n+    vm['数据'] = 2\n+    expect(spy).not.toHaveBeenCalled()\n+    waitForUpdate(() => {\n+      expect(spy).toHaveBeenCalledWith(2, 1)\n+    }).then(done)\n+  })\n+\n+  it('should not warn proper usage', () => {\n+    const vm = new Vue({\n+      data: {\n+        foo: { _bar: 1 }, // element has such watchers...\n+        prop1: 123\n+      },\n+      watch: {\n+        'foo._bar': () => {},\n+        prop1 () {}\n+      }\n+    })\n+    expect(`Failed watching path`).not.toHaveBeenWarned()\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 4,
      "qualityScore": 66
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "d278da20a008a61ed8d5ec9d92524eb5dc9630cf",
      "url": "https://github.com/vuejs/vue/commit/d278da20a008a61ed8d5ec9d92524eb5dc9630cf",
      "message": "test: fix LRU upgrade",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2019-01-07T17:15:15Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-bundle-render.spec.js": [
          {
            "+": "+    const cache = new LRU({ maxAge: Infinity })\n",
            "-": "-    const cache = LRU({ maxAge: Infinity })\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "d747469e1ae26190d364e5cc9c8112d3d865a0b9",
      "url": "https://github.com/vuejs/vue/commit/d747469e1ae26190d364e5cc9c8112d3d865a0b9",
      "message": "test: test case for v-for native collection support",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2018-12-26T21:02:50Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/directives/for.spec.js": [
          {
            "+": "+    it('should render native iterables (Map)', () => {\n+      const vm = new Vue({\n+        template: `<div><span v-for=\"[key, val] in list\">{{key}},{{val}}</span></div>`,\n+        data: {\n+          list: new Map([[1, 'foo'], [2, 'bar']])\n+        }\n+      }).$mount()\n+      expect(vm.$el.innerHTML).toBe(`<span>1,foo</span><span>2,bar</span>`)\n+    })\n+\n+    it('should render native iterables (Set)', () => {\n+      const vm = new Vue({\n+        template: `<div><span v-for=\"val in list\">{{val}}</span></div>`,\n+        data: {\n+          list: new Set([1, 2, 3])\n+        }\n+      }).$mount()\n+      expect(vm.$el.innerHTML).toBe(`<span>1</span><span>2</span><span>3</span>`)\n+    })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "1c105fb16c1b2395790740efce10b137f2f36c19",
      "url": "https://github.com/vuejs/vue/commit/1c105fb16c1b2395790740efce10b137f2f36c19",
      "message": "test: fix test case for #8297",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2018-12-21T19:29:57Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/directives/bind.spec.js": [
          {
            "+": "+      template: `<test ref=\"test\" :foo-bar.sync=\"bar\"/>`,\n",
            "-": "-      template: `<test :foo-bar.sync=\"bar\"/>`,\n"
          },
          {
            "+": "+          template: `<div>{{ fooBar }}</div>`,\n+          methods: {\n+            update () {\n+              this.$emit('update:foo-bar', 2)\n+            }\n+          }\n",
            "-": "-          template: `<div @click=\"$emit('update:foo-bar', 2)\">{{ fooBar }}</div>`\n"
          },
          {
            "+": "+    vm.$refs.test.update()\n",
            "-": "-    triggerEvent(vm.$el, 'click')\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "7ebabe2392d3376a97492209e2895122e5a54bd2",
      "url": "https://github.com/vuejs/vue/commit/7ebabe2392d3376a97492209e2895122e5a54bd2",
      "message": "test: test for #8790",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2018-12-20T20:54:35Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/fixtures/cache-opt-out.js": [
          {
            "+": "+import Vue from '../../../dist/vue.runtime.common.js'\n+\n+const app = {\n+  name: 'app',\n+  props: ['id'],\n+  serverCacheKey: props => props.id === 1 ? false : props.id,\n+  render (h) {\n+    return h('div', '/test')\n+  }\n+}\n+\n+export default () => {\n+  return Promise.resolve(new Vue({\n+    render: h => h(app, { props: { id: 1 }})\n+  }))\n+}\n",
            "-": ""
          }
        ],
        "a/test/ssr/ssr-bundle-render.spec.js": [
          {
            "+": "+  it('render with cache (opt-out)', done => {\n+    const cache = {}\n+    const get = jasmine.createSpy('get')\n+    const set = jasmine.createSpy('set')\n+    const options = {\n+      runInNewContext,\n+      cache: {\n+        // async\n+        get: (key, cb) => {\n+          setTimeout(() => {\n+            get(key)\n+            cb(cache[key])\n+          }, 0)\n+        },\n+        set: (key, val) => {\n+          set(key, val)\n+          cache[key] = val\n+        }\n+      }\n+    }\n+    createRenderer('cache-opt-out.js', options, renderer => {\n+      const expected = '<div data-server-rendered=\"true\">/test</div>'\n+      renderer.renderToString((err, res) => {\n+        expect(err).toBeNull()\n+        expect(res).toBe(expected)\n+        expect(get).not.toHaveBeenCalled()\n+        expect(set).not.toHaveBeenCalled()\n+        renderer.renderToString((err, res) => {\n+          expect(err).toBeNull()\n+          expect(res).toBe(expected)\n+          expect(get).not.toHaveBeenCalled()\n+          expect(set).not.toHaveBeenCalled()\n+          done()\n+        })\n+      })\n+    })\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 50
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "4e975485a4d90fef62bf73a32a2b72e249919130",
      "url": "https://github.com/vuejs/vue/commit/4e975485a4d90fef62bf73a32a2b72e249919130",
      "message": "test: use mocks for commits e2e test",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2018-12-11T22:44:25Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/examples/commits/app.js": [
          {
            "+": "+/* global Vue */\n+\n",
            "-": ""
          },
          {
            "+": "+new Vue({\n",
            "-": "-var demo = new Vue({\n"
          },
          {
            "-": "-      var xhr = new XMLHttpRequest()\n",
            "+": ""
          },
          {
            "+": "+      if (navigator.userAgent.indexOf('PhantomJS') > -1) {\n+        // use mocks in e2e to avoid dependency on network / authentication\n+        setTimeout(function () {\n+          self.commits = window.MOCKS[self.currentBranch]\n+        }, 0)\n+      } else {\n+        var xhr = new XMLHttpRequest()\n+        xhr.open('GET', apiURL + self.currentBranch)\n+        xhr.onload = function () {\n+          self.commits = JSON.parse(xhr.responseText)\n+          console.log(self.commits[0].html_url)\n+        }\n+        xhr.send()\n",
            "-": "-      xhr.open('GET', apiURL + self.currentBranch)\n-      xhr.onload = function () {\n-        self.commits = JSON.parse(xhr.responseText)\n-        console.log(self.commits[0].html_url)\n"
          },
          {
            "-": "-      xhr.send()\n",
            "+": ""
          }
        ],
        "a/examples/commits/index.html": [
          {
            "+": "+    <script src=\"mock.js\"></script>\n",
            "-": ""
          }
        ],
        "a/examples/commits/mock.js": [
          {
            "+": "+window.MOCKS = {\n+  master: [\n+    {\n+      sha: \"0948d999f2fddf9f90991956493f976273c5da1f\",\n+      node_id:\n+        \"MDY6Q29tbWl0MTE3MzAzNDI6MDk0OGQ5OTlmMmZkZGY5ZjkwOTkxOTU2NDkzZjk3NjI3M2M1ZGExZg==\",\n+      commit: {\n+        author: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2017-10-13T03:07:14Z\"\n+        },\n+        committer: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2017-10-13T03:07:14Z\"\n+        },\n+        message: \"build: release 2.5.0\",\n+        tree: {\n+          sha: \"7846816b875eb664ddf718fad04a720efeac72d0\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/git/trees/7846816b875eb664ddf718fad04a720efeac72d0\"\n+        },\n+        url:\n+          \"https://api.github.com/repos/vuejs/vue/git/commits/0948d999f2fddf9f90991956493f976273c5da1f\",\n+        comment_count: 0,\n+        verification: {\n+          verified: false,\n+          reason: \"unsigned\",\n+          signature: null,\n+          payload: null\n+        }\n+      },\n+      url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/0948d999f2fddf9f90991956493f976273c5da1f\",\n+      html_url:\n+        \"https://github.com/vuejs/vue/commit/0948d999f2fddf9f90991956493f976273c5da1f\",\n+      comments_url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/0948d999f2fddf9f90991956493f976273c5da1f/comments\",\n+      author: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      committer: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      parents: [\n+        {\n+          sha: \"bc2918f0e596d0e133a25606cbb66075402ce6c3\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/commits/bc2918f0e596d0e133a25606cbb66075402ce6c3\",\n+          html_url:\n+            \"https://github.com/vuejs/vue/commit/bc2918f0e596d0e133a25606cbb66075402ce6c3\"\n+        }\n+      ]\n+    },\n+    {\n+      sha: \"bc2918f0e596d0e133a25606cbb66075402ce6c3\",\n+      node_id:\n+        \"MDY6Q29tbWl0MTE3MzAzNDI6YmMyOTE4ZjBlNTk2ZDBlMTMzYTI1NjA2Y2JiNjYwNzU0MDJjZTZjMw==\",\n+      commit: {\n+        author: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2017-10-13T03:04:35Z\"\n+        },\n+        committer: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2017-10-13T03:04:35Z\"\n+        },\n+        message: \"build: build 2.5.0\",\n+        tree: {\n+          sha: \"5c57af855d76df68ec0782a2d2f4cd0a54e80125\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/git/trees/5c57af855d76df68ec0782a2d2f4cd0a54e80125\"\n+        },\n+        url:\n+          \"https://api.github.com/repos/vuejs/vue/git/commits/bc2918f0e596d0e133a25606cbb66075402ce6c3\",\n+        comment_count: 0,\n+        verification: {\n+          verified: false,\n+          reason: \"unsigned\",\n+          signature: null,\n+          payload: null\n+        }\n+      },\n+      url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/bc2918f0e596d0e133a25606cbb66075402ce6c3\",\n+      html_url:\n+        \"https://github.com/vuejs/vue/commit/bc2918f0e596d0e133a25606cbb66075402ce6c3\",\n+      comments_url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/bc2918f0e596d0e133a25606cbb66075402ce6c3/comments\",\n+      author: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      committer: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      parents: [\n+        {\n+          sha: \"df8f179cfc3b98d6e0f48502cc5071b993d9cdb5\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/commits/df8f179cfc3b98d6e0f48502cc5071b993d9cdb5\",\n+          html_url:\n+            \"https://github.com/vuejs/vue/commit/df8f179cfc3b98d6e0f48502cc5071b993d9cdb5\"\n+        }\n+      ]\n+    },\n+    {\n+      sha: \"df8f179cfc3b98d6e0f48502cc5071b993d9cdb5\",\n+      node_id:\n+        \"MDY6Q29tbWl0MTE3MzAzNDI6ZGY4ZjE3OWNmYzNiOThkNmUwZjQ4NTAyY2M1MDcxYjk5M2Q5Y2RiNQ==\",\n+      commit: {\n+        author: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2017-10-13T00:41:36Z\"\n+        },\n+        committer: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2017-10-13T00:41:36Z\"\n+        },\n+        message: \"test: make hydration spec more stable for Edge\",\n+        tree: {\n+          sha: \"b399dba6180378d6a04715a5624599b49b3e6454\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/git/trees/b399dba6180378d6a04715a5624599b49b3e6454\"\n+        },\n+        url:\n+          \"https://api.github.com/repos/vuejs/vue/git/commits/df8f179cfc3b98d6e0f48502cc5071b993d9cdb5\",\n+        comment_count: 0,\n+        verification: {\n+          verified: false,\n+          reason: \"unsigned\",\n+          signature: null,\n+          payload: null\n+        }\n+      },\n+      url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/df8f179cfc3b98d6e0f48502cc5071b993d9cdb5\",\n+      html_url:\n+        \"https://github.com/vuejs/vue/commit/df8f179cfc3b98d6e0f48502cc5071b993d9cdb5\",\n+      comments_url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/df8f179cfc3b98d6e0f48502cc5071b993d9cdb5/comments\",\n+      author: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      committer: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      parents: [\n+        {\n+          sha: \"a85f95c422e0bde6ce4068f5e44e761d4e00ca08\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/commits/a85f95c422e0bde6ce4068f5e44e761d4e00ca08\",\n+          html_url:\n+            \"https://github.com/vuejs/vue/commit/a85f95c422e0bde6ce4068f5e44e761d4e00ca08\"\n+        }\n+      ]\n+    }\n+  ],\n+  dev: [\n+    {\n+      sha: \"4074104fac219e61e542f4da3a4800975a8063f2\",\n+      node_id:\n+        \"MDY6Q29tbWl0MTE3MzAzNDI6NDA3NDEwNGZhYzIxOWU2MWU1NDJmNGRhM2E0ODAwOTc1YTgwNjNmMg==\",\n+      commit: {\n+        author: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2018-12-11T21:51:40Z\"\n+        },\n+        committer: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2018-12-11T21:51:40Z\"\n+        },\n+        message: \"perf: skip normalization on single child element v-for\",\n+        tree: {\n+          sha: \"75b999a0562d64a38eb322973c982edfa8d84fda\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/git/trees/75b999a0562d64a38eb322973c982edfa8d84fda\"\n+        },\n+        url:\n+          \"https://api.github.com/repos/vuejs/vue/git/commits/4074104fac219e61e542f4da3a4800975a8063f2\",\n+        comment_count: 0,\n+        verification: {\n+          verified: false,\n+          reason: \"unsigned\",\n+          signature: null,\n+          payload: null\n+        }\n+      },\n+      url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/4074104fac219e61e542f4da3a4800975a8063f2\",\n+      html_url:\n+        \"https://github.com/vuejs/vue/commit/4074104fac219e61e542f4da3a4800975a8063f2\",\n+      comments_url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/4074104fac219e61e542f4da3a4800975a8063f2/comments\",\n+      author: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      committer: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      parents: [\n+        {\n+          sha: \"47487607fbb99339038cf84990ba341c25b5e20d\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/commits/47487607fbb99339038cf84990ba341c25b5e20d\",\n+          html_url:\n+            \"https://github.com/vuejs/vue/commit/47487607fbb99339038cf84990ba341c25b5e20d\"\n+        }\n+      ]\n+    },\n+    {\n+      sha: \"47487607fbb99339038cf84990ba341c25b5e20d\",\n+      node_id:\n+        \"MDY6Q29tbWl0MTE3MzAzNDI6NDc0ODc2MDdmYmI5OTMzOTAzOGNmODQ5OTBiYTM0MWMyNWI1ZTIwZA==\",\n+      commit: {\n+        author: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2018-12-11T21:51:03Z\"\n+        },\n+        committer: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2018-12-11T21:51:03Z\"\n+        },\n+        message: \"fix: fix v-for component with undefined value\\n\\nfix #9181\",\n+        tree: {\n+          sha: \"cc30183c2663cd88a35a4a18f758ad0ca872805a\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/git/trees/cc30183c2663cd88a35a4a18f758ad0ca872805a\"\n+        },\n+        url:\n+          \"https://api.github.com/repos/vuejs/vue/git/commits/47487607fbb99339038cf84990ba341c25b5e20d\",\n+        comment_count: 0,\n+        verification: {\n+          verified: false,\n+          reason: \"unsigned\",\n+          signature: null,\n+          payload: null\n+        }\n+      },\n+      url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/47487607fbb99339038cf84990ba341c25b5e20d\",\n+      html_url:\n+        \"https://github.com/vuejs/vue/commit/47487607fbb99339038cf84990ba341c25b5e20d\",\n+      comments_url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/47487607fbb99339038cf84990ba341c25b5e20d/comments\",\n+      author: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      committer: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      parents: [\n+        {\n+          sha: \"984393fed981c58ad79ed50424f023dcfa6829d0\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/commits/984393fed981c58ad79ed50424f023dcfa6829d0\",\n+          html_url:\n+            \"https://github.com/vuejs/vue/commit/984393fed981c58ad79ed50424f023dcfa6829d0\"\n+        }\n+      ]\n+    },\n+    {\n+      sha: \"984393fed981c58ad79ed50424f023dcfa6829d0\",\n+      node_id:\n+        \"MDY6Q29tbWl0MTE3MzAzNDI6OTg0MzkzZmVkOTgxYzU4YWQ3OWVkNTA0MjRmMDIzZGNmYTY4MjlkMA==\",\n+      commit: {\n+        author: {\n+          name: \"krystal\",\n+          email: \"krystalnumber@gmail.com\",\n+          date: \"2018-12-11T16:37:39Z\"\n+        },\n+        committer: {\n+          name: \"Evan You\",\n+          email: \"yyx990803@gmail.com\",\n+          date: \"2018-12-11T16:37:39Z\"\n+        },\n+        message: \"test: change model text's priority case (#9170)\",\n+        tree: {\n+          sha: \"9af5d03838b964ea98c3173c92c3e6e5263ee9ec\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/git/trees/9af5d03838b964ea98c3173c92c3e6e5263ee9ec\"\n+        },\n+        url:\n+          \"https://api.github.com/repos/vuejs/vue/git/commits/984393fed981c58ad79ed50424f023dcfa6829d0\",\n+        comment_count: 0,\n+        verification: {\n+          verified: false,\n+          reason: \"unsigned\",\n+          signature: null,\n+          payload: null\n+        }\n+      },\n+      url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/984393fed981c58ad79ed50424f023dcfa6829d0\",\n+      html_url:\n+        \"https://github.com/vuejs/vue/commit/984393fed981c58ad79ed50424f023dcfa6829d0\",\n+      comments_url:\n+        \"https://api.github.com/repos/vuejs/vue/commits/984393fed981c58ad79ed50424f023dcfa6829d0/comments\",\n+      author: {\n+        login: \"dejour\",\n+        id: 7224044,\n+        node_id: \"MDQ6VXNlcjcyMjQwNDQ=\",\n+        avatar_url: \"https://avatars3.githubusercontent.com/u/7224044?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/dejour\",\n+        html_url: \"https://github.com/dejour\",\n+        followers_url: \"https://api.github.com/users/dejour/followers\",\n+        following_url:\n+          \"https://api.github.com/users/dejour/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/dejour/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/dejour/starred{/owner}{/repo}\",\n+        subscriptions_url: \"https://api.github.com/users/dejour/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/dejour/orgs\",\n+        repos_url: \"https://api.github.com/users/dejour/repos\",\n+        events_url: \"https://api.github.com/users/dejour/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/dejour/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      committer: {\n+        login: \"yyx990803\",\n+        id: 499550,\n+        node_id: \"MDQ6VXNlcjQ5OTU1MA==\",\n+        avatar_url: \"https://avatars1.githubusercontent.com/u/499550?v=4\",\n+        gravatar_id: \"\",\n+        url: \"https://api.github.com/users/yyx990803\",\n+        html_url: \"https://github.com/yyx990803\",\n+        followers_url: \"https://api.github.com/users/yyx990803/followers\",\n+        following_url:\n+          \"https://api.github.com/users/yyx990803/following{/other_user}\",\n+        gists_url: \"https://api.github.com/users/yyx990803/gists{/gist_id}\",\n+        starred_url:\n+          \"https://api.github.com/users/yyx990803/starred{/owner}{/repo}\",\n+        subscriptions_url:\n+          \"https://api.github.com/users/yyx990803/subscriptions\",\n+        organizations_url: \"https://api.github.com/users/yyx990803/orgs\",\n+        repos_url: \"https://api.github.com/users/yyx990803/repos\",\n+        events_url: \"https://api.github.com/users/yyx990803/events{/privacy}\",\n+        received_events_url:\n+          \"https://api.github.com/users/yyx990803/received_events\",\n+        type: \"User\",\n+        site_admin: false\n+      },\n+      parents: [\n+        {\n+          sha: \"6980035a86cfb79368af77a5040e468177d6b14a\",\n+          url:\n+            \"https://api.github.com/repos/vuejs/vue/commits/6980035a86cfb79368af77a5040e468177d6b14a\",\n+          html_url:\n+            \"https://github.com/vuejs/vue/commit/6980035a86cfb79368af77a5040e468177d6b14a\"\n+        }\n+      ]\n+    }\n+  ]\n+};\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 7,
      "qualityScore": 33
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "984393fed981c58ad79ed50424f023dcfa6829d0",
      "url": "https://github.com/vuejs/vue/commit/984393fed981c58ad79ed50424f023dcfa6829d0",
      "message": "test: change model text's priority case (#9170)",
      "author": {
        "name": "krystal",
        "email": "krystalnumber@gmail.com",
        "date": "2018-12-11T16:37:39Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/7224044?v=4"
      },
      "diffObj": {
        "a/test/unit/features/directives/model-text.spec.js": [
          {
            "+": "+          spy(this.a)\n",
            "-": "-          spy(e.target.value)\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "a89384c8d93a3e5a382f60a84d60f0675408ed75",
      "url": "https://github.com/vuejs/vue/commit/a89384c8d93a3e5a382f60a84d60f0675408ed75",
      "message": "test(ssr): add basic directives test (#9166)",
      "author": {
        "name": "sqal",
        "email": "sqal08@gmail.com",
        "date": "2018-12-09T20:42:20Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/3576913?v=4"
      },
      "diffObj": {
        "a/test/ssr/jasmine.js": [
          {
            "+": "+    require.resolve('@babel/register'),\n+    '../helpers/to-have-been-warned.js'\n",
            "-": "-    require.resolve('@babel/register')\n"
          }
        ],
        "a/test/ssr/ssr-string.spec.js": [
          {
            "+": "+  it('should resolve custom directive', done => {\n+    renderToString(new Vue({\n+      directives: {\n+        test: {\n+          bind(node) {\n+            node.data.domProps = { textContent: 'test' }\n+          }\n+        }\n+      },\n+      template: '<div v-test></div>',\n+    }), (err, result) => {\n+      expect('Failed to resolve directive: test').not.toHaveBeenWarned()\n+      expect(result).toContain('<div data-server-rendered=\"true\">test</div>')\n+      done()\n+    })\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 50
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "e9fc04ba50782c15703392272322e277fb92dd9a",
      "url": "https://github.com/vuejs/vue/commit/e9fc04ba50782c15703392272322e277fb92dd9a",
      "message": "test: fix assertion",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2018-10-24T16:58:21Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/compiler/parser.spec.js": [
          {
            "+": "+    expect('The value for a v-bind expression cannot be empty. Found in \"v-bind:empty-msg\"').toHaveBeenWarned()\n",
            "-": "-    expect('The value for a v-bind expression cannot be empty. Found in \"empty-msg\"').toHaveBeenWarned()\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "7597bb06e0d9ba142f894de5b90b2bf2d7765e08",
      "url": "https://github.com/vuejs/vue/commit/7597bb06e0d9ba142f894de5b90b2bf2d7765e08",
      "message": "test: fix ssr tests",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2018-10-24T16:42:53Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/compile-with-webpack.js": [
          {
            "+": "+    mode: 'development',\n",
            "-": ""
          }
        ],
        "a/test/ssr/ssr-template.spec.js": [
          {
            "-": "-import webpack from 'webpack'\n",
            "+": ""
          },
          {
            "+": "+    optimization: {\n+      runtimeChunk: {\n+        name: 'manifest'\n+      }\n+    },\n",
            "-": ""
          },
          {
            "-": "-      new webpack.optimize.CommonsChunkPlugin({\n-        name: 'manifest',\n-        minChunks: Infinity\n-      }),\n",
            "+": ""
          },
          {
            "-": "-      (options.preloadOtherAssets ? `<link rel=\"preload\" href=\"/test.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>` : ``) +\n",
            "+": ""
          },
          {
            "+": "+      (options.preloadOtherAssets ? `<link rel=\"preload\" href=\"/test.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>` : ``) +\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 6,
      "qualityScore": 50
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "9d19f84d4e7a281484a6eb3f92e6a266a1adc243",
      "url": "https://github.com/vuejs/vue/commit/9d19f84d4e7a281484a6eb3f92e6a266a1adc243",
      "message": "docs(readme): grammar fix, extra 'the' (#8887)",
      "author": {
        "name": "Spencer Davies",
        "email": "spencer1573@users.noreply.github.com",
        "date": "2018-10-02T05:56:24Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/4762850?v=4"
      },
      "diffObj": {
        "a/README.md": [
          {
            "+": "+For questions and support please use [the official forum](http://forum.vuejs.org) or [community chat](https://chat.vuejs.org/). The issue list of this repo is **exclusively** for bug reports and feature requests.\n",
            "-": "-For questions and support please use the [the official forum](http://forum.vuejs.org) or [community chat](https://chat.vuejs.org/). The issue list of this repo is **exclusively** for bug reports and feature requests.\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "d280937045988097b816c4497322acc8aaca2d86",
      "url": "https://github.com/vuejs/vue/commit/d280937045988097b816c4497322acc8aaca2d86",
      "message": "test(e2e): trigger click on .new-todo instead of footer (#7938)",
      "author": {
        "name": "Tim",
        "email": "timspeelman@live.nl",
        "date": "2018-08-20T21:52:06Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/3309415?v=4"
      },
      "diffObj": {
        "a/test/e2e/specs/todomvc.js": [
          {
            "+": "+      .click('.new-todo') // blur\n",
            "-": "-      .click('footer') // blur\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "666cdbd71e15de01e4b4468cb5b52ec882cae159",
      "url": "https://github.com/vuejs/vue/commit/666cdbd71e15de01e4b4468cb5b52ec882cae159",
      "message": "test(vdom): add test case for #7786 (#7793)",
      "author": {
        "name": "JK",
        "email": "jingkai.zhao@foxmail.com",
        "date": "2018-03-11T18:04:31Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/2851517?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/vdom/create-element.spec.js": [
          {
            "+": "+\n+  // #7786\n+  it('creates element with vnode reference in :class or :style', () => {\n+    const vm = new Vue({\n+      components: {\n+        foo: {\n+          render (h) {\n+            return h('div', {\n+              class: {\n+                'has-vnode': this.$vnode\n+              }\n+            }, 'foo')\n+          }\n+        }\n+      },\n+      render: h => h('foo')\n+    }).$mount()\n+    expect(vm.$el.innerHTML).toContain('foo')\n+    expect(vm.$el.classList.contains('has-vnode')).toBe(true)\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "9e04f6af2792f709417f4d39113e7723aae69918",
      "url": "https://github.com/vuejs/vue/commit/9e04f6af2792f709417f4d39113e7723aae69918",
      "message": "test: add unit tests for core/observer/dep (#7738)",
      "author": {
        "name": "Sergei Chipiga",
        "email": "chipiga86@gmail.com",
        "date": "2018-03-08T17:06:46Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/1479651?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/observer/dep.spec.js": [
          {
            "+": "+import Dep from 'core/observer/dep'\n+\n+describe('Dep', () => {\n+  let dep\n+\n+  beforeEach(() => {\n+    dep = new Dep()\n+  })\n+\n+  describe('instance', () => {\n+    it('should be created with correct properties', () => {\n+      expect(dep.subs.length).toBe(0)\n+      expect(new Dep().id).toBe(dep.id + 1)\n+    })\n+  })\n+\n+  describe('addSub()', () => {\n+    it('should add sub', () => {\n+      dep.addSub(null)\n+      expect(dep.subs.length).toBe(1)\n+      expect(dep.subs[0]).toBe(null)\n+    })\n+  })\n+\n+  describe('removeSub()', () => {\n+    it('should remove sub', () => {\n+      dep.subs.push(null)\n+      dep.removeSub(null)\n+      expect(dep.subs.length).toBe(0)\n+    })\n+  })\n+\n+  describe('depend()', () => {\n+    let _target\n+\n+    beforeAll(() => {\n+      _target = Dep.target\n+    })\n+\n+    afterAll(() => {\n+      Dep.target = _target\n+    })\n+\n+    it('should do nothing if no target', () => {\n+      Dep.target = null\n+      dep.depend()\n+    })\n+\n+    it('should add itself to target', () => {\n+      Dep.target = jasmine.createSpyObj('TARGET', ['addDep'])\n+      dep.depend()\n+      expect(Dep.target.addDep).toHaveBeenCalledWith(dep)\n+    })\n+  })\n+\n+  describe('notify()', () => {\n+    it('should notify subs', () => {\n+      dep.subs.push(jasmine.createSpyObj('SUB', ['update']))\n+      dep.notify()\n+      expect(dep.subs[0].update).toHaveBeenCalled()\n+    })\n+  })\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "2b0fc381fcc2888b05fbbdf314b8450d3f31d396",
      "url": "https://github.com/vuejs/vue/commit/2b0fc381fcc2888b05fbbdf314b8450d3f31d396",
      "message": "docs: update Angular's commit convention link (#7666)",
      "author": {
        "name": "Stanimira Vlaeva",
        "email": "stanimira.vlaeva@gmail.com",
        "date": "2018-03-08T17:00:11Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/7893485?v=4"
      },
      "diffObj": {
        "a/.github/COMMIT_CONVENTION.md": [
          {
            "+": "+> This is adapted from [Angular's commit convention](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular).\n",
            "-": "-> This is adapted from [Angular's commit convention](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/convention.md).\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "aeebf0de906e7030282d59734ad30d69548cb521",
      "url": "https://github.com/vuejs/vue/commit/aeebf0de906e7030282d59734ad30d69548cb521",
      "message": "test: add test for observer lazy getter invocation",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2018-03-07T20:00:40Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/observer/observer.spec.js": [
          {
            "+": "+\n+  it('should lazy invoke existing getters', () => {\n+    const obj = {}\n+    let called = false\n+    Object.defineProperty(obj, 'getterProp', {\n+      enumerable: true,\n+      get: () => {\n+        called = true\n+        return 'some value'\n+      }\n+    })\n+    observe(obj)\n+    expect(called).toBe(false)\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "2d168f1ba11d77cb2f2caa3356de86e99aba8da6",
      "url": "https://github.com/vuejs/vue/commit/2d168f1ba11d77cb2f2caa3356de86e99aba8da6",
      "message": "test(types): update TS version and fix types test (#7597)",
      "author": {
        "name": "Pig Fang",
        "email": "g-plane@hotmail.com",
        "date": "2018-02-03T19:02:25Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/17216317?v=4"
      },
      "diffObj": {
        "a/package-lock.json": [
          {
            "+": "+      \"version\": \"2.7.1\",\n+      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-2.7.1.tgz\",\n+      \"integrity\": \"sha512-bqB1yS6o9TNA9ZC/MJxM0FZzPnZdtHj0xWK/IZ5khzVqdpGul/R/EIiHRgFXlwTD7PSIaYVnGKq1QgMCu2mnqw==\",\n",
            "-": "-      \"version\": \"2.6.2\",\n-      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-2.6.2.tgz\",\n-      \"integrity\": \"sha1-PFtv1/beCRQmkCfwPAlGdY92c6Q=\",\n"
          }
        ],
        "a/package.json": [
          {
            "+": "+    \"typescript\": \"^2.7.1\",\n",
            "-": "-    \"typescript\": \"^2.6.1\",\n"
          }
        ],
        "a/types/test/plugin-test.ts": [
          {
            "+": "+  prefix: string = \"\";\n+  suffix: string = \"\";\n",
            "-": "-  prefix: string;\n-  suffix: string;\n"
          }
        ],
        "a/types/test/vue-test.ts": [
          {
            "+": "+  a: number = 0;\n",
            "-": "-  a: number;\n"
          },
          {
            "+": "+  $refs!: {\n",
            "-": "-  $refs: {\n"
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 5,
      "qualityScore": 50
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "c1743a9dd7eaffa67f9a9c21b6940f167ba7590d",
      "url": "https://github.com/vuejs/vue/commit/c1743a9dd7eaffa67f9a9c21b6940f167ba7590d",
      "message": "test(weex): use done.fail for reporting errors",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-11-28T19:50:41Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/weex/cases/cases.spec.js": [
          {
            "+": "+    }).catch(done.fail)\n",
            "-": "-    }).catch(err => {\n-      expect(err).toBe(null)\n-      done()\n-    })\n"
          },
          {
            "+": "+    }).catch(done.fail)\n",
            "-": "-    }).catch(err => {\n-      expect(err).toBe(null)\n-      done()\n-    })\n"
          },
          {
            "+": "+      }).catch(done.fail)\n",
            "-": "-      }).catch(err => {\n-        expect(err).toBe(null)\n-        done()\n-      })\n"
          },
          {
            "+": "+    //   }).catch(done.fail)\n",
            "-": "-    //   }).catch(err => {\n-    //     expect(err).toBe(null)\n-    //     done()\n-    //   })\n"
          },
          {
            "+": "+    //   }).catch(done.fail)\n",
            "-": "-    //   }).catch(err => {\n-    //     expect(err).toBe(null)\n-    //     done()\n-    //   })\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 5,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "e5da1daeec2cd0d2f3006b73b0d2b767a5562112",
      "url": "https://github.com/vuejs/vue/commit/e5da1daeec2cd0d2f3006b73b0d2b767a5562112",
      "message": "test(weex): avoid v-else warning for recycle-list tests",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-11-23T02:14:48Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/weex/compiler/modules/recycle-list/v-if.js": [
          {
            "+": "+    const ifExp = getAndRemoveAttr(el, 'v-if', true /* remove from attrsMap */)\n+    const elseifExp = getAndRemoveAttr(el, 'v-else-if', true)\n+    // don't need the value, but remove it to avoid being generated as a\n+    // custom directive\n+    getAndRemoveAttr(el, 'v-else', true)\n",
            "-": "-    const ifExp = getAndRemoveAttr(el, 'v-if')\n-    const elseifExp = getAndRemoveAttr(el, 'v-else-if')\n"
          },
          {
            "-": "-    delete el.attrsMap['v-if']\n-    delete el.attrsMap['v-else-if']\n-    delete el.attrsMap['v-else']\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 0
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "bb8e8f44a92bed7826cbe7a645eac61480576066",
      "url": "https://github.com/vuejs/vue/commit/bb8e8f44a92bed7826cbe7a645eac61480576066",
      "message": "test(weex): avoid @binding key warnings",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-11-23T02:02:16Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/vdom/create-element.js": [
          {
            "+": "+    if (!__WEEX__ || !('@binding' in data.key)) {\n+      warn(\n+        'Avoid using non-primitive value as key, ' +\n+        'use string/number value instead.',\n+        context\n+      )\n+    }\n",
            "-": "-    warn(\n-      'Avoid using non-primitive value as key, ' +\n-      'use string/number value instead.',\n-      context\n-    )\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "46c8016562c3a9308fcf45d31a5a674312e2c110",
      "url": "https://github.com/vuejs/vue/commit/46c8016562c3a9308fcf45d31a5a674312e2c110",
      "message": "test(weex): add more test cases for recycle-list (#7104)",
      "author": {
        "name": "Hanks",
        "email": "zhanghan.me@gmail.com",
        "date": "2017-11-23T01:42:07Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/8401776?v=4"
      },
      "diffObj": {
        "a/test/weex/cases/cases.spec.js": [
          {
            "-": "-import fs from 'fs'\n-import path from 'path'\n",
            "+": ""
          },
          {
            "+": "+  readFile,\n+  readObject,\n",
            "-": ""
          },
          {
            "+": "+  compileWithDeps,\n",
            "-": ""
          },
          {
            "-": "-function readFile (filename) {\n-  return fs.readFileSync(path.resolve(__dirname, filename), 'utf8')\n-}\n-\n-function readObject (filename) {\n-  return (new Function(`return ${readFile(filename)}`))()\n-}\n-\n",
            "+": ""
          },
          {
            "+": "+    // it('class name', createRenderTestCase('recycle-list/classname'))\n+    // it('inline style', createRenderTestCase('recycle-list/inline-style'))\n",
            "-": ""
          },
          {
            "+": "+\n+    it('stateless component', done => {\n+      compileWithDeps('recycle-list/components/stateless.vue', [{\n+        name: 'banner',\n+        path: 'recycle-list/components/banner.vue'\n+      }]).then(code => {\n+        const id = String(Date.now() * Math.random())\n+        const instance = createInstance(id, code)\n+        setTimeout(() => {\n+          const target = readObject('recycle-list/components/stateless.vdom.js')\n+          expect(getRoot(instance)).toEqual(target)\n+          done()\n+        }, 50)\n+      }).catch(err => {\n+        expect(err).toBe(null)\n+        done()\n+      })\n+    })\n+\n+    // it('stateless component with props', done => {\n+    //   compileWithDeps('recycle-list/components/stateless-with-props.vue', [{\n+    //     name: 'poster',\n+    //     path: 'recycle-list/components/poster.vue'\n+    //   }]).then(code => {\n+    //     const id = String(Date.now() * Math.random())\n+    //     const instance = createInstance(id, code)\n+    //     setTimeout(() => {\n+    //       const target = readObject('recycle-list/components/stateless-with-props.vdom.js')\n+    //       expect(getRoot(instance)).toEqual(target)\n+    //       done()\n+    //     }, 50)\n+    //   }).catch(err => {\n+    //     expect(err).toBe(null)\n+    //     done()\n+    //   })\n+    // })\n+\n+    // it('stateful component', done => {\n+    //   compileWithDeps('recycle-list/components/stateful.vue', [{\n+    //     name: 'counter',\n+    //     path: 'recycle-list/components/counter.vue'\n+    //   }]).then(code => {\n+    //     const id = String(Date.now() * Math.random())\n+    //     const instance = createInstance(id, code)\n+    //     setTimeout(() => {\n+    //       const target = readObject('recycle-list/components/stateful.vdom.js')\n+    //       expect(getRoot(instance)).toEqual(target)\n+    //       const event = getEvents(instance)[0]\n+    //       fireEvent(instance, event.ref, event.type, {})\n+    //       setTimeout(() => {\n+    //         // TODO: check render results\n+    //         // expect(getRoot(instance)).toEqual(target)\n+    //         done()\n+    //       })\n+    //     }, 50)\n+    //   }).catch(err => {\n+    //     expect(err).toBe(null)\n+    //     done()\n+    //   })\n+    // })\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/classname.vdom.js": [
          {
            "+": "+({\n+  type: 'recycle-list',\n+  attr: {\n+    listData: [\n+      { type: 'A', color: 'red' },\n+      { type: 'A', color: 'blue' }\n+    ],\n+    templateKey: 'type',\n+    alias: 'item'\n+  },\n+  children: [{\n+    type: 'cell-slot',\n+    attr: { templateType: 'A' },\n+    style: {\n+      backgroundColor: '#FF6600'\n+    },\n+    children: [{\n+      type: 'text',\n+      attr: {\n+        // not supported yet\n+        // classList: ['text', { '@binding': 'item.color' }],\n+        value: 'content'\n+      }\n+    }]\n+  }]\n+})\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/classname.vue": [
          {
            "+": "+<template>\n+  <recycle-list :list-data=\"longList\" template-key=\"type\" alias=\"item\">\n+    <cell-slot template-type=\"A\" class=\"cell\">\n+      <text :class=\"['text', item.color]\">content</text>\n+    </cell-slot>\n+  </recycle-list>\n+</template>\n+\n+<style scoped>\n+  .cell {\n+    background-color: #FF6600;\n+  }\n+  .text {\n+    font-size: 100px;\n+    text-align: center;\n+  }\n+  .red {\n+    color: #FF0000;\n+  }\n+  .blue {\n+    color: #0000FF;\n+  }\n+</style>\n+\n+<script>\n+  module.exports = {\n+    data () {\n+      return {\n+        longList: [\n+          { type: 'A', color: 'red' },\n+          { type: 'A', color: 'blue' }\n+        ]\n+      }\n+    }\n+  }\n+</script>\n+\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/components/banner.vue": [
          {
            "+": "+<template recyclable=\"true\">\n+  <div class=\"banner\">\n+    <text class=\"title\">BANNER</text>\n+  </div>\n+</template>\n+\n+<style scoped>\n+  .banner {\n+    height: 120px;\n+    justify-content: center;\n+    align-items: center;\n+    background-color: rgb(162, 217, 192);\n+  }\n+  .title {\n+    font-weight: bold;\n+    color: #41B883;\n+    font-size: 60px;\n+  }\n+</style>\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/components/counter.vue": [
          {
            "+": "+<template recyclable=\"true\">\n+  <div>\n+    <text class=\"output\">{{count}}</text>\n+    <text class=\"button\" @click=\"inc\">+</text>\n+  </div>\n+</template>\n+\n+<script>\n+  module.exports = {\n+    props: ['start'],\n+    data () {\n+      return {\n+        count: parseInt(this.start, 10) || 42\n+      }\n+    },\n+    methods: {\n+      inc () {\n+        this.count++\n+      }\n+    }\n+  }\n+</script>\n+\n+<style scoped>\n+  .output {\n+    font-size: 150px;\n+    text-align: center;\n+  }\n+  .button {\n+    font-size: 100px;\n+    text-align: center;\n+    border-width: 2px;\n+    border-color: #DDD;\n+    background-color: #F5F5F5;\n+  }\n+</style>\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/components/poster.vue": [
          {
            "+": "+<template>\n+  <div>\n+    <image class=\"image\" :src=\"imageUrl\"></image>\n+    <text class=\"title\">{{title}}</text>\n+  </div>\n+</template>\n+\n+<script>\n+  module.exports = {\n+    props: {\n+      imageUrl: {\n+        type: String,\n+        default: 'https://gw.alicdn.com/tfs/TB1KF_ybRTH8KJjy0FiXXcRsXXa-890-1186.png'\n+      },\n+      title: {\n+        type: String,\n+        default: 'I WANT YOU!'\n+      }\n+    }\n+  }\n+</script>\n+\n+<style scoped>\n+  .image {\n+    width: 750px;\n+    height: 1000px;\n+  }\n+  .title {\n+    font-size: 80px;\n+    text-align: center;\n+    color: #E95659;\n+  }\n+</style>\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/components/stateful.vdom.js": [
          {
            "+": "+({\n+  type: 'recycle-list',\n+  attr: {\n+    listData: [\n+      { type: 'A', number: 24 },\n+      { type: 'A', number: 42 }\n+    ],\n+    templateKey: 'type',\n+    alias: 'item'\n+  },\n+  children: [{\n+    type: 'cell-slot',\n+    attr: { templateType: 'A' },\n+    children: [{\n+      type: 'div',\n+      attr: {\n+        '@isComponentRoot': true,\n+        '@componentProps': {\n+          start: { '@binding': 'item.number' }\n+        }\n+      },\n+      children: [{\n+        type: 'text',\n+        style: { fontSize: '150px', textAlign: 'center' },\n+        attr: {\n+          value: { '@binding': 'count' } // need confirm\n+        }\n+      }, {\n+        type: 'text',\n+        event: ['click'],\n+        style: {\n+          fontSize: '100px',\n+          textAlign: 'center',\n+          borderWidth: '2px',\n+          borderColor: '#DDDDDD',\n+          backgroundColor: '#F5F5F5'\n+        },\n+        attr: { value: '+' }\n+      }]\n+    }, {\n+      type: 'text',\n+      attr: { value: 'other' }\n+    }]\n+  }]\n+})\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/components/stateful.vue": [
          {
            "+": "+<template>\n+  <recycle-list :list-data=\"longList\" template-key=\"type\" alias=\"item\">\n+    <cell-slot template-type=\"A\">\n+      <counter :start=\"item.number\"></counter>\n+      <text>other</text>\n+    </cell-slot>\n+  </recycle-list>\n+</template>\n+\n+<script>\n+  // require('./counter.vue')\n+  module.exports = {\n+    data () {\n+      return {\n+        longList: [\n+          { type: 'A', number: 24 },\n+          { type: 'A', number: 42 }\n+        ]\n+      }\n+    }\n+  }\n+</script>\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/components/stateless-with-props.vdom.js": [
          {
            "+": "+({\n+  type: 'recycle-list',\n+  attr: {\n+    listData: [\n+      { type: 'A', poster: 'xx', title: 'x' },\n+      { type: 'A', poster: 'yy', title: 'y' }\n+    ],\n+    templateKey: 'type',\n+    alias: 'item'\n+  },\n+  children: [{\n+    type: 'cell-slot',\n+    attr: { templateType: 'A' },\n+    children: [{\n+      type: 'div',\n+      attr: {\n+        '@isComponentRoot': true,\n+        '@componentProps': {\n+          imageUrl: { '@binding': 'item.poster' },\n+          title: { '@binding': 'item.title' }\n+        }\n+      },\n+      children: [{\n+        type: 'image',\n+        style: {\n+          width: '750px',\n+          height: '1000px'\n+        },\n+        attr: {\n+          src: { '@binding': 'imageUrl' }\n+        }\n+      }, {\n+        type: 'text',\n+        style: {\n+          fontSize: '80px',\n+          textAlign: 'center',\n+          color: '#E95659'\n+        },\n+        attr: {\n+          value: { '@binding': 'title' }\n+        }\n+      }]\n+    }, {\n+      type: 'text',\n+      attr: {\n+        value: 'content'\n+      }\n+    }]\n+  }]\n+})\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/components/stateless-with-props.vue": [
          {
            "+": "+<template>\n+  <recycle-list :list-data=\"longList\" template-key=\"type\" alias=\"item\">\n+    <cell-slot template-type=\"A\">\n+      <poster :image-url=\"item.poster\" :title=\"item.title\"></poster>\n+      <text>content</text>\n+    </cell-slot>\n+  </recycle-list>\n+</template>\n+\n+<script>\n+  // require('./poster.vue')\n+  module.exports = {\n+    data () {\n+      return {\n+        longList: [\n+          { type: 'A', poster: 'xx', title: 'x' },\n+          { type: 'A', poster: 'yy', title: 'y' }\n+        ]\n+      }\n+    }\n+  }\n+</script>\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/components/stateless.vdom.js": [
          {
            "+": "+({\n+  type: 'recycle-list',\n+  attr: {\n+    listData: [\n+      { type: 'A' },\n+      { type: 'A' }\n+    ],\n+    templateKey: 'type',\n+    alias: 'item'\n+  },\n+  children: [{\n+    type: 'cell-slot',\n+    attr: { templateType: 'A' },\n+    children: [{\n+      type: 'div',\n+      // not supported yet\n+      // attr: {\n+      //   '@isComponentRoot': true,\n+      //   '@componentProps': {}\n+      // },\n+      // style: {\n+      //   height: '120px',\n+      //   justifyContent: 'center',\n+      //   alignItems: 'center',\n+      //   backgroundColor: 'rgb(162, 217, 192)'\n+      // },\n+      children: [{\n+        type: 'text',\n+        // style: {\n+        //   fontWeight: 'bold',\n+        //   color: '#41B883',\n+        //   fontSize: '60px'\n+        // },\n+        attr: {\n+          value: 'BANNER'\n+        }\n+      }]\n+    }, {\n+      type: 'text',\n+      attr: {\n+        value: 'content'\n+      }\n+    }]\n+  }]\n+})\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/components/stateless.vue": [
          {
            "+": "+<template>\n+  <recycle-list :list-data=\"longList\" template-key=\"type\" alias=\"item\">\n+    <cell-slot template-type=\"A\">\n+      <banner></banner>\n+      <text>content</text>\n+    </cell-slot>\n+  </recycle-list>\n+</template>\n+\n+<script>\n+  // require('./banner.vue')\n+  module.exports = {\n+    data () {\n+      return {\n+        longList: [\n+          { type: 'A' },\n+          { type: 'A' }\n+        ]\n+      }\n+    }\n+  }\n+</script>\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/inline-style.vdom.js": [
          {
            "+": "+({\n+  type: 'recycle-list',\n+  attr: {\n+    listData: [\n+      { type: 'A', color: '#606060' },\n+      { type: 'A', color: '#E5E5E5' }\n+    ],\n+    templateKey: 'type',\n+    alias: 'item'\n+  },\n+  children: [{\n+    type: 'cell-slot',\n+    attr: { templateType: 'A' },\n+    style: {\n+      backgroundColor: '#FF6600'\n+    },\n+    children: [{\n+      type: 'text',\n+      style: {\n+        fontSize: '100px',\n+        color: { '@binding': 'item.color' }\n+      },\n+      attr: {\n+        value: 'content'\n+      }\n+    }]\n+  }]\n+})\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/recycle-list/inline-style.vue": [
          {
            "+": "+<template>\n+  <recycle-list :list-data=\"longList\" template-key=\"type\" alias=\"item\">\n+    <cell-slot template-type=\"A\" style=\"background-color:#FF6600\">\n+      <text :style=\"{ fontSize: '100px', color: item.color }\">content</text>\n+    </cell-slot>\n+  </recycle-list>\n+</template>\n+\n+<script>\n+  module.exports = {\n+    data () {\n+      return {\n+        longList: [\n+          { type: 'A', color: '#606060' },\n+          { type: 'A', color: '#E5E5E5' }\n+        ]\n+      }\n+    }\n+  }\n+</script>\n+\n",
            "-": ""
          }
        ],
        "a/test/weex/helpers/index.js": [
          {
            "+": "+import fs from 'fs'\n+import path from 'path'\n",
            "-": ""
          },
          {
            "+": "+const templateRE = /<\\s*template\\s*([^>]*)>([^]*)<\\/\\s*template\\s*>/\n+\n+export function readFile (filename) {\n+  return fs.readFileSync(path.resolve(__dirname, '../cases/', filename), 'utf8')\n+}\n+\n+export function readObject (filename) {\n+  return (new Function(`return ${readFile(filename)}`))()\n+}\n",
            "-": "-const templateRE = /<\\s*template\\s*>([^]*)<\\/\\s*template\\s*>/\n"
          },
          {
            "+": "+    const templateMatch = templateRE.exec(source)\n+    const compileOptions = {}\n+    if (/\\s*recyclable\\=?/i.test(templateMatch[1])) {\n+      compileOptions.recyclable = true\n+    }\n+    const res = compile(templateMatch[2], compileOptions)\n",
            "-": "-    const { render, staticRenderFns } = compile(templateRE.exec(source)[1])\n"
          },
          {
            "+": "+    const name = 'test_case_' + (Math.random() * 99999999).toFixed(0)\n",
            "-": ""
          },
          {
            "+": "+      var ${name} = Object.assign({\n",
            "-": "-      var test_case = Object.assign({\n"
          },
          {
            "+": "+        render: function () { ${res.render} },\n+        ${res['@render'] ? ('\"@render\": function () {' + res['@render'] + '},') : ''}\n+        staticRenderFns: ${parseStatic(res.staticRenderFns)},\n",
            "-": "-        render: function () { ${render} },\n-        staticRenderFns: ${parseStatic(staticRenderFns)},\n"
          },
          {
            "+": "+        ? `Vue.component('${componentName}', ${name});\\n`\n+        : `${name}.el = 'body';new Vue(${name});`)\n",
            "-": "-        ? `Vue.component('${componentName}', test_case);\\n`\n-        : `test_case.el = 'body';new Vue(test_case);`)\n"
          },
          {
            "+": "+export function compileWithDeps (entryPath, deps) {\n+  return new Promise((resolve, reject) => {\n+    if (Array.isArray(deps)) {\n+      Promise.all(deps.map(dep => {\n+        return compileVue(readFile(dep.path), dep.name).catch(reject)\n+      })).then(depCodes => {\n+        compileVue(readFile(entryPath)).then(entryCode => {\n+          resolve(depCodes.join('\\n') + entryCode)\n+        }).catch(reject)\n+      }).catch(reject)\n+    }\n+  })\n+}\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 15,
      "numOfChanges": 27,
      "qualityScore": 6
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "14f7015578db8a740450b8f1f45e74b1604ff173",
      "url": "https://github.com/vuejs/vue/commit/14f7015578db8a740450b8f1f45e74b1604ff173",
      "message": "test: fix ssr test due to webpack asset emit order change",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-12-13T00:16:17Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-template.spec.js": [
          {
            "-": "-      (options.preloadOtherAssets ? `<link rel=\"preload\" href=\"/test.png\" as=\"image\">` : ``) +\n",
            "+": ""
          },
          {
            "+": "+      (options.preloadOtherAssets ? `<link rel=\"preload\" href=\"/test.png\" as=\"image\">` : ``) +\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "86e4d7566e685f1a98ffab1777fa7d07603c994a",
      "url": "https://github.com/vuejs/vue/commit/86e4d7566e685f1a98ffab1777fa7d07603c994a",
      "message": "test: add test case for #7223",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-12-12T22:07:28Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-string.spec.js": [
          {
            "+": "+\n+  // #7223\n+  it('should not double escape attribute values', done => {\n+    renderVmWithOptions({\n+      template: `\n+      <div>\n+        <div id=\"a\\nb\"></div>\n+      </div>\n+      `\n+    }, result => {\n+      expect(result).toContain(`<div id=\"a\\nb\"></div>`)\n+      done()\n+    })\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "904d9c9a819abf8ee503a068fd47ec7c673924d1",
      "url": "https://github.com/vuejs/vue/commit/904d9c9a819abf8ee503a068fd47ec7c673924d1",
      "message": "test: fix weex test case",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-12-05T16:20:33Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/weex/compiler/compile.spec.js": [
          {
            "+": "+    expect(inputCase.render).toMatch(strToRegExp(`return _m(0)`))\n",
            "-": "-    expect(inputCase.render).toMatch(strToRegExp(`return _m(0,false,false)`))\n"
          },
          {
            "+": "+    expect(imageCase.render).toMatch(strToRegExp(`return _m(0)`))\n",
            "-": "-    expect(imageCase.render).toMatch(strToRegExp(`return _m(0,false,false)`))\n"
          },
          {
            "+": "+    expect(complexCase.render).toMatch(strToRegExp(`return _m(0)`))\n",
            "-": "-    expect(complexCase.render).toMatch(strToRegExp(`return _m(0,false,false)`))\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "6b799190a57b73c4b3d6c31f4009cda74a1a6184",
      "url": "https://github.com/vuejs/vue/commit/6b799190a57b73c4b3d6c31f4009cda74a1a6184",
      "message": "test: add test case for #6687 + fix lingering comment node",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-11-16T15:09:15Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/modules/transition.js": [
          {
            "+": "+  if (isUndef(data) || el.nodeType !== 1) {\n",
            "-": "-  if (isUndef(data)) {\n"
          },
          {
            "+": "+  if (isDef(el._leaveCb)) {\n",
            "-": "-  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n"
          }
        ],
        "a/test/unit/features/transition/transition.spec.js": [
          {
            "+": "+\n+    // #6687\n+    it('transition on child components with empty root node', done => {\n+      const vm = new Vue({\n+        template: `\n+          <div>\n+            <transition mode=\"out-in\">\n+              <component class=\"test\" :is=\"view\"></component>\n+            </transition>\n+          </div>\n+        `,\n+        data: { view: 'one' },\n+        components: {\n+          'one': {\n+            template: '<div v-if=\"false\">one</div>'\n+          },\n+          'two': {\n+            template: '<div>two</div>'\n+          }\n+        }\n+      }).$mount(el)\n+\n+      // should not apply transition on initial render by default\n+      expect(vm.$el.innerHTML).toBe('<!---->')\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test v-enter v-enter-active\">two</div>')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-enter-active v-enter-to')\n+      }).thenWaitFor(duration + buffer).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test')\n+        vm.view = 'one'\n+      }).then(() => {\n+        // incoming comment node is appended instantly because it doesn't have\n+        // data and therefore doesn't go through the transition module.\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test v-leave v-leave-active\">two</div><!---->')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-leave-active v-leave-to')\n+      }).thenWaitFor(duration + buffer).then(() => {\n+        expect(vm.$el.innerHTML).toBe('<!---->')\n+      }).then(done)\n+    })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 3,
      "qualityScore": 50
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "9463ac8746f57d1dff6f958b7d79765aa0979fa8",
      "url": "https://github.com/vuejs/vue/commit/9463ac8746f57d1dff6f958b7d79765aa0979fa8",
      "message": "test: fix weex tests",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-11-07T22:25:55Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/weex/compiler/compile.spec.js": [
          {
            "+": "+    expect(inputCase.render).toMatch(strToRegExp(`return _m(0,false,false)`))\n",
            "-": "-    expect(inputCase.render).toMatch(strToRegExp(`return _m(0)`))\n"
          },
          {
            "+": "+    expect(imageCase.render).toMatch(strToRegExp(`return _m(0,false,false)`))\n",
            "-": "-    expect(imageCase.render).toMatch(strToRegExp(`return _m(0)`))\n"
          },
          {
            "+": "+    expect(complexCase.render).toMatch(strToRegExp(`return _m(0,false,false)`))\n",
            "-": "-    expect(complexCase.render).toMatch(strToRegExp(`return _m(0)`))\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "232dd85f853d69fe3648a92be0d56f7359bc9210",
      "url": "https://github.com/vuejs/vue/commit/232dd85f853d69fe3648a92be0d56f7359bc9210",
      "message": "test(weex): support testing the virtual dom generated form *.vue files (#6944)\n\nCompile the *.vue file into js code, then run it in Weex context, and\r\ncompare the generate virtual dom.\r\nIt’s a black-box testing for `weex-template-compiler`,\r\n`weex-styler`,`weex-vue-framework` and `weex-js-runtime`.",
      "author": {
        "name": "Hanks",
        "email": "zhanghan.me@gmail.com",
        "date": "2017-10-31T00:29:16Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/8401776?v=4"
      },
      "diffObj": {
        "a/package.json": [
          {
            "+": "+    \"weex-js-runtime\": \"^0.23.0\",\n+    \"weex-styler\": \"^0.3.0\"\n",
            "-": "-    \"weex-js-runtime\": \"^0.23.0\"\n"
          }
        ],
        "a/test/weex/cases/cases.spec.js": [
          {
            "+": "+import fs from 'fs'\n+import path from 'path'\n+import {\n+  compileVue,\n+  createInstance,\n+  getRoot,\n+  getEvents,\n+  fireEvent\n+} from '../helpers'\n+\n+function readFile (filename) {\n+  return fs.readFileSync(path.resolve(__dirname, filename), 'utf8')\n+}\n+\n+function readObject (filename) {\n+  return (new Function(`return ${readFile(filename)}`))()\n+}\n+\n+// Create one-off render test case\n+function createRenderTestCase (name) {\n+  const source = readFile(`${name}.vue`)\n+  const target = readObject(`${name}.vdom.js`)\n+  return done => {\n+    compileVue(source).then(code => {\n+      const id = String(Date.now() * Math.random())\n+      const instance = createInstance(id, code)\n+      setTimeout(() => {\n+        expect(getRoot(instance)).toEqual(target)\n+        done()\n+      }, 50)\n+    }).catch(err => {\n+      expect(err).toBe(null)\n+      done()\n+    })\n+  }\n+}\n+\n+// Create event test case, will trigger the first bind event\n+function createEventTestCase (name) {\n+  const source = readFile(`${name}.vue`)\n+  const before = readObject(`${name}.before.vdom.js`)\n+  const after = readObject(`${name}.after.vdom.js`)\n+  return done => {\n+    compileVue(source).then(code => {\n+      const id = String(Date.now() * Math.random())\n+      const instance = createInstance(id, code)\n+      setTimeout(() => {\n+        expect(getRoot(instance)).toEqual(before)\n+        const event = getEvents(instance)[0]\n+        fireEvent(instance, event.ref, event.type, {})\n+        setTimeout(() => {\n+          expect(getRoot(instance)).toEqual(after)\n+          done()\n+        }, 50)\n+      }, 50)\n+    }).catch(err => {\n+      expect(err).toBe(null)\n+      done()\n+    })\n+  }\n+}\n+\n+describe('Usage', () => {\n+  describe('render', () => {\n+    it('sample', createRenderTestCase('render/sample'))\n+  })\n+\n+  describe('event', () => {\n+    it('click', createEventTestCase('event/click'))\n+  })\n+})\n+\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/event/click.after.vdom.js": [
          {
            "+": "+({\n+  type: 'div',\n+  event: ['click'],\n+  children: [{\n+    type: 'text',\n+    attr: {\n+      value: '43'\n+    }\n+  }]\n+})\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/event/click.before.vdom.js": [
          {
            "+": "+({\n+  type: 'div',\n+  event: ['click'],\n+  children: [{\n+    type: 'text',\n+    attr: {\n+      value: '42'\n+    }\n+  }]\n+})\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/event/click.vue": [
          {
            "+": "+<template>\n+  <div @click=\"inc\">\n+    <text>{{count}}</text>\n+  </div>\n+</template>\n+\n+<script>\n+  module.exports = {\n+    data () {\n+      return {\n+        count: 42\n+      }\n+    },\n+    methods: {\n+      inc () {\n+        this.count++\n+      }\n+    }\n+  }\n+</script>\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/render/sample.vdom.js": [
          {
            "+": "+({\n+  type: 'div',\n+  style: {\n+    justifyContent: 'center'\n+  },\n+  children: [{\n+    type: 'text',\n+    attr: {\n+      value: 'Yo'\n+    },\n+    style: {\n+      color: '#41B883',\n+      fontSize: '233px',\n+      textAlign: 'center'\n+    }\n+  }]\n+})\n",
            "-": ""
          }
        ],
        "a/test/weex/cases/render/sample.vue": [
          {
            "+": "+<template>\n+  <div style=\"justify-content:center\">\n+    <text class=\"freestyle\">{{string}}</text>\n+  </div>\n+</template>\n+\n+<style scoped>\n+  .freestyle {\n+    color: #41B883;\n+    font-size: 233px;\n+    text-align: center;\n+  }\n+</style>\n+\n+<script>\n+  module.exports = {\n+    data () {\n+      return {\n+        string: 'Yo'\n+      }\n+    }\n+  }\n+</script>\n",
            "-": ""
          }
        ],
        "a/test/weex/helpers/index.js": [
          {
            "+": "+import styler from 'weex-styler'\n+\n+const styleRE = /<\\s*style\\s*\\w*>([^(<\\/)]*)<\\/\\s*style\\s*>/g\n+const scriptRE = /<\\s*script.*>([^]*)<\\/\\s*script\\s*>/\n+const templateRE = /<\\s*template\\s*>([^]*)<\\/\\s*template\\s*>/\n",
            "-": ""
          },
          {
            "+": "+function parseStatic (fns) {\n+  return '[' + fns.map(fn => `function () { ${fn} }`).join(',') + ']'\n+}\n+\n",
            "-": ""
          },
          {
            "+": "+/**\n+ * Compile *.vue file into js code\n+ * @param {string} source raw text of *.vue file\n+ * @param {string} componentName whether compile to a component\n+ */\n+export function compileVue (source, componentName) {\n+  return new Promise((resolve, reject) => {\n+    if (!templateRE.test(source)) {\n+      return reject('No Template!')\n+    }\n+    const scriptMatch = scriptRE.exec(source)\n+    const script = scriptMatch ? scriptMatch[1] : ''\n+    const { render, staticRenderFns } = compile(templateRE.exec(source)[1])\n+\n+    const generateCode = styles => (`\n+      var test_case = Object.assign({\n+        style: ${JSON.stringify(styles)},\n+        render: function () { ${render} },\n+        staticRenderFns: ${parseStatic(staticRenderFns)},\n+      }, (function(){\n+        var module = { exports: {} };\n+        ${script};\n+        return module.exports;\n+      })());\n+    ` + (componentName\n+        ? `Vue.component('${componentName}', test_case);\\n`\n+        : `test_case.el = 'body';new Vue(test_case);`)\n+    )\n+\n+    let cssText = ''\n+    let styleMatch = null\n+    while ((styleMatch = styleRE.exec(source))) {\n+      cssText += `\\n${styleMatch[1]}\\n`\n+    }\n+    styler.parse(cssText, (error, result) => {\n+      if (error) {\n+        return reject(error)\n+      }\n+      resolve(generateCode(result.jsonStyle))\n+    })\n+    resolve(generateCode({}))\n+  })\n",
            "-": "-function parseStatic (fns) {\n-  return '[' + fns.map(fn => `function () { ${fn} }`).join(',') + ']'\n"
          },
          {
            "+": "+// Get all binding events in the instance\n+export function getEvents (instance) {\n+  const events = []\n+  const recordEvent = node => {\n+    if (!node) { return }\n+    if (Array.isArray(node.event)) {\n+      node.event.forEach(type => {\n+        events.push({ ref: node.ref, type })\n+      })\n+    }\n+    if (Array.isArray(node.children)) {\n+      node.children.forEach(recordEvent)\n+    }\n+  }\n+  recordEvent(instance.document.body.toJSON())\n+  return events\n+}\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 8,
      "numOfChanges": 11,
      "qualityScore": 12
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "df8f179cfc3b98d6e0f48502cc5071b993d9cdb5",
      "url": "https://github.com/vuejs/vue/commit/df8f179cfc3b98d6e0f48502cc5071b993d9cdb5",
      "message": "test: make hydration spec more stable for Edge",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-10-13T00:41:36Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/vdom/patch/hydration.spec.js": [
          {
            "+": "+    }, 50)\n",
            "-": "-    }, 10)\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "a85f95c422e0bde6ce4068f5e44e761d4e00ca08",
      "url": "https://github.com/vuejs/vue/commit/a85f95c422e0bde6ce4068f5e44e761d4e00ca08",
      "message": "test: use phantom for dev",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-10-13T00:41:07Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/karma.dev.config.js": [
          {
            "+": "+    browsers: ['PhantomJS'],\n",
            "-": "-    browsers: ['ChromeHeadless'],\n"
          },
          {
            "+": "+      'karma-phantomjs-launcher'\n",
            "-": "-      'karma-chrome-launcher'\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 0
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "9f576aac7defb9b542a262f76c86b53a2ef13556",
      "url": "https://github.com/vuejs/vue/commit/9f576aac7defb9b542a262f76c86b53a2ef13556",
      "message": "test: add test for ignoredElements",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-10-12T13:54:17Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/global-api/config.spec.js": [
          {
            "+": "+\n+  describe('ignoredElements', () => {\n+    it('should work', () => {\n+      Vue.config.ignoredElements = ['foo', /^ion-/]\n+      new Vue({\n+        template: `<div><foo/><ion-foo/><ion-bar/></div>`\n+      }).$mount()\n+      expect('Unknown custom element').not.toHaveBeenWarned()\n+      Vue.config.ignoredElements = []\n+    })\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "3c65239ad406f371564c1b5d8303b772e5c5a7d1",
      "url": "https://github.com/vuejs/vue/commit/3c65239ad406f371564c1b5d8303b772e5c5a7d1",
      "message": "test: improve inject default test case",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-10-05T19:56:36Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/options/inject.spec.js": [
          {
            "+": "+      created () {\n+        injected = [this.foo, this.bar, this.baz]\n+      }\n",
            "-": "-      created () {}\n"
          },
          {
            "+": "+    expect(injected).toEqual([1, false, undefined])\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "aa1356e83de1112660e7a88ff955f49d64bb5b1f",
      "url": "https://github.com/vuejs/vue/commit/aa1356e83de1112660e7a88ff955f49d64bb5b1f",
      "message": "test: e2e tests for basic renderer",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-10-04T22:15:45Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/e2e/specs/basic-ssr.html": [
          {
            "+": "+<!DOCTYPE html>\n+<html lang=\"en\">\n+  <head>\n+    <meta charset=\"utf-8\">\n+    <title></title>\n+  </head>\n+  <body>\n+    <script src=\"../../../dist/vue.min.js\"></script>\n+    <script src=\"../../../packages/vue-server-renderer/basic.js\"></script>\n+\n+    <div id=\"result\">wtf</div>\n+\n+    <script>\n+    var vm = new Vue({\n+      data: { msg: 'foo' },\n+      template: '<div>{{ msg }}</div>'\n+    })\n+\n+    renderVueComponentToString(vm, function (err, result) {\n+      document.getElementById('result').textContent = err && err.toString() || result\n+    })\n+    </script>\n+  </body>\n+</html>\n",
            "-": ""
          }
        ],
        "a/test/e2e/specs/basic-ssr.js": [
          {
            "+": "+module.exports = {\n+  'basic SSR': function (browser) {\n+    browser\n+    .url('http://localhost:8080/test/e2e/specs/basic-ssr.html')\n+      .assert.containsText('#result', '<div data-server-rendered=\"true\">foo</div>')\n+      .end()\n+  }\n+}\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 0
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "dd505438296dcbaae74fd28061600cea07cf25c0",
      "url": "https://github.com/vuejs/vue/commit/dd505438296dcbaae74fd28061600cea07cf25c0",
      "message": "docs: typo fix (#6729)\n\nhttps://github.com/vuejs/vue/blob/94512f3e8cee4030a1096121700ed49afab48073/src/platforms/web/entry-compiler.js#L5",
      "author": {
        "name": "Meyti",
        "email": "meyt@users.noreply.github.com",
        "date": "2017-10-02T20:04:02Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/10482278?v=4"
      },
      "diffObj": {
        "a/packages/vue-template-compiler/README.md": [
          {
            "+": "+### compiler.ssrCompileToFunctions(template)\n",
            "-": "-### compiler.ssrCompileToFunction(template)\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "5fe7dc28d1249737cea57a26d13a9e9342b9007f",
      "url": "https://github.com/vuejs/vue/commit/5fe7dc28d1249737cea57a26d13a9e9342b9007f",
      "message": "docs: add types directory to CONTRIBUTING.md (#6731)",
      "author": {
        "name": "Edd Yerburgh",
        "email": "edward.yerburgh@gmail.com",
        "date": "2017-10-02T20:03:32Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/13196123?v=4"
      },
      "diffObj": {
        "a/.github/CONTRIBUTING.md": [
          {
            "+": "+  - **`types`**: contains TypeScript type definitions\n+\n+    - **`test`**: type definitions tests\n+\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "924bfec9bcd87ad7be77883d5180613a90d93a4b",
      "url": "https://github.com/vuejs/vue/commit/924bfec9bcd87ad7be77883d5180613a90d93a4b",
      "message": "doc: spelling and formatting (#6681)",
      "author": {
        "name": "SheetJSDev",
        "email": "dev@sheetjs.com",
        "date": "2017-09-25T16:31:27Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/6070939?v=4"
      },
      "diffObj": {
        "a/benchmarks/ssr/README.md": [
          {
            "+": "+To view the results follow the run section. Note that the overall completion time for the results are variable, this is due to other system related variants at run time (available memory, processing power, etc). In ideal circumstances both should finish within similar results.\n",
            "-": "-To view the results follow the run section. Note that the overall completion time for the results are variable, this is due to other system related variants at run time (available memory, processing ect). In ideal circumstances both should finish within similar results.\n"
          },
          {
            "+": "+`renderToStream` pipes the content through a stream which provides considerable performance benefits (faster time-to-first-byte and non-event-loop-blocking) over `renderToString`. This can be observed through the benchmark.\n",
            "-": "-`renderToStream` pipes the content through a stream which provides considerable performance benefits (faster time-to-first-byte and non-event-loop-blocking) over renderToString. This can be observed through the benchmark.\n"
          }
        ],
        "a/packages/vue-template-compiler/README.md": [
          {
            "+": "+This package can be used to pre-compile Vue 2.0 templates into render functions to avoid runtime-compilation overhead and CSP restrictions. You will only need it if you are writing build tools with very specific needs. In most cases you should be using [`vue-loader`](https://github.com/vuejs/vue-loader) or [`vueify`](https://github.com/vuejs/vueify) instead, both of which use this package internally.\n",
            "-": "-This package can be used to pre-compile Vue 2.0 templates into render functions to avoid runtime-compilation overhead and CSP restrictions. You will only need it if you are writing build tools with very specific needs. In most cases you should be using [vue-loader](https://github.com/vuejs/vue-loader) or [vueify](https://github.com/vuejs/vueify) instead, both of which use this package internally.\n"
          },
          {
            "+": "+  Defaults to `true`. This means the compiled render function preserves all whitespace characters between HTML tags. If set to `false`, whitespace between tags will be ignored. This can result in slightly better performance but may affect layout for inline elements.\n",
            "-": "-  Defaults to `true`. This means the compiled render function respects all the whitespaces between HTML tags. If set to `false`, all whitespaces between tags will be ignored. This can result in slightly better performance but may affect layout for inline elements.\n"
          },
          {
            "+": "+This is used by default in `vue-loader@>=12` and can be disabled using the [`optimizeSSR`](https://vue-loader.vuejs.org/en/options.html#optimizessr) option.\n",
            "-": "-This is used by default in `vue-loader@>=12` and can be disabled using the [optimizeSSR](https://vue-loader.vuejs.org/en/options.html#optimizessr) option.\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 5,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "docs",
      "sha": "ed88ac411403782bb0e249a9bad73c2174c27c5e",
      "url": "https://github.com/vuejs/vue/commit/ed88ac411403782bb0e249a9bad73c2174c27c5e",
      "message": "docs(packages): fix syntax (#6600)",
      "author": {
        "name": "kazuya kawaguchi",
        "email": "kawakazu80@gmail.com",
        "date": "2017-09-14T12:37:53Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/72989?v=4"
      },
      "diffObj": {
        "a/packages/vue-template-compiler/README.md": [
          {
            "+": "+    }\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "321866a47d9a64835c27b1c45cefd0cd98e07a97",
      "url": "https://github.com/vuejs/vue/commit/321866a47d9a64835c27b1c45cefd0cd98e07a97",
      "message": "test: use headless chrome for dev",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-08-30T14:43:16Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/karma.dev.config.js": [
          {
            "+": "+    browsers: ['ChromeHeadless'],\n",
            "-": "-    browsers: ['Chrome'],\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "09302a7211ee9204500ee3d8ae8720db852e9e7b",
      "url": "https://github.com/vuejs/vue/commit/09302a7211ee9204500ee3d8ae8720db852e9e7b",
      "message": "test(weex): add test cases for richtext component",
      "author": {
        "name": "Hanks",
        "email": "zhanghan.me@gmail.com",
        "date": "2017-07-10T07:50:47Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/8401776?v=4"
      },
      "diffObj": {
        "a/test/weex/runtime/component/richtext.spec.js": [
          {
            "+": "+import {\n+  compileAndStringify,\n+  prepareRuntime,\n+  resetRuntime,\n+  createInstance\n+} from '../../helpers/index'\n+\n+function compileSnippet (runtime, snippet) {\n+  const { render, staticRenderFns } = compileAndStringify(`<div>${snippet}</div>`)\n+  const instance = createInstance(runtime, `\n+    new Vue({\n+      render: ${render},\n+      staticRenderFns: ${staticRenderFns},\n+      el: 'body'\n+    })\n+  `)\n+  const result = instance.getRealRoot().children[0]\n+  return result\n+}\n+\n+describe('richtext component', () => {\n+  let runtime\n+\n+  beforeAll(() => {\n+    runtime = prepareRuntime()\n+  })\n+\n+  afterAll(() => {\n+    resetRuntime()\n+    runtime = null\n+  })\n+\n+  it('with no child', () => {\n+    // pending('work in progress')\n+    expect(compileSnippet(runtime, `\n+      <richtext></richtext>\n+    `)).toEqual({\n+      type: 'richtext'\n+    })\n+  })\n+\n+  it('with single text node', () => {\n+    // pending('work in progress')\n+    expect(compileSnippet(runtime, `\n+      <richtext>single</richtext>\n+    `)).toEqual({\n+      type: 'richtext',\n+      attr: {\n+        value: [{\n+          type: 'span',\n+          attr: {\n+            value: 'single'\n+          }\n+        }]\n+      }\n+    })\n+  })\n+\n+  describe('span', () => {\n+    // pending('work in progress')\n+\n+    it('single node', () => {\n+      expect(compileSnippet(runtime, `\n+        <richtext>\n+          <span>single</span>\n+        </richtext>\n+      `)).toEqual({\n+        type: 'richtext',\n+        attr: {\n+          value: [{\n+            type: 'span',\n+            attr: {\n+              value: 'single'\n+            }\n+          }]\n+        }\n+      })\n+    })\n+\n+    it('multiple node', () => {\n+      expect(compileSnippet(runtime, `\n+        <richtext>\n+          <span>AAA</span>\n+          <span>BBB</span>\n+        </richtext>\n+      `)).toEqual({\n+        type: 'richtext',\n+        attr: {\n+          value: [{\n+            type: 'span',\n+            attr: { value: 'AAA' }\n+          }, {\n+            type: 'span',\n+            attr: { value: 'BBB' }\n+          }]\n+        }\n+      })\n+    })\n+\n+    it('with raw text', () => {\n+      expect(compileSnippet(runtime, `\n+        <richtext>\n+          AAA\n+          <span>BBB</span>CCC\n+          <span>DDD</span>\n+        </richtext>\n+      `)).toEqual({\n+        type: 'richtext',\n+        attr: {\n+          value: [{\n+            type: 'span',\n+            attr: { value: 'AAA' }\n+          }, {\n+            type: 'span',\n+            attr: { value: 'BBB' }\n+          }, {\n+            type: 'span',\n+            attr: { value: 'CCC' }\n+          }, {\n+            type: 'span',\n+            attr: { value: 'DDD' }\n+          }]\n+        }\n+      })\n+    })\n+  })\n+\n+  describe('a', () => {\n+    // pending('work in progress')\n+\n+    it('single node', () => {\n+      expect(compileSnippet(runtime, `\n+        <richtext>\n+          <a href=\"http://whatever.com\"></a>\n+        </richtext>\n+      `)).toEqual({\n+        type: 'richtext',\n+        attr: {\n+          value: [{\n+            type: 'a',\n+            attr: { href: 'http://whatever.com' }\n+          }]\n+        }\n+      })\n+    })\n+\n+    it('multiple node', () => {\n+      expect(compileSnippet(runtime, `\n+        <richtext>\n+          <a href=\"http://a.whatever.com\"></a>\n+          <a href=\"http://b.whatever.com\"></a>\n+        </richtext>\n+      `)).toEqual({\n+        type: 'richtext',\n+        attr: {\n+          value: [{\n+            type: 'a',\n+            attr: { href: 'http://a.whatever.com' }\n+          }, {\n+            type: 'a',\n+            attr: { href: 'http://b.whatever.com' }\n+          }]\n+        }\n+      })\n+    })\n+  })\n+\n+  describe('image', () => {\n+    pending('work in progress')\n+\n+    it('single node', () => {\n+      expect(compileSnippet(runtime, `\n+        <richtext>\n+          <image src=\"path/to/profile.png\"></image>\n+        </richtext>\n+      `)).toEqual({\n+        type: 'richtext',\n+        attr: {\n+          value: [{\n+            type: 'image',\n+            attr: { src: 'path/to/profile.png' }\n+          }]\n+        }\n+      })\n+    })\n+\n+    it('multiple node', () => {\n+      // pending('work in progress')\n+      expect(compileSnippet(runtime, `\n+        <richtext>\n+          <image src=\"path/to/A.png\"></image>\n+          <image src=\"path/to/B.png\"></image>\n+        </richtext>\n+      `)).toEqual({\n+        type: 'richtext',\n+        attr: {\n+          value: [{\n+            type: 'image',\n+            attr: { src: 'path/to/A.png' }\n+          }, {\n+            type: 'image',\n+            attr: { src: 'path/to/B.png' }\n+          }]\n+        }\n+      })\n+    })\n+\n+    it('with width and height', () => {\n+      expect(compileSnippet(runtime, `\n+        <richtext>\n+          <image\n+            style=\"width:150px;height:150px;\"\n+            src=\"path/to/profile.png\">\n+          </image>\n+        </richtext>\n+      `)).toEqual({\n+        type: 'richtext',\n+        attr: {\n+          value: [{\n+            type: 'image',\n+            style: { width: '150px', height: '150px' },\n+            attr: { src: 'path/to/profile.png' }\n+          }]\n+        }\n+      })\n+    })\n+  })\n+\n+  describe('nested', () => {\n+    pending('work in progress')\n+\n+    it('span', () => {\n+      expect(compileSnippet(runtime, `\n+        <richtext>\n+          <span>AAA\n+            <span>\n+              <span>BBB</span>\n+              <span><span>CCC</span>DDD</span>\n+            </span>\n+          </span>\n+        </richtext>\n+      `)).toEqual({\n+        type: 'richtext',\n+        attr: {\n+          value: [{\n+            type: 'span',\n+            children: [{\n+              type: 'span',\n+              attr: { value: 'AAA' }\n+            }, {\n+              type: 'span',\n+              children: [{\n+                type: 'span',\n+                attr: { value: 'BBB' }\n+              }, {\n+                type: 'span',\n+                children: [{\n+                  type: 'span',\n+                  attr: { value: 'CCC' }\n+                }, {\n+                  type: 'span',\n+                  attr: { value: 'DDD' }\n+                }]\n+              }]\n+            }]\n+          }]\n+        }\n+      })\n+    })\n+\n+    it('image and a', () => {\n+      expect(compileSnippet(runtime, `\n+        <richtext>\n+          <span>title</span>\n+          <a href=\"http://remote.com/xx.js\">\n+            <span>name</span>\n+            <image src=\"path/to/yy.gif\"></image>\n+          </a>\n+        </richtext>\n+      `)).toEqual({\n+        type: 'richtext',\n+        attr: {\n+          value: [{\n+            type: 'span',\n+            attr: { value: 'title' }\n+          }, {\n+            type: 'a',\n+            attr: { href: 'http://remote.com/xx.js' },\n+            children: [{\n+              type: 'span',\n+              attr: { value: 'name' }\n+            }, {\n+              type: 'image',\n+              attr: { src: 'path/to/yy.gif' }\n+            }]\n+          }]\n+        }\n+      })\n+    })\n+  })\n+\n+  describe('with styles', () => {\n+    pending('work in progress')\n+  })\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "e0ca894dfb465106094af440667c15f7eded0a25",
      "url": "https://github.com/vuejs/vue/commit/e0ca894dfb465106094af440667c15f7eded0a25",
      "message": "test: improve coverage",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-07-13T05:50:42Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/render.js": [
          {
            "+": "+  /* istanbul ignore else */\n",
            "-": ""
          }
        ],
        "a/src/platforms/web/runtime/components/transition-group.js": [
          {
            "+": "+      /* istanbul ignore if */\n",
            "-": ""
          }
        ],
        "a/test/unit/features/directives/on.spec.js": [
          {
            "+": "+\n+  it('warn object syntax with modifier', () => {\n+    new Vue({\n+      template: `<button v-on.self=\"{}\"></button>`\n+    }).$mount()\n+    expect(`v-on without argument does not support modifiers`).toHaveBeenWarned()\n+  })\n+\n+  it('warn object syntax with non-object value', () => {\n+    new Vue({\n+      template: `<button v-on=\"123\"></button>`\n+    }).$mount()\n+    expect(`v-on without argument expects an Object value`).toHaveBeenWarned()\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 3,
      "qualityScore": 33
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "67fe6cb823ef83283fb82904e9e9074428da1454",
      "url": "https://github.com/vuejs/vue/commit/67fe6cb823ef83283fb82904e9e9074428da1454",
      "message": "test: use latest mobile browsers on saucelabs",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-07-13T04:03:10Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/karma.sauce.config.js": [
          {
            "-": "-    sl_ios_safari_8: {\n-      base: 'SauceLabs',\n-      browserName: 'iphone',\n-      version: '8.4'\n-    },\n",
            "+": ""
          },
          {
            "+": "+      version: '10.3'\n",
            "-": "-      version: '9.3'\n-    },\n-    sl_android_4_4: {\n-      base: 'SauceLabs',\n-      browserName: 'android',\n-      version: '4.4'\n"
          },
          {
            "+": "+    sl_android_6_0: {\n",
            "-": "-    sl_android_5_1: {\n"
          },
          {
            "+": "+      version: '6.0'\n",
            "-": "-      version: '5.1'\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 4,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "754e041b919540f7a9dce6a75aee4e83f9a7d918",
      "url": "https://github.com/vuejs/vue/commit/754e041b919540f7a9dce6a75aee4e83f9a7d918",
      "message": "remove references to gitter; use chat.vuejs.org for discourse (#6084)",
      "author": {
        "name": "Chris Fritz",
        "email": "chrisvfritz@gmail.com",
        "date": "2017-07-13T02:53:14Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/2327556?v=4"
      },
      "diffObj": {
        "a/README.md": [
          {
            "+": "+  <a href=\"https://chat.vuejs.org/\"><img src=\"https://img.shields.io/badge/chat-on%20discord-7289da.svg\" alt=\"Chat\">\n",
            "-": "-  <a href=\"https://gitter.im/vuejs/vue\"><img src=\"https://img.shields.io/gitter/room/nwjs/nw.js.svg\" alt=\"Gitter\">\n-  <a href=\"https://discordapp.com/invite/eKWPvZ9\"><img src=\"https://img.shields.io/badge/chat-on%20discord-7289da.svg\" alt=\"Discord\">\n"
          },
          {
            "+": "+For questions and support please use the [the official forum](http://forum.vuejs.org) or [community chat](https://chat.vuejs.org/). The issue list of this repo is **exclusively** for bug reports and feature requests.\n",
            "-": "-For questions and support please use the [Discord chat room](https://vue-land.js.org/), [Gitter chat room](https://gitter.im/vuejs/vue), or [the official forum](http://forum.vuejs.org). The issue list of this repo is **exclusively** for bug reports and feature requests.\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 0
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "485e7403e4abc71376df041ea37790c5a77bf0a7",
      "url": "https://github.com/vuejs/vue/commit/485e7403e4abc71376df041ea37790c5a77bf0a7",
      "message": "test: make tests pass in IE",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-07-12T10:33:16Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/component/component-async.spec.js": [
          {
            "+": "+      }, 50)\n",
            "-": "-      }, 30)\n"
          }
        ],
        "a/test/unit/features/instance/properties.spec.js": [
          {
            "+": "+    // has to be in dom for test to pass in IE\n+    document.body.appendChild(vm.$el)\n+\n",
            "-": ""
          },
          {
            "+": "+      document.body.removeChild(vm.$el)\n",
            "-": ""
          }
        ],
        "a/test/unit/modules/vdom/patch/hydration.spec.js": [
          {
            "+": "+    }, 10)\n",
            "-": "-    }, 0)\n"
          },
          {
            "+": "+    }, 2)\n",
            "-": "-    }, 1)\n"
          },
          {
            "+": "+    }, 50)\n",
            "-": "-    }, 10)\n"
          },
          {
            "+": "+    }, 50)\n",
            "-": "-    }, 10)\n"
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 7,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "1bf98b0a99c5bac67042cabb590e9997c6cac1f4",
      "url": "https://github.com/vuejs/vue/commit/1bf98b0a99c5bac67042cabb590e9997c6cac1f4",
      "message": "test: adjust transition tests for firefox",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-07-12T08:27:01Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/transition/transition-mode.spec.js": [
          {
            "+": "+    it('transition out-in on async component (resolve before leave complete)', done => {\n+      const vm = new Vue({\n+        template: `\n+          <div>\n+            <transition name=\"test-anim\" mode=\"out-in\">\n+              <component-a v-if=\"ok\"></component-a>\n+              <component-b v-else></component-b>\n+            </transition>\n+          </div>\n+        `,\n+        components: {\n+          componentA: resolve => {\n+            setTimeout(() => {\n+              resolve({ template: '<div><h1>component A</h1></div>' })\n+              next1()\n+            }, duration / 2)\n+          },\n+          componentB: resolve => {\n+            setTimeout(() => {\n+              resolve({ template: '<div><h1>component B</h1></div>' })\n+            }, duration / 2)\n+          }\n+        },\n+        data: {\n+          ok: true\n+        }\n+      }).$mount(el)\n+\n+      expect(vm.$el.innerHTML).toBe('<!---->')\n+\n+      function next1 () {\n+        Vue.nextTick(() => {\n+          expect(vm.$el.children.length).toBe(1)\n+          expect(vm.$el.textContent).toBe('component A')\n+          expect(vm.$el.children[0].className).toBe('test-anim-enter test-anim-enter-active')\n+          nextFrame(() => {\n+            expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n+            setTimeout(() => {\n+              expect(vm.$el.children[0].className).toBe('')\n+              vm.ok = false\n+              next2()\n+            }, duration + buffer)\n+          })\n+        })\n+      }\n+\n+      function next2 () {\n+        waitForUpdate(() => {\n+          expect(vm.$el.children.length).toBe(1)\n+          expect(vm.$el.textContent).toBe('component A')\n+          expect(vm.$el.children[0].className).toBe('test-anim-leave test-anim-leave-active')\n+        }).thenWaitFor(nextFrame).then(() => {\n+          expect(vm.$el.children[0].className).toBe('test-anim-leave-active test-anim-leave-to')\n+        }).thenWaitFor(duration + buffer).then(() => {\n+          expect(vm.$el.children.length).toBe(1)\n+          expect(vm.$el.textContent).toBe('component B')\n+          expect(vm.$el.children[0].className).toMatch('test-anim-enter-active')\n+        }).thenWaitFor(duration * 2).then(() => {\n+          expect(vm.$el.children[0].className).toBe('')\n+        }).then(done)\n+      }\n+    })\n+\n+    it('transition out-in on async component (resolve after leave complete)', done => {\n+      const vm = new Vue({\n+        template: `\n+          <div>\n+            <transition name=\"test-anim\" mode=\"out-in\">\n+              <component-a v-if=\"ok\"></component-a>\n+              <component-b v-else></component-b>\n+            </transition>\n+          </div>\n+        `,\n+        components: {\n+          componentA: { template: '<div><h1>component A</h1></div>' },\n+          componentB: resolve => {\n+            setTimeout(() => {\n+              resolve({ template: '<div><h1>component B</h1></div>' })\n+              Vue.nextTick(next)\n+            }, (duration + buffer) * 1.5)\n+          }\n+        },\n+        data: {\n+          ok: true\n+        }\n+      }).$mount(el)\n+\n+      expect(vm.$el.innerHTML).toBe('<div><h1>component A</h1></div>')\n+\n+      let next\n+\n+      vm.ok = false\n+      waitForUpdate(() => {\n+        expect(vm.$el.children.length).toBe(1)\n+        expect(vm.$el.textContent).toBe('component A')\n+        expect(vm.$el.children[0].className).toBe('test-anim-leave test-anim-leave-active')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test-anim-leave-active test-anim-leave-to')\n+      }).thenWaitFor(duration + buffer).then(() => {\n+        expect(vm.$el.children.length).toBe(0)\n+        expect(vm.$el.innerHTML).toBe('<!---->')\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.children.length).toBe(1)\n+        expect(vm.$el.textContent).toBe('component B')\n+        expect(vm.$el.children[0].className).toBe('test-anim-enter test-anim-enter-active')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n+      }).thenWaitFor(duration + buffer).then(() => {\n+        expect(vm.$el.children.length).toBe(1)\n+        expect(vm.$el.textContent).toBe('component B')\n+        expect(vm.$el.children[0].className).toBe('')\n+      }).then(done)\n+    })\n+\n+    it('transition in-out on async component', done => {\n+      const vm = new Vue({\n+        template: `\n+          <div>\n+            <transition name=\"test-anim\" mode=\"in-out\">\n+              <component-a v-if=\"ok\"></component-a>\n+              <component-b v-else></component-b>\n+            </transition>\n+          </div>\n+        `,\n+        components: {\n+          componentA: resolve => {\n+            setTimeout(() => {\n+              resolve({ template: '<div><h1>component A</h1></div>' })\n+              next1()\n+            }, duration / 2)\n+          },\n+          componentB: resolve => {\n+            setTimeout(() => {\n+              resolve({ template: '<div><h1>component B</h1></div>' })\n+              next2()\n+            }, duration / 2)\n+          }\n+        },\n+        data: {\n+          ok: true\n+        }\n+      }).$mount(el)\n+\n+      expect(vm.$el.innerHTML).toBe('<!---->')\n+\n+      function next1 () {\n+        Vue.nextTick(() => {\n+          expect(vm.$el.children.length).toBe(1)\n+          expect(vm.$el.textContent).toBe('component A')\n+          expect(vm.$el.children[0].className).toBe('test-anim-enter test-anim-enter-active')\n+          nextFrame(() => {\n+            expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n+            setTimeout(() => {\n+              expect(vm.$el.children[0].className).toBe('')\n+              vm.ok = false\n+            }, duration + buffer)\n+          })\n+        })\n+      }\n+\n+      function next2 () {\n+        waitForUpdate(() => {\n+          expect(vm.$el.children.length).toBe(2)\n+          expect(vm.$el.textContent).toBe('component Acomponent B')\n+          expect(vm.$el.children[0].className).toBe('')\n+          expect(vm.$el.children[1].className).toBe('test-anim-enter test-anim-enter-active')\n+        }).thenWaitFor(nextFrame).then(() => {\n+          expect(vm.$el.children[1].className).toBe('test-anim-enter-active test-anim-enter-to')\n+        }).thenWaitFor(duration + buffer).then(() => {\n+          expect(vm.$el.children.length).toBe(2)\n+          expect(vm.$el.textContent).toBe('component Acomponent B')\n+          expect(vm.$el.children[0].className).toMatch('test-anim-leave-active')\n+          expect(vm.$el.children[1].className).toBe('')\n+        }).thenWaitFor(duration + buffer).then(() => {\n+          expect(vm.$el.children.length).toBe(1)\n+          expect(vm.$el.textContent).toBe('component B')\n+          expect(vm.$el.children[0].className).toBe('')\n+        }).then(done)\n+      }\n+    })\n+\n",
            "-": ""
          }
        ],
        "a/test/unit/features/transition/transition.spec.js": [
          {
            "-": "-    it('transition out-in on async component (resolve before leave complete)', done => {\n-      const vm = new Vue({\n-        template: `\n-          <div>\n-            <transition name=\"test-anim\" mode=\"out-in\">\n-              <component-a v-if=\"ok\"></component-a>\n-              <component-b v-else></component-b>\n-            </transition>\n-          </div>\n-        `,\n-        components: {\n-          componentA: resolve => {\n-            setTimeout(() => {\n-              resolve({ template: '<div><h1>component A</h1></div>' })\n-              next1()\n-            }, duration / 2)\n-          },\n-          componentB: resolve => {\n-            setTimeout(() => {\n-              resolve({ template: '<div><h1>component B</h1></div>' })\n-            }, duration / 2)\n-          }\n-        },\n-        data: {\n-          ok: true\n-        }\n-      }).$mount(el)\n-\n-      expect(vm.$el.innerHTML).toBe('<!---->')\n-\n-      function next1 () {\n-        Vue.nextTick(() => {\n-          expect(vm.$el.children.length).toBe(1)\n-          expect(vm.$el.textContent).toBe('component A')\n-          expect(vm.$el.children[0].className).toBe('test-anim-enter test-anim-enter-active')\n-          nextFrame(() => {\n-            expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n-            setTimeout(() => {\n-              expect(vm.$el.children[0].className).toBe('')\n-              vm.ok = false\n-              next2()\n-            }, duration + buffer)\n-          })\n-        })\n-      }\n-\n-      function next2 () {\n-        waitForUpdate(() => {\n-          expect(vm.$el.children.length).toBe(1)\n-          expect(vm.$el.textContent).toBe('component A')\n-          expect(vm.$el.children[0].className).toBe('test-anim-leave test-anim-leave-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[0].className).toBe('test-anim-leave-active test-anim-leave-to')\n-        }).thenWaitFor(duration + buffer).then(() => {\n-          expect(vm.$el.children.length).toBe(1)\n-          expect(vm.$el.textContent).toBe('component B')\n-          expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n-        }).thenWaitFor(duration + buffer).then(() => {\n-          expect(vm.$el.children[0].className).toBe('')\n-        }).then(done)\n-      }\n-    })\n-\n-    it('transition out-in on async component (resolve after leave complete)', done => {\n-      const vm = new Vue({\n-        template: `\n-          <div>\n-            <transition name=\"test-anim\" mode=\"out-in\">\n-              <component-a v-if=\"ok\"></component-a>\n-              <component-b v-else></component-b>\n-            </transition>\n-          </div>\n-        `,\n-        components: {\n-          componentA: { template: '<div><h1>component A</h1></div>' },\n-          componentB: resolve => {\n-            setTimeout(() => {\n-              resolve({ template: '<div><h1>component B</h1></div>' })\n-              Vue.nextTick(next)\n-            }, (duration + buffer) * 1.5)\n-          }\n-        },\n-        data: {\n-          ok: true\n-        }\n-      }).$mount(el)\n-\n-      expect(vm.$el.innerHTML).toBe('<div><h1>component A</h1></div>')\n-\n-      let next\n-\n-      vm.ok = false\n-      waitForUpdate(() => {\n-        expect(vm.$el.children.length).toBe(1)\n-        expect(vm.$el.textContent).toBe('component A')\n-        expect(vm.$el.children[0].className).toBe('test-anim-leave test-anim-leave-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test-anim-leave-active test-anim-leave-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.children.length).toBe(0)\n-        expect(vm.$el.innerHTML).toBe('<!---->')\n-      }).thenWaitFor(_next => { next = _next }).then(() => {\n-        expect(vm.$el.children.length).toBe(1)\n-        expect(vm.$el.textContent).toBe('component B')\n-        expect(vm.$el.children[0].className).toBe('test-anim-enter test-anim-enter-active')\n-      }).thenWaitFor(nextFrame).then(() => {\n-        expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n-      }).thenWaitFor(duration + buffer).then(() => {\n-        expect(vm.$el.children.length).toBe(1)\n-        expect(vm.$el.textContent).toBe('component B')\n-        expect(vm.$el.children[0].className).toBe('')\n-      }).then(done)\n-    })\n-\n-    it('transition in-out on async component', done => {\n-      const vm = new Vue({\n-        template: `\n-          <div>\n-            <transition name=\"test-anim\" mode=\"in-out\">\n-              <component-a v-if=\"ok\"></component-a>\n-              <component-b v-else></component-b>\n-            </transition>\n-          </div>\n-        `,\n-        components: {\n-          componentA: resolve => {\n-            setTimeout(() => {\n-              resolve({ template: '<div><h1>component A</h1></div>' })\n-              next1()\n-            }, duration / 2)\n-          },\n-          componentB: resolve => {\n-            setTimeout(() => {\n-              resolve({ template: '<div><h1>component B</h1></div>' })\n-              next2()\n-            }, duration / 2)\n-          }\n-        },\n-        data: {\n-          ok: true\n-        }\n-      }).$mount(el)\n-\n-      expect(vm.$el.innerHTML).toBe('<!---->')\n-\n-      function next1 () {\n-        Vue.nextTick(() => {\n-          expect(vm.$el.children.length).toBe(1)\n-          expect(vm.$el.textContent).toBe('component A')\n-          expect(vm.$el.children[0].className).toBe('test-anim-enter test-anim-enter-active')\n-          nextFrame(() => {\n-            expect(vm.$el.children[0].className).toBe('test-anim-enter-active test-anim-enter-to')\n-            setTimeout(() => {\n-              expect(vm.$el.children[0].className).toBe('')\n-              vm.ok = false\n-            }, duration + buffer)\n-          })\n-        })\n-      }\n-\n-      function next2 () {\n-        waitForUpdate(() => {\n-          expect(vm.$el.children.length).toBe(2)\n-          expect(vm.$el.textContent).toBe('component Acomponent B')\n-          expect(vm.$el.children[0].className).toBe('')\n-          expect(vm.$el.children[1].className).toBe('test-anim-enter test-anim-enter-active')\n-        }).thenWaitFor(nextFrame).then(() => {\n-          expect(vm.$el.children[1].className).toBe('test-anim-enter-active test-anim-enter-to')\n-        }).thenWaitFor(duration + buffer).then(() => {\n-          expect(vm.$el.children.length).toBe(2)\n-          expect(vm.$el.textContent).toBe('component Acomponent B')\n-          expect(vm.$el.children[0].className).toBe('test-anim-leave-active test-anim-leave-to')\n-          expect(vm.$el.children[1].className).toBe('')\n-        }).thenWaitFor(duration + buffer).then(() => {\n-          expect(vm.$el.children.length).toBe(1)\n-          expect(vm.$el.textContent).toBe('component B')\n-          expect(vm.$el.children[0].className).toBe('')\n-        }).then(done)\n-      }\n-    })\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "606666d5a9008ab72f7cce9803b26310c636eef8",
      "url": "https://github.com/vuejs/vue/commit/606666d5a9008ab72f7cce9803b26310c636eef8",
      "message": "test: fix Object.prototype.watch related warnings",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-07-12T07:50:09Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/state.js": [
          {
            "+": "+  nativeWatch,\n",
            "-": ""
          },
          {
            "+": "+  if (opts.watch && opts.watch !== nativeWatch) {\n+    initWatch(vm, opts.watch)\n+  }\n",
            "-": "-  if (opts.watch) initWatch(vm, opts.watch)\n"
          }
        ],
        "a/src/core/util/env.js": [
          {
            "+": "+// Firefix has a \"watch\" function on Object.prototype...\n+export const nativeWatch = ({}).watch\n+\n",
            "-": ""
          }
        ],
        "a/src/core/util/options.js": [
          {
            "+": "+import { nativeWatch } from './env'\n",
            "-": ""
          },
          {
            "+": "+  // work around Firefox's Object.prototype.watch...\n+  if (parentVal === nativeWatch) parentVal = undefined\n+  if (childVal === nativeWatch) childVal = undefined\n",
            "-": ""
          }
        ],
        "a/test/helpers/test-object-option.js": [
          {
            "+": "+  it('should warn non object value', () => {\n",
            "-": "-  it('should warn non object', () => {\n"
          },
          {
            "+": "+  it('should not warn valid object value', () => {\n",
            "-": "-  it('don\\'t warn when is an object', () => {\n"
          }
        ],
        "a/test/unit/features/options/watch.spec.js": [
          {
            "+": "+  testObjectOption('watch')\n+\n",
            "-": ""
          },
          {
            "-": "-  testObjectOption('watch')\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 5,
      "numOfChanges": 9,
      "qualityScore": 20
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "afa108238f95b93a505ac9b2159cc99b42697e9f",
      "url": "https://github.com/vuejs/vue/commit/afa108238f95b93a505ac9b2159cc99b42697e9f",
      "message": "test: remove unecessary id in test case",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-07-11T08:55:14Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/directives/on.spec.js": [
          {
            "-": "-          id=\"foo\"\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "style",
      "sha": "5dbca4e3c4641a652163aac8b5c9d4e214ca2597",
      "url": "https://github.com/vuejs/vue/commit/5dbca4e3c4641a652163aac8b5c9d4e214ca2597",
      "message": "style: tweak import style",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-07-10T13:05:24Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/inject.js": [
          {
            "-": "-import { hasSymbol } from 'core/util/env'\n",
            "+": ""
          },
          {
            "-": "-import { defineReactive } from '../observer/index'\n",
            "+": ""
          },
          {
            "+": "+import { hasSymbol } from 'core/util/env'\n+import { defineReactive } from '../observer/index'\n",
            "-": ""
          }
        ],
        "a/src/core/observer/index.js": [
          {
            "+": "+  warn,\n+  hasOwn,\n+  hasProto,\n",
            "-": ""
          },
          {
            "-": "-  hasProto,\n-  hasOwn,\n-  warn,\n",
            "+": ""
          }
        ],
        "a/src/core/util/props.js": [
          {
            "-": "-import { hasOwn, isObject, isPlainObject, capitalize, hyphenate } from 'shared/util'\n-import { observe, observerState } from '../observer/index'\n",
            "+": ""
          },
          {
            "+": "+import { observe, observerState } from '../observer/index'\n+import {\n+  hasOwn,\n+  isObject,\n+  hyphenate,\n+  capitalize,\n+  isPlainObject\n+} from 'shared/util'\n",
            "-": ""
          }
        ],
        "a/src/server/create-renderer.js": [
          {
            "-": "-import TemplateRenderer from './template-renderer/index'\n",
            "+": ""
          },
          {
            "+": "+import TemplateRenderer from './template-renderer/index'\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 9,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "docs",
      "sha": "bd79d7e179c9486f37380907b30379c2a198114b",
      "url": "https://github.com/vuejs/vue/commit/bd79d7e179c9486f37380907b30379c2a198114b",
      "message": "README update to include Vue Land as questions resource and chat badges (#5947)\n\n* Updated README to include Vue Land :smiley:\r\n\r\n* Updated Discord link to be the Vue Land site\r\n\r\n* Added Gitter and Discord Badges to README",
      "author": {
        "name": "J. Dalton Childers",
        "email": "jdaltonchilders@users.noreply.github.com",
        "date": "2017-06-30T00:44:17Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/9093285?v=4"
      },
      "diffObj": {
        "a/README.md": [
          {
            "+": "+  <a href=\"https://gitter.im/vuejs/vue\"><img src=\"https://img.shields.io/gitter/room/nwjs/nw.js.svg\" alt=\"Gitter\">\n+  <a href=\"https://discordapp.com/invite/eKWPvZ9\"><img src=\"https://img.shields.io/badge/chat-on%20discord-7289da.svg\" alt=\"Discord\">\n",
            "-": ""
          },
          {
            "+": "+For questions and support please use the [Discord chat room](https://vue-land.js.org/), [Gitter chat room](https://gitter.im/vuejs/vue), or [the official forum](http://forum.vuejs.org). The issue list of this repo is **exclusively** for bug reports and feature requests.\n",
            "-": "-For questions and support please use the [Gitter chat room](https://gitter.im/vuejs/vue) or [the official forum](http://forum.vuejs.org). The issue list of this repo is **exclusively** for bug reports and feature requests.\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "00a3085628e78176fe02a3c5eb58bb0199c6ca91",
      "url": "https://github.com/vuejs/vue/commit/00a3085628e78176fe02a3c5eb58bb0199c6ca91",
      "message": "test: correcting existing test case (#5909)\n\nFix the location of the test case",
      "author": {
        "name": "lyhper",
        "email": "644186735@qq.com",
        "date": "2017-06-29T04:39:02Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/13343726?v=4"
      },
      "diffObj": {
        "a/test/unit/features/global-api/set-delete.spec.js": [
          {
            "+": "+\n+    it('be able to use string type index in array', done => {\n+      const vm = new Vue({\n+        template: '<div><p v-for=\"obj in lists\">{{obj.name}}</p></div>',\n+        data: {\n+          lists: [\n+            { name: 'A' },\n+            { name: 'B' },\n+            { name: 'C' }\n+          ]\n+        }\n+      }).$mount()\n+      expect(vm.$el.innerHTML).toBe('<p>A</p><p>B</p><p>C</p>')\n+      Vue.set(vm.lists, '0', { name: 'D' })\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe('<p>D</p><p>B</p><p>C</p>')\n+      }).then(done)\n+    })\n",
            "-": ""
          },
          {
            "-": "-\n-    it('be able to use string type index in array', done => {\n-      const vm = new Vue({\n-        template: '<div><p v-for=\"obj in lists\">{{obj.name}}</p></div>',\n-        data: {\n-          lists: [\n-            { name: 'A' },\n-            { name: 'B' },\n-            { name: 'C' }\n-          ]\n-        }\n-      }).$mount()\n-      expect(vm.$el.innerHTML).toBe('<p>A</p><p>B</p><p>C</p>')\n-      Vue.set(vm.lists, '0', { name: 'D' })\n-      waitForUpdate(() => {\n-        expect(vm.$el.innerHTML).toBe('<p>D</p><p>B</p><p>C</p>')\n-      }).then(done)\n-    })\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "07a37264c3b56952435331983adcf4081390b400",
      "url": "https://github.com/vuejs/vue/commit/07a37264c3b56952435331983adcf4081390b400",
      "message": "remove reference to refElm after initial patch (fix #5851)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-06-09T14:01:36Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/lifecycle.js": [
          {
            "+": "+      // no need for the ref nodes after initial patch\n+      // this prevents keeping a detached DOM tree in memory (#5851)\n+      vm.$options._parentElm = vm.$options._refElm = null\n",
            "-": ""
          },
          {
            "-": "-    // remove reference to DOM nodes (prevents leak)\n-    vm.$options._parentElm = vm.$options._refElm = null\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "style",
      "sha": "7f7bf91d3fc69674d8d45c7e6861aa7dfcf8582a",
      "url": "https://github.com/vuejs/vue/commit/7f7bf91d3fc69674d8d45c7e6861aa7dfcf8582a",
      "message": "style tweak",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-05-25T10:06:42Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/parser/index.js": [
          {
            "+": "+\n",
            "-": "-  platformGetTagNamespace = options.getTagNamespace || no\n-  platformMustUseProp = options.mustUseProp || no\n"
          },
          {
            "+": "+  platformMustUseProp = options.mustUseProp || no\n+  platformGetTagNamespace = options.getTagNamespace || no\n+\n",
            "-": "-  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode')\n"
          },
          {
            "+": "+  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode')\n",
            "-": ""
          },
          {
            "+": "+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 4,
      "qualityScore": 25
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "8262edcd22d787e652da2762eb36f2780c971be7",
      "url": "https://github.com/vuejs/vue/commit/8262edcd22d787e652da2762eb36f2780c971be7",
      "message": "test for ssr rendering async components",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-05-21T02:32:04Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-string.spec.js": [
          {
            "+": "+\n+  it('render async components', done => {\n+    const Foo = () => Promise.resolve({\n+      render: h => h('div', [h('span', 'foo'), h(Bar)])\n+    })\n+    const Bar = () => ({\n+      component: Promise.resolve({\n+        render: h => h('span', 'bar')\n+      })\n+    })\n+    renderVmWithOptions({\n+      render: h => h(Foo)\n+    }, res => {\n+      expect(res).toContain(`<div data-server-rendered=\"true\"><span>foo</span><span>bar</span></div>`)\n+      done()\n+    })\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "2f4ad14d9f010054178e3a02d0044e8ac8f5d5ce",
      "url": "https://github.com/vuejs/vue/commit/2f4ad14d9f010054178e3a02d0044e8ac8f5d5ce",
      "message": "test template v-if/v-for",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-05-18T08:04:54Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-string.spec.js": [
          {
            "+": "+  it('should prevent xss in attribtues', done => {\n",
            "-": "-  it('should prevent xss in attribtues', () => {\n"
          },
          {
            "+": "+      done()\n+    })\n+  })\n+\n+  it('template v-if', done => {\n+    renderVmWithOptions({\n+      template: `\n+        <div>\n+          <span>foo</span>\n+          <template v-if=\"true\">\n+            <span>foo</span> bar <span>baz</span>\n+          </template>\n+        </div>\n+      `\n+    }, res => {\n+      expect(res).toContain(`<div data-server-rendered=\"true\"><span>foo</span> <span>foo</span> bar <span>baz</span></div>`)\n+      done()\n+    })\n+  })\n+\n+  it('template v-for', done => {\n+    renderVmWithOptions({\n+      template: `\n+        <div>\n+          <span>foo</span>\n+          <template v-for=\"i in 2\">\n+            <span>{{ i }}</span><span>bar</span>\n+          </template>\n+        </div>\n+      `\n+    }, res => {\n+      expect(res).toContain(`<div data-server-rendered=\"true\"><span>foo</span> <span>1</span><span>bar</span><span>2</span><span>bar</span></div>`)\n+      done()\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "9fbca0dc792e94eb775a8f08694a04963dc20e07",
      "url": "https://github.com/vuejs/vue/commit/9fbca0dc792e94eb775a8f08694a04963dc20e07",
      "message": "remove unused, fix type",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-05-17T06:40:06Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/flow/component.js": [
          {
            "+": "+import type StringNode from '../src/server/optimizing-compiler/runtime-helpers'\n",
            "-": ""
          },
          {
            "+": "+  // SSR specific\n+  _ssrNode: (open: string, close?: string, ) => StringNode;\n+  _ssrList: (val: any, render: () => string) => string;\n+  _ssrEscape: (v: string) => string;\n+\n",
            "-": ""
          }
        ],
        "a/src/compiler/codegen/index.js": [
          {
            "+": "+export type CodegenResult = {\n",
            "-": "-type CodegenResult = {\n"
          }
        ],
        "a/src/compiler/to-function.js": [
          {
            "-": "-  stringRenderFns?: Array<Function>;\n",
            "+": ""
          },
          {
            "-": "-    // ssr-specific\n-    if (res.stringRenderFns) {\n-      res.stringRenderFns = compiled.stringRenderFns.map(code => {\n-        return createFunction(code, fnGenErrors)\n-      })\n-    }\n",
            "+": ""
          }
        ],
        "a/src/server/optimizing-compiler/codegen.js": [
          {
            "+": "+import type { CodegenResult } from 'compiler/codegen/index'\n",
            "-": "-type SSRCompileResult = {\n-  render: string;\n-  staticRenderFns: Array<string>;\n-  stringRenderFns: Array<string>;\n-};\n"
          },
          {
            "-": "-class SSRCodegenState extends CodegenState {\n-  stringRenderFns: Array<string>;\n-\n-  constructor (options: CompilerOptions) {\n-    super(options)\n-    this.stringRenderFns = []\n-  }\n-}\n-\n",
            "+": ""
          },
          {
            "+": "+): CodegenResult {\n+  const state = new CodegenState(options)\n",
            "-": "-): SSRCompileResult {\n-  const state = new SSRCodegenState(options)\n"
          },
          {
            "+": "+    staticRenderFns: state.staticRenderFns\n",
            "-": "-    staticRenderFns: state.staticRenderFns,\n-    stringRenderFns: state.stringRenderFns\n"
          },
          {
            "+": "+function genSSRElement (el: ASTElement, state: CodegenState): string {\n",
            "-": "-function genSSRElement (el: ASTElement, state: SSRCodegenState): string {\n"
          }
        ],
        "a/src/server/optimizing-compiler/index.js": [
          {
            "+": "+    staticRenderFns: code.staticRenderFns\n",
            "-": "-    staticRenderFns: code.staticRenderFns,\n-    stringRenderFns: code.stringRenderFns\n"
          }
        ],
        "a/src/server/optimizing-compiler/runtime-helpers.js": [
          {
            "+": "+import { escape } from 'he'\n",
            "-": ""
          },
          {
            "+": "+export function installSSRHelpers (vm: Component) {\n+  let Ctor = vm.constructor\n+  while (Ctor.super) {\n+    Ctor = Ctor.super\n+  }\n+  if (!Ctor.prototype._ssrNode) {\n+    Ctor.prototype._ssrNode = createStringNode\n+    Ctor.prototype._ssrList = createStringList\n+    Ctor.prototype._ssrEscape = escape\n+  }\n+}\n+\n+export class StringNode {\n+  isString: boolean;\n+  open: string;\n+  close: ?string;\n+  children: ?Array<any>;\n+\n+  constructor (open: string, close?: string, children?: Array<any>) {\n+    this.isString = true\n+    this.open = open\n+    this.close = close\n+    this.children = children\n+  }\n",
            "-": "-function StringNode (open, close, children) {\n-  this.isString = true\n-  this.open = open\n-  this.close = close\n-  this.children = children\n"
          },
          {
            "+": "+function createStringNode (\n",
            "-": "-export function createStringNode (\n"
          },
          {
            "+": "+function createStringList (val: any, render: () => string): string {\n",
            "-": "-export function createStringList (val: any, render: () => string): string {\n"
          }
        ],
        "a/src/server/render.js": [
          {
            "+": "+import { installSSRHelpers } from './optimizing-compiler/runtime-helpers'\n",
            "-": ""
          },
          {
            "-": "-import {\n-  createStringNode,\n-  createStringList\n-} from './optimizing-compiler/runtime-helpers'\n-\n",
            "+": ""
          },
          {
            "-": "-  vm._ssrEscape = escape\n-  vm._ssrNode = createStringNode\n-  vm._ssrList = createStringList\n",
            "+": ""
          },
          {
            "+": "+    installSSRHelpers(component)\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 7,
      "numOfChanges": 19,
      "qualityScore": 24
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "228f0f8f3b08312d926f99b3d57757fee40e4870",
      "url": "https://github.com/vuejs/vue/commit/228f0f8f3b08312d926f99b3d57757fee40e4870",
      "message": "remove unnecessary :any castings due to improved flow checks",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-04-29T06:56:14Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/package.json": [
          {
            "+": "+    \"flow-bin\": \"^0.45.0\",\n",
            "-": "-    \"flow-bin\": \"^0.39.0\",\n"
          }
        ],
        "a/src/core/instance/render.js": [
          {
            "+": "+  toString,\n",
            "-": "-  _toString,\n"
          },
          {
            "+": "+  Vue.prototype._s = toString\n",
            "-": "-  Vue.prototype._s = _toString\n"
          }
        ],
        "a/src/core/vdom/create-component.js": [
          {
            "+": "+  Ctor: Class<Component> | Function | Object | void,\n",
            "-": "-  Ctor: any,\n"
          }
        ],
        "a/src/core/vdom/create-element.js": [
          {
            "+": "+  if (isDef(vnode.children)) {\n",
            "-": "-  if (Array.isArray(vnode.children)) {\n"
          }
        ],
        "a/src/core/vdom/create-functional-component.js": [
          {
            "-": "-    propsData = propsData || {}\n",
            "+": ""
          },
          {
            "+": "+      props[key] = validateProp(key, propOptions, propsData || {})\n",
            "-": "-      props[key] = validateProp(key, propOptions, propsData)\n"
          }
        ],
        "a/src/core/vdom/helpers/extract-props.js": [
          {
            "+": "+  hash: ?Object,\n",
            "-": "-  hash: any,\n"
          }
        ],
        "a/src/core/vdom/helpers/normalize-children.js": [
          {
            "+": "+        last.text += String(c)\n",
            "-": "-        (last: any).text += String(c)\n"
          },
          {
            "+": "+          c.key = `__vlist${nestedIndex}_${i}__`\n",
            "-": "-          c.key = `__vlist${(nestedIndex: any)}_${i}__`\n"
          }
        ],
        "a/src/platforms/web/runtime/modules/dom-props.js": [
          {
            "+": "+      const strCur = isUndef(cur) ? '' : String(cur)\n",
            "-": "-      const strCur = cur == null ? '' : String(cur)\n"
          }
        ],
        "a/src/platforms/web/runtime/modules/transition.js": [
          {
            "+": "+  } = data\n",
            "-": "-  } = (data: any)\n"
          },
          {
            "+": "+  } = data\n",
            "-": "-  } = (data: any)\n"
          },
          {
            "+": "+  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n",
            "-": "-  if (process.env.NODE_ENV !== 'production' && explicitLeaveDuration != null) {\n"
          },
          {
            "+": "+      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key: any)] = vnode\n",
            "-": "-      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode\n"
          }
        ],
        "a/src/platforms/web/server/modules/attrs.js": [
          {
            "+": "+  let parent = node.parent\n",
            "-": "-  let parent: any = node.parent\n"
          }
        ],
        "a/src/platforms/web/server/modules/dom-props.js": [
          {
            "+": "+  let parent = node.parent\n",
            "-": "-  let parent: any = node.parent\n"
          },
          {
            "+": "+  const attrs = node.data.attrs\n",
            "-": "-  const attrs: any = node.data.attrs\n"
          }
        ],
        "a/src/server/render.js": [
          {
            "+": "+      has(key, hit => {\n",
            "-": "-      (has: any)(key, hit => {\n"
          },
          {
            "+": "+          get(key, res => {\n",
            "-": "-          (get: any)(key, res => {\n"
          },
          {
            "+": "+      get(key, res => {\n",
            "-": "-      (get: any)(key, res => {\n"
          }
        ],
        "a/src/shared/util.js": [
          {
            "+": "+export function isUndef (v: any): boolean %checks {\n",
            "-": "-export function isUndef (v: any): boolean {\n"
          },
          {
            "+": "+export function isDef (v: any): boolean %checks {\n",
            "-": "-export function isDef (v: any) /* : %checks */ {\n"
          },
          {
            "+": "+export function isTrue (v: any): boolean %checks {\n",
            "-": "-export function isTrue (v: any): boolean {\n"
          },
          {
            "+": "+export function isPrimitive (value: any): boolean %checks {\n",
            "-": "-export function isPrimitive (value: any): boolean {\n"
          },
          {
            "+": "+export function isObject (obj: mixed): boolean %checks {\n",
            "-": "-export function isObject (obj: mixed): boolean {\n"
          },
          {
            "+": "+const _toString = Object.prototype.toString\n",
            "-": "-const toString = Object.prototype.toString\n"
          },
          {
            "+": "+  return _toString.call(obj) === '[object Object]'\n",
            "-": "-  return toString.call(obj) === '[object Object]'\n"
          },
          {
            "+": "+  return _toString.call(v) === '[object RegExp]'\n",
            "-": "-  return toString.call(v) === '[object RegExp]'\n"
          },
          {
            "+": "+export function toString (val: any): string {\n",
            "-": "-export function _toString (val: any): string {\n"
          }
        ],
        "a/yarn.lock": [
          {
            "+": "+flow-bin@^0.45.0:\n+  version \"0.45.0\"\n+  resolved \"https://registry.yarnpkg.com/flow-bin/-/flow-bin-0.45.0.tgz#009dd0f577a3f665c74ca8be827ae8c2dd8fd6b5\"\n",
            "-": "-flow-bin@^0.39.0:\n-  version \"0.39.0\"\n-  resolved \"https://registry.yarnpkg.com/flow-bin/-/flow-bin-0.39.0.tgz#b1012a14460df1aa79d3a728e10f93c6944226d0\"\n"
          },
          {
            "+": "+lodash.uniq@^4.5.0:\n+  version \"4.5.0\"\n+  resolved \"https://registry.yarnpkg.com/lodash.uniq/-/lodash.uniq-4.5.0.tgz#d0225373aeb652adc1bc82e4945339a842754773\"\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 14,
      "numOfChanges": 32,
      "qualityScore": 3
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "bce51f3fbc05b138010fde4386da65a577dc6a3a",
      "url": "https://github.com/vuejs/vue/commit/bce51f3fbc05b138010fde4386da65a577dc6a3a",
      "message": "remove unnecessary dep in vue-server-renderer",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-04-18T08:58:09Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/packages/vue-server-renderer/package.json": [
          {
            "-": "-    \"de-indent\": \"^1.0.2\",\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "760a74480e3a9eb5f86135cc6907701971185a2f",
      "url": "https://github.com/vuejs/vue/commit/760a74480e3a9eb5f86135cc6907701971185a2f",
      "message": "test warning component trace",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-04-14T07:19:41Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/util/debug.js": [
          {
            "+": "+export let warn = noop\n+export let tip = noop\n+export let formatComponentName\n",
            "-": "-let warn = noop\n-let tip = noop\n-let formatComponentName\n"
          },
          {
            "+": "+  const repeat = (str, n) => {\n+    let res = ''\n+    while (n) {\n+      if (n % 2 === 1) res += str\n+      if (n > 1) str += str\n+      n >>= 1\n+    }\n+    return res\n+  }\n+\n",
            "-": ""
          },
          {
            "+": "+    if (vm._isVue && vm.$parent) {\n",
            "-": "-    if (vm._isVue && vm.$parent && String.prototype.repeat) {\n"
          },
          {
            "+": "+          i === 0 ? '---> ' : repeat(' ', 5 + i * 2)\n",
            "-": "-          i === 0 ? '---> ' : ' '.repeat(5 + i * 2)\n"
          },
          {
            "-": "-\n-export { warn, tip, formatComponentName }\n",
            "+": ""
          }
        ],
        "a/test/unit/features/debug.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+import { formatComponentName } from 'core/util/debug'\n+\n+describe('Debug utilities', () => {\n+  it('properly format component names', () => {\n+    const vm = new Vue()\n+    expect(formatComponentName(vm)).toBe('<Root>')\n+\n+    vm.$root = null\n+    vm.$options.name = 'hello-there'\n+    expect(formatComponentName(vm)).toBe('<HelloThere>')\n+\n+    vm.$options.name = null\n+    vm.$options._componentTag = 'foo-bar-1'\n+    expect(formatComponentName(vm)).toBe('<FooBar1>')\n+\n+    vm.$options._componentTag = null\n+    vm.$options.__file = '/foo/bar/baz/SomeThing.vue'\n+    expect(formatComponentName(vm)).toBe(`<SomeThing> at ${vm.$options.__file}`)\n+    expect(formatComponentName(vm, false)).toBe('<SomeThing>')\n+\n+    vm.$options.__file = 'C:\\\\foo\\\\bar\\\\baz\\\\windows_file.vue'\n+    expect(formatComponentName(vm)).toBe(`<WindowsFile> at ${vm.$options.__file}`)\n+    expect(formatComponentName(vm, false)).toBe('<WindowsFile>')\n+  })\n+\n+  it('generate correct component hierarchy trace', () => {\n+    const one = {\n+      name: 'one',\n+      render: h => h(two)\n+    }\n+    const two = {\n+      name: 'two',\n+      render: h => h(three)\n+    }\n+    const three = {\n+      name: 'three'\n+    }\n+    new Vue({\n+      render: h => h(one)\n+    }).$mount()\n+\n+    expect(\n+`Failed to mount component: template or render function not defined.\n+\n+found in\n+\n+---> <Three>\n+       <Two>\n+         <One>\n+           <Root>`\n+    ).toHaveBeenWarned()\n+  })\n+\n+  it('generate correct component hierarchy trace (recursive)', () => {\n+    let i = 0\n+    const one = {\n+      name: 'one',\n+      render: h => i++ < 5 ? h(one) : h(two)\n+    }\n+    const two = {\n+      name: 'two',\n+      render: h => h(three)\n+    }\n+    const three = {\n+      name: 'three'\n+    }\n+    new Vue({\n+      render: h => h(one)\n+    }).$mount()\n+\n+    expect(\n+`Failed to mount component: template or render function not defined.\n+\n+found in\n+\n+---> <Three>\n+       <Two>\n+         <One>... (5 recursive calls)\n+           <Root>`\n+    ).toHaveBeenWarned()\n+  })\n+})\n",
            "-": ""
          }
        ],
        "a/test/unit/features/error-handling.spec.js": [
          {
            "-": "-import { formatComponentName } from 'core/util/debug'\n",
            "+": ""
          },
          {
            "-": "-\n-  it('properly format component names', () => {\n-    const vm = new Vue()\n-    expect(formatComponentName(vm)).toBe('<Root>')\n-\n-    vm.$root = null\n-    vm.$options.name = 'hello-there'\n-    expect(formatComponentName(vm)).toBe('<HelloThere>')\n-\n-    vm.$options.name = null\n-    vm.$options._componentTag = 'foo-bar-1'\n-    expect(formatComponentName(vm)).toBe('<FooBar1>')\n-\n-    vm.$options._componentTag = null\n-    vm.$options.__file = '/foo/bar/baz/SomeThing.vue'\n-    expect(formatComponentName(vm)).toBe(`<SomeThing> at ${vm.$options.__file}`)\n-    expect(formatComponentName(vm, false)).toBe('<SomeThing>')\n-\n-    vm.$options.__file = 'C:\\\\foo\\\\bar\\\\baz\\\\windows_file.vue'\n-    expect(formatComponentName(vm)).toBe(`<WindowsFile> at ${vm.$options.__file}`)\n-    expect(formatComponentName(vm, false)).toBe('<WindowsFile>')\n-  })\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 8,
      "qualityScore": 66
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "561bb467baa49606e011a8d1e675b385b156763a",
      "url": "https://github.com/vuejs/vue/commit/561bb467baa49606e011a8d1e675b385b156763a",
      "message": "test functional auto props with render fn",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-04-07T08:11:09Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/options/functional.spec.js": [
          {
            "+": "+    const fn = {\n+      functional: true,\n+      render (h, { props }) {\n+        return h('div', `${props.msg} ${props.kebabMsg}`)\n+      }\n+    }\n+\n",
            "-": ""
          },
          {
            "+": "+      render (h) {\n+        return h('div', [\n+          h(fn, {\n+            props: { msg: this.test },\n+            attrs: { 'kebab-msg': 'bar' }\n+          })\n+        ])\n",
            "-": "-      template: '<div><wrap :msg=\"test\" kebab-msg=\"bar\"></wrap></div>',\n-      components: {\n-        wrap: {\n-          functional: true,\n-          render (h, { props }) {\n-            return h('div', `${props.msg} ${props.kebabMsg}`)\n-          }\n-        }\n"
          },
          {
            "+": "+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "c28b566f19459751244707e4efe458056c9bbdcf",
      "url": "https://github.com/vuejs/vue/commit/c28b566f19459751244707e4efe458056c9bbdcf",
      "message": "tests for functional component api improvements",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-04-05T09:44:38Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/options/functional.spec.js": [
          {
            "+": "+  it('should expose all props when not declared', done => {\n+    const vm = new Vue({\n+      data: { test: 'foo' },\n+      template: '<div><wrap :msg=\"test\" kebab-msg=\"bar\"></wrap></div>',\n+      components: {\n+        wrap: {\n+          functional: true,\n+          render (h, { props }) {\n+            return h('div', `${props.msg} ${props.kebabMsg}`)\n+          }\n+        }\n+      }\n+    }).$mount()\n+    expect(vm.$el.innerHTML).toBe('<div>foo bar</div>')\n+    vm.test = 'qux'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe('<div>qux bar</div>')\n+    }).then(done)\n+  })\n+\n+  it('should expose data.on as listeners', () => {\n+    const foo = jasmine.createSpy('foo')\n+    const bar = jasmine.createSpy('bar')\n+    const vm = new Vue({\n+      template: '<div><wrap @click=\"foo\" @test=\"bar\"/></div>',\n+      methods: { foo, bar },\n+      components: {\n+        wrap: {\n+          functional: true,\n+          render (h, { listeners }) {\n+            return h('div', {\n+              on: {\n+                click: [listeners.click, () => listeners.test('bar')]\n+              }\n+            })\n+          }\n+        }\n+      }\n+    }).$mount()\n+\n+    triggerEvent(vm.$el.children[0], 'click')\n+    expect(foo).toHaveBeenCalled()\n+    expect(foo.calls.argsFor(0)[0].type).toBe('click') // should have click event\n+    triggerEvent(vm.$el.children[0], 'mousedown')\n+    expect(bar).toHaveBeenCalledWith('bar')\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "d2b7142cf55750517b303590db92aa9d6ca97ee6",
      "url": "https://github.com/vuejs/vue/commit/d2b7142cf55750517b303590db92aa9d6ca97ee6",
      "message": "tests for advanced async component features",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-04-05T09:04:58Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/vdom/helpers/resolve-async-component.js": [
          {
            "+": "+        res.component.then(resolve, reject)\n+\n",
            "-": ""
          },
          {
            "+": "+          if (res.delay === 0) {\n+            factory.loading = true\n+          } else {\n+            setTimeout(() => {\n+              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n+                factory.loading = true\n+                forceRender()\n+              }\n+            }, res.delay || 200)\n+          }\n",
            "-": "-          setTimeout(() => {\n-            if (isUndef(factory.resolved) && isUndef(factory.error)) {\n-              factory.loading = true\n-              forceRender()\n-            }\n-          }, res.delay || 200)\n"
          },
          {
            "+": "+          setTimeout(() => {\n+            reject(\n+              process.env.NODE_ENV !== 'production'\n+                ? `timeout (${res.timeout}ms)`\n+                : null\n+            )\n+          }, res.timeout)\n",
            "-": "-          setTimeout(reject, res.timeout)\n"
          },
          {
            "-": "-\n-        res.component.then(resolve, reject)\n",
            "+": ""
          },
          {
            "+": "+    return factory.loading\n+      ? factory.loadingComp\n+      : factory.resolved\n",
            "-": "-    return factory.resolved\n"
          }
        ],
        "a/test/unit/features/component/component-async.spec.js": [
          {
            "+": "+\n+  describe('loading/error/timeout', () => {\n+    it('with loading component', done => {\n+      const vm = new Vue({\n+        template: `<div><test/></div>`,\n+        components: {\n+          test: () => ({\n+            component: new Promise(resolve => {\n+              setTimeout(() => {\n+                resolve({ template: '<div>hi</div>' })\n+                // wait for promise resolve and then parent update\n+                Promise.resolve().then(() => {\n+                  Vue.nextTick(next)\n+                })\n+              }, 5)\n+            }),\n+            loading: { template: `<div>loading</div>` },\n+            delay: 1\n+          })\n+        }\n+      }).$mount()\n+\n+      expect(vm.$el.innerHTML).toBe('<!---->')\n+\n+      let loadingAsserted = false\n+      setTimeout(() => {\n+        Vue.nextTick(() => {\n+          loadingAsserted = true\n+          expect(vm.$el.textContent).toBe('loading')\n+        })\n+      }, 1)\n+\n+      function next () {\n+        expect(loadingAsserted).toBe(true)\n+        expect(vm.$el.textContent).toBe('hi')\n+        done()\n+      }\n+    })\n+\n+    it('with loading component (0 delay)', done => {\n+      const vm = new Vue({\n+        template: `<div><test/></div>`,\n+        components: {\n+          test: () => ({\n+            component: new Promise(resolve => {\n+              setTimeout(() => {\n+                resolve({ template: '<div>hi</div>' })\n+                // wait for promise resolve and then parent update\n+                Promise.resolve().then(() => {\n+                  Vue.nextTick(next)\n+                })\n+              }, 0)\n+            }),\n+            loading: { template: `<div>loading</div>` },\n+            delay: 0\n+          })\n+        }\n+      }).$mount()\n+\n+      expect(vm.$el.textContent).toBe('loading')\n+\n+      function next () {\n+        expect(vm.$el.textContent).toBe('hi')\n+        done()\n+      }\n+    })\n+\n+    it('with error component', done => {\n+      const vm = new Vue({\n+        template: `<div><test/></div>`,\n+        components: {\n+          test: () => ({\n+            component: new Promise((resolve, reject) => {\n+              setTimeout(() => {\n+                reject()\n+                // wait for promise resolve and then parent update\n+                Promise.resolve().then(() => {\n+                  Vue.nextTick(next)\n+                })\n+              }, 0)\n+            }),\n+            loading: { template: `<div>loading</div>` },\n+            error: { template: `<div>error</div>` },\n+            delay: 0\n+          })\n+        }\n+      }).$mount()\n+\n+      expect(vm.$el.textContent).toBe('loading')\n+\n+      function next () {\n+        expect(`Failed to resolve async component`).toHaveBeenWarned()\n+        expect(vm.$el.textContent).toBe('error')\n+        done()\n+      }\n+    })\n+\n+    it('with error component + timeout', done => {\n+      const vm = new Vue({\n+        template: `<div><test/></div>`,\n+        components: {\n+          test: () => ({\n+            component: new Promise((resolve, reject) => {\n+              setTimeout(() => {\n+                resolve({ template: '<div>hi</div>' })\n+                // wait for promise resolve and then parent update\n+                Promise.resolve().then(() => {\n+                  Vue.nextTick(next)\n+                })\n+              }, 5)\n+            }),\n+            loading: { template: `<div>loading</div>` },\n+            error: { template: `<div>error</div>` },\n+            delay: 0,\n+            timeout: 1\n+          })\n+        }\n+      }).$mount()\n+\n+      expect(vm.$el.textContent).toBe('loading')\n+\n+      setTimeout(() => {\n+        Vue.nextTick(() => {\n+          expect(`Failed to resolve async component`).toHaveBeenWarned()\n+          expect(vm.$el.textContent).toBe('error')\n+        })\n+      }, 1)\n+\n+      function next () {\n+        expect(vm.$el.textContent).toBe('error') // late resolve ignored\n+        done()\n+      }\n+    })\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 6,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "841fe6028a11c469356f962eea8c21555cd9d447",
      "url": "https://github.com/vuejs/vue/commit/841fe6028a11c469356f962eea8c21555cd9d447",
      "message": "test computed property conflict warnings",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-04-05T05:36:51Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/options/computed.spec.js": [
          {
            "+": "+\n+  it('warn conflict with data', () => {\n+    new Vue({\n+      data: {\n+        a: 1\n+      },\n+      computed: {\n+        a: () => 2\n+      }\n+    })\n+    expect(`computed property \"a\" is already defined in data`).toHaveBeenWarned()\n+  })\n+\n+  it('warn conflict with props', () => {\n+    new Vue({\n+      props: ['a'],\n+      propsData: { a: 1 },\n+      computed: {\n+        a: () => 2\n+      }\n+    })\n+    expect(`computed property \"a\" is already defined as a prop`).toHaveBeenWarned()\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "bbec0763ab6eb8824c8bfb447844bfa2892ee47a",
      "url": "https://github.com/vuejs/vue/commit/bbec0763ab6eb8824c8bfb447844bfa2892ee47a",
      "message": "remove problematic test cases (mutating in render fn)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-04-03T06:52:55Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/filter/filter.spec.js": [
          {
            "-": "-  it('handle division with variable++', () => {\n-    const vm = new Vue({\n-      data: { a: 7 },\n-      template: `<div>{{ a++ / 2 | double }}</div>`,\n-      filters: { double: v => v * 2 }\n-    }).$mount()\n-    expect(vm.$el.textContent).toBe(String(7))\n-  })\n-\n-  it('handle division with variable--', () => {\n-    const vm = new Vue({\n-      data: { a: 7 },\n-      template: `<div>{{ a-- / 2 | double }}</div>`,\n-      filters: { double: v => v * 2 }\n-    }).$mount()\n-    expect(vm.$el.textContent).toBe(String(7))\n-  })\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "style",
      "sha": "66228390684eb23dc943dfe30d4ccd0063f797ef",
      "url": "https://github.com/vuejs/vue/commit/66228390684eb23dc943dfe30d4ccd0063f797ef",
      "message": "style and class should be reserved for web",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-04-03T05:40:15Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/config.js": [
          {
            "+": "+  isReservedAttr: (x?: string) => boolean;\n",
            "-": ""
          },
          {
            "+": "+  /**\n+   * Check if an attribute is reserved so that it cannot be used as a component\n+   * prop. This is platform-dependent and may be overwritten.\n+   */\n+  isReservedAttr: no,\n+\n",
            "-": ""
          }
        ],
        "a/src/core/instance/state.js": [
          {
            "+": "+import config from '../config'\n",
            "-": ""
          },
          {
            "+": "+const isReservedProp = {\n+  key: 1,\n+  ref: 1,\n+  slot: 1\n+}\n",
            "-": "-const isReservedProp = { key: 1, ref: 1, slot: 1 }\n"
          },
          {
            "+": "+      if (isReservedProp[key] || config.isReservedAttr(key)) {\n",
            "-": "-      if (isReservedProp[key]) {\n"
          }
        ],
        "a/src/entries/web-runtime.js": [
          {
            "+": "+  isReservedAttr,\n",
            "-": ""
          },
          {
            "+": "+Vue.config.isReservedAttr = isReservedAttr\n",
            "-": ""
          }
        ],
        "a/src/platforms/web/util/attrs.js": [
          {
            "+": "+// these are reserved for web because they are directly compiled away\n+// during template compilation\n+export const isReservedAttr = makeMap('style,class')\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 8,
      "qualityScore": 25
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "655c0f185b44342ed38436a7f369a04a45981d1d",
      "url": "https://github.com/vuejs/vue/commit/655c0f185b44342ed38436a7f369a04a45981d1d",
      "message": "tests for ssr bundleRenderer + template + clientManifest",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-03-30T07:19:13Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/package.json": [
          {
            "+": "+    \"vue-ssr-webpack-plugin\": \"^2.0.0\",\n",
            "-": "-    \"vue-ssr-html-stream\": \"^2.1.0\",\n-    \"vue-ssr-webpack-plugin\": \"^1.0.0\",\n"
          }
        ],
        "a/test/ssr/compile-with-webpack.js": [
          {
            "+": "+import path from 'path'\n+import webpack from 'webpack'\n+import MemoeryFS from 'memory-fs'\n+\n+export function compileWithWebpack (file, extraConfig, cb) {\n+  const config = Object.assign({\n+    entry: path.resolve(__dirname, 'fixtures', file),\n+    module: {\n+      rules: [{ test: /\\.js$/, loader: 'babel-loader' }]\n+    }\n+  }, extraConfig)\n+\n+  const compiler = webpack(config)\n+  const fs = new MemoeryFS()\n+  compiler.outputFileSystem = fs\n+\n+  compiler.run((err, stats) => {\n+    expect(err).toBeFalsy()\n+    expect(stats.errors).toBeFalsy()\n+    cb(fs)\n+  })\n+}\n",
            "-": ""
          }
        ],
        "a/test/ssr/fixtures/async-bar.js": [
          {
            "+": "+module.exports = {\n+  render (h) {\n+    return h('div', 'async bar')\n+  }\n+}\n",
            "-": ""
          }
        ],
        "a/test/ssr/fixtures/comp.js": [],
        "a/test/ssr/fixtures/split.js": [
          {
            "+": "+const Foo = () => import('./async-foo')\n+const Bar = () => import('./async-bar') // eslint-disable-line\n",
            "-": "-const Foo = () => import('./comp')\n"
          }
        ],
        "a/test/ssr/jasmine.json": [
          {
            "+": "+    \"*.spec.js\"\n",
            "-": "-    \"ssr-env.spec.js\",\n-    \"ssr-string.spec.js\",\n-    \"ssr-stream.spec.js\",\n-    \"ssr-bundle-render.spec.js\"\n"
          }
        ],
        "a/test/ssr/ssr-bundle-render.spec.js": [
          {
            "+": "+import { VueSSRServerPlugin } from 'vue-ssr-webpack-plugin'\n+import { compileWithWebpack } from './compile-with-webpack'\n",
            "-": "-import path from 'path'\n-import webpack from 'webpack'\n-import MemoeryFS from 'memory-fs'\n-import VueSSRPlugin from 'vue-ssr-webpack-plugin'\n"
          },
          {
            "+": "+export function createRenderer (file, options, cb) {\n+  if (typeof options === 'function') {\n+    cb = options\n+    options = undefined\n+  }\n",
            "-": "-export function createRenderer (file, cb, options) {\n"
          },
          {
            "+": "+  compileWithWebpack(file, {\n",
            "-": "-  const config = {\n"
          },
          {
            "-": "-    entry: path.resolve(__dirname, 'fixtures', file),\n",
            "+": ""
          },
          {
            "-": "-    module: {\n-      rules: [{ test: /\\.js$/, loader: 'babel-loader' }]\n-    },\n",
            "+": ""
          },
          {
            "+": "+      ? [new VueSSRServerPlugin()]\n",
            "-": "-      ? [new VueSSRPlugin()]\n"
          },
          {
            "+": "+  }, fs => {\n",
            "-": "-  }\n-\n-  const compiler = webpack(config)\n-  const fs = new MemoeryFS()\n-  compiler.outputFileSystem = fs\n-\n-  compiler.run((err, stats) => {\n-    expect(err).toBeFalsy()\n-    expect(stats.errors).toBeFalsy()\n"
          },
          {
            "+": "+    createRenderer('cache.js', options, renderer => {\n",
            "-": "-    createRenderer('cache.js', renderer => {\n"
          },
          {
            "+": "+    })\n",
            "-": "-    }, options)\n"
          },
          {
            "+": "+    createRenderer('cache.js', options, renderer => {\n",
            "-": "-    createRenderer('cache.js', renderer => {\n"
          },
          {
            "+": "+    })\n",
            "-": "-    }, options)\n"
          },
          {
            "+": "+    createRenderer('split.js', { asBundle: true }, renderer => {\n",
            "-": "-    createRenderer('split.js', renderer => {\n"
          },
          {
            "+": "+    })\n",
            "-": "-    }, { asBundle: true })\n"
          },
          {
            "+": "+    createRenderer('split.js', { asBundle: true }, renderer => {\n",
            "-": "-    createRenderer('split.js', renderer => {\n"
          },
          {
            "+": "+    })\n",
            "-": "-    }, { asBundle: true })\n"
          },
          {
            "+": "+    createRenderer('error.js', { asBundle: true }, renderer => {\n",
            "-": "-    createRenderer('error.js', renderer => {\n"
          },
          {
            "+": "+    })\n",
            "-": "-    }, { asBundle: true })\n"
          },
          {
            "+": "+    createRenderer('error.js', { asBundle: true }, renderer => {\n",
            "-": "-    createRenderer('error.js', renderer => {\n"
          },
          {
            "+": "+    })\n",
            "-": "-    }, { asBundle: true })\n"
          }
        ],
        "a/test/ssr/ssr-template.spec.js": [
          {
            "+": "+import webpack from 'webpack'\n",
            "-": ""
          },
          {
            "+": "+import { VueSSRClientPlugin } from 'vue-ssr-webpack-plugin'\n+import { compileWithWebpack } from './compile-with-webpack'\n",
            "-": ""
          },
          {
            "+": "+const defaultTemplate = `<html><head></head><body><!--vue-ssr-outlet--></body></html>`\n+\n+function generateClientManifest (file, cb) {\n+  compileWithWebpack(file, {\n+    output: {\n+      path: '/',\n+      filename: '[name].js'\n+    },\n+    plugins: [\n+      new webpack.optimize.CommonsChunkPlugin({\n+        name: 'manifest',\n+        minChunks: Infinity\n+      }),\n+      new VueSSRClientPlugin()\n+    ]\n+  }, fs => {\n+    cb(JSON.parse(fs.readFileSync('/vue-ssr-client-manifest.json', 'utf-8')))\n+  })\n+}\n+\n+function createRendererWithManifest (file, cb) {\n+  generateClientManifest(file, clientManifest => {\n+    createBundleRenderer(file, {\n+      asBundle: true,\n+      template: defaultTemplate,\n+      clientManifest\n+    }, cb)\n+  })\n+}\n+\n",
            "-": ""
          },
          {
            "+": "+      template: defaultTemplate\n",
            "-": "-      template: `<html><head></head><body><!--vue-ssr-outlet--></body></html>`\n"
          },
          {
            "+": "+      template: defaultTemplate\n",
            "-": "-      template: `<html><head></head><body><!--vue-ssr-outlet--></body></html>`\n"
          },
          {
            "+": "+    createBundleRenderer('app.js', {\n+      asBundle: true,\n+      template: defaultTemplate\n+    }, renderer => {\n",
            "-": "-    createBundleRenderer('app.js', renderer => {\n"
          },
          {
            "-": "-    }, {\n-      template: `<html><head></head><body><!--vue-ssr-outlet--></body></html>`\n",
            "+": ""
          },
          {
            "+": "+    createBundleRenderer('app.js', {\n+      asBundle: true,\n+      template: defaultTemplate\n+    }, renderer => {\n",
            "-": "-    createBundleRenderer('app.js', renderer => {\n"
          },
          {
            "+": "+    })\n+  })\n+\n+  const expectedHTMLWithManifest =\n+    `<html><head>` +\n+      // used chunks should have preload\n+      `<link rel=\"preload\" href=\"/manifest.js\" as=\"script\">` +\n+      `<link rel=\"preload\" href=\"/main.js\" as=\"script\">` +\n+      `<link rel=\"preload\" href=\"/0.js\" as=\"script\">` +\n+      // unused chunks should have prefetch\n+      `<link rel=\"prefetch\" href=\"/1.js\" as=\"script\">` +\n+    `</head><body>` +\n+      `<div data-server-rendered=\"true\"><div>async</div></div>` +\n+      // manifest chunk should be first\n+      `<script src=\"/manifest.js\"></script>` +\n+      // async chunks should be before main chunk\n+      `<script src=\"/0.js\"></script>` +\n+      `<script src=\"/main.js\"></script>` +\n+    `</body></html>`\n+\n+  it('bundleRenderer + renderToString + clientManifest', done => {\n+    createRendererWithManifest('split.js', renderer => {\n+      renderer.renderToString({}, (err, res) => {\n+        expect(err).toBeNull()\n+        expect(res).toContain(expectedHTMLWithManifest)\n+        done()\n+      })\n+    })\n+  })\n+\n+  it('bundleRenderer + renderToStream + clientManifest', done => {\n+    createRendererWithManifest('split.js', renderer => {\n+      const stream = renderer.renderToStream({})\n+      let res = ''\n+      stream.on('data', chunk => {\n+        res += chunk.toString()\n+      })\n+      stream.on('end', () => {\n+        expect(res).toContain(expectedHTMLWithManifest)\n+        done()\n+      })\n",
            "-": "-    }, {\n-      template: `<html><head></head><body><!--vue-ssr-outlet--></body></html>`\n"
          }
        ]
      },
      "numOfFiles": 8,
      "numOfChanges": 33,
      "qualityScore": 25
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "3209f6f517a4fa44c563cd7cc048fa29be1bc930",
      "url": "https://github.com/vuejs/vue/commit/3209f6f517a4fa44c563cd7cc048fa29be1bc930",
      "message": "remove parent/ref elm references when destroying instance, fix memory leak (fix vue-router#1279)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-03-27T01:49:05Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/lifecycle.js": [
          {
            "+": "+    // invoke destroy hooks on current rendered tree\n+    vm.__patch__(vm._vnode, null)\n+    // fire destroyed hook\n",
            "-": ""
          },
          {
            "+": "+    // remove reference to DOM nodes (prevents leak)\n+    vm.$options._parentElm = vm.$options._refElm = null\n",
            "-": "-    // invoke destroy hooks on current rendered tree\n-    vm.__patch__(vm._vnode, null)\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "dd35cbf69a2e7556bf6d11e2b9bc11b58490a001",
      "url": "https://github.com/vuejs/vue/commit/dd35cbf69a2e7556bf6d11e2b9bc11b58490a001",
      "message": "remove env vars from npm scripts",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-03-17T04:09:12Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/benchmarks/ssr/renderToStream.js": [
          {
            "+": "+process.env.NODE_ENV = 'production'\n+\n",
            "-": ""
          }
        ],
        "a/benchmarks/ssr/renderToString.js": [
          {
            "+": "+process.env.NODE_ENV = 'production'\n+\n",
            "-": ""
          }
        ],
        "a/build/karma.base.config.js": [
          {
            "+": "+        TRANSITION_DURATION: 50,\n+        TRANSITION_BUFFER: 10\n",
            "-": "-        TRANSITION_DURATION: process.env.SAUCE ? 500 : 50,\n-        TRANSITION_BUFFER: process.env.SAUCE ? 50 : 10\n"
          }
        ],
        "a/build/karma.sauce.config.js": [
          {
            "+": "+var webpack = require('webpack')\n",
            "-": ""
          },
          {
            "+": "+base.webpack.plugins = [\n+  new webpack.DefinePlugin({\n+    __WEEX__: false,\n+    'process.env': {\n+      NODE_ENV: '\"development\"',\n+      // sauce lab vms are slow!\n+      TRANSITION_DURATION: 500,\n+      TRANSITION_BUFFER: 50\n+    }\n+  })\n+]\n+\n",
            "-": ""
          }
        ],
        "a/package.json": [
          {
            "+": "+    \"dev\": \"rollup -w -c build/config.js --environment TARGET:web-full-dev\",\n+    \"dev:cjs\": \"rollup -w -c build/config.js --environment TARGET:web-runtime-cjs\",\n",
            "-": "-    \"dev\": \"TARGET=web-full-dev rollup -w -c build/config.js\",\n-    \"dev:cjs\": \"TARGET=web-runtime-cjs rollup -w -c build/config.js\",\n"
          },
          {
            "+": "+    \"dev:ssr\": \"rollup -w -c build/config.js --environment TARGET:web-server-renderer\",\n+    \"dev:compiler\": \"rollup -w -c build/config.js --environment TARGET:web-compiler \",\n+    \"dev:weex\": \"rollup -w -c build/config.js --environment TARGET:weex-framework \",\n+    \"dev:weex:compiler\": \"rollup -w -c build/config.js --environment TARGET:weex-compiler \",\n",
            "-": "-    \"dev:ssr\": \"TARGET=web-server-renderer rollup -w -c build/config.js\",\n-    \"dev:compiler\": \"TARGET=web-compiler rollup -w -c build/config.js\",\n-    \"dev:weex\": \"TARGET=weex-framework rollup -w -c build/config.js\",\n-    \"dev:weex:compiler\": \"TARGET=weex-compiler rollup -w -c build/config.js\",\n"
          },
          {
            "+": "+    \"sauce\": \"karma start build/karma.sauce.config.js\",\n+    \"bench:ssr\": \"npm run build:ssr && node benchmarks/ssr/renderToString.js && node benchmarks/ssr/renderToStream.js\",\n",
            "-": "-    \"sauce\": \"SAUCE=true karma start build/karma.sauce.config.js\",\n-    \"bench:ssr\": \"npm run build:ssr && NODE_ENV=production node benchmarks/ssr/renderToString.js && NODE_ENV=production VUE_ENV=server node benchmarks/ssr/renderToStream.js\",\n"
          }
        ]
      },
      "numOfFiles": 5,
      "numOfChanges": 8,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "95cd2bd7fa1abd5809593f0103df7b23414eea04",
      "url": "https://github.com/vuejs/vue/commit/95cd2bd7fa1abd5809593f0103df7b23414eea04",
      "message": "test v-model select with circular reference",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-03-09T02:30:24Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/directives/model-select.spec.js": [
          {
            "+": "+\n+  it('should work with option value that has circular reference', done => {\n+    const circular = {}\n+    circular.self = circular\n+\n+    const vm = new Vue({\n+      data: {\n+        test: 'b',\n+        circular\n+      },\n+      template:\n+        '<select v-model=\"test\">' +\n+          '<option :value=\"circular\">a</option>' +\n+          '<option>b</option>' +\n+          '<option>c</option>' +\n+        '</select>'\n+    }).$mount()\n+    document.body.appendChild(vm.$el)\n+    expect(vm.test).toBe('b')\n+    expect(vm.$el.value).toBe('b')\n+    expect(vm.$el.childNodes[1].selected).toBe(true)\n+    vm.test = circular\n+    waitForUpdate(function () {\n+      expect(vm.$el.childNodes[0].selected).toBe(true)\n+    }).then(done)\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "c619b8d22cffbe6e80405b71080cdf91d04350da",
      "url": "https://github.com/vuejs/vue/commit/c619b8d22cffbe6e80405b71080cdf91d04350da",
      "message": "remove inline value warnings for checkbox/radio/select also (close #5112)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-03-08T06:43:00Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/compiler/directives/model.js": [
          {
            "-": "-  if (process.env.NODE_ENV !== 'production' &&\n-    el.attrsMap.checked != null) {\n-    warn(\n-      `<${el.tag} v-model=\"${value}\" checked>:\\n` +\n-      `inline checked attributes will be ignored when using v-model. ` +\n-      'Declare initial values in the component\\'s data option instead.'\n-    )\n-  }\n",
            "+": ""
          },
          {
            "-": "-  if (process.env.NODE_ENV !== 'production' &&\n-    el.attrsMap.checked != null) {\n-    warn(\n-      `<${el.tag} v-model=\"${value}\" checked>:\\n` +\n-      `inline checked attributes will be ignored when using v-model. ` +\n-      'Declare initial values in the component\\'s data option instead.'\n-    )\n-  }\n",
            "+": ""
          },
          {
            "-": "-  if (process.env.NODE_ENV !== 'production') {\n-    el.children.some(checkOptionWarning)\n-  }\n-\n",
            "+": ""
          },
          {
            "-": "-function checkOptionWarning (option: any): boolean {\n-  if (option.type === 1 &&\n-    option.tag === 'option' &&\n-    option.attrsMap.selected != null) {\n-    warn(\n-      `<select v-model=\"${option.parent.attrsMap['v-model']}\">:\\n` +\n-      'inline selected attributes on <option> will be ignored when using v-model. ' +\n-      'Declare initial values in the component\\'s data option instead.'\n-    )\n-    return true\n-  }\n-  return false\n-}\n-\n",
            "+": ""
          }
        ],
        "a/test/unit/features/directives/model-checkbox.spec.js": [
          {
            "-": "-\n-  it('warn inline checked', () => {\n-    const vm = new Vue({\n-      template: `<input type=\"checkbox\" v-model=\"test\" checked>`,\n-      data: {\n-        test: false\n-      }\n-    }).$mount()\n-    expect(vm.$el.checked).toBe(false)\n-    expect('inline checked attributes will be ignored when using v-model').toHaveBeenWarned()\n-  })\n",
            "+": ""
          }
        ],
        "a/test/unit/features/directives/model-radio.spec.js": [
          {
            "-": "-\n-  it('warn inline checked', () => {\n-    const vm = new Vue({\n-      template: `<input v-model=\"test\" type=\"radio\" value=\"1\" checked>`,\n-      data: {\n-        test: '2'\n-      }\n-    }).$mount()\n-    expect(vm.$el.checked).toBe(false)\n-    expect('inline checked attributes will be ignored when using v-model').toHaveBeenWarned()\n-  })\n",
            "+": ""
          }
        ],
        "a/test/unit/features/directives/model-select.spec.js": [
          {
            "-": "-  it('should warn inline selected', () => {\n-    const vm = new Vue({\n-      data: {\n-        test: null\n-      },\n-      template:\n-        '<select v-model=\"test\">' +\n-          '<option selected>a</option>' +\n-        '</select>'\n-    }).$mount()\n-    expect(vm.$el.selectedIndex).toBe(-1)\n-    expect('inline selected attributes on <option> will be ignored when using v-model')\n-      .toHaveBeenWarned()\n-  })\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 7,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "41ef650f9db5143a39019f4f56441b24a61c2efc",
      "url": "https://github.com/vuejs/vue/commit/41ef650f9db5143a39019f4f56441b24a61c2efc",
      "message": "remove log",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-03-08T03:48:20Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/codegen/index.js": [
          {
            "-": "-  console.log(code)\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "673acecc349dcd407049f1fecd0d8c8f34c4d4d7",
      "url": "https://github.com/vuejs/vue/commit/673acecc349dcd407049f1fecd0d8c8f34c4d4d7",
      "message": "Remove unnecessary code (#4995)",
      "author": {
        "name": "AchillesJ",
        "email": "xujiongbo@gmail.com",
        "date": "2017-02-24T02:52:45Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/5391892?v=4"
      },
      "diffObj": {
        "a/src/compiler/parser/index.js": [
          {
            "+": "+          children.push({\n",
            "-": "-          currentParent.children.push({\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "c2c87419fead45ff25168924d2c0e85f083f4a0a",
      "url": "https://github.com/vuejs/vue/commit/c2c87419fead45ff25168924d2c0e85f083f4a0a",
      "message": "test bundleRenderer bundle format support + source map",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-02-01T18:20:48Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.babelrc": [
          {
            "+": "+  \"plugins\": [\"transform-vue-jsx\", \"syntax-dynamic-import\"],\n",
            "-": "-  \"plugins\": [\"transform-vue-jsx\"],\n"
          }
        ],
        "a/package.json": [
          {
            "+": "+    \"babel-plugin-syntax-dynamic-import\": \"^6.18.0\",\n",
            "-": ""
          },
          {
            "+": "+    \"vue-ssr-webpack-plugin\": \"^1.0.0\",\n",
            "-": ""
          },
          {
            "-": "-  \"dependencies\": {},\n",
            "+": ""
          }
        ],
        "a/src/server/create-bundle-renderer.js": [
          {
            "+": "+        runInVm(entry, files, context).catch(err => {\n+          rewriteErrorTrace(err, maps)\n",
            "-": "-        runInVm(entry, files, context).then(app => {\n-          renderer.renderToString(app, cb)\n-        }).catch(err => {\n-          if (err instanceof Error) {\n-            rewriteErrorTrace(err, maps)\n-          }\n"
          },
          {
            "+": "+        }).then(app => {\n+          if (app) {\n+            renderer.renderToString(app, (err, res) => {\n+              rewriteErrorTrace(err, maps)\n+              cb(err, res)\n+            })\n+          }\n",
            "-": ""
          },
          {
            "+": "+        runInVm(entry, files, context).catch(err => {\n+          rewriteErrorTrace(err, maps)\n+          // avoid emitting synchronously before user can\n+          // attach error listener\n",
            "-": "-        runInVm(entry, files, context).then(app => {\n-          const renderStream = renderer.renderToStream(app)\n-          renderStream.on('error', err => {\n-            rewriteErrorTrace(err, maps)\n-            res.emit('error', err)\n-          })\n-          renderStream.pipe(res)\n-        }).catch(err => {\n"
          },
          {
            "-": "-            if (err instanceof Error) {\n-              rewriteErrorTrace(err, maps)\n-            }\n",
            "+": ""
          },
          {
            "+": "+        }).then(app => {\n+          if (app) {\n+            const renderStream = renderer.renderToStream(app)\n+            renderStream.on('error', err => {\n+              rewriteErrorTrace(err, maps)\n+              res.emit('error', err)\n+            })\n+            renderStream.pipe(res)\n+          }\n",
            "-": ""
          }
        ],
        "a/src/server/source-map-support.js": [
          {
            "+": "+export function rewriteErrorTrace (e: any, mapConsumers: {\n",
            "-": "-export function rewriteErrorTrace (e: Error, mapConsumers: {\n"
          },
          {
            "+": "+  if (e && typeof e.stack === 'string') {\n+    e.stack = e.stack.split('\\n').map(line => {\n+      return rewriteTraceLine(line, mapConsumers)\n+    }).join('\\n')\n+  }\n",
            "-": "-  e.stack = e.stack.split('\\n').map(line => {\n-    return rewriteTraceLine(line, mapConsumers)\n-  }).join('\\n')\n"
          }
        ],
        "a/test/ssr/fixtures/comp.js": [
          {
            "+": "+module.exports = {\n+  render (h) {\n+    return h('div', 'async')\n+  }\n+}\n",
            "-": ""
          }
        ],
        "a/test/ssr/fixtures/split.js": [
          {
            "+": "+import Vue from '../../../dist/vue.runtime.common.js'\n+\n+// async component!\n+const Foo = () => import('./comp')\n+\n+export default context => {\n+  return new Promise(resolve => {\n+    context.msg = 'hello'\n+    const vm = new Vue({\n+      render (h) {\n+        return h('div', [\n+          context.url,\n+          h(Foo)\n+        ])\n+      }\n+    })\n+\n+    // simulate router.onReady\n+    Foo().then(comp => {\n+      // resolve now to make the render sync\n+      Foo.resolved = Vue.extend(comp)\n+      resolve(vm)\n+    })\n+  })\n+}\n",
            "-": ""
          }
        ],
        "a/test/ssr/ssr-bundle-render.spec.js": [
          {
            "+": "+import VueSSRPlugin from 'vue-ssr-webpack-plugin'\n",
            "-": ""
          },
          {
            "+": "+\n+  const asBundle = !!(options && options.asBundle)\n+  if (options) delete options.asBundle\n+\n+  const config = {\n",
            "-": "-  const compiler = webpack({\n"
          },
          {
            "+": "+    devtool: asBundle ? '#source-map' : false,\n",
            "-": ""
          },
          {
            "+": "+    },\n+    plugins: asBundle\n+      ? [new VueSSRPlugin()]\n+      : []\n+  }\n+\n+  const compiler = webpack(config)\n",
            "-": "-    }\n-  })\n"
          },
          {
            "+": "+\n",
            "-": ""
          },
          {
            "+": "+    const bundle = asBundle\n+      ? JSON.parse(fs.readFileSync('/vue-ssr-bundle.json', 'utf-8'))\n+      : fs.readFileSync('/bundle.js', 'utf-8')\n+    const renderer = rendererCache[file] = createBundleRenderer(bundle, options)\n",
            "-": "-    const code = fs.readFileSync('/bundle.js', 'utf-8')\n-    const renderer = rendererCache[file] = createBundleRenderer(code, options)\n"
          },
          {
            "+": "+\n+  it('renderToString (bundle format with code split)', done => {\n+    createRenderer('split.js', renderer => {\n+      const context = { url: '/test' }\n+      renderer.renderToString(context, (err, res) => {\n+        expect(err).toBeNull()\n+        expect(res).toBe('<div server-rendered=\"true\">/test<div>async</div></div>')\n+        done()\n+      })\n+    }, { asBundle: true })\n+  })\n+\n+  it('renderToStream (bundle format with code split)', done => {\n+    createRenderer('split.js', renderer => {\n+      const context = { url: '/test' }\n+      const stream = renderer.renderToStream(context)\n+      let res = ''\n+      stream.on('data', chunk => {\n+        res += chunk.toString()\n+      })\n+      stream.on('end', () => {\n+        expect(res).toBe('<div server-rendered=\"true\">/test<div>async</div></div>')\n+        done()\n+      })\n+    }, { asBundle: true })\n+  })\n+\n+  it('renderToString catch error (bundle format with source map)', done => {\n+    createRenderer('error.js', renderer => {\n+      renderer.renderToString(err => {\n+        expect(err.stack).toContain('test/ssr/fixtures/error.js:1:6')\n+        expect(err.message).toBe('foo')\n+        done()\n+      })\n+    }, { asBundle: true })\n+  })\n+\n+  it('renderToString catch error (bundle format with source map)', done => {\n+    createRenderer('error.js', renderer => {\n+      const stream = renderer.renderToStream()\n+      stream.on('error', err => {\n+        expect(err.stack).toContain('test/ssr/fixtures/error.js:1:6')\n+        expect(err.message).toBe('foo')\n+        done()\n+      })\n+    }, { asBundle: true })\n+  })\n",
            "-": ""
          }
        ],
        "a/yarn.lock": [
          {
            "+": "+async@2.0.1:\n",
            "-": "-async@2.0.1, async@^2.0.0:\n"
          },
          {
            "+": "+async@^2.0.0, async@^2.1.2:\n",
            "-": "-async@^2.1.2:\n"
          },
          {
            "+": "+babel-plugin-syntax-dynamic-import@^6.18.0:\n+  version \"6.18.0\"\n+  resolved \"https://registry.yarnpkg.com/babel-plugin-syntax-dynamic-import/-/babel-plugin-syntax-dynamic-import-6.18.0.tgz#8d6a26229c83745a9982a441051572caa179b1da\"\n+\n",
            "-": ""
          },
          {
            "+": "+vue-ssr-webpack-plugin@^1.0.0:\n+  version \"1.0.0\"\n+  resolved \"https://registry.yarnpkg.com/vue-ssr-webpack-plugin/-/vue-ssr-webpack-plugin-1.0.0.tgz#00b35a6b7d23689c65c1af838ef416b0a772b8f5\"\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 8,
      "numOfChanges": 24,
      "qualityScore": 12
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "b4115f71b298385505c3ab4acf8df719c4a433c2",
      "url": "https://github.com/vuejs/vue/commit/b4115f71b298385505c3ab4acf8df719c4a433c2",
      "message": "Remove warnings about inline value attributes for v-model (closes #4733) (#4770)",
      "author": {
        "name": "Phan An",
        "email": "me@phanan.net",
        "date": "2017-01-23T13:57:08Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/8056274?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/compiler/directives/model.js": [
          {
            "-": "-  if (process.env.NODE_ENV !== 'production') {\n-    if (el.tag === 'input' && el.attrsMap.value) {\n-      warn(\n-        `<${el.tag} v-model=\"${value}\" value=\"${el.attrsMap.value}\">:\\n` +\n-        'inline value attributes will be ignored when using v-model. ' +\n-        'Declare initial values in the component\\'s data option instead.'\n-      )\n-    }\n-    if (el.tag === 'textarea' && el.children.length) {\n-      warn(\n-        `<textarea v-model=\"${value}\">:\\n` +\n-        'inline content inside <textarea> will be ignored when using v-model. ' +\n-        'Declare initial values in the component\\'s data option instead.'\n-      )\n-    }\n-  }\n-\n",
            "+": ""
          }
        ],
        "a/test/unit/features/directives/model-text.spec.js": [
          {
            "-": "-  it('warn inline value attribute', () => {\n-    const vm = new Vue({\n-      data: {\n-        test: 'foo'\n-      },\n-      template: '<input v-model=\"test\" value=\"bar\">'\n-    }).$mount()\n-    expect(vm.test).toBe('foo')\n-    expect(vm.$el.value).toBe('foo')\n-    expect('inline value attributes will be ignored').toHaveBeenWarned()\n-  })\n-\n-  it('warn textarea inline content', function () {\n-    const vm = new Vue({\n-      data: {\n-        test: 'foo'\n-      },\n-      template: '<textarea v-model=\"test\">bar</textarea>'\n-    }).$mount()\n-    expect(vm.test).toBe('foo')\n-    expect(vm.$el.value).toBe('foo')\n-    expect('inline content inside <textarea> will be ignored').toHaveBeenWarned()\n-  })\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "c9fbcaf5919d0d544b377791b1dda12d85a60dd1",
      "url": "https://github.com/vuejs/vue/commit/c9fbcaf5919d0d544b377791b1dda12d85a60dd1",
      "message": "remove unnecessary slice in SSR renderStyle (small perf gain)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-01-20T04:41:17Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/server/modules/style.js": [
          {
            "+": "+  return styleText\n",
            "-": "-  return styleText.slice(0, -1)\n"
          }
        ],
        "a/test/ssr/ssr-string.spec.js": [
          {
            "+": "+        '<div server-rendered=\"true\" style=\"background-color:black;font-size:14px;color:red;\"></div>'\n",
            "-": "-        '<div server-rendered=\"true\" style=\"background-color:black;font-size:14px;color:red\"></div>'\n"
          },
          {
            "+": "+        '<div server-rendered=\"true\" style=\"color:red;\"></div>'\n",
            "-": "-        '<div server-rendered=\"true\" style=\"color:red\"></div>'\n"
          },
          {
            "+": "+        '<section server-rendered=\"true\"><div style=\"color:red;\"></div></section>'\n",
            "-": "-        '<section server-rendered=\"true\"><div style=\"color:red\"></div></section>'\n"
          },
          {
            "+": "+        '<div server-rendered=\"true\" style=\"text-align:left;font-size:520rem;color:red;\"></div>'\n",
            "-": "-        '<div server-rendered=\"true\" style=\"text-align:left;font-size:520rem;color:red\"></div>'\n"
          },
          {
            "+": "+        '<div server-rendered=\"true\" style=\"color:red;\"><div></div></div>'\n",
            "-": "-        '<div server-rendered=\"true\" style=\"color:red\"><div></div></div>'\n"
          },
          {
            "+": "+        '<div server-rendered=\"true\" style=\"color:red;\"><span style=\"color:black;\"></span></div>'\n",
            "-": "-        '<div server-rendered=\"true\" style=\"color:red\"><span style=\"color:black\"></span></div>'\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 7,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "d01104e1242c870de12592da88d2c4ffd0c9c0c2",
      "url": "https://github.com/vuejs/vue/commit/d01104e1242c870de12592da88d2c4ffd0c9c0c2",
      "message": "Remove dead link (#4740)\n\n\"Building Larger Apps with Vue.js\" is not in the 2.X documentation anymore. \r\n\r\nAlternatives:\r\n- link to the original page: https://v1.vuejs.org/guide/application.html\r\n- link to vue-cli, as the previous page suggests? https://github.com/vuejs/vue-cli",
      "author": {
        "name": "Paul-Etienne Coisne",
        "email": "coisnepe@users.noreply.github.com",
        "date": "2017-01-19T13:17:50Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/13304454?v=4"
      },
      "diffObj": {
        "a/examples/todomvc/readme.md": [
          {
            "-": "-* [Building Larger Apps with Vue.js](https://vuejs.org/guide/application.html)\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "b60182d996ed1e976ce1697a3017cb702ddc0920",
      "url": "https://github.com/vuejs/vue/commit/b60182d996ed1e976ce1697a3017cb702ddc0920",
      "message": "remove no longer relevant ssr build check (close #4680)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2017-01-11T17:21:32Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/server/render.js": [
          {
            "-": "-    checkBuild(component)\n",
            "+": ""
          },
          {
            "-": "-\n-function checkBuild (component) {\n-  let Vue: any = component.constructor\n-  while (Vue.super) {\n-    Vue = Vue.super\n-  }\n-  if (Vue.compile && Vue.config.devtools !== false) {\n-    console.error(\n-      red(`\\n[vue-server-renderer] You are using the standalone build (vue/dist/vue.js) for ` +\n-      `server-side rendering. It is recommended to use the CommonJS build ` +\n-      `(vue/dist/vue.common.js) instead so that the code can run in ` +\n-      `production mode by setting NODE_ENV=production. The server renderer ` +\n-      `supports the template option regardless of what build you are using.\\n`)\n-    )\n-  }\n-}\n-\n-function red (str) {\n-  return '\\u001B[1m\\u001B[31m' + str + '\\u001B[39m\\u001B[22m'\n-}\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "7f25f730c1b82a80158d488b025f138155664921",
      "url": "https://github.com/vuejs/vue/commit/7f25f730c1b82a80158d488b025f138155664921",
      "message": "remove no longer necessary code",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-12-27T15:36:59Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/components/transition.js": [
          {
            "-": "-    // mark v-show\n-    // so that the transition module can hand over the control to the directive\n-    if (child.data.directives && child.data.directives.some(d => d.name === 'show')) {\n-      child.data.show = true\n-    }\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "e809b03d20df5ae57525398365e63510ebc08b31",
      "url": "https://github.com/vuejs/vue/commit/e809b03d20df5ae57525398365e63510ebc08b31",
      "message": "remove no longer relevant code",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-12-25T19:57:21Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/observer/watcher.js": [
          {
            "+": "+      // if the vm is being destroyed.\n+      if (!this.vm._isBeingDestroyed) {\n",
            "-": "-      // if the vm is being destroyed or is performing a v-for\n-      // re-render (the watcher list is then filtered by v-for).\n-      if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "7f260e1185284f6b1fea35bfacbc06f705ea2f06",
      "url": "https://github.com/vuejs/vue/commit/7f260e1185284f6b1fea35bfacbc06f705ea2f06",
      "message": "test case for lifecycle hook events",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-12-14T17:27:38Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/options/lifecycle.spec.js": [
          {
            "+": "+\n+  it('should emit hook events', () => {\n+    const created = jasmine.createSpy()\n+    const mounted = jasmine.createSpy()\n+    const destroyed = jasmine.createSpy()\n+    const vm = new Vue({\n+      render () {},\n+      beforeCreate () {\n+        this.$on('hook:created', created)\n+        this.$on('hook:mounted', mounted)\n+        this.$on('hook:destroyed', destroyed)\n+      }\n+    })\n+\n+    expect(created).toHaveBeenCalled()\n+    expect(mounted).not.toHaveBeenCalled()\n+    expect(destroyed).not.toHaveBeenCalled()\n+\n+    vm.$mount()\n+    expect(mounted).toHaveBeenCalled()\n+    expect(destroyed).not.toHaveBeenCalled()\n+\n+    vm.$destroy()\n+    expect(destroyed).toHaveBeenCalled()\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "31347d1de6f43cc38d3ae378e3cd81e40dc213f5",
      "url": "https://github.com/vuejs/vue/commit/31347d1de6f43cc38d3ae378e3cd81e40dc213f5",
      "message": "remove font from isSVG detection to avoid issues with legacy markup using the tag in HTML (close #4459)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-12-13T17:03:46Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/util/element.js": [
          {
            "+": "+  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,' +\n",
            "-": "-  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font,' +\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "68e560af24560954779ab5a84c690369ed01c845",
      "url": "https://github.com/vuejs/vue/commit/68e560af24560954779ab5a84c690369ed01c845",
      "message": "remove flow in pre-commit hook",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-25T21:09:54Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.github/CONTRIBUTING.md": [
          {
            "+": "+This will run ESLint on changed files before each commit.\n",
            "-": "-This will run Flow and ESLint on changed files before each commit.\n"
          }
        ],
        "a/build/git-hooks/pre-commit": [
          {
            "+": "+  NODE_ENV=production eslint $files_to_lint\n",
            "-": "-  flow && NODE_ENV=production eslint $files_to_lint\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "c7147e3b60cb8b4147f0132f63b70a527a47b2b6",
      "url": "https://github.com/vuejs/vue/commit/c7147e3b60cb8b4147f0132f63b70a527a47b2b6",
      "message": "remove debugger",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-25T17:42:29Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/render.js": [
          {
            "-": "-    debugger\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "prefix-style",
      "type": "test",
      "sha": "00c137fb27878e2b11ea4b52032f1757aa9059dd",
      "url": "https://github.com/vuejs/vue/commit/00c137fb27878e2b11ea4b52032f1757aa9059dd",
      "message": "test: check unexpected warnings",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-24T16:50:20Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/helpers/to-have-been-warned.js": [
          {
            "+": "+let asserted\n",
            "-": ""
          },
          {
            "+": "+  asserted = []\n",
            "-": ""
          },
          {
            "+": "+          asserted = asserted.concat(msg)\n",
            "-": ""
          },
          {
            "+": "+\n+afterEach(done => {\n+  const warned = msg => asserted.some(assertedMsg => msg.indexOf(assertedMsg) > -1)\n+  let count = console.error.calls.count()\n+  let args\n+  while (count--) {\n+    args = console.error.calls.argsFor(count)\n+    if (!warned(args[0])) {\n+      done.fail(`Unexpected console.error message: ${args[0]}`)\n+      return\n+    }\n+  }\n+  done()\n+})\n",
            "-": ""
          }
        ],
        "a/test/helpers/wait-for-update.js": [
          {
            "+": "+      throw new Error('waitForUpdate chain is missing .then(done)')\n",
            "-": "-      console.warn('waitForUpdate chain is missing .then(done)')\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 5,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "26b6374c3ce39a6f5ff4d5915990f7c5cb3b1295",
      "url": "https://github.com/vuejs/vue/commit/26b6374c3ce39a6f5ff4d5915990f7c5cb3b1295",
      "message": "test for static style !important support",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-24T15:15:05Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/directives/style.spec.js": [
          {
            "+": "+  it('!important', () => {\n+    vm.styles = { display: 'block !important' }\n+    waitForUpdate(() => {\n+      expect(vm.$el.style.getPropertyPriority('display')).toBe('important')\n+    })\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "a11ba690944ccc4859a7951003fd6a97ed228a03",
      "url": "https://github.com/vuejs/vue/commit/a11ba690944ccc4859a7951003fd6a97ed228a03",
      "message": "remove fdescribe",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-21T15:27:54Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/component/component-keep-alive.spec.js": [
          {
            "+": "+describe('Component keep-alive', () => {\n",
            "-": "-fdescribe('Component keep-alive', () => {\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "e5d7f32cf69b6094aaecd71e09ce807e705d2347",
      "url": "https://github.com/vuejs/vue/commit/e5d7f32cf69b6094aaecd71e09ce807e705d2347",
      "message": "tests for keep-alive include/exclude",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-21T14:51:06Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/component/component-keep-alive.spec.js": [
          {
            "+": "+fdescribe('Component keep-alive', () => {\n",
            "-": "-describe('Component keep-alive', () => {\n"
          },
          {
            "+": "+  function sharedAssertions (vm, done) {\n+    expect(vm.$el.textContent).toBe('one')\n+    assertHookCalls(one, [1, 1, 1, 0, 0])\n+    assertHookCalls(two, [0, 0, 0, 0, 0])\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.textContent).toBe('two')\n+      assertHookCalls(one, [1, 1, 1, 1, 0])\n+      assertHookCalls(two, [1, 1, 0, 0, 0])\n+      vm.view = 'one'\n+    }).then(() => {\n+      expect(vm.$el.textContent).toBe('one')\n+      assertHookCalls(one, [1, 1, 2, 1, 0])\n+      assertHookCalls(two, [1, 1, 0, 0, 1])\n+      vm.view = 'two'\n+    }).then(() => {\n+      expect(vm.$el.textContent).toBe('two')\n+      assertHookCalls(one, [1, 1, 2, 2, 0])\n+      assertHookCalls(two, [2, 2, 0, 0, 1])\n+      vm.ok = false // teardown\n+    }).then(() => {\n+      expect(vm.$el.textContent).toBe('')\n+      assertHookCalls(one, [1, 1, 2, 3, 1])\n+      assertHookCalls(two, [2, 2, 0, 0, 2])\n+    }).then(done)\n+  }\n+\n+  it('include (string)', done => {\n+    const vm = new Vue({\n+      template: `\n+        <div v-if=\"ok\">\n+          <keep-alive include=\"one\">\n+            <component :is=\"view\"></component>\n+          </keep-alive>\n+        </div>\n+      `,\n+      data: {\n+        view: 'one',\n+        ok: true\n+      },\n+      components\n+    }).$mount()\n+    sharedAssertions(vm, done)\n+  })\n+\n+  it('include (regex)', done => {\n+    const vm = new Vue({\n+      template: `\n+        <div v-if=\"ok\">\n+          <keep-alive :include=\"/^one$/\">\n+            <component :is=\"view\"></component>\n+          </keep-alive>\n+        </div>\n+      `,\n+      data: {\n+        view: 'one',\n+        ok: true\n+      },\n+      components\n+    }).$mount()\n+    sharedAssertions(vm, done)\n+  })\n+\n+  it('exclude (string)', done => {\n+    const vm = new Vue({\n+      template: `\n+        <div v-if=\"ok\">\n+          <keep-alive exclude=\"two\">\n+            <component :is=\"view\"></component>\n+          </keep-alive>\n+        </div>\n+      `,\n+      data: {\n+        view: 'one',\n+        ok: true\n+      },\n+      components\n+    }).$mount()\n+    sharedAssertions(vm, done)\n+  })\n+\n+  it('exclude (regex)', done => {\n+    const vm = new Vue({\n+      template: `\n+        <div v-if=\"ok\">\n+          <keep-alive :exclude=\"/^two$/\">\n+            <component :is=\"view\"></component>\n+          </keep-alive>\n+        </div>\n+      `,\n+      data: {\n+        view: 'one',\n+        ok: true\n+      },\n+      components\n+    }).$mount()\n+    sharedAssertions(vm, done)\n+  })\n+\n+  it('include + exclude', done => {\n+    const vm = new Vue({\n+      template: `\n+        <div v-if=\"ok\">\n+          <keep-alive include=\"one,two\" exclude=\"two\">\n+            <component :is=\"view\"></component>\n+          </keep-alive>\n+        </div>\n+      `,\n+      data: {\n+        view: 'one',\n+        ok: true\n+      },\n+      components\n+    }).$mount()\n+    sharedAssertions(vm, done)\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "7f36f99f6c9bf6130f298fb79538f09fce7ef2fc",
      "url": "https://github.com/vuejs/vue/commit/7f36f99f6c9bf6130f298fb79538f09fce7ef2fc",
      "message": "tests for scoped slots",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-17T21:28:54Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/flow/compiler.js": [
          {
            "+": "+  slotScope?: ?string;\n",
            "-": ""
          }
        ],
        "a/src/compiler/codegen/index.js": [
          {
            "-": "-  // slot target\n-  if (el.slotTarget) {\n-    data += `slot:${el.slotTarget},`\n-  }\n",
            "+": ""
          },
          {
            "+": "+  // slot target\n+  if (el.slotTarget) {\n+    data += `slot:${el.slotTarget},`\n",
            "-": "-  // inline-template\n-  if (el.inlineTemplate) {\n-    data += `${genInlineTemplate(el)},`\n"
          },
          {
            "+": "+  // inline-template\n+  if (el.inlineTemplate) {\n+    const inlineTemplate = genInlineTemplate(el)\n+    if (inlineTemplate) {\n+      data += `${inlineTemplate},`\n+    }\n+  }\n",
            "-": ""
          },
          {
            "+": "+function genInlineTemplate (el: ASTElement): ?string {\n",
            "-": "-function genInlineTemplate (el) {\n"
          },
          {
            "-": "-  } else {\n-    return ''\n",
            "+": ""
          }
        ],
        "a/src/compiler/parser/index.js": [
          {
            "+": "+        } else if (element.slotTarget && element.slotScope) { // scoped slot\n",
            "-": "-        } else if (element.slotTarget && element.attrsMap.scope) { // scoped slot\n"
          },
          {
            "+": "+          currentParent.plain = false\n",
            "-": ""
          },
          {
            "+": "+    if (process.env.NODE_ENV !== 'production' && el.key) {\n+      warn(\n+        `\\`key\\` does not work on <slot> because slots are abstract outlets ` +\n+        `and can possibly expand into multiple elements. ` +\n+        `Use the key on a wrapping element instead.`\n+      )\n+    }\n",
            "-": ""
          },
          {
            "+": "+      el.slotScope = getAndRemoveAttr(el, 'scope')\n",
            "-": ""
          }
        ],
        "a/src/core/instance/render.js": [
          {
            "+": "+    if (process.env.NODE_ENV !== 'production' && name === 'default' && props) {\n+      warn(`Scoped slots must be named`, this)\n+    }\n+    const scopedSlotFn = this.$scopedSlots && this.$scopedSlots[name]\n+    if (scopedSlotFn) { // scoped slot\n+      return scopedSlotFn(props || {}) || fallback\n+    } else {\n",
            "-": "-    if (props) { // scoped slot\n-      const scopedSlotFn = this.$scopedSlots[name]\n-      return scopedSlotFn\n-        ? scopedSlotFn(props) || fallback\n-        : fallback\n-    } else { // static slot\n"
          }
        ],
        "a/test/unit/features/component/component-scoped-slot.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+\n+describe('Component scoped slot', () => {\n+  it('normal element slot', done => {\n+    const vm = new Vue({\n+      template: `\n+        <test ref=\"test\">\n+          <span slot=\"item\" scope=\"props\">{{ props.text }}</span>\n+        </test>\n+      `,\n+      components: {\n+        test: {\n+          data () {\n+            return { msg: 'hello' }\n+          },\n+          template: `\n+            <div>\n+              <slot name=\"item\" :text=\"msg\"></slot>\n+            </div>\n+          `\n+        }\n+      }\n+    }).$mount()\n+\n+    expect(vm.$el.innerHTML).toBe('<span>hello</span>')\n+    vm.$refs.test.msg = 'world'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe('<span>world</span>')\n+    }).then(done)\n+  })\n+\n+  it('template slot', done => {\n+    const vm = new Vue({\n+      template: `\n+        <test ref=\"test\">\n+          <template slot=\"item\" scope=\"props\">\n+            <span>{{ props.foo }}</span><span>{{ props.bar }}</span>\n+          </template>\n+        </test>\n+      `,\n+      components: {\n+        test: {\n+          data () {\n+            return { foo: 'FOO', bar: 'BAR' }\n+          },\n+          template: `\n+            <div>\n+              <slot name=\"item\" :foo=\"foo\" :bar=\"bar\"></slot>\n+            </div>\n+          `\n+        }\n+      }\n+    }).$mount()\n+\n+    expect(vm.$el.innerHTML).toBe('<span>FOO</span><span>BAR</span>')\n+    vm.$refs.test.foo = 'BAZ'\n+    waitForUpdate(() => {\n+      expect(vm.$el.innerHTML).toBe('<span>BAZ</span><span>BAR</span>')\n+    }).then(done)\n+  })\n+\n+  it('fallback content', () => {\n+    const vm = new Vue({\n+      template: `<test></test>`,\n+      components: {\n+        test: {\n+          data () {\n+            return { msg: 'hello' }\n+          },\n+          template: `\n+            <div>\n+              <slot name=\"item\" :text=\"msg\">\n+                <span>{{ msg }} fallback</span>\n+              </slot>\n+            </div>\n+          `\n+        }\n+      }\n+    }).$mount()\n+    expect(vm.$el.innerHTML).toBe('<span>hello fallback</span>')\n+  })\n+\n+  it('slot with v-for', done => {\n+    const vm = new Vue({\n+      template: `\n+        <test ref=\"test\">\n+          <template slot=\"item\" scope=\"props\">\n+            <span>{{ props.text }}</span>\n+          </template>\n+        </test>\n+      `,\n+      components: {\n+        test: {\n+          data () {\n+            return {\n+              items: ['foo', 'bar', 'baz']\n+            }\n+          },\n+          template: `\n+            <div>\n+              <slot v-for=\"item in items\" name=\"item\" :text=\"item\"></slot>\n+            </div>\n+          `\n+        }\n+      }\n+    }).$mount()\n+\n+    function assertOutput () {\n+      expect(vm.$el.innerHTML).toBe(vm.$refs.test.items.map(item => {\n+        return `<span>${item}</span>`\n+      }).join(''))\n+    }\n+\n+    assertOutput()\n+    vm.$refs.test.items.reverse()\n+    waitForUpdate(assertOutput).then(() => {\n+      vm.$refs.test.items.push('qux')\n+    }).then(assertOutput).then(done)\n+  })\n+\n+  it('slot inside v-for', done => {\n+    const vm = new Vue({\n+      template: `\n+        <test ref=\"test\">\n+          <template slot=\"item\" scope=\"props\">\n+            <span>{{ props.text }}</span>\n+          </template>\n+        </test>\n+      `,\n+      components: {\n+        test: {\n+          data () {\n+            return {\n+              items: ['foo', 'bar', 'baz']\n+            }\n+          },\n+          template: `\n+            <ul>\n+              <li v-for=\"item in items\">\n+                <slot name=\"item\" :text=\"item\"></slot>\n+              </li>\n+            </ul>\n+          `\n+        }\n+      }\n+    }).$mount()\n+\n+    function assertOutput () {\n+      expect(vm.$el.innerHTML).toBe(vm.$refs.test.items.map(item => {\n+        return `<li><span>${item}</span></li>`\n+      }).join(''))\n+    }\n+\n+    assertOutput()\n+    vm.$refs.test.items.reverse()\n+    waitForUpdate(assertOutput).then(() => {\n+      vm.$refs.test.items.push('qux')\n+    }).then(assertOutput).then(done)\n+  })\n+\n+  it('scoped slot without scope alias', () => {\n+    const vm = new Vue({\n+      template: `\n+        <test ref=\"test\">\n+          <span slot=\"item\">I am static</span>\n+        </test>\n+      `,\n+      components: {\n+        test: {\n+          data () {\n+            return { msg: 'hello' }\n+          },\n+          template: `\n+            <div>\n+              <slot name=\"item\" :text=\"msg\"></slot>\n+            </div>\n+          `\n+        }\n+      }\n+    }).$mount()\n+    expect(vm.$el.innerHTML).toBe('<span>I am static</span>')\n+  })\n+\n+  it('non-scoped slot with scope alias', () => {\n+    const vm = new Vue({\n+      template: `\n+        <test ref=\"test\">\n+          <span slot=\"item\" scope=\"props\">{{ props.text || 'meh' }}</span>\n+        </test>\n+      `,\n+      components: {\n+        test: {\n+          data () {\n+            return { msg: 'hello' }\n+          },\n+          template: `\n+            <div>\n+              <slot name=\"item\"></slot>\n+            </div>\n+          `\n+        }\n+      }\n+    }).$mount()\n+    expect(vm.$el.innerHTML).toBe('<span>meh</span>')\n+  })\n+\n+  it('warn un-named scoped slot', () => {\n+    new Vue({\n+      template: `<test><span scope=\"lol\"></span></test>`,\n+      components: {\n+        test: {\n+          data () {\n+            return { msg: 'hello' }\n+          },\n+          template: `\n+            <div>\n+              <slot :msg=\"msg\"></slot>\n+            </div>\n+          `\n+        }\n+      }\n+    }).$mount()\n+    expect('Scoped slots must be named').toHaveBeenWarned()\n+  })\n+\n+  it('warn key on slot', () => {\n+    new Vue({\n+      template: `\n+        <test ref=\"test\">\n+          <template slot=\"item\" scope=\"props\">\n+            <span>{{ props.text }}</span>\n+          </template>\n+        </test>\n+      `,\n+      components: {\n+        test: {\n+          data () {\n+            return {\n+              items: ['foo', 'bar', 'baz']\n+            }\n+          },\n+          template: `\n+            <div>\n+              <slot v-for=\"item in items\" name=\"item\" :text=\"item\" :key=\"item\"></slot>\n+            </div>\n+          `\n+        }\n+      }\n+    }).$mount()\n+    expect(`\\`key\\` does not work on <slot>`).toHaveBeenWarned()\n+  })\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 5,
      "numOfChanges": 12,
      "qualityScore": 20
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "8f7c49c9ba76a288b9eaf8a0bd172fc68218bc6c",
      "url": "https://github.com/vuejs/vue/commit/8f7c49c9ba76a288b9eaf8a0bd172fc68218bc6c",
      "message": "Remove old static style when applying style update  (fix #4227) (#4235)\n\n* both static style and stylebinding should be removed\r\n\r\n* update test case\r\n\r\n* update test case",
      "author": {
        "name": "chengchao",
        "email": "defcc@users.noreply.github.com",
        "date": "2016-11-17T16:25:54Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/2603918?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/modules/style.js": [
          {
            "+": "+  const oldStaticStyle: any = oldVnode.data.staticStyle\n+  const oldStyleBinding: any = oldVnode.data.style || {}\n+\n+  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n+  const oldStyle = oldStaticStyle || oldStyleBinding\n+\n",
            "-": "-  const oldStyle: any = oldVnode.data.style || {}\n"
          }
        ],
        "a/test/unit/features/directives/style.spec.js": [
          {
            "+": "+      template:\n+        '<div>' +\n+          '<section style=\"color: blue\" :style=\"style\" v-if=\"!bool\"></section>' +\n+          '<div></div>' +\n+          '<section style=\"margin-top: 12px\" v-if=\"bool\"></section>' +\n+        '</div>',\n",
            "-": "-      template: '<div>' +\n-                  '<section style=\"color: blue\" v-if=\"!bool\"></section>' +\n-                  '<div></div>' +\n-                  '<section style=\"margin: 0\" v-if=\"bool\"></section>' +\n-                '</div>',\n"
          },
          {
            "+": "+        bool: false,\n+        style: {\n+          fontSize: '12px'\n+        }\n",
            "-": "-        bool: false\n"
          },
          {
            "+": "+    const style = vm.$el.children[0].style\n+    expect(style.fontSize).toBe('12px')\n+    expect(style.color).toBe('blue')\n",
            "-": ""
          },
          {
            "+": "+      expect(style.color).toBe('')\n+      expect(style.fontSize).toBe('')\n+      expect(style.marginTop).toBe('12px')\n",
            "-": "-      expect(vm.$el.children[1].style.color).not.toBe('blue')\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 5,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "69eab86813b6d2cb1c8a7542fee6ccfe776988f5",
      "url": "https://github.com/vuejs/vue/commit/69eab86813b6d2cb1c8a7542fee6ccfe776988f5",
      "message": "remove unnecessary alias",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-12T01:25:11Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/build/karma.base.config.js": [
          {
            "+": "+    alias: alias\n",
            "-": "-    alias: Object.assign({}, alias, {\n-      entities: './entity-decoder'\n-    })\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "ef0d788fc19eeb3b30f56180e126cf1543f42f94",
      "url": "https://github.com/vuejs/vue/commit/ef0d788fc19eeb3b30f56180e126cf1543f42f94",
      "message": "remove unnecessary component normalization during options merge",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-05T02:00:51Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/util/options.js": [
          {
            "+": "+ * Validate component names\n",
            "-": "- * Make sure component options get converted to actual\n- * constructors.\n"
          },
          {
            "+": "+function checkComponents (options: Object) {\n+  for (const key in options.components) {\n+    const lower = key.toLowerCase()\n+    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n+      warn(\n+        'Do not use built-in or reserved HTML elements as component ' +\n+        'id: ' + key\n+      )\n",
            "-": "-function normalizeComponents (options: Object) {\n-  if (options.components) {\n-    const components = options.components\n-    const normalized = options.components = {}\n-    let def\n-    for (const key in components) {\n-      const lower = key.toLowerCase()\n-      if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n-        process.env.NODE_ENV !== 'production' && warn(\n-          'Do not use built-in or reserved HTML elements as component ' +\n-          'id: ' + key\n-        )\n-        continue\n-      }\n-      def = components[key]\n-      normalized[key] = isPlainObject(def) ? Vue.extend(def) : def\n"
          },
          {
            "+": "+  if (process.env.NODE_ENV !== 'production') {\n+    checkComponents(child)\n+  }\n",
            "-": "-  normalizeComponents(child)\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 3,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "fa16b129ca1a2c23211ee545e129cae4eaff877d",
      "url": "https://github.com/vuejs/vue/commit/fa16b129ca1a2c23211ee545e129cae4eaff877d",
      "message": "remove unnecesary function",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-04T16:54:53Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/server/modules/attrs.js": [
          {
            "-": "-  let res = ''\n-  if (node.data.attrs || node.parent) {\n-    res += render(node)\n-  }\n-  return res\n-}\n-\n-function render (node): string {\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "bc455352a3dd95bc7c5789feb4d7e969427351d4",
      "url": "https://github.com/vuejs/vue/commit/bc455352a3dd95bc7c5789feb4d7e969427351d4",
      "message": "test sfc parser <style module>",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-11-03T20:25:53Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/sfc/sfc-parser.spec.js": [
          {
            "+": "+      <style module>\n+        h1 { font-weight: bold }\n+      </style>\n",
            "-": ""
          },
          {
            "+": "+    expect(res.styles.length).toBe(3)\n",
            "-": "-    expect(res.styles.length).toBe(2)\n"
          },
          {
            "+": "+    expect(res.styles[2].module).toBe(true)\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "7570a3c566969bbb5afb5bfa2c2c068aecae379c",
      "url": "https://github.com/vuejs/vue/commit/7570a3c566969bbb5afb5bfa2c2c068aecae379c",
      "message": "test for directive refactor (fix #3848)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-10-12T00:49:10Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/vdom/helpers.js": [
          {
            "+": "+  if (!injectedHash[key]) {\n+    injectedHash[key] = true\n+    const oldHook = def[hookKey]\n+    if (oldHook) {\n+      def[hookKey] = function () {\n+        oldHook.apply(this, arguments)\n+        hook.apply(this, arguments)\n+      }\n+    } else {\n+      def[hookKey] = hook\n",
            "-": "-  if (injectedHash[key]) return\n-  injectedHash[key] = true\n-  const oldHook = def[hookKey]\n-  if (oldHook) {\n-    def[hookKey] = function () {\n-      oldHook.apply(this, arguments)\n-      hook.apply(this, arguments)\n"
          },
          {
            "-": "-  } else {\n-    def[hookKey] = hook\n",
            "+": ""
          }
        ],
        "a/test/unit/features/options/directives.spec.js": [
          {
            "+": "+  it('should properly handle same node with different directive sets', done => {\n+    const spies = {}\n+    const createSpy = name => (spies[name] = jasmine.createSpy(name))\n+    const vm = new Vue({\n+      data: {\n+        ok: true,\n+        val: 123\n+      },\n+      template: `\n+        <div>\n+          <div v-if=\"ok\" v-test=\"val\" v-test.hi=\"val\"></div>\n+          <div v-if=\"!ok\" v-test.hi=\"val\" v-test2=\"val\"></div>\n+        </div>\n+      `,\n+      directives: {\n+        test: {\n+          bind: createSpy('bind1'),\n+          inserted: createSpy('inserted1'),\n+          update: createSpy('update1'),\n+          componentUpdated: createSpy('componentUpdated1'),\n+          unbind: createSpy('unbind1')\n+        },\n+        test2: {\n+          bind: createSpy('bind2'),\n+          inserted: createSpy('inserted2'),\n+          update: createSpy('update2'),\n+          componentUpdated: createSpy('componentUpdated2'),\n+          unbind: createSpy('unbind2')\n+        }\n+      }\n+    }).$mount()\n+\n+    expect(spies.bind1.calls.count()).toBe(2)\n+    expect(spies.inserted1.calls.count()).toBe(2)\n+    expect(spies.bind2.calls.count()).toBe(0)\n+    expect(spies.inserted2.calls.count()).toBe(0)\n+\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      // v-test with modifier should be updated\n+      expect(spies.update1.calls.count()).toBe(1)\n+      expect(spies.componentUpdated1.calls.count()).toBe(1)\n+\n+      // v-test without modifier should be unbound\n+      expect(spies.unbind1.calls.count()).toBe(1)\n+\n+      // v-test2 should be bound\n+      expect(spies.bind2.calls.count()).toBe(1)\n+      expect(spies.inserted2.calls.count()).toBe(1)\n+\n+      vm.ok = true\n+    }).then(() => {\n+      // v-test without modifier should be bound again\n+      expect(spies.bind1.calls.count()).toBe(3)\n+      expect(spies.inserted1.calls.count()).toBe(3)\n+\n+      // v-test2 should be unbound\n+      expect(spies.unbind2.calls.count()).toBe(1)\n+\n+      // v-test with modifier should be updated again\n+      expect(spies.update1.calls.count()).toBe(2)\n+      expect(spies.componentUpdated1.calls.count()).toBe(2)\n+\n+      vm.val = 234\n+    }).then(() => {\n+      expect(spies.update1.calls.count()).toBe(4)\n+      expect(spies.componentUpdated1.calls.count()).toBe(4)\n+    }).then(done)\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 3,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "32383e5fa38868d8d4b56c9d3f8676cda24fe135",
      "url": "https://github.com/vuejs/vue/commit/32383e5fa38868d8d4b56c9d3f8676cda24fe135",
      "message": "remove name option warning during instantiation",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-10-11T21:58:02Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/util/options.js": [
          {
            "-": "-\n-  strats.name = function (parent, child, vm) {\n-    if (vm && child) {\n-      warn(\n-        'options \"name\" can only be used as a component definition option, ' +\n-        'not during instance creation.'\n-      )\n-    }\n-    return defaultStrat(parent, child)\n-  }\n",
            "+": ""
          }
        ],
        "a/test/unit/features/options/name.spec.js": [
          {
            "-": "-  it('should warn when giving instance a name', () => {\n-    const Comp = Vue.component('custom', { name: 'custom' })\n-    new Comp()\n-    expect(`options \"name\" can only be used as a component definition option`).not.toHaveBeenWarned()\n-\n-    new Vue({\n-      name: 'SuperVue'\n-    }).$mount()\n-    expect(`options \"name\" can only be used as a component definition option`).toHaveBeenWarned()\n-  })\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "89adabf0a5bb1e215ee76a85f7882e7ffbc7f3f0",
      "url": "https://github.com/vuejs/vue/commit/89adabf0a5bb1e215ee76a85f7882e7ffbc7f3f0",
      "message": "remove --next tag in release script",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-09-30T18:24:56Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/build/release.sh": [
          {
            "+": "+  npm publish\n",
            "-": "-  npm publish --tag next\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "8ef603b7c3a11a823f148aa2d86a4d243c35927d",
      "url": "https://github.com/vuejs/vue/commit/8ef603b7c3a11a823f148aa2d86a4d243c35927d",
      "message": "test <template> key warning, fix coverage",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-09-30T18:18:47Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/compiler/parser.spec.js": [
          {
            "+": "+  it('warn <template> key', () => {\n+    parse('<div><template v-for=\"i in 10\" :key=\"i\"></template></div>', baseOptions)\n+    expect('<template> cannot be keyed').toHaveBeenWarned()\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "47ee6abfc6d3584a825a61deb16ad03feb6105ec",
      "url": "https://github.com/vuejs/vue/commit/47ee6abfc6d3584a825a61deb16ad03feb6105ec",
      "message": "remove codegen v-for truthiness check (fix #3817)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-09-30T02:05:39Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/codegen/index.js": [
          {
            "+": "+  return `_l((${exp}),` +\n",
            "-": "-  return `(${exp})&&_l((${exp}),` +\n"
          }
        ],
        "a/test/unit/modules/compiler/codegen.spec.js": [
          {
            "+": "+      `with(this){return _l((items),function(item){return _h('li',{key:item.uid})})}`\n",
            "-": "-      `with(this){return (items)&&_l((items),function(item){return _h('li',{key:item.uid})})}`\n"
          },
          {
            "+": "+      `with(this){return _l((items),function(item,i){return _h('li')})}`\n",
            "-": "-      `with(this){return (items)&&_l((items),function(item,i){return _h('li')})}`\n"
          },
          {
            "+": "+      `with(this){return _l((items),function(item,key,index){return _h('li')})}`\n",
            "-": "-      `with(this){return (items)&&_l((items),function(item,key,index){return _h('li')})}`\n"
          },
          {
            "+": "+      `with(this){return _h('ul',[_l((items),function(item){return _h('li',{ref:\"component1\",refInFor:true})})])}`\n",
            "-": "-      `with(this){return _h('ul',[(items)&&_l((items),function(item){return _h('li',{ref:\"component1\",refInFor:true})})])}`\n"
          },
          {
            "+": "+      `with(this){return _h('div',[_l((10),function(i){return _h('div',[_m(0,true)])})])}`,\n",
            "-": "-      `with(this){return _h('div',[(10)&&_l((10),function(i){return _h('div',[_m(0,true)])})])}`,\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 6,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "fd5ea73254bb6f4e48f0056acf684599eb9a2e7c",
      "url": "https://github.com/vuejs/vue/commit/fd5ea73254bb6f4e48f0056acf684599eb9a2e7c",
      "message": "test iOS 8 instead of 7 given market share",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-09-28T22:31:21Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/build/karma.sauce.config.js": [
          {
            "+": "+    sl_ios_safari_8: {\n",
            "-": "-    sl_ios_safari_7: {\n"
          },
          {
            "+": "+      version: '8.4'\n",
            "-": "-      version: '7.0'\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "d0c13c7e6672d5f36e88179ca75d8c04b9eb0115",
      "url": "https://github.com/vuejs/vue/commit/d0c13c7e6672d5f36e88179ca75d8c04b9eb0115",
      "message": "test undefined method warning",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-09-13T12:42:53Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/state.js": [
          {
            "+": "+        warn(`Method \"${key}\" is undefined in options.`, vm)\n",
            "-": "-        warn(`The method ${key} on vue instance is undefined.`, vm)\n"
          }
        ],
        "a/test/unit/features/options/methods.spec.js": [
          {
            "+": "+\n+  it('should warn undefined methods', () => {\n+    new Vue({\n+      methods: {\n+        hello: undefined\n+      }\n+    })\n+    expect(`Method \"hello\" is undefined in options`).toHaveBeenWarned()\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "d2337dfc3fd4b03b01204efa0256a517c4b78697",
      "url": "https://github.com/vuejs/vue/commit/d2337dfc3fd4b03b01204efa0256a517c4b78697",
      "message": "remove \".d\" from paths (#3607)",
      "author": {
        "name": "Kaorun343",
        "email": "hagiharak4294967296@gmail.com",
        "date": "2016-09-06T13:28:17Z"
      },
      "diffObj": {
        "a/types/index.d.ts": [
          {
            "+": "+import {Vue as _Vue} from \"./vue\";\n",
            "-": "-import {Vue as _Vue} from \"./vue.d\";\n"
          }
        ],
        "a/types/options.d.ts": [
          {
            "+": "+import { Vue } from \"./vue\";\n+import { VNode, VNodeData, VNodeDirective } from \"./vnode\";\n",
            "-": "-import { Vue } from \"./vue.d\";\n-import { VNode, VNodeData, VNodeDirective } from \"./vnode.d\";\n"
          }
        ],
        "a/types/plugin.d.ts": [
          {
            "+": "+import { Vue as _Vue } from \"./vue\";\n",
            "-": "-import { Vue as _Vue } from \"./vue.d\";\n"
          }
        ],
        "a/types/test/options-test.ts": [
          {
            "+": "+import Vue = require(\"../index\");\n+import { ComponentOptions, FunctionalComponentOptions } from \"../options\";\n",
            "-": "-import Vue = require(\"../index.d\");\n-import { ComponentOptions } from \"../options.d\";\n-import { FunctionalComponentOptions } from \"../options.d\";\n"
          }
        ],
        "a/types/test/plugin-test.ts": [
          {
            "+": "+import Vue = require(\"../index\");\n+import { PluginFunction, PluginObject } from \"../plugin\";\n",
            "-": "-import Vue = require(\"../index.d\");\n-import { PluginFunction, PluginObject } from \"../plugin.d\";\n"
          }
        ],
        "a/types/test/vue-test.ts": [
          {
            "+": "+import Vue = require(\"../index\");\n",
            "-": "-import Vue = require(\"../index.d\");\n"
          }
        ],
        "a/types/vnode.d.ts": [
          {
            "+": "+import { Vue } from \"./vue\";\n",
            "-": "-import { Vue } from \"./vue.d\";\n"
          }
        ],
        "a/types/vue.d.ts": [
          {
            "+": "+import { VNode, VNodeData, VNodeChildren } from \"./vnode\";\n+import { PluginFunction, PluginObject } from \"./plugin\";\n",
            "-": "-import { VNode, VNodeData, VNodeChildren } from \"./vnode.d\";\n-import { PluginFunction, PluginObject } from \"./plugin.d\";\n"
          }
        ]
      },
      "numOfFiles": 8,
      "numOfChanges": 8,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "a00170cbb932e589ac243622385274a659019930",
      "url": "https://github.com/vuejs/vue/commit/a00170cbb932e589ac243622385274a659019930",
      "message": "remove unnecessary appear check in v-show (fix #3559)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-08-30T14:45:38Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/directives/show.js": [
          {
            "+": "+    if (value && transition && !isIE9) {\n",
            "-": "-    if (value && transition && transition.appear && !isIE9) {\n"
          }
        ],
        "a/test/unit/features/transition/transition.spec.js": [
          {
            "+": "+      expect(vm.$el.children[0].className).toBe('test')\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "44128f2ac745d84f12e20b73d2f9336510b23c9b",
      "url": "https://github.com/vuejs/vue/commit/44128f2ac745d84f12e20b73d2f9336510b23c9b",
      "message": "remove forgotten debugger statement",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-08-26T23:11:45Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/vdom/helpers.js": [
          {
            "-": "-    if (typeof o.fn !== 'function') debugger\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "72a0eb3a2266149f2781a9681bcd13b2d5aac540",
      "url": "https://github.com/vuejs/vue/commit/72a0eb3a2266149f2781a9681bcd13b2d5aac540",
      "message": "remove extra paren in warning",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-08-20T17:07:29Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/util/debug.js": [
          {
            "+": "+      str += ` - use the \"name\" option for better debugging messages.`\n",
            "-": "-      str += ` - use the \"name\" option for better debugging messages.)`\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "d927159a3712a0574317135d859ace0843d3c85c",
      "url": "https://github.com/vuejs/vue/commit/d927159a3712a0574317135d859ace0843d3c85c",
      "message": "remove unnecessary el setting in keep-alive",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-08-15T16:34:55Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/components/keep-alive.js": [
          {
            "+": "+        vnode.child = this.cache[key].child\n",
            "-": "-        const child = vnode.child = this.cache[key].child\n-        vnode.elm = this.$el = child.$el\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "a49a739fa417583f96e67d208359bc84f57bd528",
      "url": "https://github.com/vuejs/vue/commit/a49a739fa417583f96e67d208359bc84f57bd528",
      "message": "remove log",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-08-11T23:15:05Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.gitignore": [
          {
            "+": "+*.log\n",
            "-": "-npm-debug.log\n"
          },
          {
            "-": "-selenium-debug.log\n",
            "+": ""
          }
        ],
        "a/phantomjsdriver.log": [
          {
            "-": "-[INFO  - 2016-08-10T04:48:46.464Z] GhostDriver - Main - running on port 46884\n-[INFO  - 2016-08-10T04:48:46.589Z] Session [b8ea4070-5eb5-11e6-a779-e56825555de9] - page.settings - {\"XSSAuditingEnabled\":false,\"javascriptCanCloseWindows\":true,\"javascriptCanOpenWindows\":true,\"javascriptEnabled\":true,\"loadImages\":true,\"localToRemoteUrlAccessEnabled\":false,\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1\",\"webSecurityEnabled\":true}\n-[INFO  - 2016-08-10T04:48:46.589Z] Session [b8ea4070-5eb5-11e6-a779-e56825555de9] - page.customHeaders:  - {}\n-[INFO  - 2016-08-10T04:48:46.589Z] Session [b8ea4070-5eb5-11e6-a779-e56825555de9] - Session.negotiatedCapabilities - {\"browserName\":\"phantomjs\",\"version\":\"2.1.1\",\"driverName\":\"ghostdriver\",\"driverVersion\":\"1.2.0\",\"platform\":\"mac-10.11 (El Capitan)-64bit\",\"javascriptEnabled\":true,\"takesScreenshot\":true,\"handlesAlerts\":false,\"databaseEnabled\":false,\"locationContextEnabled\":false,\"applicationCacheEnabled\":false,\"browserConnectionEnabled\":false,\"cssSelectorsEnabled\":true,\"webStorageEnabled\":false,\"rotatable\":false,\"acceptSslCerts\":false,\"nativeEvents\":true,\"proxy\":{\"proxyType\":\"direct\"}}\n-[INFO  - 2016-08-10T04:48:46.589Z] SessionManagerReqHand - _postNewSessionCommand - New Session Created: b8ea4070-5eb5-11e6-a779-e56825555de9\n-[INFO  - 2016-08-10T04:48:47.736Z] ShutdownReqHand - _handle - About to shutdown\n-[INFO  - 2016-08-10T04:48:49.306Z] GhostDriver - Main - running on port 46630\n-[INFO  - 2016-08-10T04:48:49.482Z] Session [baa42570-5eb5-11e6-b6f4-a368050e2a43] - page.settings - {\"XSSAuditingEnabled\":false,\"javascriptCanCloseWindows\":true,\"javascriptCanOpenWindows\":true,\"javascriptEnabled\":true,\"loadImages\":true,\"localToRemoteUrlAccessEnabled\":false,\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1\",\"webSecurityEnabled\":true}\n-[INFO  - 2016-08-10T04:48:49.482Z] Session [baa42570-5eb5-11e6-b6f4-a368050e2a43] - page.customHeaders:  - {}\n-[INFO  - 2016-08-10T04:48:49.483Z] Session [baa42570-5eb5-11e6-b6f4-a368050e2a43] - Session.negotiatedCapabilities - {\"browserName\":\"phantomjs\",\"version\":\"2.1.1\",\"driverName\":\"ghostdriver\",\"driverVersion\":\"1.2.0\",\"platform\":\"mac-10.11 (El Capitan)-64bit\",\"javascriptEnabled\":true,\"takesScreenshot\":true,\"handlesAlerts\":false,\"databaseEnabled\":false,\"locationContextEnabled\":false,\"applicationCacheEnabled\":false,\"browserConnectionEnabled\":false,\"cssSelectorsEnabled\":true,\"webStorageEnabled\":false,\"rotatable\":false,\"acceptSslCerts\":false,\"nativeEvents\":true,\"proxy\":{\"proxyType\":\"direct\"}}\n-[INFO  - 2016-08-10T04:48:49.483Z] SessionManagerReqHand - _postNewSessionCommand - New Session Created: baa42570-5eb5-11e6-b6f4-a368050e2a43\n-[INFO  - 2016-08-10T04:48:51.013Z] ShutdownReqHand - _handle - About to shutdown\n-[INFO  - 2016-08-10T04:48:51.573Z] GhostDriver - Main - running on port 9957\n-[INFO  - 2016-08-10T04:48:51.764Z] Session [bc000bf0-5eb5-11e6-930f-37dbcdbbfad1] - page.settings - {\"XSSAuditingEnabled\":false,\"javascriptCanCloseWindows\":true,\"javascriptCanOpenWindows\":true,\"javascriptEnabled\":true,\"loadImages\":true,\"localToRemoteUrlAccessEnabled\":false,\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1\",\"webSecurityEnabled\":true}\n-[INFO  - 2016-08-10T04:48:51.764Z] Session [bc000bf0-5eb5-11e6-930f-37dbcdbbfad1] - page.customHeaders:  - {}\n-[INFO  - 2016-08-10T04:48:51.764Z] Session [bc000bf0-5eb5-11e6-930f-37dbcdbbfad1] - Session.negotiatedCapabilities - {\"browserName\":\"phantomjs\",\"version\":\"2.1.1\",\"driverName\":\"ghostdriver\",\"driverVersion\":\"1.2.0\",\"platform\":\"mac-10.11 (El Capitan)-64bit\",\"javascriptEnabled\":true,\"takesScreenshot\":true,\"handlesAlerts\":false,\"databaseEnabled\":false,\"locationContextEnabled\":false,\"applicationCacheEnabled\":false,\"browserConnectionEnabled\":false,\"cssSelectorsEnabled\":true,\"webStorageEnabled\":false,\"rotatable\":false,\"acceptSslCerts\":false,\"nativeEvents\":true,\"proxy\":{\"proxyType\":\"direct\"}}\n-[INFO  - 2016-08-10T04:48:51.764Z] SessionManagerReqHand - _postNewSessionCommand - New Session Created: bc000bf0-5eb5-11e6-930f-37dbcdbbfad1\n-[INFO  - 2016-08-10T04:48:52.530Z] ShutdownReqHand - _handle - About to shutdown\n-[INFO  - 2016-08-10T04:48:53.111Z] GhostDriver - Main - running on port 10905\n-[INFO  - 2016-08-10T04:48:53.282Z] Session [bce7d3e0-5eb5-11e6-874a-55c109c9f4d7] - page.settings - {\"XSSAuditingEnabled\":false,\"javascriptCanCloseWindows\":true,\"javascriptCanOpenWindows\":true,\"javascriptEnabled\":true,\"loadImages\":true,\"localToRemoteUrlAccessEnabled\":false,\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1\",\"webSecurityEnabled\":true}\n-[INFO  - 2016-08-10T04:48:53.282Z] Session [bce7d3e0-5eb5-11e6-874a-55c109c9f4d7] - page.customHeaders:  - {}\n-[INFO  - 2016-08-10T04:48:53.282Z] Session [bce7d3e0-5eb5-11e6-874a-55c109c9f4d7] - Session.negotiatedCapabilities - {\"browserName\":\"phantomjs\",\"version\":\"2.1.1\",\"driverName\":\"ghostdriver\",\"driverVersion\":\"1.2.0\",\"platform\":\"mac-10.11 (El Capitan)-64bit\",\"javascriptEnabled\":true,\"takesScreenshot\":true,\"handlesAlerts\":false,\"databaseEnabled\":false,\"locationContextEnabled\":false,\"applicationCacheEnabled\":false,\"browserConnectionEnabled\":false,\"cssSelectorsEnabled\":true,\"webStorageEnabled\":false,\"rotatable\":false,\"acceptSslCerts\":false,\"nativeEvents\":true,\"proxy\":{\"proxyType\":\"direct\"}}\n-[INFO  - 2016-08-10T04:48:53.282Z] SessionManagerReqHand - _postNewSessionCommand - New Session Created: bce7d3e0-5eb5-11e6-874a-55c109c9f4d7\n-[INFO  - 2016-08-10T04:48:54.814Z] ShutdownReqHand - _handle - About to shutdown\n-[INFO  - 2016-08-10T04:48:55.494Z] GhostDriver - Main - running on port 33586\n-[INFO  - 2016-08-10T04:48:55.576Z] Session [be45dd40-5eb5-11e6-bc8c-db828e371f48] - page.settings - {\"XSSAuditingEnabled\":false,\"javascriptCanCloseWindows\":true,\"javascriptCanOpenWindows\":true,\"javascriptEnabled\":true,\"loadImages\":true,\"localToRemoteUrlAccessEnabled\":false,\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1\",\"webSecurityEnabled\":true}\n-[INFO  - 2016-08-10T04:48:55.576Z] Session [be45dd40-5eb5-11e6-bc8c-db828e371f48] - page.customHeaders:  - {}\n-[INFO  - 2016-08-10T04:48:55.576Z] Session [be45dd40-5eb5-11e6-bc8c-db828e371f48] - Session.negotiatedCapabilities - {\"browserName\":\"phantomjs\",\"version\":\"2.1.1\",\"driverName\":\"ghostdriver\",\"driverVersion\":\"1.2.0\",\"platform\":\"mac-10.11 (El Capitan)-64bit\",\"javascriptEnabled\":true,\"takesScreenshot\":true,\"handlesAlerts\":false,\"databaseEnabled\":false,\"locationContextEnabled\":false,\"applicationCacheEnabled\":false,\"browserConnectionEnabled\":false,\"cssSelectorsEnabled\":true,\"webStorageEnabled\":false,\"rotatable\":false,\"acceptSslCerts\":false,\"nativeEvents\":true,\"proxy\":{\"proxyType\":\"direct\"}}\n-[INFO  - 2016-08-10T04:48:55.576Z] SessionManagerReqHand - _postNewSessionCommand - New Session Created: be45dd40-5eb5-11e6-bc8c-db828e371f48\n-[INFO  - 2016-08-10T04:48:56.574Z] ShutdownReqHand - _handle - About to shutdown\n-[INFO  - 2016-08-10T04:48:57.228Z] GhostDriver - Main - running on port 3293\n-[INFO  - 2016-08-10T04:48:57.326Z] Session [bf510bb0-5eb5-11e6-a16a-6fde8ecfcf4b] - page.settings - {\"XSSAuditingEnabled\":false,\"javascriptCanCloseWindows\":true,\"javascriptCanOpenWindows\":true,\"javascriptEnabled\":true,\"loadImages\":true,\"localToRemoteUrlAccessEnabled\":false,\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1\",\"webSecurityEnabled\":true}\n-[INFO  - 2016-08-10T04:48:57.326Z] Session [bf510bb0-5eb5-11e6-a16a-6fde8ecfcf4b] - page.customHeaders:  - {}\n-[INFO  - 2016-08-10T04:48:57.327Z] Session [bf510bb0-5eb5-11e6-a16a-6fde8ecfcf4b] - Session.negotiatedCapabilities - {\"browserName\":\"phantomjs\",\"version\":\"2.1.1\",\"driverName\":\"ghostdriver\",\"driverVersion\":\"1.2.0\",\"platform\":\"mac-10.11 (El Capitan)-64bit\",\"javascriptEnabled\":true,\"takesScreenshot\":true,\"handlesAlerts\":false,\"databaseEnabled\":false,\"locationContextEnabled\":false,\"applicationCacheEnabled\":false,\"browserConnectionEnabled\":false,\"cssSelectorsEnabled\":true,\"webStorageEnabled\":false,\"rotatable\":false,\"acceptSslCerts\":false,\"nativeEvents\":true,\"proxy\":{\"proxyType\":\"direct\"}}\n-[INFO  - 2016-08-10T04:48:57.327Z] SessionManagerReqHand - _postNewSessionCommand - New Session Created: bf510bb0-5eb5-11e6-a16a-6fde8ecfcf4b\n-[INFO  - 2016-08-10T04:48:57.718Z] ShutdownReqHand - _handle - About to shutdown\n-[INFO  - 2016-08-10T04:48:58.933Z] GhostDriver - Main - running on port 32786\n-[INFO  - 2016-08-10T04:48:59.066Z] Session [c05a6560-5eb5-11e6-a587-d17a98065415] - page.settings - {\"XSSAuditingEnabled\":false,\"javascriptCanCloseWindows\":true,\"javascriptCanOpenWindows\":true,\"javascriptEnabled\":true,\"loadImages\":true,\"localToRemoteUrlAccessEnabled\":false,\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1\",\"webSecurityEnabled\":true}\n-[INFO  - 2016-08-10T04:48:59.066Z] Session [c05a6560-5eb5-11e6-a587-d17a98065415] - page.customHeaders:  - {}\n-[INFO  - 2016-08-10T04:48:59.066Z] Session [c05a6560-5eb5-11e6-a587-d17a98065415] - Session.negotiatedCapabilities - {\"browserName\":\"phantomjs\",\"version\":\"2.1.1\",\"driverName\":\"ghostdriver\",\"driverVersion\":\"1.2.0\",\"platform\":\"mac-10.11 (El Capitan)-64bit\",\"javascriptEnabled\":true,\"takesScreenshot\":true,\"handlesAlerts\":false,\"databaseEnabled\":false,\"locationContextEnabled\":false,\"applicationCacheEnabled\":false,\"browserConnectionEnabled\":false,\"cssSelectorsEnabled\":true,\"webStorageEnabled\":false,\"rotatable\":false,\"acceptSslCerts\":false,\"nativeEvents\":true,\"proxy\":{\"proxyType\":\"direct\"}}\n-[INFO  - 2016-08-10T04:48:59.066Z] SessionManagerReqHand - _postNewSessionCommand - New Session Created: c05a6560-5eb5-11e6-a587-d17a98065415\n-[INFO  - 2016-08-10T04:49:01.601Z] ShutdownReqHand - _handle - About to shutdown\n-[INFO  - 2016-08-10T04:49:02.711Z] GhostDriver - Main - running on port 17483\n-[INFO  - 2016-08-10T04:49:02.859Z] Session [c29d2970-5eb5-11e6-82c8-13085eebdaf5] - page.settings - {\"XSSAuditingEnabled\":false,\"javascriptCanCloseWindows\":true,\"javascriptCanOpenWindows\":true,\"javascriptEnabled\":true,\"loadImages\":true,\"localToRemoteUrlAccessEnabled\":false,\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1\",\"webSecurityEnabled\":true}\n-[INFO  - 2016-08-10T04:49:02.859Z] Session [c29d2970-5eb5-11e6-82c8-13085eebdaf5] - page.customHeaders:  - {}\n-[INFO  - 2016-08-10T04:49:02.859Z] Session [c29d2970-5eb5-11e6-82c8-13085eebdaf5] - Session.negotiatedCapabilities - {\"browserName\":\"phantomjs\",\"version\":\"2.1.1\",\"driverName\":\"ghostdriver\",\"driverVersion\":\"1.2.0\",\"platform\":\"mac-10.11 (El Capitan)-64bit\",\"javascriptEnabled\":true,\"takesScreenshot\":true,\"handlesAlerts\":false,\"databaseEnabled\":false,\"locationContextEnabled\":false,\"applicationCacheEnabled\":false,\"browserConnectionEnabled\":false,\"cssSelectorsEnabled\":true,\"webStorageEnabled\":false,\"rotatable\":false,\"acceptSslCerts\":false,\"nativeEvents\":true,\"proxy\":{\"proxyType\":\"direct\"}}\n-[INFO  - 2016-08-10T04:49:02.859Z] SessionManagerReqHand - _postNewSessionCommand - New Session Created: c29d2970-5eb5-11e6-82c8-13085eebdaf5\n-[INFO  - 2016-08-10T04:49:03.875Z] ShutdownReqHand - _handle - About to shutdown\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 3,
      "qualityScore": 75
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "e833d951ab70f1c0c3946cbf41c874f443eb1b29",
      "url": "https://github.com/vuejs/vue/commit/e833d951ab70f1c0c3946cbf41c874f443eb1b29",
      "message": "test iOS 9.3 on sauce",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-08-05T22:04:51Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/build/karma.sauce.config.js": [
          {
            "+": "+      version: '9.3'\n",
            "-": "-      version: '9.2'\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "7f429e9c917d84b31e8430dda629048b7d14aec2",
      "url": "https://github.com/vuejs/vue/commit/7f429e9c917d84b31e8430dda629048b7d14aec2",
      "message": "discard vnode children if it has innerHTML or textContent as a prop (fix #3360)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-31T23:25:41Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/modules/dom-props.js": [
          {
            "+": "+    // ignore children if the node has textContent or innerHTML,\n+    // as these will throw away existing DOM nodes and cause removal errors\n+    // on subsequent patches (#3360)\n+    if ((key === 'textContent' || key === 'innerHTML') && vnode.children) {\n+      vnode.children.length = 0\n+    }\n",
            "-": ""
          }
        ],
        "a/test/unit/modules/vdom/modules/props.spec.js": [
          {
            "+": "+\n+  it('should save raw value on element', () => {\n+    const value = {}\n+    const vnode = new VNode('input', { domProps: { value }})\n+    const elm = patch(null, vnode)\n+    expect(elm._value).toBe(value)\n+  })\n+\n+  it('should discard vnode children if the node has innerHTML or textContent as a prop', () => {\n+    const vnode = new VNode('div', { domProps: { innerHTML: 'hi' }}, [\n+      new VNode('span'), new VNode('span')\n+    ])\n+    const elm = patch(null, vnode)\n+    expect(elm.innerHTML).toBe('hi')\n+    expect(vnode.children.length).toBe(0)\n+\n+    const vnode2 = new VNode('div', { domProps: { textContent: 'hi' }}, [\n+      new VNode('span'), new VNode('span')\n+    ])\n+    const elm2 = patch(null, vnode2)\n+    expect(elm2.textContent).toBe('hi')\n+    expect(vnode2.children.length).toBe(0)\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "31839a1f853bda946ac9c9228d502e0937d7fa54",
      "url": "https://github.com/vuejs/vue/commit/31839a1f853bda946ac9c9228d502e0937d7fa54",
      "message": "remove unused before:hook",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-31T00:13:39Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/lifecycle.js": [
          {
            "-": "-  vm.$emit('pre-hook:' + hook)\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "35ee5b105e8a517571b9bb9a87160c6ffbdad779",
      "url": "https://github.com/vuejs/vue/commit/35ee5b105e8a517571b9bb9a87160c6ffbdad779",
      "message": "remove staticAttrs",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-29T14:45:43Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/flow/compiler.js": [
          {
            "+": "+  hasBindings?: boolean;\n",
            "-": ""
          },
          {
            "-": "-  staticAttrs?: Array<{ name: string; value: string }>;\n",
            "+": ""
          }
        ],
        "a/flow/vnode.js": [
          {
            "-": "-  staticAttrs?: { [key: string]: string };\n",
            "+": ""
          }
        ],
        "a/src/compiler/codegen/index.js": [
          {
            "+": "+  // console.log(code)\n",
            "-": ""
          },
          {
            "-": "-  // static attributes\n-  if (el.staticAttrs) {\n-    data += `staticAttrs:{${genProps(el.staticAttrs)}},`\n-  }\n",
            "+": ""
          }
        ],
        "a/src/compiler/helpers.js": [
          {
            "-": "-export function addStaticAttr (el: ASTElement, name: string, value: string) {\n-  (el.staticAttrs || (el.staticAttrs = [])).push({ name, value })\n-}\n-\n",
            "+": ""
          }
        ],
        "a/src/compiler/optimizer.js": [
          {
            "+": "+    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n",
            "-": "-    'type,tag,attrsList,attrsMap,plain,parent,children,staticAttrs' +\n"
          },
          {
            "+": "+    !node.hasBindings && // no dynamic bindings\n",
            "-": ""
          },
          {
            "+": "+    Object.keys(node).every(isStaticKey)\n",
            "-": "-    (node.plain || Object.keys(node).every(isStaticKey)) // no dynamic bindings\n"
          }
        ],
        "a/src/compiler/parser/index.js": [
          {
            "-": "-  addStaticAttr,\n",
            "+": ""
          },
          {
            "+": "+    const attrs = el.attrs = new Array(l)\n",
            "-": "-    const attrs = el.staticAttrs = new Array(l)\n"
          },
          {
            "+": "+      // mark element as dynamic\n+      el.hasBindings = true\n",
            "-": ""
          },
          {
            "+": "+      addAttr(el, name, JSON.stringify(value))\n",
            "-": "-      addStaticAttr(el, name, JSON.stringify(value))\n"
          }
        ],
        "a/src/core/vdom/create-component.js": [
          {
            "+": "+  const { attrs, props, domProps } = data\n+  if (attrs || props || domProps) {\n",
            "-": "-  const { attrs, props, domProps, staticAttrs } = data\n-  if (attrs || props || domProps || staticAttrs) {\n"
          },
          {
            "+": "+      checkProp(res, domProps, key, altKey)\n",
            "-": "-      checkProp(res, domProps, key, altKey) ||\n-      checkProp(res, staticAttrs, key, altKey)\n"
          }
        ],
        "a/src/platforms/web/runtime/modules/attrs.js": [
          {
            "+": "+  create: updateAttrs,\n",
            "-": "-  create: function (_: any, vnode: VNodeWithData) {\n-    const attrs = vnode.data.staticAttrs\n-    if (attrs) {\n-      for (const key in attrs) {\n-        setAttr(vnode.elm, key, attrs[key])\n-      }\n-    }\n-    updateAttrs(_, vnode)\n-  },\n"
          }
        ],
        "a/src/platforms/web/server/modules/attrs.js": [
          {
            "-": "-  if (node.data.staticAttrs) {\n-    res += render(node.data.staticAttrs)\n-  }\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/server/modules/style.js": [
          {
            "+": "+  const staticStyle = node.data.attrs && node.data.attrs.style\n",
            "-": "-  const staticStyle = node.data.staticAttrs && node.data.staticAttrs.style\n"
          }
        ],
        "a/test/unit/modules/compiler/codegen.spec.js": [
          {
            "+": "+  it('generate static attrs', () => {\n",
            "-": "-  it('generate staticAttrs', () => {\n"
          },
          {
            "+": "+      [`with(this){return _h('input',{attrs:{\"name\":\"field1\"}})}`]\n",
            "-": "-      [`with(this){return _h('input',{staticAttrs:{\"name\":\"field1\"}})}`]\n"
          },
          {
            "+": "+      `with(this){return _h('my-component',{attrs:{\"name\":\"mycomponent1\",\"msg\":msg},on:{\"notify\":onNotify}},function(){return [_m(0)]})}`,\n",
            "-": "-      `with(this){return _h('my-component',{attrs:{\"msg\":msg},staticAttrs:{\"name\":\"mycomponent1\"},on:{\"notify\":onNotify}},function(){return [_m(0)]})}`,\n"
          }
        ],
        "a/test/unit/modules/compiler/parser.spec.js": [
          {
            "+": "+    expect(ast.attrs[0].name).toBe('id')\n+    expect(ast.attrs[0].value).toBe('\"message1\"')\n",
            "-": "-    expect(ast.staticAttrs[0].name).toBe('id')\n-    expect(ast.staticAttrs[0].value).toBe('\"message1\"')\n"
          },
          {
            "+": "+    expect(ast.attrs[0].name).toBe('type')\n+    expect(ast.attrs[0].value).toBe('\"text\"')\n+    expect(ast.attrs[1].name).toBe('name')\n+    expect(ast.attrs[1].value).toBe('\"field1\"')\n",
            "-": "-    expect(ast.staticAttrs[0].name).toBe('type')\n-    expect(ast.staticAttrs[0].value).toBe('\"text\"')\n-    expect(ast.staticAttrs[1].name).toBe('name')\n-    expect(ast.staticAttrs[1].value).toBe('\"field1\"')\n"
          },
          {
            "+": "+    expect(ast1.attrs[0].name).toBe('type')\n+    expect(ast1.attrs[0].value).toBe('\"text\"')\n+    expect(ast1.attrs[1].name).toBe('name')\n+    expect(ast1.attrs[1].value).toBe('\"field1\"')\n+    expect(ast1.attrs[2].name).toBe('value')\n+    expect(ast1.attrs[2].value).toBe('\"hello world\"')\n",
            "-": "-    expect(ast1.staticAttrs[0].name).toBe('type')\n-    expect(ast1.staticAttrs[0].value).toBe('\"text\"')\n-    expect(ast1.staticAttrs[1].name).toBe('name')\n-    expect(ast1.staticAttrs[1].value).toBe('\"field1\"')\n-    expect(ast1.staticAttrs[2].name).toBe('value')\n-    expect(ast1.staticAttrs[2].value).toBe('\"hello world\"')\n"
          },
          {
            "+": "+        expect(el.attrs.length).toBe(1)\n",
            "-": "-        expect(el.staticAttrs.length).toBe(1)\n"
          }
        ],
        "a/test/unit/modules/vdom/modules/attrs.spec.js": [
          {
            "-": "-  it('should create an element with staticAttrs', () => {\n-    const vnode = new VNode('p', { staticAttrs: { id: 1, class: 'class1' }})\n-    const elm = patch(null, vnode)\n-    expect(elm.id).toBe('1')\n-    expect(elm).toHaveClass('class1')\n-  })\n-\n",
            "+": ""
          },
          {
            "+": "+    const vnode1 = new VNode('i', { attrs: { id: '1', class: 'i am vdom' }})\n",
            "-": "-    const vnode1 = new VNode('i', { staticAttrs: { id: '1', class: 'i am vdom' }})\n"
          },
          {
            "+": "+  it('should remove the elements attrs for new nodes without attrs data', () => {\n+    const vnode1 = new VNode('i', { attrs: { id: '1', class: 'i am vdom' }})\n+    const vnode2 = new VNode('i', {})\n+    patch(null, vnode1)\n+    const elm = patch(vnode1, vnode2)\n+    expect(elm.id).toBe('')\n+    expect(elm.className).toBe('')\n+  })\n+\n",
            "-": ""
          },
          {
            "+": "+    const vnode = new VNode('option', { attrs: { disabled: null }})\n",
            "-": "-    const vnode = new VNode('option', { staticAttrs: { disabled: null }})\n"
          },
          {
            "+": "+    const vnode = new VNode('option', { attrs: { disabled: true }})\n",
            "-": "-    const vnode = new VNode('option', { staticAttrs: { disabled: true }})\n"
          },
          {
            "+": "+    const vnode = new VNode('div', { attrs: { contenteditable: null }})\n",
            "-": "-    const vnode = new VNode('div', { staticAttrs: { contenteditable: null }})\n"
          },
          {
            "+": "+    const vnode = new VNode('div', { attrs: { contenteditable: 'true' }})\n",
            "-": "-    const vnode = new VNode('div', { staticAttrs: { contenteditable: 'true' }})\n"
          },
          {
            "+": "+    const vnode = new VNode('a', { attrs: { 'xlink:href': '#id1' }})\n",
            "-": "-    const vnode = new VNode('a', { staticAttrs: { 'xlink:href': '#id1' }})\n"
          },
          {
            "+": "+    const vnode = new VNode('option', { attrs: { 'xlink:disabled': true }})\n",
            "-": "-    const vnode = new VNode('option', { staticAttrs: { 'xlink:disabled': true }})\n"
          }
        ]
      },
      "numOfFiles": 13,
      "numOfChanges": 34,
      "qualityScore": 33
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "40e37f17d271d550784831dea691c47de5519aa9",
      "url": "https://github.com/vuejs/vue/commit/40e37f17d271d550784831dea691c47de5519aa9",
      "message": "remove transition text node warn spec",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-28T22:44:00Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/transition/transition-mode.spec.js": [
          {
            "-": "-\n-    it('warn usage on non element/component', () => {\n-      new Vue({\n-        template: '<transition mode=\"foo\">foo</transition>'\n-      }).$mount()\n-      expect('<transition> can only be used on elements or components, not text nodes.').toHaveBeenWarned()\n-    })\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "63dd9d32e3666ee44273e2145a554b88315cb615",
      "url": "https://github.com/vuejs/vue/commit/63dd9d32e3666ee44273e2145a554b88315cb615",
      "message": "remove transition text node warn because the wrapped component may return empty nodes",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-28T16:49:50Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/components/transition.js": [
          {
            "-": "-    // warn text nodes\n-    if (process.env.NODE_ENV !== 'production' &&\n-        children.length === 1 && !children[0].tag) {\n-      warn(\n-        '<transition> can only be used on elements or components, not text nodes.',\n-        this.$parent\n-      )\n-    }\n-\n",
            "+": ""
          },
          {
            "-": "-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "609054ef106dcf15407a47663b176cfa37f277de",
      "url": "https://github.com/vuejs/vue/commit/609054ef106dcf15407a47663b176cfa37f277de",
      "message": "remove bind.prop shorthand",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-21T17:44:06Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/parser/index.js": [
          {
            "+": "+        if (modifiers && modifiers.prop) {\n",
            "-": "-        if (name.charAt(0) === ':' || (modifiers && modifiers.prop)) {\n"
          },
          {
            "+": "+          name = camelize(name)\n",
            "-": "-          name = camelize(name.replace(bindRE, ''))\n"
          }
        ],
        "a/test/unit/features/directives/bind.spec.js": [
          {
            "+": "+      template: '<div><span v-bind:text-content.prop=\"foo\"></span><span :inner-html.prop=\"bar\"></span></div>',\n",
            "-": "-      template: '<div><span v-bind:text-content.prop=\"foo\"></span><span ::inner-html=\"bar\"></span></div>',\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 3,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "2e7a79230802bf7f45affefa5c5df947e32b43cf",
      "url": "https://github.com/vuejs/vue/commit/2e7a79230802bf7f45affefa5c5df947e32b43cf",
      "message": "remove parser pre/post transforms (not used)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-19T22:43:33Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/parser/index.js": [
          {
            "-": "-let preTransforms\n",
            "+": ""
          },
          {
            "-": "-let postTransforms\n",
            "+": ""
          },
          {
            "-": "-  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode')\n",
            "+": ""
          },
          {
            "-": "-  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode')\n",
            "+": ""
          },
          {
            "-": "-      // apply pre-transforms\n-      for (let i = 0; i < preTransforms.length; i++) {\n-        preTransforms[i](element, options)\n-      }\n-\n",
            "+": ""
          },
          {
            "-": "-      // apply post-transforms\n-      for (let i = 0; i < postTransforms.length; i++) {\n-        postTransforms[i](element, options)\n-      }\n",
            "+": ""
          }
        ],
        "a/test/unit/modules/compiler/parser.spec.js": [
          {
            "-": "-\n-  it('pre/post transforms', () => {\n-    const options = extend({}, baseOptions)\n-    const spy1 = jasmine.createSpy('preTransform')\n-    const spy2 = jasmine.createSpy('postTransform')\n-    options.modules = options.modules.concat([{\n-      preTransformNode (el) {\n-        spy1(el.tag)\n-      },\n-      postTransformNode (el) {\n-        expect(el.staticAttrs.length).toBe(1)\n-        spy2(el.tag)\n-      }\n-    }])\n-    parse('<img v-pre src=\"hi\">', options)\n-    expect(spy1).toHaveBeenCalledWith('img')\n-    expect(spy2).toHaveBeenCalledWith('img')\n-  })\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 7,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "d867b9e2e4f0096c1c296952ef6f2e92fa659036",
      "url": "https://github.com/vuejs/vue/commit/d867b9e2e4f0096c1c296952ef6f2e92fa659036",
      "message": "test observed vnode data warning",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-14T23:31:34Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/vdom/create-element.spec.js": [
          {
            "+": "+\n+  it('warn observed data objects', () => {\n+    new Vue({\n+      data: {\n+        data: {}\n+      },\n+      render (h) {\n+        return h('div', this.data)\n+      }\n+    }).$mount()\n+    expect('Avoid using observed data object as vnode data').toHaveBeenWarned()\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "6f4601ceebdc59da90767d47fef46e147931f8ea",
      "url": "https://github.com/vuejs/vue/commit/6f4601ceebdc59da90767d47fef46e147931f8ea",
      "message": "test transition-group",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-14T21:51:25Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/vdom/patch.js": [
          {
            "+": "+  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n",
            "-": "-  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue) {\n"
          },
          {
            "+": "+    // removeOnly is a special flag used only by <transition-group>\n+    // to ensure removed elements stay in correct relative positions\n+    // during leaving transitions\n+    const canMove = !removeOnly\n+\n",
            "-": ""
          },
          {
            "+": "+        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm))\n",
            "-": "-        nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm))\n"
          },
          {
            "+": "+        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm)\n",
            "-": "-        nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm)\n"
          },
          {
            "+": "+            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm)\n",
            "-": "-            nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm)\n"
          },
          {
            "+": "+  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n",
            "-": "-  function patchVnode (oldVnode, vnode, insertedVnodeQueue) {\n"
          },
          {
            "+": "+        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly)\n",
            "-": "-        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue)\n"
          },
          {
            "+": "+  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n",
            "-": "-  return function patch (oldVnode, vnode, hydrating) {\n"
          },
          {
            "+": "+        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly)\n",
            "-": "-        patchVnode(oldVnode, vnode, insertedVnodeQueue)\n"
          }
        ],
        "a/src/platforms/web/runtime/components/transition-group.js": [
          {
            "+": "+    const tag = this.tag || this.$vnode.data.tag || 'span'\n+    const map = Object.create(null)\n+    const prevChildren = this.prevChildren = this.children\n",
            "-": "-    const prevMap = this.map\n-    const map = this.map = {}\n"
          },
          {
            "+": "+    const children = this.children = []\n",
            "-": "-    const children = []\n-    const kept = []\n"
          },
          {
            "-": "-          const prev = prevMap && prevMap[c.key]\n-          if (prev) {\n-            prev.data.kept = true\n-            c.data.pos = prev.elm.getBoundingClientRect()\n-            kept.push(c)\n-          }\n",
            "+": ""
          },
          {
            "+": "+    if (prevChildren) {\n+      const kept = []\n+      const removed = []\n+      for (let i = 0; i < prevChildren.length; i++) {\n+        const c = prevChildren[i]\n+        c.data.pos = c.elm.getBoundingClientRect()\n+        if (map[c.key]) {\n+          kept.push(c)\n+        } else {\n+          removed.push(c)\n",
            "-": "-    const tag = this.tag || this.$vnode.data.tag || 'span'\n-    if (prevMap) {\n-      this.kept = h(tag, null, kept)\n-      this.removed = []\n-      for (const key in prevMap) {\n-        const c = prevMap[key]\n-        if (!c.data.kept) {\n-          c.data.pos = c.elm.getBoundingClientRect()\n-          this.removed.push(c)\n"
          },
          {
            "+": "+      this.kept = h(tag, null, kept)\n+      this.removed = removed\n",
            "-": ""
          },
          {
            "+": "+    this.__patch__(\n+      this._vnode,\n+      this.kept,\n+      false, // hydrating\n+      true // removeOnly (!important, avoids unnecessary moves)\n+    )\n",
            "-": "-    this.__patch__(this._vnode, this.kept)\n"
          },
          {
            "+": "+    const children = this.prevChildren\n",
            "-": "-    const children = this.kept.children.concat(this.removed)\n"
          },
          {
            "+": "+        /* istanbul ignore if */\n+        if (el._pendingMoveCb) {\n+          el._pendingMoveCb()\n+        }\n",
            "-": ""
          },
          {
            "-": "-        if (el._pendingMoveCb) {\n-          el.removeEventListener(transitionEndEvent, el._pendingMoveCb)\n-        }\n",
            "+": ""
          },
          {
            "+": "+      /* istanbul ignore if */\n",
            "-": ""
          }
        ],
        "a/src/platforms/web/runtime/modules/transition.js": [
          {
            "+": "+import { isIE9 } from 'web/util/index'\n",
            "-": ""
          },
          {
            "+": "+  const expectsCSS = css !== false && !isIE9\n",
            "-": "-  const expectsCSS = css !== false\n"
          },
          {
            "+": "+  const expectsCSS = css !== false && !isIE9\n",
            "-": "-  const expectsCSS = css !== false\n"
          }
        ],
        "a/test/unit/features/transition/inject-styles.js": [
          {
            "+": "+    .group-move {\n+      -webkit-transition: -webkit-transform ${duration}ms ease;\n+      transition: transform ${duration}ms ease;\n+    }\n",
            "-": ""
          }
        ],
        "a/test/unit/features/transition/transition-group.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+import injectStyles from './inject-styles'\n+import { isIE9 } from 'web/util/index'\n+import { nextFrame } from 'web/runtime/transition-util'\n+\n+if (!isIE9) {\n+  describe('Transition group', () => {\n+    const duration = injectStyles()\n+\n+    let el\n+    beforeEach(() => {\n+      el = document.createElement('div')\n+      document.body.appendChild(el)\n+    })\n+\n+    function createBasicVM (useIs, appear) {\n+      const vm = new Vue({\n+        template: `\n+          <div>\n+            ${useIs ? `<span is=\"transition-group\">` : `<transition-group${appear ? ` appear` : ``}>`}\n+              <div v-for=\"item in items\" :key=\"item\" class=\"test\">{{ item }}</div>\n+            ${useIs ? `</span>` : `</transition-group>`}\n+          </div>\n+        `,\n+        data: {\n+          items: ['a', 'b', 'c']\n+        }\n+      }).$mount(el)\n+      if (!appear) {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n+          `</span>`\n+        )\n+      }\n+      return vm\n+    }\n+\n+    it('enter', done => {\n+      const vm = createBasicVM()\n+      vm.items.push('d', 'e')\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            ['a', 'b', 'c'].map(i => `<div class=\"test\">${i}</div>`).join('') +\n+            `<div class=\"test v-enter v-enter-active\">d</div>` +\n+            `<div class=\"test v-enter v-enter-active\">e</div>` +\n+          `</span>`\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            ['a', 'b', 'c'].map(i => `<div class=\"test\">${i}</div>`).join('') +\n+            `<div class=\"test v-enter-active\">d</div>` +\n+            `<div class=\"test v-enter-active\">e</div>` +\n+          `</span>`\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n+          `</span>`\n+        )\n+      }).then(done)\n+    })\n+\n+    it('leave', done => {\n+      const vm = createBasicVM()\n+      vm.items = ['b']\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            `<div class=\"test v-leave v-leave-active\">a</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test v-leave v-leave-active\">c</div>` +\n+          `</span>`\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            `<div class=\"test v-leave-active\">a</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test v-leave-active\">c</div>` +\n+          `</span>`\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n+          `</span>`\n+        )\n+      }).then(done)\n+    })\n+\n+    it('enter + leave', done => {\n+      const vm = createBasicVM()\n+      vm.items = ['b', 'c', 'd']\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            `<div class=\"test v-leave v-leave-active\">a</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test\">c</div>` +\n+            `<div class=\"test v-enter v-enter-active\">d</div>` +\n+          `</span>`\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            `<div class=\"test v-leave-active\">a</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test\">c</div>` +\n+            `<div class=\"test v-enter-active\">d</div>` +\n+          `</span>`\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n+          `</span>`\n+        )\n+      }).then(done)\n+    })\n+\n+    it('use with \"is\" attribute', done => {\n+      const vm = createBasicVM(true)\n+      vm.items = ['b', 'c', 'd']\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            `<div class=\"test v-leave v-leave-active\">a</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test\">c</div>` +\n+            `<div class=\"test v-enter v-enter-active\">d</div>` +\n+          `</span>`\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            `<div class=\"test v-leave-active\">a</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test\">c</div>` +\n+            `<div class=\"test v-enter-active\">d</div>` +\n+          `</span>`\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n+          `</span>`\n+        )\n+      }).then(done)\n+    })\n+\n+    it('appear', done => {\n+      const vm = createBasicVM(false, true /* appear */)\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            vm.items.map(i => `<div class=\"test v-enter v-enter-active\">${i}</div>`).join('') +\n+          `</span>`\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            vm.items.map(i => `<div class=\"test v-enter-active\">${i}</div>`).join('') +\n+          `</span>`\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            vm.items.map(i => `<div class=\"test\">${i}</div>`).join('') +\n+          `</span>`\n+        )\n+      }).then(done)\n+    })\n+\n+    it('events', done => {\n+      let next\n+      const beforeEnterSpy = jasmine.createSpy()\n+      const afterEnterSpy = jasmine.createSpy()\n+      const afterLeaveSpy = jasmine.createSpy()\n+      const vm = new Vue({\n+        template: `\n+          <div>\n+            <transition-group @before-enter=\"beforeEnter\" @after-enter=\"afterEnter\" @after-leave=\"afterLeave\">\n+              <div v-for=\"item in items\" :key=\"item\" class=\"test\">{{ item }}</div>\n+            </transition-group>\n+          </div>\n+        `,\n+        data: {\n+          items: ['a', 'b', 'c']\n+        },\n+        methods: {\n+          beforeEnter (el) {\n+            expect(el.textContent).toBe('d')\n+            beforeEnterSpy()\n+          },\n+          afterEnter (el) {\n+            expect(el.textContent).toBe('d')\n+            afterEnterSpy()\n+            next()\n+          },\n+          afterLeave (el) {\n+            expect(el.textContent).toBe('a')\n+            afterLeaveSpy()\n+            next()\n+          }\n+        }\n+      }).$mount(el)\n+\n+      vm.items.push('d')\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            `<div class=\"test\">a</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test\">c</div>` +\n+            `<div class=\"test v-enter v-enter-active\">d</div>` +\n+          `</span>`\n+        )\n+        expect(beforeEnterSpy.calls.count()).toBe(1)\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            `<div class=\"test\">a</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test\">c</div>` +\n+            `<div class=\"test\">d</div>` +\n+          `</span>`\n+        )\n+        expect(afterEnterSpy.calls.count()).toBe(1)\n+        vm.items.shift()\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          `<span>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test\">c</div>` +\n+            `<div class=\"test\">d</div>` +\n+          `</span>`\n+        )\n+        expect(afterLeaveSpy.calls.count()).toBe(1)\n+      }).then(done)\n+    })\n+\n+    it('move', done => {\n+      const vm = new Vue({\n+        template: `\n+          <div>\n+            <transition-group name=\"group\">\n+              <div v-for=\"item in items\" :key=\"item\" class=\"test\">{{ item }}</div>\n+            </transition-group>\n+          </div>\n+        `,\n+        data: {\n+          items: ['a', 'b', 'c']\n+        }\n+      }).$mount(el)\n+\n+      vm.items = ['d', 'b', 'a']\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML.replace(/\\s?style=\"\"\\s?/g, '')).toBe(\n+          `<span>` +\n+            `<div class=\"test group-enter group-enter-active\">d</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test group-move\">a</div>` +\n+            `<div class=\"test group-leave group-leave-active group-move\">c</div>` +\n+          `</span>`\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML.replace(/\\s?style=\"\"\\s?/g, '')).toBe(\n+          `<span>` +\n+            `<div class=\"test group-enter-active\">d</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test group-move\">a</div>` +\n+            `<div class=\"test group-leave-active group-move\">c</div>` +\n+          `</span>`\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML.replace(/\\s?style=\"\"\\s?/g, '')).toBe(\n+          `<span>` +\n+            `<div class=\"test\">d</div>` +\n+            `<div class=\"test\">b</div>` +\n+            `<div class=\"test\">a</div>` +\n+          `</span>`\n+        )\n+      }).then(done)\n+    })\n+\n+    it('warn unkeyed children', () => {\n+      new Vue({\n+        template: `<div><transition-group><div v-for=\"i in 3\"></div></transition-group></div>`\n+      }).$mount()\n+      expect('<transition-group> children must be keyed: <div>').toHaveBeenWarned()\n+    })\n+  })\n+}\n",
            "-": ""
          }
        ],
        "a/test/unit/features/transition/transition.spec.js": [
          {
            "+": "+  describe('Transition basic', () => {\n",
            "-": "-  describe('Transition system', () => {\n"
          }
        ]
      },
      "numOfFiles": 6,
      "numOfChanges": 25,
      "qualityScore": 33
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "210a3a22b01c8d696074157a83c7eabc068f4b47",
      "url": "https://github.com/vuejs/vue/commit/210a3a22b01c8d696074157a83c7eabc068f4b47",
      "message": "test in-out early cancel with keep-alive",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-14T16:26:31Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/components/transition.js": [
          {
            "+": "+import { camelize } from 'shared/util'\n",
            "-": "-import { noop, camelize } from 'shared/util'\n"
          },
          {
            "-": "-\n",
            "+": ""
          },
          {
            "-": "-\n",
            "+": ""
          },
          {
            "-": "-        mergeVNodeHook(oldData, 'leaveCancelled', () => {\n-          delayedLeave = noop\n-        })\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/modules/transition.js": [
          {
            "+": "+    // the delayed leave may have already been cancelled\n+    if (cb.cancelled) {\n+      return\n+    }\n",
            "-": ""
          }
        ],
        "a/test/unit/features/component/component-keep-alive.spec.js": [
          {
            "+": "+\n+    it('dynamic components, in-out with early cancel', done => {\n+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <transition name=\"test\" mode=\"in-out\" @after-enter=\"afterEnter\">\n+            <component :is=\"view\" class=\"test\" keep-alive></component>\n+          </transition>\n+        </div>`,\n+        data: { view: 'one' },\n+        components,\n+        methods: {\n+          afterEnter () {\n+            next()\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test test-enter test-enter-active\">two</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test test-enter-active\">two</div>'\n+        )\n+        // switch again before enter finishes,\n+        // this cancels both enter and leave.\n+        vm.view = 'one'\n+      }).then(() => {\n+        // 1. the pending leaving \"one\" should be removed instantly.\n+        // 2. the entering \"two\" should be placed into its final state instantly.\n+        // 3. a new \"one\" is created and entering\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' +\n+          '<div class=\"test test-enter test-enter-active\">one</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' +\n+          '<div class=\"test test-enter-active\">one</div>'\n+        )\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' +\n+          '<div class=\"test\">one</div>'\n+        )\n+      }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave test-leave-active\">two</div>' +\n+          '<div class=\"test\">one</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active\">two</div>' +\n+          '<div class=\"test\">one</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>'\n+        )\n+      }).then(done).then(done)\n+    })\n",
            "-": ""
          }
        ],
        "a/test/unit/features/transition/transition-mode.spec.js": [
          {
            "+": "+    it('dynamic components, in-out with early cancel', done => {\n",
            "-": "-    it('dynamic components, in-out with leaveCancell', done => {\n"
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 7,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "70e531a3f33f80fc2b376f3d6b7f5c2cabf87802",
      "url": "https://github.com/vuejs/vue/commit/70e531a3f33f80fc2b376f3d6b7f5c2cabf87802",
      "message": "test removing stale leaving elements",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-14T15:06:22Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/transition/transition.spec.js": [
          {
            "+": "+    it('should remove stale leaving elements', done => {\n+      const spy = jasmine.createSpy('afterLeave')\n+      const vm = new Vue({\n+        template: `\n+          <div>\n+            <transition name=\"test\" @after-leave=\"afterLeave\">\n+              <div v-if=\"ok\" class=\"test\">foo</div>\n+            </transition>\n+          </div>\n+        `,\n+        data: { ok: true },\n+        methods: {\n+          afterLeave: spy\n+        }\n+      }).$mount(el)\n+\n+      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+      vm.ok = false\n+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n+      }).thenWaitFor(duration / 2).then(() => {\n+        vm.ok = true\n+      }).then(() => {\n+        expect(spy).toHaveBeenCalled()\n+        expect(vm.$el.children.length).toBe(1) // should have removed leaving element\n+        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-enter-active')\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+      }).then(done)\n+    })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "cf133365d56df7568a67f2daa1dd4ae78fd61433",
      "url": "https://github.com/vuejs/vue/commit/cf133365d56df7568a67f2daa1dd4ae78fd61433",
      "message": "test transition HOC",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-14T14:59:10Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/transition/transition.spec.js": [
          {
            "+": "+\n+    it('custom transition higher-order component', done => {\n+      const vm = new Vue({\n+        template: '<div><my-transition><div v-if=\"ok\" class=\"test\">foo</div></my-transition></div>',\n+        data: { ok: true },\n+        components: {\n+          'my-transition': {\n+            functional: true,\n+            render (h, { data, children }) {\n+              (data.props || (data.props = {})).name = 'test'\n+              return h('transition', data, children)\n+            }\n+          }\n+        }\n+      }).$mount(el)\n+\n+      // should not apply transition on initial render by default\n+      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+      vm.ok = false\n+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-leave test-leave-active')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-leave-active')\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.children.length).toBe(0)\n+        vm.ok = true\n+      }).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-enter test-enter-active')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-enter-active')\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test')\n+      }).then(done)\n+    })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "e94ad1437e54ce2b7b17c0aa2eca5d8785fe767d",
      "url": "https://github.com/vuejs/vue/commit/e94ad1437e54ce2b7b17c0aa2eca5d8785fe767d",
      "message": "remove vm argument in transition hooks",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-13T17:51:45Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/modules/transition.js": [
          {
            "-": "-  const vm = vnode.context\n",
            "+": ""
          },
          {
            "+": "+    (enterHook._length || enterHook.length) > 1\n",
            "-": "-    (enterHook._length || enterHook.length) > 2\n"
          },
          {
            "+": "+      enterCancelledHook && enterCancelledHook(el)\n",
            "-": "-      enterCancelledHook && enterCancelledHook(el, vm)\n"
          },
          {
            "+": "+      afterEnterHook && afterEnterHook(el)\n",
            "-": "-      afterEnterHook && afterEnterHook(el, vm)\n"
          },
          {
            "+": "+    enterHook && enterHook(el, cb)\n",
            "-": "-    enterHook && enterHook(el, vm, cb)\n"
          },
          {
            "+": "+  beforeEnterHook && beforeEnterHook(el)\n",
            "-": "-  beforeEnterHook && beforeEnterHook(el, vm)\n"
          },
          {
            "-": "-  const vm = vnode.context\n",
            "+": ""
          },
          {
            "+": "+    (leave._length || leave.length) > 1\n",
            "-": "-    (leave._length || leave.length) > 2\n"
          },
          {
            "+": "+      leaveCancelled && leaveCancelled(el)\n",
            "-": "-      leaveCancelled && leaveCancelled(el, vm)\n"
          },
          {
            "+": "+      afterLeave && afterLeave(el)\n",
            "-": "-      afterLeave && afterLeave(el, vm)\n"
          },
          {
            "+": "+    beforeLeave && beforeLeave(el)\n",
            "-": "-    beforeLeave && beforeLeave(el, vm)\n"
          },
          {
            "+": "+    leave && leave(el, cb)\n",
            "-": "-    leave && leave(el, vm, cb)\n"
          }
        ],
        "a/test/unit/features/transition/transition.spec.js": [
          {
            "+": "+  fdescribe('Transition system', () => {\n",
            "-": "-  describe('Transition system', () => {\n"
          },
          {
            "+": "+          beforeLeave: (el) => {\n",
            "-": "-          beforeLeave: (el, vm) => {\n"
          },
          {
            "+": "+            beforeLeaveSpy(el)\n",
            "-": "-            beforeLeaveSpy(el, vm)\n"
          },
          {
            "+": "+          leave: (el) => onLeaveSpy(el),\n+          afterLeave: (el) => afterLeaveSpy(el),\n+          beforeEnter: (el) => {\n",
            "-": "-          leave: (el, vm) => onLeaveSpy(el, vm),\n-          afterLeave: (el, vm) => afterLeaveSpy(el, vm),\n-          beforeEnter: (el, vm) => {\n"
          },
          {
            "+": "+            beforeEnterSpy(el)\n",
            "-": "-            beforeEnterSpy(el, vm)\n"
          },
          {
            "+": "+          enter: (el) => {\n",
            "-": "-          enter: (el, vm) => {\n"
          },
          {
            "+": "+            onEnterSpy(el)\n",
            "-": "-            onEnterSpy(el, vm)\n"
          },
          {
            "+": "+          afterEnter: (el) => afterEnterSpy(el)\n",
            "-": "-          afterEnter: (el, vm) => afterEnterSpy(el, vm)\n"
          },
          {
            "+": "+        expect(beforeLeaveSpy).toHaveBeenCalledWith(_el)\n+        expect(onLeaveSpy).toHaveBeenCalledWith(_el)\n",
            "-": "-        expect(beforeLeaveSpy).toHaveBeenCalledWith(_el, vm)\n-        expect(onLeaveSpy).toHaveBeenCalledWith(_el, vm)\n"
          },
          {
            "+": "+        expect(afterLeaveSpy).toHaveBeenCalledWith(_el)\n",
            "-": "-        expect(afterLeaveSpy).toHaveBeenCalledWith(_el, vm)\n"
          },
          {
            "+": "+        expect(beforeEnterSpy).toHaveBeenCalledWith(_el)\n+        expect(onEnterSpy).toHaveBeenCalledWith(_el)\n",
            "-": "-        expect(beforeEnterSpy).toHaveBeenCalledWith(_el, vm)\n-        expect(onEnterSpy).toHaveBeenCalledWith(_el, vm)\n"
          },
          {
            "+": "+        expect(afterEnterSpy).toHaveBeenCalledWith(_el)\n",
            "-": "-        expect(afterEnterSpy).toHaveBeenCalledWith(_el, vm)\n"
          },
          {
            "+": "+          enter: (el, cb) => {\n",
            "-": "-          enter: (el, vm, cb) => {\n"
          },
          {
            "+": "+          leave: (el, cb) => {\n",
            "-": "-          leave: (el, vm, cb) => {\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 26,
      "qualityScore": 8
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "39bcd60a33d7d5c99140a54e48b149ae5a4c6221",
      "url": "https://github.com/vuejs/vue/commit/39bcd60a33d7d5c99140a54e48b149ae5a4c6221",
      "message": "remove no longer necessary specs",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-13T16:21:47Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/compiler/codegen.spec.js": [
          {
            "-": "-  it('generate transition', () => {\n-    // without key, should auto-set unique key\n-    assertCodegen(\n-      '<p transition=\"expand\">hello world</p>',\n-      `with(this){return _h('p',{transition:\"expand\",key:\"__t18__\"},[\"hello world\"])}`\n-    )\n-    // with key\n-    assertCodegen(\n-      '<p transition=\"expand\" key=\"1\">hello world</p>',\n-      `with(this){return _h('p',{key:\"1\",transition:\"expand\"},[\"hello world\"])}`\n-    )\n-  })\n-\n-  it('generate dynamic transition with transition on appear', () => {\n-    assertCodegen(\n-      `<p :transition=\"{name:'expand',appear:true}\" :key=\"test\">hello world</p>`,\n-      `with(this){return _h('p',{key:test,transition:{name:'expand',appear:true}},[\"hello world\"])}`\n-    )\n-  })\n-\n",
            "+": ""
          }
        ],
        "a/test/unit/modules/compiler/parser.spec.js": [
          {
            "-": "-  it('transition', () => {\n-    const ast = parse('<p v-if=\"show\" transition=\"expand\">hello world</p>', baseOptions)\n-    expect(ast.transition).toBe('\"expand\"')\n-  })\n-\n-  it('transition with empty', () => {\n-    const ast = parse('<p v-if=\"show\" transition=\"\">hello world</p>', baseOptions)\n-    expect(ast.transition).toBe(true)\n-  })\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "6e847f111b593163208ad22b4a7b63bcd2733463",
      "url": "https://github.com/vuejs/vue/commit/6e847f111b593163208ad22b4a7b63bcd2733463",
      "message": "remove log",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-13T15:33:42Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/directives/show.js": [
          {
            "-": "-    console.log(transition)\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "f3c80f2472671c4502eee225896732418396561a",
      "url": "https://github.com/vuejs/vue/commit/f3c80f2472671c4502eee225896732418396561a",
      "message": "remove transition as an asset type",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-12T18:46:06Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/config.js": [
          {
            "-": "-    'transition',\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/components/transition.js": [
          {
            "+": "+import { getRealChild } from 'core/vdom/helpers'\n",
            "-": "-import { getRealChild, mergeVNodeHook } from 'core/vdom/helpers'\n"
          },
          {
            "-": "-    ;(child.data || (child.data = {})).transition = extend({}, this.$options.propsData)\n",
            "+": ""
          },
          {
            "+": "+    ;(child.data || (child.data = {})).transition = extend(\n+      { context: this },\n+      this.$options.propsData\n+    )\n",
            "-": ""
          },
          {
            "+": "+        // return old node\n",
            "-": "-        // return empty node\n"
          },
          {
            "+": "+        extend(child.data.transition, {\n",
            "-": "-        addHook(child, {\n"
          },
          {
            "+": "+        extend(oldChild.data.transition, {\n",
            "-": "-        addHook(oldChild, {\n"
          },
          {
            "-": "-\n-function addHook (vnode: VNode, hooks: Object) {\n-  /* istanbul ignore if */\n-  if (!vnode.data || !vnode.data.transition) {\n-    return\n-  }\n-  let trans = vnode.data.transition\n-  /* istanbul ignore else */\n-  if (typeof trans === 'string') {\n-    trans = vnode.data.transition = { name: trans }\n-  } else if (typeof trans !== 'object') {\n-    trans = vnode.data.transition = { name: 'v' }\n-  }\n-  trans.hooks = hooks\n-}\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/modules/transition.js": [
          {
            "+": "+import { inBrowser } from 'core/util/index'\n+import { isIE9 } from 'web/util/index'\n",
            "-": ""
          },
          {
            "-": "-import { inBrowser, resolveAsset } from 'core/util/index'\n",
            "+": ""
          },
          {
            "-": "-import { isIE9 } from 'web/util/index'\n",
            "+": ""
          },
          {
            "+": "+  } = resolveTransition(data)\n",
            "-": "-  } = resolveTransition(data, vnode.context)\n"
          },
          {
            "+": "+  } = resolveTransition(data)\n",
            "-": "-  } = resolveTransition(data, vnode.context)\n"
          },
          {
            "+": "+function resolveTransition (def: string | Object): Object {\n+  if (def && typeof def === 'object') {\n+    const res = {}\n+    if (def.css !== false) {\n+      extend(res, autoCssTransition(def.name || 'v'))\n",
            "-": "-function resolveTransition (id: string | Object, context: Component): Object {\n-  let def\n-  if (id && typeof id === 'string') {\n-    def = resolveAsset(context.$options, 'transitions', id)\n-    return def\n-      ? ensureTransitionClasses(def.name || id, def)\n-      : autoCssTransition(id)\n-  } else if (typeof id === 'object') { // inline transition object\n-    if (id.name) {\n-      def = resolveAsset(context.$options, 'transitions', id.name)\n-    }\n-    def = def\n-      ? extend(ensureTransitionClasses(id.name, def), id)\n-      : ensureTransitionClasses(id.name, id)\n-    // extra hooks to be merged\n-    // added by <transition-control>\n-    if (id.hooks) {\n-      for (const key in id.hooks) {\n-        mergeVNodeHook(def, key, id.hooks[key])\n-      }\n"
          },
          {
            "+": "+    extend(res, def)\n+    return res\n",
            "-": "-    return def\n"
          },
          {
            "+": "+    return autoCssTransition(typeof def === 'string' ? def : 'v')\n",
            "-": "-    return autoCssTransition('v')\n-  }\n-}\n-\n-function ensureTransitionClasses (name: ?string, def: Object): Object {\n-  name = name || 'v'\n-  const res = {}\n-  if (def.css !== false) {\n-    extend(res, autoCssTransition(name))\n"
          },
          {
            "-": "-  extend(res, def)\n-  return res\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 17,
      "qualityScore": 53
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "1355dbf49e899b154d5327058bc009621fa5c724",
      "url": "https://github.com/vuejs/vue/commit/1355dbf49e899b154d5327058bc009621fa5c724",
      "message": "remove no longer needed built-in tags",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-12T04:55:19Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/shared/util.js": [
          {
            "+": "+export const isBuiltInTag = makeMap('slot,component', true)\n",
            "-": "-export const isBuiltInTag = makeMap('slot,component,render,transition', true)\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "e17f2ba20cdc44fabe9a6ca2baa6881debc1a992",
      "url": "https://github.com/vuejs/vue/commit/e17f2ba20cdc44fabe9a6ca2baa6881debc1a992",
      "message": "remove html encode cache in ssr",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-07-03T17:17:41Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/server/render.js": [
          {
            "-": "-import { cached } from 'shared/util'\n",
            "+": ""
          },
          {
            "-": "-const encodeHTMLCached = cached(encodeHTML)\n-\n",
            "+": ""
          },
          {
            "+": "+        write(node.raw ? node.text : encodeHTML(node.text), next)\n",
            "-": "-        write(node.raw ? node.text : encodeHTMLCached(node.text), next)\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 3,
      "qualityScore": 66
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "feee9ef6f68994d74ba687a62aa55b8074039c39",
      "url": "https://github.com/vuejs/vue/commit/feee9ef6f68994d74ba687a62aa55b8074039c39",
      "message": "remove camelCase tag warning",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-28T21:41:44Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/parser/index.js": [
          {
            "-": "-const camelRE = /[a-z\\d][A-Z]/\n",
            "+": ""
          },
          {
            "+": "+      // normalize tag name\n+      tag = hyphenate(tag)\n",
            "-": "-      // check camelCase tag\n-      if (camelRE.test(tag)) {\n-        process.env.NODE_ENV !== 'production' && warn(\n-          `Found camelCase tag in template: <${tag}>. ` +\n-          `I've converted it to <${hyphenate(tag)}> for you.`\n-        )\n-        tag = hyphenate(tag)\n-      }\n-\n-      tag = tag.toLowerCase()\n"
          }
        ],
        "a/test/unit/modules/compiler/parser.spec.js": [
          {
            "-": "-    expect('Found camelCase tag in template').toHaveBeenWarned()\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 3,
      "qualityScore": 75
    },
    {
      "formatStyle": "simple-text-style",
      "type": "docs",
      "sha": "3c523f249adc47521bd92edb88ae228d5e366a28",
      "url": "https://github.com/vuejs/vue/commit/3c523f249adc47521bd92edb88ae228d5e366a28",
      "message": "docs for ssr",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-28T05:10:19Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/packages/vue-server-renderer/README.md": [
          {
            "+": "+> This package is auto-generated. For pull requests please see [src/entries/web-server-renderer.js](https://github.com/vuejs/vue/blob/next/src/entries/web-server-renderer.js).\n",
            "-": "-> This package is auto-generated. For pull requests please see `src/entries/web-server-renderer.js`\n"
          },
          {
            "+": "+This package offers Node.js server-side rendering for Vue 2.0.\n+\n+## Installation\n+\n+``` bash\n+npm install vue-server-renderer\n+```\n+\n+``` js\n+const ssr = require('vue-server-renderer')\n+```\n+\n+## API\n+\n+### ssr.createRenderer([[rendererOptions](#renderer-options)])\n+\n+Create a `renderer` instance.\n+\n+``` js\n+const renderer = ssr.createRenderer()\n+```\n+\n+---\n+\n+### renderer.renderToString(vm, cb)\n+\n+Render a Vue instance to string. The callback is a standard Node.js callback that receives the error as the first argument:\n+\n+``` js\n+const Vue = require('vue')\n+const ssr = require('vue-server-renderer')\n+\n+const renderer = ssr.createRenderer()\n+const vm = new Vue({\n+  render (h) {\n+    return h('div', 'hello')\n+  }\n+})\n+\n+renderer.renderToString(vm, (err, html) => {\n+  console.log(html) // -> <div server-rendered=\"true\">hello</div>\n+})\n+```\n+\n+---\n+\n+### renderer.renderToStream(vm)\n+\n+Render a Vue instance in streaming mode. Returns a Node.js readable stream.\n+\n+``` js\n+// example usage with express\n+app.get('/', (req, res) => {\n+  const vm = new App({ url: req.url })\n+  const stream = renderer.renderToStream(vm)\n+\n+  res.write(`<!DOCTYPE html><html><head><title>...</title></head><body>`)\n+\n+  stream.on('data', chunk => {\n+    res.write(chunk)\n+  })\n+\n+  stream.on('end', () => {\n+    res.end('</body></html>')\n+  })\n+})\n+```\n+\n+---\n+\n+### ssr.createBundleRenderer(code, [[rendererOptions](#renderer-options)])\n+\n+Creates a `bundleRenderer` instance using pre-bundled application code (see [Creating the Server Bundle](#creating-the-server-bundle)). For each render call, the code will be re-run in a new context using Node.js' `vm` module. This ensures your application state is discrete between requests, and you don't need to worry about structuring your application in a limiting pattern just for the sake of SSR.\n+\n+``` js\n+const bundleRenderer = ssr.createBundleRenderer(code)\n+```\n+\n+---\n+\n+### bundleRenderer.renderToString([context], cb)\n+\n+Render the bundled app to a string. Same callback interface with `renderer.renderToString`. The optional context object will be passed to the bundle's exported function.\n+\n+``` js\n+bundleRenderer.renderToString({ url: '/' }, (err, html) => {\n+  // ...\n+})\n+```\n+\n+---\n+\n+### bundleRenderer.renderToStream([context])\n+\n+Render the bundled app to a stream. Same stream interface with `renderer.renderToStream`. The optional context object will be passed to the bundle's exported function.\n+\n+``` js\n+bundleRenderer\n+  .renderToStream({ url: '/' })\n+  .pipe(writableStream)\n+```\n+\n+## Creating the Server Bundle\n+\n+The application bundle can be generated by any build tool, so you can easily use Webpack + `vue-loader` with the bundleRenderer. You do need to use a slightly different webpack config and entry point for your server-side bundle, but the difference is rather minimal:\n+\n+1. add `target: 'node'`, and use `output: { libraryTarget: 'commonjs2' }` for your webpack config.\n+\n+2. In your server-side entry point, export a function. The function will receive the render context object (passed to `bundleRenderer.renderToString` or `bundleRenderer.renderToStream`), and should return a Promise, which should eventually resolve to the app's root Vue instance:\n+\n+  ``` js\n+  // server-entry.js\n+  import Vue from 'vue'\n+  import App from './App.vue'\n+\n+  const app = new Vue(App)\n+\n+  // the default export should be a function\n+  // which will receive the context of the render call\n+  export default context => {\n+    // data pre-fetching\n+    return app.fetchServerData(context.url).then(() => {\n+      return app\n+    })\n+  }\n+  ```\n+\n+## Renderer Options\n+\n+### directives\n+\n+Allows you to provide server-side implementations for your custom directives:\n+\n+``` js\n+const renderer = createRenderer({\n+  directives: {\n+    example (vnode, directiveMeta) {\n+      // transform vnode based on directive binding metadata\n+    }\n+  }\n+})\n+```\n+\n+As an example, check out [`v-show`'s server-side implementation](https://github.com/vuejs/vue/blob/next/src/platforms/web/server/directives/show.js).\n+\n+---\n+\n+### cache\n+\n+Specify cache options. Passed directly to [lru-cache](https://github.com/isaacs/node-lru-cache). The default is `{ max: 5000 }`.\n+\n+``` js\n+const renderer = createRenderer({\n+  cache: {\n+    max: 10000\n+  }\n+})\n+```\n+\n+## Component-Level Caching\n+\n+You can easily cache components during SSR by implementing the `server.getCacheKey` function:\n+\n+``` js\n+export default {\n+  props: ['item'],\n+  server: {\n+    getCacheKey: props => props.item.id\n+  },\n+  render (h) {\n+    return h('div', this.item.id)\n+  }\n+}\n+```\n+\n+The cache key is per-component, and it should contain sufficient information to represent the shape of the render result. The above is a good implementation because the render result is solely determined by `props.item.id`. However, if the render result also relies on another prop, then you need to modify your `getCacheKey` implementation to take that other prop into account.\n+\n+Returning a constant will cause the component to always be cached, which is good for purely static components.\n+\n+If the renderer hits a cache for a component during render, it will directly reuse the cached result for the entire sub tree. So **do not cache a component containing child components that rely on global state**.\n+\n+In most cases, you shouldn't and don't need to cache single-instance components. The most common type of components that need caching are ones in big lists. Since these components are usually driven by objects in database collections, they can make use of a simple caching strategy: generate their cache keys using their unique id plus the last updated timestamp:\n+\n+``` js\n+server: {\n+  getCacheKey: props => props.item.id + '::' + props.item.last_updated\n+}\n+```\n+\n+## Client Side Hydration\n+\n+In server-rendered output, the root element will have the `server-rendered=\"true\"` attribute. On the client, when you mount a Vue instance to an element with this attribute, it will attempt to \"hydrate\" the existing DOM instead of creating new DOM nodes.\n+\n+In development mode, Vue will assert the client-side generated virtual DOM tree matches the DOM structure rendered from the server. If there is a mismatch, it will bail hydration, discard existing DOM and render from scratch. **In production mode, this assertion is disabled for maximum performance.**\n+\n+### Hydration Caveats\n+\n+One thing to be aware of when using SSR + client hydration is some special HTML structures that may be altered by the browser. For example, when you write this in a Vue template:\n+\n+``` html\n+<table>\n+  <tr><td>hi</td></tr>\n+</table>\n+```\n+\n+The browser will automatically inject `<tbody>` inside `<table>`, however, the virtual DOM generated by Vue does not contain `<tbody>`, so it will cause a mismatch. To ensure correct matching, make sure to write valid HTML in your templates.\n",
            "-": "-Documentation coming soon.\n"
          }
        ],
        "a/packages/vue-template-compiler/README.md": [
          {
            "+": "+const compiler = require('vue-template-compiler')\n",
            "-": "-var compiler = require('vue-template-compiler')\n"
          },
          {
            "+": "+#### Options\n+\n+It's possible to hook into the compilation process to support custom template features. **However, beware that by injecting custom compile-time modules, your templates will not work with other build tools built on standard built-in modules, e.g `vue-laoder` and `vueify`.**\n",
            "-": "-**Options**\n"
          },
          {
            "+": "+#### Options\n",
            "-": "-**Options**\n"
          }
        ],
        "a/src/entries/web-compiler.js": [
          {
            "+": "+  options?: CompilerOptions\n",
            "-": "-  options?: Object\n"
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 6,
      "qualityScore": 66
    },
    {
      "formatStyle": "simple-text-style",
      "type": "docs",
      "sha": "dd1c93671565f07ca44b8ea448125e5ea985a06b",
      "url": "https://github.com/vuejs/vue/commit/dd1c93671565f07ca44b8ea448125e5ea985a06b",
      "message": "docs for vue-template-compiler",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-28T03:49:37Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/packages/vue-template-compiler/README.md": [
          {
            "+": "+> This package is auto-generated. For pull requests please see [src/entries/web-compiler.js](https://github.com/vuejs/vue/blob/next/src/entries/web-compiler.js).\n",
            "-": "-> This package is auto-generated. For pull requests please see `src/entries/web-compiler.js`\n"
          },
          {
            "+": "+This package can be used to pre-compile Vue 2.0 templates into render functions to avoid runtime-compilation overhead and CSP restrictions. You will only need it if you are writing build tools with very specific needs. In most cases you should be using [vue-loader](https://github.com/vuejs/vue-loader) or [vueify](https://github.com/vuejs/vueify) instead, both of which use this package internally.\n+\n+## Installation\n+\n+``` bash\n+npm install vue-template-compiler\n+```\n+\n+``` js\n+var compiler = require('vue-template-compiler')\n+```\n+\n+## API\n+\n+### compiler.compile(template, [options])\n+\n+Compiles a template string and returns compiled JavaScript code. The returned result is an object of the following format:\n+\n+``` js\n+{\n+  render: string, // main render function code\n+  staticRenderFns: Array<string>, // render code for static sub trees, if any\n+  errors: Array<string> // template syntax errors, if any\n+}\n+```\n+\n+Note the returned function code uses `with` and thus cannot be used in strict mode code.\n+\n+**Options**\n+\n+The optional `options` object can contain the following:\n+\n+- `modules`\n+\n+  An array of compiler modules. For details on compiler modules, refer to its [type definition](https://github.com/vuejs/vue/blob/next/flow/compiler.js#L31) and the [built-in modules](https://github.com/vuejs/vue/tree/next/src/platforms/web/compiler/modules).\n+\n+- `directives`\n+\n+  An object where the key is the directive name and the value is a function that transforms an template AST node. For example:\n+\n+  ``` js\n+  compiler.compile('<div v-test></div>', {\n+    directives: {\n+      test (node, directiveMeta) {\n+        // transform node based on directiveMeta\n+      }\n+  })\n+  ```\n+\n+  By default, a compile-time directive will extract the directive and the directive will not be present at runtime. If you want the directive to also be handled by a runtime definition, return `true` in the transform function.\n+\n+  Refer to the implementation of some [built-in compile-time directives](https://github.com/vuejs/vue/tree/next/src/platforms/web/compiler/directives).\n+\n+---\n+\n+### compiler.compileToFunctions(template)\n+\n+Similar to `compiler.compile`, but directly returns instantiated functions:\n+\n+``` js\n+{\n+  render: Function,\n+  staticRenderFns: Array<Function>\n+}\n+```\n+\n+This is only useful at runtime with pre-configured builds, so it doesn't accept any compile-time options. In addition, this method uses `new Function()` so it is not CSP-compliant.\n+\n+---\n+\n+### compiler.parseComponent(file, [options])\n+\n+Parse a SFC (single-file component, or `*.vue` file) into a [descriptor](https://github.com/vuejs/vue/blob/next/flow/compiler.js#L131). This is used in SFC build tools like `vue-loader` and `vueify`.\n+\n+**Options**\n+\n+- `pad`: with `{ pad: true }`, the extracted content for each block will be padded with newlines to ensure that the line numbers align with the original file. This is useful when you are piping the extracted content into other pre-processors, as you will get correct line numbers if there are any syntax errors.\n",
            "-": "-Documentation coming soon.\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "b791c5722f9820a9d23570baf8602227ad43d47a",
      "url": "https://github.com/vuejs/vue/commit/b791c5722f9820a9d23570baf8602227ad43d47a",
      "message": "tests for ssr bundle renderer",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-27T21:11:04Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/server/create-bundle-renderer.js": [
          {
            "+": "+        if (typeof context === 'function') {\n+          cb = context\n+          context = {}\n+        }\n",
            "-": ""
          }
        ],
        "a/src/server/run-in-vm.js": [
          {
            "+": "+    __VUE_SSR_CONTEXT__: context\n",
            "-": "-    __VUE_SSR_CONTEXT__: context || {}\n"
          },
          {
            "+": "+export default function runInVm (code, _context = {}) {\n+  return new Promise((resolve, reject) => {\n+    const wrapper = NativeModule.wrap(code)\n+    const context = createContext(_context)\n+    const compiledWrapper = vm.runInNewContext(wrapper, context, {\n+      filename: '__vue_ssr_bundle__',\n+      displayErrors: true\n+    })\n+    const m = { exports: {}}\n+    compiledWrapper.call(m.exports, m.exports, require, m)\n+    const res = Object.prototype.hasOwnProperty.call(m.exports, 'default')\n+      ? m.exports.default\n+      : m\n+    resolve(typeof res === 'function' ? res(_context) : res)\n",
            "-": "-export default function runInVm (code, _context) {\n-  const wrapper = NativeModule.wrap(code)\n-  const context = createContext(_context)\n-  const compiledWrapper = vm.runInNewContext(wrapper, context, {\n-    filename: '__vue_ssr_bundle__',\n-    displayErrors: true\n"
          },
          {
            "-": "-  const m = { exports: {}}\n-  compiledWrapper.call(m.exports, m.exports, require, m)\n-  const res = Object.prototype.hasOwnProperty.call(m.exports, 'default')\n-    ? m.exports.default\n-    : m\n-  // ensure returning a Promise\n-  return Promise.resolve(res)\n",
            "+": ""
          }
        ],
        "a/test/ssr/fixtures/app.js": [
          {
            "+": "+import Vue from '../../../dist/vue.common.js'\n+\n+export default context => {\n+  return new Promise(resolve => {\n+    context.msg = 'hello'\n+    resolve(new Vue({\n+      render (h) {\n+        return h('div', context.url)\n+      }\n+    }))\n+  })\n+}\n",
            "-": ""
          }
        ],
        "a/test/ssr/fixtures/error.js": [
          {
            "+": "+throw new Error('foo')\n",
            "-": ""
          }
        ],
        "a/test/ssr/jasmine.json": [
          {
            "+": "+    \"ssr-stream.spec.js\",\n+    \"ssr-bundle-render.spec.js\"\n",
            "-": "-    \"ssr-stream.spec.js\"\n"
          }
        ],
        "a/test/ssr/ssr-bundle-render.spec.js": [
          {
            "+": "+import path from 'path'\n+import webpack from 'webpack'\n+import MemoeryFS from 'memory-fs'\n+import { createBundleRenderer } from '../../packages/vue-server-renderer'\n+\n+const rendererCache = {}\n+function createRenderer (file, cb) {\n+  if (rendererCache[file]) {\n+    return cb(rendererCache[file])\n+  }\n+  const compiler = webpack({\n+    target: 'node',\n+    entry: path.resolve(__dirname, 'fixtures', file),\n+    output: {\n+      path: '/',\n+      filename: 'bundle.js',\n+      libraryTarget: 'commonjs2'\n+    },\n+    module: {\n+      loaders: [{ test: /\\.js$/, loader: 'babel' }]\n+    }\n+  })\n+  const fs = new MemoeryFS()\n+  compiler.outputFileSystem = fs\n+  compiler.run((err, stats) => {\n+    expect(err).toBeFalsy()\n+    expect(stats.errors).toBeFalsy()\n+    const code = fs.readFileSync('/bundle.js', 'utf-8')\n+    const renderer = rendererCache[file] = createBundleRenderer(code)\n+    cb(renderer)\n+  })\n+}\n+\n+describe('SSR: bundle renderer', () => {\n+  it('renderToString', done => {\n+    createRenderer('app.js', renderer => {\n+      const context = { url: '/test' }\n+      renderer.renderToString(context, (err, res) => {\n+        expect(res).toBe('<div server-rendered=\"true\">&sol;test</div>')\n+        expect(context.msg).toBe('hello')\n+        done()\n+      })\n+    })\n+  })\n+\n+  it('renderToStream', done => {\n+    createRenderer('app.js', renderer => {\n+      const context = { url: '/test' }\n+      const stream = renderer.renderToStream(context)\n+      let res = ''\n+      stream.on('data', chunk => {\n+        res += chunk.toString()\n+      })\n+      stream.on('end', () => {\n+        expect(res).toBe('<div server-rendered=\"true\">&sol;test</div>')\n+        expect(context.msg).toBe('hello')\n+        done()\n+      })\n+    })\n+  })\n+\n+  it('renderToString catch error', done => {\n+    createRenderer('error.js', renderer => {\n+      renderer.renderToString(err => {\n+        expect(err.message).toBe('foo')\n+        done()\n+      })\n+    })\n+  })\n+\n+  it('renderToStream catch error', done => {\n+    createRenderer('error.js', renderer => {\n+      const stream = renderer.renderToStream()\n+      stream.on('error', err => {\n+        expect(err.message).toBe('foo')\n+        done()\n+      })\n+    })\n+  })\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 6,
      "numOfChanges": 8,
      "qualityScore": 16
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "59dca1208b14309663dc3d26bee05d866286b1a4",
      "url": "https://github.com/vuejs/vue/commit/59dca1208b14309663dc3d26bee05d866286b1a4",
      "message": "remove unused var",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-22T14:39:36Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/observer/watcher.js": [
          {
            "-": "-const targetStack = []\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "9071dfd47ac50d8c94d4d89e521ef51ef3eaadc6",
      "url": "https://github.com/vuejs/vue/commit/9071dfd47ac50d8c94d4d89e521ef51ef3eaadc6",
      "message": "test directive binding.expression",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-21T06:19:00Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/options/directives.spec.js": [
          {
            "+": "+            expect(binding.expression).toBe('a')\n",
            "-": ""
          },
          {
            "+": "+            expect(binding.expression).toBe('a')\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "2af9f68bd92f86e424a079188fc5280fcb120060",
      "url": "https://github.com/vuejs/vue/commit/2af9f68bd92f86e424a079188fc5280fcb120060",
      "message": "remove source-map generation from sfc parser",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-21T05:23:24Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.flowconfig": [
          {
            "+": "+module.name_mapper='^sfc/\\(.*\\)$' -> '<PROJECT_ROOT>/src/sfc/\\1'\n",
            "-": ""
          }
        ],
        "a/build/alias.js": [
          {
            "+": "+  entries: path.resolve(__dirname, '../src/entries'),\n+  sfc: path.resolve(__dirname, '../src/sfc')\n",
            "-": "-  entries: path.resolve(__dirname, '../src/entries')\n"
          }
        ],
        "a/build/build.js": [
          {
            "+": "+    external: ['entities'],\n",
            "-": "-    external: ['entities', 'de-indent', 'source-map'],\n"
          }
        ],
        "a/flow/compiler.js": [
          {
            "+": "+  scoped?: boolean\n",
            "-": "-  scoped?: boolean,\n-  map?: Object\n"
          }
        ],
        "a/flow/modules.js": [
          {
            "-": "-declare module 'de-indent' {\n-  declare var exports: {\n-    (str: string): string;\n-  }\n-}\n-\n",
            "+": ""
          }
        ],
        "a/package.json": [
          {
            "-": "-    \"de-indent\": \"^1.0.2\",\n",
            "+": ""
          },
          {
            "-": "-    \"source-map\": \"^0.5.6\",\n",
            "+": ""
          }
        ],
        "a/src/entries/web-compiler.js": [
          {
            "+": "+export { parseComponent } from 'sfc/parser'\n",
            "-": "-export { parseComponent } from 'compiler/parser/sfc-parser'\n"
          }
        ],
        "a/src/sfc/deindent.js": [
          {
            "+": "+/* @flow */\n+\n+const splitRE = /\\r?\\n/g\n+const emptyRE = /^\\s*$/\n+const needFixRE = /^(\\r?\\n)*[\\t\\s]/\n+\n+export default function deindent (str: string): string {\n+  if (!needFixRE.test(str)) {\n+    return str\n+  }\n+  const lines = str.split(splitRE)\n+  let min = Infinity\n+  let type, cur, c\n+  for (let i = 0; i < lines.length; i++) {\n+    var line = lines[i]\n+    if (!emptyRE.test(line)) {\n+      if (!type) {\n+        c = line.charAt(0)\n+        if (c === ' ' || c === '\\t') {\n+          type = c\n+          cur = count(line, type)\n+          if (cur < min) {\n+            min = cur\n+          }\n+        } else {\n+          return str\n+        }\n+      } else {\n+        cur = count(line, type)\n+        if (cur < min) {\n+          min = cur\n+        }\n+      }\n+    }\n+  }\n+  return lines.map(line => line.slice(min)).join('\\n')\n+}\n+\n+function count (line: string, type: string): number {\n+  var i = 0\n+  while (line.charAt(i) === type) {\n+    i++\n+  }\n+  return i\n+}\n",
            "-": ""
          }
        ],
        "a/src/compiler/parser/sfc-parser.js": [
          {
            "+": "+import deindent from './deindent'\n+import { parseHTML } from 'compiler/parser/html-parser'\n",
            "-": "-// this file is used in the vue-template-compiler npm package\n-// and assumes its dependencies and a Node/CommonJS environment\n-import deindent from 'de-indent'\n-import { SourceMapGenerator } from 'source-map'\n-\n-import { parseHTML } from './html-parser'\n"
          },
          {
            "-": "-const emptyRE = /^(?:\\/\\/)?\\s*$/\n",
            "+": ""
          },
          {
            "-": "-      if (options.map && !currentBlock.src) {\n-        addSourceMap(currentBlock)\n-      }\n",
            "+": ""
          },
          {
            "+": "+    const offset = content.slice(0, block.start).split(splitRE).length\n",
            "-": ""
          },
          {
            "+": "+    return Array(offset).join(padChar)\n",
            "-": "-    return Array(getPaddingOffset(block) + 1).join(padChar)\n-  }\n-\n-  function getPaddingOffset (block: SFCBlock) {\n-    return content.slice(0, block.start).split(splitRE).length - 1\n-  }\n-\n-  function addSourceMap (block: SFCBlock) {\n-    const filename = options.map.filename\n-    /* istanbul ignore if */\n-    if (!filename) {\n-      throw new Error('Should provide original filename in the map option.')\n-    }\n-    const offset = options.pad ? 0 : getPaddingOffset(block)\n-    const map = new SourceMapGenerator()\n-    map.setSourceContent(filename, content)\n-    block.content.split(splitRE).forEach((line, index) => {\n-      if (!emptyRE.test(line)) {\n-        map.addMapping({\n-          source: filename,\n-          original: {\n-            line: index + 1 + offset,\n-            column: 0\n-          },\n-          generated: {\n-            line: index + 1,\n-            column: 0\n-          }\n-        })\n-      }\n-    })\n-    block.map = JSON.parse(map.toString())\n"
          }
        ],
        "a/test/unit/modules/compiler/sfc-parser.spec.js": [
          {
            "+": "+import { parseComponent } from 'sfc/parser'\n",
            "-": "-import { parseComponent } from 'compiler/parser/sfc-parser'\n-import { SourceMapConsumer } from 'source-map'\n"
          },
          {
            "-": "-\n-  it('source map (without pad)', () => {\n-    const res = parseComponent(`\n-      <script>\n-        export default {}\n-      </script>\n-      <style>\n-        h1 { color: red }\n-      </style>\n-    `.trim(), {\n-      map: {\n-        filename: 'test.vue'\n-      }\n-    })\n-    const scriptConsumer = new SourceMapConsumer(res.script.map)\n-    const scriptPos = scriptConsumer.originalPositionFor({\n-      line: 2,\n-      column: 1\n-    })\n-    expect(scriptPos.line).toBe(2)\n-\n-    const styleConsumer = new SourceMapConsumer(res.styles[0].map)\n-    const stylePos = styleConsumer.originalPositionFor({\n-      line: 2,\n-      column: 1\n-    })\n-    expect(stylePos.line).toBe(5)\n-  })\n-\n-  it('source map (with pad)', () => {\n-    const res = parseComponent(`\n-      <script>\n-        export default {}\n-      </script>\n-      <style>\n-        h1 { color: red }\n-      </style>\n-    `.trim(), {\n-      pad: true,\n-      map: {\n-        filename: 'test.vue'\n-      }\n-    })\n-    const scriptConsumer = new SourceMapConsumer(res.script.map)\n-    const scriptPos = scriptConsumer.originalPositionFor({\n-      line: 2,\n-      column: 1\n-    })\n-    expect(scriptPos.line).toBe(2)\n-\n-    const styleConsumer = new SourceMapConsumer(res.styles[0].map)\n-    const stylePos = styleConsumer.originalPositionFor({\n-      line: 5,\n-      column: 1\n-    })\n-    expect(stylePos.line).toBe(5)\n-  })\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 10,
      "numOfChanges": 16,
      "qualityScore": 29
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "e3fb6fe8347cfa373f28ef6a97fecb13c867d38d",
      "url": "https://github.com/vuejs/vue/commit/e3fb6fe8347cfa373f28ef6a97fecb13c867d38d",
      "message": "remove <render> tag",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-17T17:25:34Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/flow/compiler.js": [
          {
            "-": "-  render?: true,\n-  renderMethod?: ?string,\n-  renderArgs?: ?string,\n-\n",
            "+": ""
          }
        ],
        "a/src/compiler/codegen.js": [
          {
            "-": "-  } else if (el.tag === 'render') {\n-    return genRender(el)\n",
            "+": ""
          },
          {
            "-": "-function genRender (el: ASTElement): string {\n-  if (!el.renderMethod) {\n-    return 'void 0'\n-  }\n-  const children = genChildren(el)\n-  return `${el.renderMethod}(${\n-    el.renderArgs || ''\n-  }${\n-    children ? (el.renderArgs ? ',' : '') + children : ''\n-  })`\n-}\n-\n",
            "+": ""
          }
        ],
        "a/src/compiler/parser/index.js": [
          {
            "-": "-        processRender(element)\n",
            "+": ""
          },
          {
            "+": "+              'Cannot use v-for on stateful component root element because ' +\n+              'it renders multiple elements:\\n' + template\n",
            "-": "-              'Cannot use v-for on component root element because it renders ' +\n-              'multiple elements:\\n' + template\n"
          },
          {
            "-": "-function processRender (el) {\n-  if (el.tag === 'render') {\n-    el.render = true\n-    el.renderMethod = el.attrsMap[':method'] || el.attrsMap['v-bind:method']\n-    el.renderArgs = el.attrsMap[':args'] || el.attrsMap['v-bind:args']\n-    if (process.env.NODE_ENV !== 'production') {\n-      if (el.attrsMap.method) {\n-        warn('<render> method should use a dynamic binding, e.g. `:method=\"...\"`.')\n-      } else if (!el.renderMethod) {\n-        warn('method attribute is required on <render>.')\n-      }\n-      if (el.attrsMap.args) {\n-        warn('<render> args should use a dynamic binding, e.g. `:args=\"...\"`.')\n-      }\n-    }\n-  }\n-}\n-\n",
            "+": ""
          }
        ],
        "a/test/unit/features/render/render.spec.js": [
          {
            "-": "-import Vue from 'vue'\n-\n-describe('Render', () => {\n-  it('render with basic usage', () => {\n-    const vm = new Vue({\n-      template: `<div><render :method=\"onRender\" :args=\"'hello'\"></render></div>`,\n-      methods: {\n-        onRender (args) { return args }\n-      }\n-    }).$mount()\n-    expect(vm.$el.tagName).toBe('DIV')\n-    expect(vm.$el.innerHTML).toBe('hello')\n-  })\n-\n-  it('should render with $createElement', () => {\n-    const vm = new Vue({\n-      template: `<div><render :method=\"onRender\" :args=\"message\"></render></div>`,\n-      data: { message: 'hello world' },\n-      methods: {\n-        onRender (args) {\n-          const h = this.$createElement\n-          return h('div', { class: 'message' }, [\n-            h('p', {}, [args])\n-          ])\n-        }\n-      }\n-    }).$mount()\n-    expect(vm.$el.childNodes[0].tagName).toBe('DIV')\n-    expect(vm.$el.childNodes[0]).toHaveClass('message')\n-    expect(vm.$el.childNodes[0].childNodes[0].tagName).toBe('P')\n-    expect(vm.$el.childNodes[0].childNodes[0].textContent).toBe('hello world')\n-  })\n-\n-  it('should render with inline elements', () => {\n-    const vm = new Vue({\n-      template: `\n-        <render :method=\"onRender\" :args=\"message\">\n-          <ul>\n-            <li v-for=\"n in 5\"></li>\n-          </ul>\n-        </render>\n-      `,\n-      data: { message: 'hello world' },\n-      methods: {\n-        onRender (args, children) {\n-          const ul = children[0]\n-          ul.children.forEach((li, i) => {\n-            li.data = { staticClass: `class${i}` }\n-          })\n-          return ul\n-        }\n-      }\n-    }).$mount()\n-    const ul = vm.$el\n-    expect(ul.tagName).toBe('UL')\n-    for (let i = 0; i < ul.children.length; i++) {\n-      const li = ul.children[i]\n-      expect(li.tagName).toBe('LI')\n-      expect(li).toHaveClass(`class${i}`)\n-    }\n-  })\n-\n-  it('should render component', done => {\n-    const modal = {\n-      template: `\n-        <div class=\"modal-container\">\n-          <div class=\"modal-header\">\n-            <h1 class=\"modal-title\">{{title}}</h1>\n-          </div>\n-          <div class=\"modal-body\">\n-            <slot name=\"body\">default body</slot>\n-          </div>\n-          <div class=\"modal-footer\">\n-            <button class=\"modal-action-close\" @click=\"$emit('close')\">close</div>\n-          </div>\n-        </div>\n-      `,\n-      props: {\n-        title: {\n-          type: String, default: 'title1'\n-        }\n-      }\n-    }\n-    const vm = new Vue({\n-      template: `<div><render :method=\"onRenderModal\" :args=\"title\"></render></div>`,\n-      data: {\n-        shown: true,\n-        title: 'hello modal'\n-      },\n-      components: { modal },\n-      methods: {\n-        onRenderModal (title) {\n-          return this.$createElement('modal', {\n-            props: { title: title },\n-            on: { close: this.onCloseModal },\n-            directives: [{ name: 'show', value: this.shown }]\n-          })\n-        },\n-        onCloseModal () { this.shown = false }\n-      }\n-    }).$mount()\n-    expect(vm.$el.querySelector('.modal-title').textContent).toBe(vm.title)\n-    vm.$el.querySelector('.modal-action-close').click()\n-    waitForUpdate(() => {\n-      expect(vm.shown).toBe(false)\n-    }).then(() => {\n-      expect(vm.$el.querySelector('.modal-container').style.display).toBe('none')\n-    }).then(done)\n-  })\n-\n-  it('should warn no method', () => {\n-    new Vue({\n-      template: '<render></render>'\n-    }).$mount()\n-    expect('method attribute is required on <render>').toHaveBeenWarned()\n-  })\n-\n-  it('should warn method/arg usage without v-bind', () => {\n-    new Vue({\n-      template: '<render method=\"a\"></render>'\n-    }).$mount()\n-    expect('<render> method should use a dynamic binding').toHaveBeenWarned()\n-  })\n-\n-  it('should warn non dynamic args', () => {\n-    new Vue({\n-      template: '<render :method=\"a\" args=\"b\"></render>',\n-      methods: {\n-        a: () => {}\n-      }\n-    }).$mount()\n-    expect('<render> args should use a dynamic binding').toHaveBeenWarned()\n-  })\n-})\n",
            "+": ""
          }
        ],
        "a/test/unit/modules/compiler/codegen.spec.js": [
          {
            "-": "-  it('generate render tag', () => {\n-    assertCodegen(\n-      '<render :method=\"onRender\" :args=\"params\"></render>',\n-      `with(this){return onRender(params)}`\n-    )\n-  })\n-\n-  it('generate render tag that have children', () => {\n-    assertCodegen(\n-      '<render :method=\"onRender\"><p>hello</p></render>',\n-      `with(this){return onRender([_m(0)])}`,\n-      [`with(this){return _h(_e('p'),[_t(\"hello\")])}`]\n-    )\n-  })\n-\n-  it('generate render tag with `method` is not dynamic binding', () => {\n-    assertCodegen(\n-      '<render method=\"onRender\"></render>',\n-      `with(this){return void 0}`\n-    )\n-  })\n-\n",
            "+": ""
          }
        ],
        "a/test/unit/modules/compiler/parser.spec.js": [
          {
            "+": "+    expect('Cannot use v-for on stateful component root element').toHaveBeenWarned()\n",
            "-": "-    expect('Cannot use v-for on component root element').toHaveBeenWarned()\n"
          },
          {
            "-": "-  it('render tag syntax', () => {\n-    const ast = parse('<render :method=\"onRender\", :args=\"params\"></render>', baseOptions)\n-    expect(ast.render).toBe(true)\n-    expect(ast.renderMethod).toBe('onRender')\n-    expect(ast.renderArgs).toBe('params')\n-  })\n-\n-  it('render tag invalid syntax', () => {\n-    // method nothing\n-    const invalidAst1 = parse('<render></render>', baseOptions)\n-    expect('method attribute is required on <render>.').toHaveBeenWarned()\n-    expect(invalidAst1.render).toBe(true)\n-    expect(invalidAst1.renderMethod).toBeUndefined()\n-    expect(invalidAst1.renderArgs).toBeUndefined()\n-    // method no dynamic binding\n-    parse('<render method=\"onRender\"></render>', baseOptions)\n-    expect('<render> method should use a dynamic binding').toHaveBeenWarned()\n-    // args no dynamic binding\n-    parse('<render :method=\"onRender\" args=\"params\"></render>', baseOptions)\n-    expect('<render> args should use a dynamic binding').toHaveBeenWarned()\n-  })\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 6,
      "numOfChanges": 10,
      "qualityScore": 86
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "714f79341ee1656e393aa97aece650c452855197",
      "url": "https://github.com/vuejs/vue/commit/714f79341ee1656e393aa97aece650c452855197",
      "message": "remove unnecessary code in html-parser",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-13T16:56:49Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/parser/html-parser.js": [
          {
            "+": "+  let last, lastTag\n",
            "-": "-  let last, prevTag, nextTag, lastTag\n"
          },
          {
            "-": "-            prevTag = ''\n",
            "+": ""
          },
          {
            "-": "-            prevTag = ''\n",
            "+": ""
          },
          {
            "-": "-          prevTag = ''\n",
            "+": ""
          },
          {
            "-": "-          prevTag = '/' + endTagMatch[1].toLowerCase()\n",
            "+": ""
          },
          {
            "-": "-          prevTag = startTagMatch.tagName.toLowerCase()\n",
            "+": ""
          },
          {
            "-": "-      // next tag\n-      let nextTagMatch = parseStartTag(html)\n-      if (nextTagMatch) {\n-        nextTag = nextTagMatch.tagName\n-      } else {\n-        nextTagMatch = html.match(endTag)\n-        if (nextTagMatch) {\n-          nextTag = '/' + nextTagMatch[1]\n-        } else {\n-          nextTag = ''\n-        }\n-      }\n-\n",
            "+": ""
          },
          {
            "+": "+        handler.chars(text)\n",
            "-": "-        handler.chars(text, prevTag, nextTag)\n"
          },
          {
            "-": "-      prevTag = ''\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 9,
      "qualityScore": 77
    },
    {
      "formatStyle": "simple-text-style",
      "type": "docs",
      "sha": "687dcee0e3d53c62d9825669cb9b8c771193640b",
      "url": "https://github.com/vuejs/vue/commit/687dcee0e3d53c62d9825669cb9b8c771193640b",
      "message": "readme placeholders for packages",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-10T23:38:58Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/packages/vue-server-renderer/README.md": [
          {
            "+": "+# vue-server-renderer\n+\n+> This package is auto-generated. For pull requests please see `src/entries/web-server-renderer.js`\n+\n+Documentation coming soon.\n",
            "-": ""
          }
        ],
        "a/packages/vue-template-compiler/README.md": [
          {
            "+": "+# vue-template-compiler\n+\n+> This package is auto-generated. For pull requests please see `src/entries/web-compiler.js`\n+\n+Documentation coming soon.\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "13d64d203977537d40a2a41e1ac0fe0fb18d0768",
      "url": "https://github.com/vuejs/vue/commit/13d64d203977537d40a2a41e1ac0fe0fb18d0768",
      "message": "remove preserveWhitespace usage in dbmon",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-10T22:21:00Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/benchmarks/dbmon/app.js": [
          {
            "-": "-Vue.config.preserveWhitespace = false\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "cccfda96dad4a5e35248eaed2a301bb62768785c",
      "url": "https://github.com/vuejs/vue/commit/cccfda96dad4a5e35248eaed2a301bb62768785c",
      "message": "test for config.optionMergeStrategies",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-10T22:20:48Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/global-api/config.spec.js": [
          {
            "+": "+\n+  describe('optionMergeStrategies', () => {\n+    it('should allow defining custom option merging strategies', () => {\n+      const spy = jasmine.createSpy('option merging')\n+      Vue.config.optionMergeStrategies.__test__ = (parent, child, vm) => {\n+        spy(parent, child, vm)\n+        return child + 1\n+      }\n+      const Test = Vue.extend({\n+        __test__: 1\n+      })\n+      expect(spy.calls.count()).toBe(1)\n+      expect(spy).toHaveBeenCalledWith(undefined, 1, undefined)\n+      expect(Test.options.__test__).toBe(2)\n+      const test = new Test({\n+        __test__: 2\n+      })\n+      expect(spy.calls.count()).toBe(2)\n+      expect(spy).toHaveBeenCalledWith(2, 2, test)\n+      expect(test.$options.__test__).toBe(3)\n+    })\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "34bcc02b774e9882970f4948a92160d6aaeab763",
      "url": "https://github.com/vuejs/vue/commit/34bcc02b774e9882970f4948a92160d6aaeab763",
      "message": "remove preserveWhitespace config option",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-10T22:14:58Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/flow/compiler.js": [
          {
            "-": "-  preserveWhitespace?: boolean, // whether to keep whitespaces between elements\n",
            "+": ""
          }
        ],
        "a/src/compiler/parser/index.js": [
          {
            "+": "+        : currentParent.children.length ? ' ' : ''\n",
            "-": "-        : options.preserveWhitespace && currentParent.children.length\n-          ? ' '\n-          : ''\n"
          }
        ],
        "a/src/core/config.js": [
          {
            "-": "-  preserveWhitespace: boolean,\n",
            "+": ""
          },
          {
            "+": "+  errorHandler: ?Function,\n",
            "-": ""
          },
          {
            "-": "-\n-  /**\n-   * Preserve whitespaces between elements.\n-   */\n-  preserveWhitespace: true,\n-\n",
            "+": ""
          }
        ],
        "a/src/entries/web-runtime-with-compiler.js": [
          {
            "-": "-import config from 'core/config'\n",
            "+": ""
          },
          {
            "-": "-        preserveWhitespace: config.preserveWhitespace,\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/compiler/index.js": [
          {
            "+": "+const cache: { [key: string]: CompiledFunctionResult } = Object.create(null)\n",
            "-": "-const cache1: { [key: string]: CompiledFunctionResult } = Object.create(null)\n-const cache2: { [key: string]: CompiledFunctionResult } = Object.create(null)\n"
          },
          {
            "-": "-  preserveWhitespace: true,\n",
            "+": ""
          },
          {
            "-": "-  const cache = options && options.preserveWhitespace === false ? cache1 : cache2\n",
            "+": ""
          }
        ],
        "a/test/unit/features/component/component-slot.spec.js": [
          {
            "+": "+    expect(child.$el.children.length).toBe(2)\n+    expect(child.$el.children[0].textContent).toBe('fallback a')\n+    expect(child.$el.children[1].textContent).toBe('slot b')\n",
            "-": "-    expect(child.$el.childNodes.length).toBe(2)\n-    expect(child.$el.firstChild.textContent).toBe('fallback a')\n-    expect(child.$el.lastChild.textContent).toBe('slot b')\n"
          },
          {
            "+": "+    expect(child.$el.children.length).toBe(2)\n+    expect(child.$el.children[0].textContent).toBe('fallback a')\n+    expect(child.$el.children[1].textContent).toBe('slot b')\n",
            "-": "-    expect(child.$el.childNodes.length).toBe(2)\n-    expect(child.$el.firstChild.textContent).toBe('fallback a')\n-    expect(child.$el.lastChild.textContent).toBe('slot b')\n"
          },
          {
            "+": "+    expect(child.$el.innerHTML).toBe('<p>1</p> <div>foo</div> <p>2</p>')\n",
            "-": "-    expect(child.$el.innerHTML).toBe('<p>1</p><div>foo</div><p>2</p>')\n"
          },
          {
            "+": "+          <slot name=\"b\"><p>fallback b</p></slot>\n+          <slot name=\"c\"><p>fallback c</p></slot>\n",
            "-": "-          <slot name=\"b\">fallback b</slot>\n-          <slot name=\"c\">fallback c</slot>\n"
          },
          {
            "+": "+    expect(child.$el.children.length).toBe(3)\n+    expect(child.$el.children[0].textContent).toBe('fallback a')\n+    expect(child.$el.children[1].textContent).toBe('select b')\n+    expect(child.$el.children[2].textContent).toBe('fallback c')\n",
            "-": "-    expect(child.$el.childNodes.length).toBe(3)\n-    expect(child.$el.firstChild.textContent).toBe('fallback a')\n-    expect(child.$el.childNodes[1].textContent).toBe('select b')\n-    expect(child.$el.lastChild.textContent).toBe('fallback c')\n"
          }
        ],
        "a/test/unit/features/directives/if.spec.js": [
          {
            "+": "+    expect(vm.$el.innerHTML.trim()).toBe('<span>hello</span>')\n",
            "-": "-    expect(vm.$el.innerHTML).toBe('<span>hello</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>bye</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>bye</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>hello</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>hello</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>bye</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>bye</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>hello</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>hello</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>bye</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>bye</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>hello</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>hello</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>bye</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>bye</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>hello</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>hello</span>')\n"
          },
          {
            "+": "+    expect(vm.$el.innerHTML.trim()).toBe('<span>hello</span><span>bye</span><span>hello</span>')\n",
            "-": "-    expect(vm.$el.innerHTML).toBe('<span>hello</span><span>bye</span><span>hello</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>bye</span><span>bye</span><span>hello</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>bye</span><span>bye</span><span>hello</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>bye</span><span>bye</span><span>hello</span><span>hello</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>bye</span><span>bye</span><span>hello</span><span>hello</span>')\n"
          },
          {
            "+": "+      expect(vm.$el.innerHTML.trim()).toBe('<span>bye</span><span>hello</span>')\n",
            "-": "-      expect(vm.$el.innerHTML).toBe('<span>bye</span><span>hello</span>')\n"
          }
        ],
        "a/test/unit/features/directives/model-radio.spec.js": [
          {
            "+": "+    expect(vm.$el.children[0].checked).toBe(true)\n+    expect(vm.$el.children[1].checked).toBe(false)\n",
            "-": "-    expect(vm.$el.childNodes[0].checked).toBe(true)\n-    expect(vm.$el.childNodes[1].checked).toBe(false)\n"
          },
          {
            "+": "+      expect(vm.$el.children[0].checked).toBe(false)\n+      expect(vm.$el.children[1].checked).toBe(true)\n+      vm.$el.children[0].click()\n+      expect(vm.$el.children[0].checked).toBe(true)\n+      expect(vm.$el.children[1].checked).toBe(false)\n",
            "-": "-      expect(vm.$el.childNodes[0].checked).toBe(false)\n-      expect(vm.$el.childNodes[1].checked).toBe(true)\n-      vm.$el.childNodes[0].click()\n-      expect(vm.$el.childNodes[0].checked).toBe(true)\n-      expect(vm.$el.childNodes[1].checked).toBe(false)\n"
          },
          {
            "+": "+    expect(vm.$el.children[0].checked).toBe(true)\n+    expect(vm.$el.children[1].checked).toBe(false)\n",
            "-": "-    expect(vm.$el.childNodes[0].checked).toBe(true)\n-    expect(vm.$el.childNodes[1].checked).toBe(false)\n"
          },
          {
            "+": "+      expect(vm.$el.children[0].checked).toBe(false)\n+      expect(vm.$el.children[1].checked).toBe(true)\n+      vm.$el.children[0].click()\n+      expect(vm.$el.children[0].checked).toBe(true)\n+      expect(vm.$el.children[1].checked).toBe(false)\n",
            "-": "-      expect(vm.$el.childNodes[0].checked).toBe(false)\n-      expect(vm.$el.childNodes[1].checked).toBe(true)\n-      vm.$el.childNodes[0].click()\n-      expect(vm.$el.childNodes[0].checked).toBe(true)\n-      expect(vm.$el.childNodes[1].checked).toBe(false)\n"
          }
        ],
        "a/test/unit/features/directives/once.spec.js": [
          {
            "+": "+      .toBe('<span>hello</span> <div>hello</div>')\n",
            "-": "-      .toBe('<span>hello</span><div>hello</div>')\n"
          },
          {
            "+": "+        .toBe('<span>hello</span> <div>hello</div>')\n",
            "-": "-        .toBe('<span>hello</span><div>hello</div>')\n"
          },
          {
            "+": "+      .toBe('<span>hello</span> <div>hello</div>')\n",
            "-": "-      .toBe('<span>hello</span><div>hello</div>')\n"
          },
          {
            "+": "+        .toBe('<span>world</span> <div>hello</div>')\n",
            "-": "-        .toBe('<span>world</span><div>hello</div>')\n"
          },
          {
            "+": "+      .toBe('<span>hello</span> <div>hello</div> <span>?</span>')\n",
            "-": "-      .toBe('<span>hello</span><div>hello</div><span>?</span>')\n"
          },
          {
            "+": "+        .toBe('<span>hello</span> <div>world</div> <span>?</span>')\n",
            "-": "-        .toBe('<span>hello</span><div>world</div><span>?</span>')\n"
          },
          {
            "+": "+        .toBe('<span>hello</span> <div>world</div> <span>!</span>')\n",
            "-": "-        .toBe('<span>hello</span><div>world</div><span>!</span>')\n"
          }
        ],
        "a/test/unit/features/global-api/config.spec.js": [
          {
            "-": "-  describe('preserveWhitespace', () => {\n-    it('should preserve whitepspaces when set to true', () => {\n-      // this option is set to false during unit tests.\n-      Vue.config.preserveWhitespace = true\n-      const vm = new Vue({\n-        template: '<div><span>hi</span> <span>ha</span></div>'\n-      }).$mount()\n-      expect(vm.$el.innerHTML).toBe('<span>hi</span> <span>ha</span>')\n-      Vue.config.preserveWhitespace = false\n-    })\n-\n-    it('should remove whitespaces when set to false', () => {\n-      const vm = new Vue({\n-        template: '<div><span>hi</span> <span>ha</span></div>'\n-      }).$mount()\n-      expect(vm.$el.innerHTML).toBe('<span>hi</span><span>ha</span>')\n-    })\n-  })\n-\n",
            "+": ""
          }
        ],
        "a/test/unit/index.js": [
          {
            "-": "-import Vue from 'vue'\n-\n-// ignore whitespace in tests\n-Vue.config.preserveWhitespace = false\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 11,
      "numOfChanges": 41,
      "qualityScore": 48
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "f0a9e3d0f08457d170e78d82d630b63c1e319cd1",
      "url": "https://github.com/vuejs/vue/commit/f0a9e3d0f08457d170e78d82d630b63c1e319cd1",
      "message": "test padding and source map for sfc-parser",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-10T20:54:58Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/flow/compiler.js": [
          {
            "+": "+  offset?: number,\n",
            "-": ""
          }
        ],
        "a/src/compiler/parser/sfc-parser.js": [
          {
            "+": "+  options?: Object = {}\n",
            "-": "-  options?: Object\n"
          },
          {
            "+": "+    if (options.map && currentBlock && !currentBlock.src) {\n+      addSourceMap(currentBlock)\n",
            "-": "-    if (currentBlock && options && options.map) {\n-      addSourceMap(currentBlock, options.map)\n"
          },
          {
            "+": "+      if (currentBlock.type !== 'template' && options.pad) {\n",
            "-": "-      if (currentBlock.type !== 'template' && options && options.pad) {\n"
          },
          {
            "-": "-    const leadingContent = content.slice(0, block.start)\n",
            "+": ""
          },
          {
            "+": "+    return Array(getPaddingOffset(block) + 1).join(padChar)\n",
            "-": "-    return Array(leadingContent.split(splitRE).length).join(padChar)\n"
          },
          {
            "+": "+  function getPaddingOffset (block: SFCBlock) {\n+    return content.slice(0, block.start).split(splitRE).length - 1\n+  }\n+\n+  function addSourceMap (block: SFCBlock) {\n+    const filename = options.map.filename\n",
            "-": "-  function addSourceMap (block: SFCBlock, options: Object) {\n-    const filename = options.filename\n"
          },
          {
            "+": "+    const offset = options.pad ? 0 : getPaddingOffset(block)\n",
            "-": ""
          },
          {
            "+": "+            line: index + 1 + offset,\n",
            "-": "-            line: index + 1,\n"
          }
        ],
        "a/test/unit/modules/compiler/sfc-parser.spec.js": [
          {
            "+": "+import { parseComponent } from 'compiler/parser/sfc-parser'\n+import { SourceMapConsumer } from 'source-map'\n",
            "-": "-import { parseSFC } from 'compiler/parser/sfc-parser'\n"
          },
          {
            "+": "+describe('Single File Component parser', () => {\n",
            "-": "-describe('SFC parser', () => {\n"
          },
          {
            "+": "+    const res = parseComponent(`\n",
            "-": "-    const res = parseSFC(`\n"
          },
          {
            "+": "+\n+  it('pad content', () => {\n+    const res = parseComponent(`\n+      <template>\n+        <div></div>\n+      </template>\n+      <script>\n+        export default {}\n+      </script>\n+      <style>\n+        h1 { color: red }\n+      </style>\n+    `.trim(), { pad: true })\n+    expect(res.script.content).toBe(Array(3 + 1).join('//\\n') + '\\nexport default {}\\n')\n+    expect(res.styles[0].content).toBe(Array(6 + 1).join('\\n') + '\\nh1 { color: red }\\n')\n+  })\n+\n+  it('source map', () => {\n+    const res = parseComponent(`\n+      <script>\n+        export default {}\n+      </script>\n+      <style>\n+        h1 { color: red }\n+      </style>\n+    `.trim(), {\n+      pad: true,\n+      map: {\n+        filename: 'test.vue'\n+      }\n+    })\n+    const scriptConsumer = new SourceMapConsumer(res.script.map)\n+    const scriptPos = scriptConsumer.originalPositionFor({\n+      line: 2,\n+      column: 1\n+    })\n+    expect(scriptPos.line).toBe(2)\n+\n+    const styleConsumer = new SourceMapConsumer(res.styles[0].map)\n+    const stylePos = styleConsumer.originalPositionFor({\n+      line: 5,\n+      column: 1\n+    })\n+    expect(stylePos.line).toBe(5)\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 13,
      "qualityScore": 33
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "026198caf1545bf0f82831f19e1f18f1212e84d2",
      "url": "https://github.com/vuejs/vue/commit/026198caf1545bf0f82831f19e1f18f1212e84d2",
      "message": "remove unnecessary code",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-06T18:45:03Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/render.js": [
          {
            "-": "-  // for abstract components, determine first non-abstract parent\n-  // so that the children of abstract components are considered children\n-  // of the first non-abstract parent.\n-  // this is used by internal abstract components like <keep-alive>.\n-  if (vm.$options._abstract) {\n-    let parent = vm.$parent\n-    /* istanbul ignore next */\n-    while (parent && parent.$options._abstract) {\n-      parent = parent.$parent\n-    }\n-    vm._renderParent = parent\n-  } else {\n-    vm._renderParent = vm\n-  }\n",
            "+": ""
          },
          {
            "+": "+    renderState.activeInstance = vm\n",
            "-": "-    renderState.activeInstance = vm._renderParent\n"
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "e433032f8f5d6051bab3bbaf25c06ff241e4c9a4",
      "url": "https://github.com/vuejs/vue/commit/e433032f8f5d6051bab3bbaf25c06ff241e4c9a4",
      "message": "test for keep-alive teardown",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-06T05:20:27Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/components/keep-alive.js": [
          {
            "+": "+import { callHook } from 'core/instance/lifecycle'\n+\n",
            "-": ""
          },
          {
            "+": "+  destroyed () {\n",
            "-": "-  beforeDestroy () {\n"
          },
          {
            "+": "+      const vnode = this.cache[key]\n+      callHook(vnode.child, 'deactivated')\n+      vnode.child.$destroy()\n",
            "-": "-      this.cache[key].child.$destroy()\n"
          }
        ],
        "a/src/core/vdom/create-component.js": [
          {
            "+": "+  if (!vnode.child._isDestroyed) {\n+    if (!vnode.data.keepAlive) {\n+      vnode.child.$destroy()\n+    } else {\n+      callHook(vnode.child, 'deactivated')\n+    }\n",
            "-": "-  if (!vnode.data.keepAlive) {\n-    vnode.child.$destroy()\n-  } else {\n-    callHook(vnode.child, 'deactivated')\n"
          }
        ],
        "a/src/core/vdom/patch.js": [
          {
            "+": "+    }\n+    if (isDef(i = vnode.child)) {\n+      invokeDestroyHook(i._vnode)\n+    }\n+    if (isDef(i = vnode.children)) {\n+      for (j = 0; j < vnode.children.length; ++j) {\n+        invokeDestroyHook(vnode.children[j])\n",
            "-": "-      if (isDef(i = vnode.children)) {\n-        for (j = 0; j < vnode.children.length; ++j) {\n-          invokeDestroyHook(vnode.children[j])\n-        }\n-      }\n-      if (isDef(i = vnode.child)) {\n-        invokeDestroyHook(i._vnode)\n"
          }
        ],
        "a/test/unit/features/component/component-keep-alive.spec.js": [
          {
            "+": "+      deactivated: jasmine.createSpy('one deactivated'),\n+      destroyed: jasmine.createSpy('one destroyed')\n",
            "-": "-      deactivated: jasmine.createSpy('one deactivated')\n"
          },
          {
            "+": "+      deactivated: jasmine.createSpy('two deactivated'),\n+      destroyed: jasmine.createSpy('two destroyed')\n",
            "-": "-      deactivated: jasmine.createSpy('two deactivated')\n"
          },
          {
            "+": "+      component.deactivated.calls.count(),\n+      component.destroyed.calls.count()\n",
            "-": "-      component.deactivated.calls.count()\n"
          },
          {
            "+": "+      template: '<div v-if=\"ok\"><component :is=\"view\" keep-alive></component></div>',\n",
            "-": "-      template: '<div><component :is=\"view\" keep-alive></component></div>',\n"
          },
          {
            "+": "+        view: 'one',\n+        ok: true\n",
            "-": "-        view: 'one'\n"
          },
          {
            "+": "+    assertHookCalls(one, [1, 1, 1, 0, 0])\n+    assertHookCalls(two, [0, 0, 0, 0, 0])\n",
            "-": "-    assertHookCalls(one, [1, 1, 1, 0])\n-    assertHookCalls(two, [0, 0, 0, 0])\n"
          },
          {
            "+": "+      assertHookCalls(one, [1, 1, 1, 1, 0])\n+      assertHookCalls(two, [1, 1, 1, 0, 0])\n",
            "-": "-      assertHookCalls(one, [1, 1, 1, 1])\n-      assertHookCalls(two, [1, 1, 1, 0])\n"
          },
          {
            "+": "+      assertHookCalls(one, [1, 1, 2, 1, 0])\n+      assertHookCalls(two, [1, 1, 1, 1, 0])\n",
            "-": "-      assertHookCalls(one, [1, 1, 2, 1])\n-      assertHookCalls(two, [1, 1, 1, 1])\n"
          },
          {
            "+": "+      assertHookCalls(one, [1, 1, 2, 2, 0])\n+      assertHookCalls(two, [1, 1, 2, 1, 0])\n+      vm.ok = false // teardown\n+    }).then(() => {\n+      expect(vm.$el.textContent).toBe('')\n+      assertHookCalls(one, [1, 1, 2, 3, 1])\n+      assertHookCalls(two, [1, 1, 2, 2, 1])\n",
            "-": "-      assertHookCalls(one, [1, 1, 2, 2])\n-      assertHookCalls(two, [1, 1, 2, 1])\n"
          },
          {
            "+": "+      assertHookCalls(one, [1, 1, 1, 0, 0])\n+      assertHookCalls(two, [0, 0, 0, 0, 0])\n",
            "-": "-      assertHookCalls(one, [1, 1, 1, 0])\n-      assertHookCalls(two, [0, 0, 0, 0])\n"
          },
          {
            "+": "+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [0, 0, 0, 0, 0])\n",
            "-": "-        assertHookCalls(one, [1, 1, 1, 1])\n-        assertHookCalls(two, [0, 0, 0, 0])\n"
          },
          {
            "+": "+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 0, 0])\n",
            "-": "-        assertHookCalls(one, [1, 1, 1, 1])\n-        assertHookCalls(two, [1, 1, 1, 0])\n"
          },
          {
            "+": "+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 0, 0])\n",
            "-": "-        assertHookCalls(one, [1, 1, 1, 1])\n-        assertHookCalls(two, [1, 1, 1, 0])\n"
          },
          {
            "+": "+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n",
            "-": "-        assertHookCalls(one, [1, 1, 1, 1])\n-        assertHookCalls(two, [1, 1, 1, 1])\n"
          },
          {
            "+": "+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n",
            "-": "-        assertHookCalls(one, [1, 1, 2, 1])\n-        assertHookCalls(two, [1, 1, 1, 1])\n"
          },
          {
            "+": "+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n",
            "-": "-        assertHookCalls(one, [1, 1, 2, 1])\n-        assertHookCalls(two, [1, 1, 1, 1])\n"
          },
          {
            "+": "+      assertHookCalls(one, [1, 1, 1, 0, 0])\n+      assertHookCalls(two, [0, 0, 0, 0, 0])\n",
            "-": "-      assertHookCalls(one, [1, 1, 1, 0])\n-      assertHookCalls(two, [0, 0, 0, 0])\n"
          },
          {
            "+": "+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 0, 0])\n",
            "-": "-        assertHookCalls(one, [1, 1, 1, 1])\n-        assertHookCalls(two, [1, 1, 1, 0])\n"
          },
          {
            "+": "+        assertHookCalls(one, [1, 1, 1, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 0, 0])\n",
            "-": "-        assertHookCalls(one, [1, 1, 1, 1])\n-        assertHookCalls(two, [1, 1, 1, 0])\n"
          },
          {
            "+": "+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n",
            "-": "-        assertHookCalls(one, [1, 1, 2, 1])\n-        assertHookCalls(two, [1, 1, 1, 1])\n"
          },
          {
            "+": "+        assertHookCalls(one, [1, 1, 2, 1, 0])\n+        assertHookCalls(two, [1, 1, 1, 1, 0])\n",
            "-": "-        assertHookCalls(one, [1, 1, 2, 1])\n-        assertHookCalls(two, [1, 1, 1, 1])\n"
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 26,
      "qualityScore": 25
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "8129e0c31569dc7b63cfe4cc32ea0ea7a01be675",
      "url": "https://github.com/vuejs/vue/commit/8129e0c31569dc7b63cfe4cc32ea0ea7a01be675",
      "message": "tests for keep-alive",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-06T04:47:29Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/modules/transition.js": [
          {
            "-": "-  if (def.css === false) return def\n",
            "+": ""
          },
          {
            "+": "+  const res = {}\n+  if (def.css !== false) {\n+    extend(res, autoCssTransition(name))\n+  }\n",
            "-": "-  const key = `_cache_${name}`\n-  if (def[key]) return def[key]\n-  const res = def[key] = {}\n-  extend(res, autoCssTransition(name))\n"
          },
          {
            "+": "+function mergeHook (def: Object, key: string, hook: Function) {\n",
            "-": "-function mergeHook (def, key, hook) {\n"
          }
        ],
        "a/test/unit/features/component/component-keep-alive.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+import injectStyles from '../transition/inject-styles'\n+import { isIE9 } from 'web/util/index'\n+import { nextFrame } from 'web/runtime/modules/transition'\n+\n+describe('Component keep-alive', () => {\n+  const duration = injectStyles()\n+  let components, one, two, el\n+  beforeEach(() => {\n+    one = {\n+      template: '<div>one</div>',\n+      created: jasmine.createSpy('one created'),\n+      mounted: jasmine.createSpy('one mounted'),\n+      activated: jasmine.createSpy('one activated'),\n+      deactivated: jasmine.createSpy('one deactivated')\n+    }\n+    two = {\n+      template: '<div>two</div>',\n+      created: jasmine.createSpy('two created'),\n+      mounted: jasmine.createSpy('two mounted'),\n+      activated: jasmine.createSpy('two activated'),\n+      deactivated: jasmine.createSpy('two deactivated')\n+    }\n+    components = {\n+      one,\n+      two\n+    }\n+    el = document.createElement('div')\n+    document.body.appendChild(el)\n+  })\n+\n+  function assertHookCalls (component, callCounts) {\n+    expect([\n+      component.created.calls.count(),\n+      component.mounted.calls.count(),\n+      component.activated.calls.count(),\n+      component.deactivated.calls.count()\n+    ]).toEqual(callCounts)\n+  }\n+\n+  it('should work', done => {\n+    const vm = new Vue({\n+      template: '<div><component :is=\"view\" keep-alive></component></div>',\n+      data: {\n+        view: 'one'\n+      },\n+      components\n+    }).$mount()\n+    expect(vm.$el.textContent).toBe('one')\n+    assertHookCalls(one, [1, 1, 1, 0])\n+    assertHookCalls(two, [0, 0, 0, 0])\n+    vm.view = 'two'\n+    waitForUpdate(() => {\n+      expect(vm.$el.textContent).toBe('two')\n+      assertHookCalls(one, [1, 1, 1, 1])\n+      assertHookCalls(two, [1, 1, 1, 0])\n+      vm.view = 'one'\n+    }).then(() => {\n+      expect(vm.$el.textContent).toBe('one')\n+      assertHookCalls(one, [1, 1, 2, 1])\n+      assertHookCalls(two, [1, 1, 1, 1])\n+      vm.view = 'two'\n+    }).then(() => {\n+      expect(vm.$el.textContent).toBe('two')\n+      assertHookCalls(one, [1, 1, 2, 2])\n+      assertHookCalls(two, [1, 1, 2, 1])\n+    }).then(done)\n+  })\n+\n+  if (!isIE9) {\n+    it('with transition-mode out-in', done => {\n+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <component\n+            :is=\"view\"\n+            class=\"test\"\n+            keep-alive\n+            transition=\"test\"\n+            transition-mode=\"out-in\">\n+          </component>\n+        </div>`,\n+        data: {\n+          view: 'one'\n+        },\n+        components,\n+        transitions: {\n+          test: {\n+            afterLeave () {\n+              next()\n+            }\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      assertHookCalls(one, [1, 1, 1, 0])\n+      assertHookCalls(two, [0, 0, 0, 0])\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave\">one</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1])\n+        assertHookCalls(two, [0, 0, 0, 0])\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active\">one</div>'\n+        )\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe('')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter\">two</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1])\n+        assertHookCalls(two, [1, 1, 1, 0])\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter-active\">two</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1])\n+        assertHookCalls(two, [1, 1, 1, 0])\n+      }).then(() => {\n+        vm.view = 'one'\n+      }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave\">two</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1])\n+        assertHookCalls(two, [1, 1, 1, 1])\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active\">two</div>'\n+        )\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe('')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter\">one</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 2, 1])\n+        assertHookCalls(two, [1, 1, 1, 1])\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter-active\">one</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 2, 1])\n+        assertHookCalls(two, [1, 1, 1, 1])\n+      }).then(done)\n+    })\n+\n+    it('with transition-mode in-out', done => {\n+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <component\n+            :is=\"view\"\n+            class=\"test\"\n+            keep-alive\n+            transition=\"test\"\n+            transition-mode=\"in-out\">\n+          </component>\n+        </div>`,\n+        data: {\n+          view: 'one'\n+        },\n+        components,\n+        transitions: {\n+          test: {\n+            afterEnter () {\n+              next()\n+            }\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      assertHookCalls(one, [1, 1, 1, 0])\n+      assertHookCalls(two, [0, 0, 0, 0])\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test test-enter\">two</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1])\n+        assertHookCalls(two, [1, 1, 1, 0])\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test test-enter-active\">two</div>'\n+        )\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave\">one</div>' +\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active\">one</div>' +\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 1, 1])\n+        assertHookCalls(two, [1, 1, 1, 0])\n+      }).then(() => {\n+        vm.view = 'one'\n+      }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' +\n+          '<div class=\"test test-enter\">one</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 2, 1])\n+        assertHookCalls(two, [1, 1, 1, 1])\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' +\n+          '<div class=\"test test-enter-active\">one</div>'\n+        )\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>' +\n+          '<div class=\"test\">one</div>'\n+        )\n+      }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave\">two</div>' +\n+          '<div class=\"test\">one</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active\">two</div>' +\n+          '<div class=\"test\">one</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>'\n+        )\n+        assertHookCalls(one, [1, 1, 2, 1])\n+        assertHookCalls(two, [1, 1, 1, 1])\n+      }).then(done)\n+    })\n+  }\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 4,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "15d650054c3ecd7e857f55b8914b28bd9c6ce692",
      "url": "https://github.com/vuejs/vue/commit/15d650054c3ecd7e857f55b8914b28bd9c6ce692",
      "message": "tests for transition-mode",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-06T04:04:14Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/platforms/web/runtime/components/transition-control.js": [
          {
            "+": "+        return addHook(oldChild, {\n+          afterLeave: () => {\n+            this.$forceUpdate()\n+          }\n",
            "-": "-        return addHook(oldChild, 'afterLeave', () => {\n-          this.$forceUpdate()\n"
          },
          {
            "+": "+        addHook(newChild, {\n+          afterEnter: performLeave,\n+          enterCancelled: performLeave\n+        })\n+        addHook(oldChild, {\n+          delayLeave: leave => {\n+            delayedLeave = leave\n+          }\n",
            "-": "-        addHook(newChild, 'afterEnter', performLeave)\n-        addHook(newChild, 'enterCancelled', performLeave)\n-        addHook(oldChild, 'delayLeave', leave => {\n-          delayedLeave = leave\n"
          },
          {
            "+": "+function addHook (vnode: VNode, hooks: Object) {\n",
            "-": "-function addHook (vnode: VNode, name: string, hook: Function) {\n"
          },
          {
            "+": "+  trans.hooks = hooks\n",
            "-": "-  if (trans[name]) {\n-    const oldHook = trans[name]\n-    trans[name] = function (el) {\n-      const res = oldHook.apply(this, arguments)\n-      hook()\n-      return res\n-    }\n-  } else {\n-    trans[name] = hook\n-  }\n"
          }
        ],
        "a/src/platforms/web/runtime/modules/transition.js": [
          {
            "+": "+    def = def\n",
            "-": "-    return def\n"
          },
          {
            "+": "+    // extra hooks to be merged\n+    // added by <transition-control>\n+    if (id.hooks) {\n+      for (const key in id.hooks) {\n+        mergeHook(def, key, id.hooks[key])\n+      }\n+    }\n+    return def\n",
            "-": ""
          },
          {
            "+": "+function mergeHook (def, key, hook) {\n+  const oldHook = def[key]\n+  if (oldHook) {\n+    def[key] = function () {\n+      oldHook.apply(this, arguments)\n+      hook()\n+    }\n+  } else {\n+    def[key] = hook\n+  }\n+}\n+\n",
            "-": ""
          }
        ],
        "a/test/unit/features/transition/transition-mode.spec.js": [
          {
            "+": "+    const duration = injectStyles()\n+    const components = {\n+      one: { template: '<div>one</div>' },\n+      two: { template: '<div>two</div>' }\n+    }\n",
            "-": "-    it('dynamic components, simultaneous', done => {\n"
          },
          {
            "+": "+    let el\n+    beforeEach(() => {\n+      el = document.createElement('div')\n+      document.body.appendChild(el)\n",
            "-": ""
          },
          {
            "+": "+    it('dynamic components, simultaneous', done => {\n+      const vm = new Vue({\n+        template: `<div>\n+          <component\n+            :is=\"view\"\n+            class=\"test\"\n+            transition>\n+          </component>\n+        </div>`,\n+        data: { view: 'one' },\n+        components\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test v-enter\">two</div>' +\n+          '<div class=\"test v-leave\">one</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test v-enter-active\">two</div>' +\n+          '<div class=\"test v-leave-active\">one</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).then(done)\n+    })\n",
            "-": "-    it('dynamic components, out-in', done => {\n"
          },
          {
            "+": "+    it('dynamic components, out-in', done => {\n+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <component\n+            :is=\"view\"\n+            class=\"test\"\n+            transition=\"test\"\n+            transition-mode=\"out-in\">\n+          </component>\n+        </div>`,\n+        data: { view: 'one' },\n+        components,\n+        transitions: {\n+          test: {\n+            afterLeave () {\n+              next()\n+            }\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave\">one</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active\">one</div>'\n+        )\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe('')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter\">two</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter-active\">two</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).then(done)\n",
            "-": ""
          },
          {
            "+": "+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <component\n+            :is=\"view\"\n+            class=\"test\"\n+            transition=\"test\"\n+            transition-mode=\"in-out\">\n+          </component>\n+        </div>`,\n+        data: { view: 'one' },\n+        components,\n+        transitions: {\n+          test: {\n+            afterEnter () {\n+              next()\n+            }\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test test-enter\">two</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test test-enter-active\">two</div>'\n+        )\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave\">one</div>' +\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active\">one</div>' +\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).then(done)\n",
            "-": "-\n"
          },
          {
            "+": "+    it('normal elements with different keys, simultaneous', done => {\n+      const vm = new Vue({\n+        template: `<div>\n+          <div\n+            :key=\"view\"\n+            class=\"test\"\n+            transition>{{view}}</div>\n+        </div>`,\n+        data: { view: 'one' },\n+        components\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test v-enter\">two</div>' +\n+          '<div class=\"test v-leave\">one</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test v-enter-active\">two</div>' +\n+          '<div class=\"test v-leave-active\">one</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).then(done)\n",
            "-": "-    it('normal elements with different key, simultaneous', done => {\n-\n"
          },
          {
            "+": "+    it('normal elements with different keys, out-in', done => {\n+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <div\n+            :key=\"view\"\n+            class=\"test\"\n+            transition=\"test\"\n+            transition-mode=\"out-in\">{{view}}</div>\n+        </div>`,\n+        data: { view: 'one' },\n+        components,\n+        transitions: {\n+          test: {\n+            afterLeave () {\n+              next()\n+            }\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave\">one</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active\">one</div>'\n+        )\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe('')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter\">two</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-enter-active\">two</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).then(done)\n",
            "-": "-    it('normal elements with different key, out-in', done => {\n-\n"
          },
          {
            "+": "+    it('normal elements with different keys, in-out', done => {\n+      let next\n+      const vm = new Vue({\n+        template: `<div>\n+          <div\n+            :key=\"view\"\n+            class=\"test\"\n+            transition=\"test\"\n+            transition-mode=\"in-out\">{{view}}</component>\n+        </div>`,\n+        data: { view: 'one' },\n+        components,\n+        transitions: {\n+          test: {\n+            afterEnter () {\n+              next()\n+            }\n+          }\n+        }\n+      }).$mount(el)\n+      expect(vm.$el.textContent).toBe('one')\n+      vm.view = 'two'\n+      waitForUpdate(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test test-enter\">two</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test test-enter-active\">two</div>'\n+        )\n+      }).thenWaitFor(_next => { next = _next }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">one</div>' +\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave\">one</div>' +\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test test-leave-active\">one</div>' +\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).thenWaitFor(duration + 10).then(() => {\n+        expect(vm.$el.innerHTML).toBe(\n+          '<div class=\"test\">two</div>'\n+        )\n+      }).then(done)\n",
            "-": "-    it('normal elements with different key, in-out', done => {\n-\n"
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 15,
      "qualityScore": 33
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "313442d38a8ca5ecaea182308fccbd1d501f8073",
      "url": "https://github.com/vuejs/vue/commit/313442d38a8ca5ecaea182308fccbd1d501f8073",
      "message": "test create component hook merging",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-02T00:02:39Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/vdom/create-component.spec.js": [
          {
            "+": "+    const init = jasmine.createSpy()\n",
            "-": ""
          },
          {
            "+": "+      hook: { init },\n",
            "-": "-      hook: { insert: function () {} },\n"
          },
          {
            "+": "+\n+    vnode.data.hook.init(vnode)\n+    expect(init).toHaveBeenCalledWith(vnode, undefined)\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "2ce08d63cc527968af6fcbb2d5df7f752f27a73b",
      "url": "https://github.com/vuejs/vue/commit/2ce08d63cc527968af6fcbb2d5df7f752f27a73b",
      "message": "test transition on child components",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-01T21:15:25Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/transition/transition.spec.js": [
          {
            "+": "+    it('no transition detected', done => {\n+      const enterSpy = jasmine.createSpy('enter')\n+      const leaveSpy = jasmine.createSpy('leave')\n+      const vm = new Vue({\n+        template: '<div><div v-if=\"ok\" transition=\"nope\">foo</div></div>',\n+        data: { ok: true },\n+        transitions: {\n+          nope: {\n+            enter: enterSpy,\n+            leave: leaveSpy\n+          }\n+        }\n+      }).$mount(el)\n+\n+      vm.ok = false\n+      waitForUpdate(() => {\n+        expect(leaveSpy).toHaveBeenCalled()\n+        expect(vm.$el.innerHTML).toBe('<div class=\"nope-leave\">foo</div>')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toBe('')\n+        vm.ok = true\n+      }).then(() => {\n+        expect(enterSpy).toHaveBeenCalled()\n+        expect(vm.$el.innerHTML).toBe('<div class=\"nope-enter\">foo</div>')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.innerHTML).toMatch(/<div( class=\"\")?>foo<\\/div>/)\n+      }).then(done)\n+    })\n+\n",
            "-": ""
          },
          {
            "+": "+\n+    it('transition on child components', done => {\n+      const vm = new Vue({\n+        template: '<div><test v-if=\"ok\" class=\"test\" transition></test></div>',\n+        data: { ok: true },\n+        components: {\n+          test: {\n+            template: '<div transition=\"test\">foo</div>' // test transition override from parent\n+          }\n+        }\n+      }).$mount(el)\n+\n+      // should not apply transition on initial render by default\n+      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+      vm.ok = false\n+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-leave')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-leave-active')\n+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n+        expect(vm.$el.children.length).toBe(0)\n+        vm.ok = true\n+      }).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-enter')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-enter-active')\n+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test')\n+      }).then(done)\n+    })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "068f6270d5ea6359c971955aee8b074b8496faac",
      "url": "https://github.com/vuejs/vue/commit/068f6270d5ea6359c971955aee8b074b8496faac",
      "message": "test for errorHandler config",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-01T21:10:24Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/global-api/config.spec.js": [
          {
            "+": "+\n+  describe('errorHandler', () => {\n+    Vue.config.errorHandler = spy\n+    const err = new Error()\n+    const vm = new Vue({\n+      render () { throw err }\n+    }).$mount()\n+    expect(spy).toHaveBeenCalledWith(err, vm)\n+    Vue.config.errorHandler = null\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "f8cfc81826715b23dac054b6d1727594d2caeebd",
      "url": "https://github.com/vuejs/vue/commit/f8cfc81826715b23dac054b6d1727594d2caeebd",
      "message": "remove unnecessary v-pre related code",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-01T19:03:09Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/flow/vnode.js": [
          {
            "-": "-  pre?: true;\n",
            "+": ""
          }
        ],
        "a/src/compiler/codegen.js": [
          {
            "-": "-  // pre\n-  if (el.pre) {\n-    data += 'pre:true,'\n-  }\n",
            "+": ""
          }
        ],
        "a/src/core/vdom/patch.js": [
          {
            "-": "-    // skip nodes with v-pre\n-    if (isDef(i = vnode.data) && i.pre) {\n-      return\n-    }\n",
            "+": ""
          }
        ],
        "a/test/unit/modules/compiler/codegen.spec.js": [
          {
            "-": "-  it('generate v-pre', () => {\n-    assertCodegen(\n-      '<div v-pre><p>hello world</p></div>',\n-      'with(this){return _m(0)}',\n-      [`with(this){return _h(_e('div',{pre:true}),[_h(_e('p'),[_t(\"hello world\")])])}`]\n-    )\n-  })\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 4,
      "numOfChanges": 4,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "2e678b87a502a77e3f7cf89aef865d9e85892009",
      "url": "https://github.com/vuejs/vue/commit/2e678b87a502a77e3f7cf89aef865d9e85892009",
      "message": "remove classList polyfill in tests",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-06-01T01:42:33Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/package.json": [
          {
            "-": "-    \"classlist-polyfill\": \"^1.0.0\",\n",
            "+": ""
          }
        ],
        "a/src/platforms/web/runtime/class-util.js": [
          {
            "+": "+  /* istanbul ignore else */\n",
            "-": ""
          },
          {
            "+": "+  /* istanbul ignore else */\n",
            "-": ""
          }
        ],
        "a/test/helpers/classlist.js": [
          {
            "+": "+beforeEach(() => {\n+  jasmine.addMatchers({\n+    // since classList may not be supported in all browsers\n+    toHaveClass: () => {\n+      return {\n+        compare: (el, cls) => {\n+          const pass = el.classList\n+            ? el.classList.contains(cls)\n+            : el.getAttribute('class').split(/\\s+/g).indexOf(cls) > -1\n+          return {\n+            pass,\n+            message: `Expected element${pass ? ' ' : ' not '}to have class ${cls}`\n+          }\n+        }\n+      }\n+    }\n+  })\n+})\n",
            "-": ""
          }
        ],
        "a/test/unit/features/render/render.spec.js": [
          {
            "+": "+    expect(vm.$el.childNodes[0]).toHaveClass('message')\n",
            "-": "-    expect(vm.$el.childNodes[0].classList.contains('message')).toBe(true)\n"
          },
          {
            "+": "+      expect(li).toHaveClass(`class${i}`)\n",
            "-": "-      expect(li.classList.contains(`class${i}`)).toBe(true)\n"
          }
        ],
        "a/test/unit/features/transition/transition.spec.js": [
          {
            "+": "+    const duration = 20\n",
            "-": "-    const duration = 30\n"
          },
          {
            "+": "+      .v-enter, .v-leave-active,\n+      .test-enter, .test-leave-active,\n+      .hello, .bye.active,\n+      .changed-enter {\n",
            "-": "-      .test-enter, .test-leave-active, .hello, .bye.active, .changed-enter {\n"
          },
          {
            "+": "+    it('basic transition', done => {\n+      const vm = new Vue({\n+        template: '<div><div v-if=\"ok\" class=\"test\" transition>foo</div></div>',\n+        data: { ok: true }\n+      }).$mount(el)\n+\n+      // should not apply transition on initial render by default\n+      expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+      vm.ok = false\n+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-leave')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-leave-active')\n+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n+        expect(vm.$el.children.length).toBe(0)\n+        vm.ok = true\n+      }).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-enter')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test v-enter-active')\n+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test')\n+      }).then(done)\n+    })\n+\n+    it('named transition', done => {\n",
            "-": "-    it('basic transitions', done => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('1')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('0')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('1')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('0')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('1')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('0')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('1')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('0')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('1')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('0')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+    it('explicit user callback in JavaScript hooks', done => {\n+      let next\n+      const vm = new Vue({\n+        template: '<div><div v-if=\"ok\" class=\"test\" transition=\"test\">foo</div></div>',\n+        data: { ok: true },\n+        transitions: {\n+          test: {\n+            enter: (el, cb) => {\n+              next = cb\n+            },\n+            leave: (el, cb) => {\n+              next = cb\n+            }\n+          }\n+        }\n+      }).$mount(el)\n+      vm.ok = false\n+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-leave')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-leave-active')\n+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-leave-active')\n+        expect(next).toBeTruthy()\n+        next()\n+        expect(vm.$el.children.length).toBe(0)\n+      }).then(() => {\n+        vm.ok = true\n+      }).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-enter')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-enter-active')\n+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-enter-active')\n+        expect(next).toBeTruthy()\n+        next()\n+        expect(vm.$el.children[0].className).toBe('test')\n+      }).then(done)\n+    })\n+\n+    it('css: false', done => {\n+      const enterSpy = jasmine.createSpy('enter')\n+      const leaveSpy = jasmine.createSpy('leave')\n+      const vm = new Vue({\n+        template: '<div><div v-if=\"ok\" class=\"test\" transition=\"test\">foo</div></div>',\n+        data: { ok: true },\n+        transitions: {\n+          test: {\n+            css: false,\n+            enter: enterSpy,\n+            leave: leaveSpy\n+          }\n+        }\n+      }).$mount(el)\n+\n+      vm.ok = false\n+      waitForUpdate(() => {\n+        expect(leaveSpy).toHaveBeenCalled()\n+        expect(vm.$el.innerHTML).toBe('')\n+        vm.ok = true\n+      }).then(() => {\n+        expect(enterSpy).toHaveBeenCalled()\n+        expect(vm.$el.innerHTML).toBe('<div class=\"test\">foo</div>')\n+      }).then(done)\n+    })\n+\n",
            "-": ""
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('1')\n-        expect(vm.$el.children[0].style.display).toBe('')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('0')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "-": "-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('1')\n",
            "+": ""
          },
          {
            "-": "-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).toBe('1')\n",
            "+": ""
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('1')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n",
            "-": "-      }).thenWaitFor(timeout(duration / 2)).then(() => {\n-        expect(window.getComputedStyle(vm.$el.children[0]).opacity).not.toBe('0')\n-      }).thenWaitFor(timeout(duration / 2 + 10)).then(() => {\n"
          },
          {
            "+": "+    it('transition on appear', done => {\n+      const vm = new Vue({\n+        template: '<div><div v-if=\"ok\" class=\"test\" transition=\"test\" transition-on-appear>foo</div></div>',\n+        data: { ok: true }\n+      }).$mount(el)\n+\n+      waitForUpdate(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-enter')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test test-enter-active')\n+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n+        expect(vm.$el.children[0].className).toBe('test')\n+      }).then(done)\n+    })\n",
            "-": "-    it('transition on appear', () => {\n"
          },
          {
            "+": "+    it('transition on SVG elements', done => {\n+      const vm = new Vue({\n+        template: '<svg><circle cx=\"0\" cy=\"0\" r=\"10\" v-if=\"ok\" class=\"test\" transition></circle></svg>',\n+        data: { ok: true }\n+      }).$mount(el)\n+\n+      // should not apply transition on initial render by default\n+      expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test')\n+      vm.ok = false\n+      waitForUpdate(() => {\n+        expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test v-leave')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test v-leave-active')\n+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n+        expect(vm.$el.childNodes.length).toBe(0)\n+        vm.ok = true\n+      }).then(() => {\n+        expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test v-enter')\n+      }).thenWaitFor(nextFrame).then(() => {\n+        expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test v-enter-active')\n+      }).thenWaitFor(timeout(duration + 10)).then(() => {\n+        expect(vm.$el.childNodes[0].getAttribute('class')).toBe('test')\n+      }).then(done)\n",
            "-": ""
          }
        ],
        "a/test/unit/index.js": [
          {
            "-": "-import 'classlist-polyfill' // for IE9\n",
            "+": ""
          }
        ],
        "a/test/unit/modules/vdom/modules/attrs.spec.js": [
          {
            "+": "+    expect(elm).toHaveClass('class1')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(true)\n"
          },
          {
            "+": "+    expect(elm).toHaveClass('class1')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(true)\n"
          },
          {
            "+": "+    expect(elm).toHaveClass('i')\n+    expect(elm).toHaveClass('am')\n+    expect(elm).not.toHaveClass('vdom')\n",
            "-": "-    expect(elm.classList.contains('i')).toBe(true)\n-    expect(elm.classList.contains('am')).toBe(true)\n-    expect(elm.classList.contains('vdom')).toBe(false)\n"
          },
          {
            "+": "+    expect(elm.className).toBe('')\n",
            "-": "-    expect(elm.classList.length).toBe(0)\n"
          }
        ],
        "a/test/unit/modules/vdom/modules/class.spec.js": [
          {
            "+": "+    expect(elm).toHaveClass('class1')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(true)\n"
          },
          {
            "+": "+    expect(elm).toHaveClass('class1')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(true)\n"
          },
          {
            "+": "+    expect(elm).toHaveClass('class1')\n+    expect(elm).toHaveClass('class2')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(true)\n-    expect(elm.classList.contains('class2')).toBe(true)\n"
          },
          {
            "+": "+    expect(elm).toHaveClass('class1')\n+    expect(elm).not.toHaveClass('class2')\n+    expect(elm).toHaveClass('class3')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(true)\n-    expect(elm.classList.contains('class2')).toBe(false)\n-    expect(elm.classList.contains('class3')).toBe(true)\n"
          },
          {
            "+": "+    expect(elm).not.toHaveClass('class1')\n+    expect(elm).toHaveClass('class2')\n+    expect(elm).not.toHaveClass('class3')\n+    expect(elm).toHaveClass('class4')\n+    expect(elm).toHaveClass('class5')\n+    expect(elm).toHaveClass('class6')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(false)\n-    expect(elm.classList.contains('class2')).toBe(true)\n-    expect(elm.classList.contains('class3')).toBe(false)\n-    expect(elm.classList.contains('class4')).toBe(true)\n-    expect(elm.classList.contains('class5')).toBe(true)\n-    expect(elm.classList.contains('class6')).toBe(true)\n"
          },
          {
            "+": "+    expect(elm).toHaveClass('class1')\n+    expect(elm).toHaveClass('class2')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(true)\n-    expect(elm.classList.contains('class2')).toBe(true)\n"
          },
          {
            "+": "+    expect(elm).toHaveClass('class1')\n+    expect(elm).toHaveClass('class2')\n+    expect(elm).toHaveClass('class3')\n+    expect(elm).toHaveClass('class4')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(true)\n-    expect(elm.classList.contains('class2')).toBe(true)\n-    expect(elm.classList.contains('class3')).toBe(true)\n-    expect(elm.classList.contains('class4')).toBe(true)\n"
          },
          {
            "+": "+    expect(elm).not.toHaveClass('class1')\n+    expect(elm).not.toHaveClass('class2')\n+    expect(elm).not.toHaveClass('class3')\n+    expect(elm).toHaveClass('foo')\n+    expect(elm).toHaveClass('bar')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(false)\n-    expect(elm.classList.contains('class2')).toBe(false)\n-    expect(elm.classList.contains('class3')).toBe(false)\n-    expect(elm.classList.contains('foo')).toBe(true)\n-    expect(elm.classList.contains('bar')).toBe(true)\n"
          },
          {
            "+": "+    expect(elm).not.toHaveClass('class1')\n+    expect(elm).not.toHaveClass('class2')\n+    expect(elm).not.toHaveClass('class3')\n",
            "-": "-    expect(elm.classList.contains('class1')).toBe(false)\n-    expect(elm.classList.contains('class2')).toBe(false)\n-    expect(elm.classList.contains('class3')).toBe(false)\n"
          }
        ]
      },
      "numOfFiles": 8,
      "numOfChanges": 42,
      "qualityScore": 26
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "f23498242faffb95e2a29f38fe4dd92c323d7161",
      "url": "https://github.com/vuejs/vue/commit/f23498242faffb95e2a29f38fe4dd92c323d7161",
      "message": "test for misc instance properties",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-29T17:21:09Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/instance/properties.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+\n+describe('Instance properties', () => {\n+  it('$data', () => {\n+    const data = { a: 1 }\n+    const vm = new Vue({\n+      data\n+    })\n+    expect(vm.a).toBe(1)\n+    expect(vm.$data).toBe(data)\n+    // vm -> data\n+    vm.a = 2\n+    expect(data.a).toBe(2)\n+    // data -> vm\n+    data.a = 3\n+    expect(vm.a).toBe(3)\n+  })\n+\n+  it('$options', () => {\n+    const A = Vue.extend({\n+      methods: {\n+        a () {}\n+      }\n+    })\n+    const vm = new A({\n+      methods: {\n+        b () {}\n+      }\n+    })\n+    expect(typeof vm.$options.methods.a).toBe('function')\n+    expect(typeof vm.$options.methods.b).toBe('function')\n+  })\n+\n+  it('$root/$children', done => {\n+    const vm = new Vue({\n+      template: '<div><test v-if=\"ok\"></test></div>',\n+      data: { ok: true },\n+      components: {\n+        test: {\n+          template: '<div></div>'\n+        }\n+      }\n+    }).$mount()\n+    expect(vm.$root).toBe(vm)\n+    expect(vm.$children.length).toBe(1)\n+    expect(vm.$children[0].$root).toBe(vm)\n+    vm.ok = false\n+    waitForUpdate(() => {\n+      expect(vm.$children.length).toBe(0)\n+      vm.ok = true\n+    }).then(() => {\n+      expect(vm.$children.length).toBe(1)\n+      expect(vm.$children[0].$root).toBe(vm)\n+    }).then(done)\n+  })\n+\n+  it('$isServer', () => {\n+    const vm = new Vue()\n+    expect(vm.$isServer).toBe(false)\n+    Vue.config._isServer = true\n+    expect(vm.$isServer).toBe(true)\n+    Vue.config._isServer = false\n+  })\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "43da334ec164a83aafcaa475e10611dbf0d941db",
      "url": "https://github.com/vuejs/vue/commit/43da334ec164a83aafcaa475e10611dbf0d941db",
      "message": "test programmatic $slot access",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-29T01:39:59Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/render.js": [
          {
            "+": "+      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n+        warn(\n+          'Multiple root nodes returned from render function. Render function ' +\n+          'should return a single root node.'\n+        )\n+      }\n",
            "-": ""
          }
        ],
        "a/test/unit/features/component/component-slot.spec.js": [
          {
            "+": "+\n+  it('programmatic access to $slots', () => {\n+    const vm = new Vue({\n+      template: '<test><p slot=\"a\">A</p><div>C</div><p slot=\"b\">B</div></p></test>',\n+      components: {\n+        test: {\n+          render () {\n+            expect(this.$slots.a.length).toBe(1)\n+            expect(this.$slots.a[0].tag).toBe('p')\n+            expect(this.$slots.a[0].children.length).toBe(1)\n+            expect(this.$slots.a[0].children[0].text).toBe('A')\n+\n+            expect(this.$slots.b.length).toBe(1)\n+            expect(this.$slots.b[0].tag).toBe('p')\n+            expect(this.$slots.b[0].children.length).toBe(1)\n+            expect(this.$slots.b[0].children[0].text).toBe('B')\n+\n+            expect(this.$slots.default.length).toBe(1)\n+            expect(this.$slots.default[0].tag).toBe('div')\n+            expect(this.$slots.default[0].children.length).toBe(1)\n+            expect(this.$slots.default[0].children[0].text).toBe('C')\n+\n+            return this.$slots.default[0]\n+          }\n+        }\n+      }\n+    }).$mount()\n+    expect(vm.$el.tagName).toBe('DIV')\n+    expect(vm.$el.textContent).toBe('C')\n+  })\n+\n+  it('warn if user directly returns array', () => {\n+    new Vue({\n+      template: '<test><div></div></test>',\n+      components: {\n+        test: {\n+          render () {\n+            return this.$slots.default\n+          }\n+        }\n+      }\n+    }).$mount()\n+    expect('Render function should return a single root node').toHaveBeenWarned()\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "87820e9fbd81c6daafb23cf89b1aad9669f2e748",
      "url": "https://github.com/vuejs/vue/commit/87820e9fbd81c6daafb23cf89b1aad9669f2e748",
      "message": "remove select append selectedIndex test case",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-27T03:54:06Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/directives/model-select.spec.js": [
          {
            "-": "-  it('select persist non-selected on append', function () {\n-    const vm = new Vue({\n-      data: {\n-        test: null\n-      },\n-      template:\n-        '<select v-model=\"test\">' +\n-          '<option>a</option>' +\n-          '<option>b</option>' +\n-          '<option>c</option>' +\n-        '</select>'\n-    }).$mount()\n-    document.body.appendChild(vm.$el)\n-    expect(vm.$el.value).toBe('')\n-    expect(vm.$el.selectedIndex).toBe(-1)\n-    document.body.removeChild(vm.$el)\n-    document.body.appendChild(vm.$el)\n-    expect(vm.$el.value).toBe('')\n-    expect(vm.$el.selectedIndex).toBe(-1)\n-  })\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "2a64b8a356c89b1527bec6a5d308b3d6dc0fb0b2",
      "url": "https://github.com/vuejs/vue/commit/2a64b8a356c89b1527bec6a5d308b3d6dc0fb0b2",
      "message": "tests for v-model select",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-27T03:51:34Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/flow/compiler.js": [
          {
            "+": "+  staticRoot?: boolean,\n",
            "-": "-  staticRoot?: true,\n"
          }
        ],
        "a/src/core/vdom/modules/directives.js": [
          {
            "+": "+  postpatch: function postupdateDirectives (oldVnode: VNodeWithData, vnode: VNodeWithData) {\n+    applyDirectives(oldVnode, vnode, 'postupdate')\n+  },\n",
            "-": ""
          }
        ],
        "a/src/core/vdom/patch.js": [
          {
            "+": "+const hooks = ['create', 'update', 'postpatch', 'remove', 'destroy']\n",
            "-": "-const hooks = ['create', 'update', 'remove', 'destroy']\n"
          },
          {
            "+": "+      if (isDef(hook) && isDef(i = hook.update)) i(oldVnode, vnode)\n",
            "-": "-      i = vnode.data.hook\n-      if (isDef(i) && isDef(i = i.update)) i(oldVnode, vnode)\n"
          },
          {
            "+": "+    if (isDef(vnode.data)) {\n+      for (i = 0; i < cbs.postpatch.length; ++i) cbs.postpatch[i](oldVnode, vnode)\n+      if (isDef(hook) && isDef(i = hook.postpatch)) i(oldVnode, vnode)\n",
            "-": "-    if (isDef(hook) && isDef(i = hook.postpatch)) {\n-      i(oldVnode, vnode)\n"
          }
        ],
        "a/src/platforms/web/compiler/directives/model.js": [
          {
            "+": "+let warn\n+\n",
            "-": ""
          },
          {
            "+": "+  _warn: Function\n",
            "-": "-  warn: Function\n"
          },
          {
            "+": "+  warn = _warn\n",
            "-": ""
          },
          {
            "+": "+    return genSelect(el, value)\n",
            "-": "-    if (el.attrsMap.multiple != null) {\n-      genMultiSelect(el, value)\n-    } else {\n-      genSelect(el, value)\n-    }\n"
          },
          {
            "+": "+        genCheckboxModel(el, value)\n",
            "-": "-        genCheckboxModel(el, value, warn)\n"
          },
          {
            "+": "+        genRadioModel(el, value)\n",
            "-": "-        genRadioModel(el, value, warn)\n"
          },
          {
            "+": "+        return genDefaultModel(el, value, modifiers)\n",
            "-": "-        return genDefaultModel(el, value, modifiers, warn)\n"
          },
          {
            "+": "+function genCheckboxModel (el: ASTElement, value: ?string) {\n",
            "-": "-function genCheckboxModel (el: ASTElement, value: ?string, warn: Function) {\n"
          },
          {
            "+": "+      `:(${value})===(${trueValueBinding})`\n",
            "-": "-      `:(${value})==(${trueValueBinding})`\n"
          },
          {
            "+": "+function genRadioModel (el: ASTElement, value: ?string) {\n",
            "-": "-function genRadioModel (el: ASTElement, value: ?string, warn: Function) {\n"
          },
          {
            "+": "+  addProp(el, 'checked', `(${value})===(${valueBinding})`)\n",
            "-": "-  addProp(el, 'checked', `(${value})==(${valueBinding})`)\n"
          },
          {
            "+": "+  modifiers: ?Object\n",
            "-": "-  modifiers: ?Object,\n-  warn: Function\n"
          },
          {
            "-": "-const getSelectedValueCode =\n-  'Array.prototype.filter' +\n-  '.call($event.target.options,function(o){return o.selected})' +\n-  '.map(function(o){return \"_value\" in o ? o._value : o.value})'\n-\n-function patchChildOptions (el: ASTElement, fn: (arg: ?string) => string) {\n-  for (let i = 0; i < el.children.length; i++) {\n-    const c = el.children[i]\n-    if (c.type === 1 && c.tag === 'option') {\n-      addProp(c, 'selected', fn(getBindingAttr(c, 'value')))\n-    }\n-  }\n-}\n-\n",
            "+": ""
          },
          {
            "+": "+  if (process.env.NODE_ENV !== 'production') {\n+    el.children.some(checkOptionWarning)\n+  }\n+  const code = `${value}=Array.prototype.filter` +\n+    `.call($event.target.options,function(o){return o.selected})` +\n+    `.map(function(o){return \"_value\" in o ? o._value : o.value})` +\n+    (el.attrsMap.multiple == null ? '[0]' : '')\n+  addHandler(el, 'change', code)\n+  // need runtime to help with possible dynamically generated options\n+  return true\n",
            "-": "-  addHandler(el, 'change', `${value}=${getSelectedValueCode}[0]`)\n-  patchChildOptions(el, valueBinding => `$(${value})===(${valueBinding})`)\n"
          },
          {
            "+": "+function checkOptionWarning (option: ASTNode) {\n+  if (option.type === 1 &&\n+    option.tag === 'option' &&\n+    option.attrsMap.selected != null) {\n+    const parentModel = option.parent &&\n+      option.parent.type === 1 &&\n+      option.parent.attrsMap['v-model']\n+    warn(\n+      `<select v-model=\"${parentModel}\">:\\n` +\n+      'inline selected attributes on <option> will be ignored when using v-model. ' +\n+      'Declare initial values in the component\\'s data option instead.'\n+    )\n+    return true\n+  }\n",
            "-": "-function genMultiSelect (el: ASTElement, value: ?string) {\n-  addHandler(el, 'change', `${value}=${getSelectedValueCode}`)\n-  patchChildOptions(el, valueBinding => `$(${value}).indexOf(${valueBinding})>-1`)\n"
          }
        ],
        "a/src/platforms/web/runtime/directives/model.js": [
          {
            "+": "+      trigger(el, 'input')\n",
            "-": "-      trigger(el)\n"
          },
          {
            "+": "+  bind (el, binding, vnode) {\n",
            "-": "-  bind (el, value, vnode) {\n"
          },
          {
            "+": "+      if (!vnode.tag.match(/input|select|textarea/)) {\n",
            "-": "-      const tag = el.tagName.toLowerCase()\n-      if (!tag.match(/input|select|textarea/)) {\n"
          },
          {
            "+": "+          `v-model is not supported on element type: <${vnode.tag}>. ` +\n",
            "-": "-          `v-model is not supported on element type: <${tag}>. ` +\n"
          },
          {
            "+": "+    if (vnode.tag === 'select') {\n+      setSelected(el, binding.value)\n+    } else {\n+      if (!isAndroid) {\n+        el.addEventListener('compositionstart', onCompositionStart)\n+        el.addEventListener('compositionend', onCompositionEnd)\n+      }\n+      if (isIE9) {\n+        el.vmodel = true\n+      }\n",
            "-": "-    if (!isAndroid) {\n-      el.addEventListener('compositionstart', onCompositionStart)\n-      el.addEventListener('compositionend', onCompositionEnd)\n"
          },
          {
            "+": "+  },\n+  postupdate (el, binding, vnode) {\n+    const val = binding.value\n+    if (vnode.tag === 'select') {\n+      setSelected(el, val)\n+      // in case the options rendered by v-for have changed,\n+      // it's possible that the value is out-of-sync with the rendered options.\n+      // detect such cases and filter out values that no longer has a matchig\n+      // option in the DOM.\n+      const needReset = el.multiple\n+        ? val.some(v => hasNoMatchingOption(v, el.options))\n+        : hasNoMatchingOption(val, el.options)\n+      if (needReset) {\n+        trigger(el, 'change')\n+      }\n",
            "-": "-    if (isIE9) {\n-      el.vmodel = true\n"
          },
          {
            "+": "+  unbind (el, binding, vnode) {\n+    if (vnode.tag !== 'select' && !isAndroid) {\n",
            "-": "-  unbind (el) {\n-    if (!isAndroid) {\n"
          },
          {
            "+": "+function setSelected (el, value) {\n+  const isMultiple = el.multiple\n+  if (!isMultiple) {\n+    el.selectedIndex = -1\n+  }\n+  for (let i = 0, l = el.options.length; i < l; i++) {\n+    const option = el.options[i]\n+    if (isMultiple) {\n+      option.selected = value.indexOf(getValue(option)) > -1\n+    } else {\n+      if (getValue(option) === value) {\n+        el.selectedIndex = i\n+        break\n+      }\n+    }\n+  }\n+}\n+\n+function hasNoMatchingOption (value, options) {\n+  for (let i = 0, l = options.length; i < l; i++) {\n+    if (getValue(options[i]) === value) {\n+      return false\n+    }\n+  }\n+  return true\n+}\n+\n+function getValue (option) {\n+  return '_value' in option\n+    ? option._value\n+    : option.value || option.text\n+}\n+\n",
            "-": ""
          },
          {
            "+": "+  trigger(e.target, 'input')\n",
            "-": "-  trigger(e.target)\n"
          },
          {
            "+": "+function trigger (el, type) {\n",
            "-": "-function trigger (el) {\n"
          },
          {
            "+": "+  e.initEvent(type, true, true)\n",
            "-": "-  e.initEvent('input', true, true)\n"
          }
        ],
        "a/src/platforms/web/runtime/modules/props.js": [
          {
            "+": "+  let key, cur\n",
            "-": "-  let key, cur, old\n"
          }
        ],
        "a/src/platforms/web/runtime/patch.js": [
          {
            "+": "+// the directive module should be applied last, after all\n+// built-in modules have been applied.\n+const modules = platformModules.concat(baseModules)\n",
            "-": "-const modules = baseModules.concat(platformModules)\n"
          }
        ],
        "a/test/unit/features/directives/model-select.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+\n+/**\n+ * setting <select>'s value in IE9 doesn't work\n+ * we have to manually loop through the options\n+ */\n+function updateSelect (el, value) {\n+  var options = el.options\n+  var i = options.length\n+  while (i--) {\n+    /* eslint-disable eqeqeq */\n+    if (options[i].value == value) {\n+    /* eslint-enable eqeqeq */\n+      options[i].selected = true\n+      break\n+    }\n+  }\n+}\n+\n+describe('Directive v-model select', () => {\n+  it('should work', done => {\n+    const vm = new Vue({\n+      data: {\n+        test: 'b'\n+      },\n+      template:\n+        '<select v-model=\"test\">' +\n+          '<option>a</option>' +\n+          '<option>b</option>' +\n+          '<option>c</option>' +\n+        '</select>'\n+    }).$mount()\n+    document.body.appendChild(vm.$el)\n+    expect(vm.test).toBe('b')\n+    expect(vm.$el.value).toBe('b')\n+    expect(vm.$el.childNodes[1].selected).toBe(true)\n+    vm.test = 'c'\n+    waitForUpdate(function () {\n+      expect(vm.$el.value).toBe('c')\n+      expect(vm.$el.childNodes[2].selected).toBe(true)\n+      updateSelect(vm.$el, 'a')\n+      triggerEvent(vm.$el, 'change')\n+      expect(vm.test).toBe('a')\n+    }).then(done)\n+  })\n+\n+  it('should work with value bindings', done => {\n+    const vm = new Vue({\n+      data: {\n+        test: 2\n+      },\n+      template:\n+        '<select v-model=\"test\">' +\n+          '<option value=\"1\">a</option>' +\n+          '<option :value=\"2\">b</option>' +\n+          '<option :value=\"3\">c</option>' +\n+        '</select>'\n+    }).$mount()\n+    document.body.appendChild(vm.$el)\n+    expect(vm.$el.value).toBe('2')\n+    expect(vm.$el.childNodes[1].selected).toBe(true)\n+    vm.test = 3\n+    waitForUpdate(function () {\n+      expect(vm.$el.value).toBe('3')\n+      expect(vm.$el.childNodes[2].selected).toBe(true)\n+      updateSelect(vm.$el, '1')\n+      triggerEvent(vm.$el, 'change')\n+      expect(vm.test).toBe('1')\n+    }).then(done)\n+  })\n+\n+  it('should work with v-for', done => {\n+    const vm = new Vue({\n+      data: {\n+        test: 'b',\n+        opts: ['a', 'b', 'c']\n+      },\n+      template:\n+        '<select v-model=\"test\">' +\n+          '<option v-for=\"o in opts\">{{ o }}</option>' +\n+        '</select>'\n+    }).$mount()\n+    document.body.appendChild(vm.$el)\n+    expect(vm.test).toBe('b')\n+    expect(vm.$el.value).toBe('b')\n+    expect(vm.$el.childNodes[1].selected).toBe(true)\n+    vm.test = 'c'\n+    waitForUpdate(function () {\n+      expect(vm.$el.value).toBe('c')\n+      expect(vm.$el.childNodes[2].selected).toBe(true)\n+      updateSelect(vm.$el, 'a')\n+      triggerEvent(vm.$el, 'change')\n+      expect(vm.test).toBe('a')\n+      // update v-for opts\n+      vm.opts = ['d', 'a']\n+    }).then(() => {\n+      expect(vm.$el.childNodes[0].selected).toBe(false)\n+      expect(vm.$el.childNodes[1].selected).toBe(true)\n+    }).then(done)\n+  })\n+\n+  it('should work with v-for & value bindings', done => {\n+    const vm = new Vue({\n+      data: {\n+        test: 2,\n+        opts: [1, 2, 3]\n+      },\n+      template:\n+        '<select v-model=\"test\">' +\n+          '<option v-for=\"o in opts\" :value=\"o\">optio {{ o }}</option>' +\n+        '</select>'\n+    }).$mount()\n+    document.body.appendChild(vm.$el)\n+    expect(vm.$el.value).toBe('2')\n+    expect(vm.$el.childNodes[1].selected).toBe(true)\n+    vm.test = 3\n+    waitForUpdate(function () {\n+      expect(vm.$el.value).toBe('3')\n+      expect(vm.$el.childNodes[2].selected).toBe(true)\n+      updateSelect(vm.$el, 1)\n+      triggerEvent(vm.$el, 'change')\n+      expect(vm.test).toBe(1)\n+      // update v-for opts\n+      vm.opts = [0, 1]\n+    }).then(() => {\n+      expect(vm.$el.childNodes[0].selected).toBe(false)\n+      expect(vm.$el.childNodes[1].selected).toBe(true)\n+    }).then(done)\n+  })\n+\n+  it('multiple', done => {\n+    const vm = new Vue({\n+      data: {\n+        test: ['b']\n+      },\n+      template:\n+        '<select v-model=\"test\" multiple>' +\n+          '<option>a</option>' +\n+          '<option>b</option>' +\n+          '<option>c</option>' +\n+        '</select>'\n+    }).$mount()\n+    var opts = vm.$el.options\n+    expect(opts[0].selected).toBe(false)\n+    expect(opts[1].selected).toBe(true)\n+    expect(opts[2].selected).toBe(false)\n+    vm.test = ['a', 'c']\n+    waitForUpdate(() => {\n+      expect(opts[0].selected).toBe(true)\n+      expect(opts[1].selected).toBe(false)\n+      expect(opts[2].selected).toBe(true)\n+      opts[0].selected = false\n+      opts[1].selected = true\n+      triggerEvent(vm.$el, 'change')\n+      expect(vm.test).toEqual(['b', 'c'])\n+    }).then(done)\n+  })\n+\n+  it('multiple + v-for', done => {\n+    const vm = new Vue({\n+      data: {\n+        test: ['b'],\n+        opts: ['a', 'b', 'c']\n+      },\n+      template:\n+        '<select v-model=\"test\" multiple>' +\n+          '<option v-for=\"o in opts\">{{ o }}</option>' +\n+        '</select>'\n+    }).$mount()\n+    var opts = vm.$el.options\n+    expect(opts[0].selected).toBe(false)\n+    expect(opts[1].selected).toBe(true)\n+    expect(opts[2].selected).toBe(false)\n+    vm.test = ['a', 'c']\n+    waitForUpdate(() => {\n+      expect(opts[0].selected).toBe(true)\n+      expect(opts[1].selected).toBe(false)\n+      expect(opts[2].selected).toBe(true)\n+      opts[0].selected = false\n+      opts[1].selected = true\n+      triggerEvent(vm.$el, 'change')\n+      expect(vm.test).toEqual(['b', 'c'])\n+      // update v-for opts\n+      vm.opts = ['c', 'd']\n+    }).then(() => {\n+      expect(opts[0].selected).toBe(true)\n+      expect(opts[1].selected).toBe(false)\n+      expect(vm.test).toEqual(['c']) // should remove 'd' which no longer has a matching option\n+    }).then(done)\n+  })\n+\n+  it('select persist non-selected on append', function () {\n+    const vm = new Vue({\n+      data: {\n+        test: null\n+      },\n+      template:\n+        '<select v-model=\"test\">' +\n+          '<option>a</option>' +\n+          '<option>b</option>' +\n+          '<option>c</option>' +\n+        '</select>'\n+    }).$mount()\n+    document.body.appendChild(vm.$el)\n+    expect(vm.$el.value).toBe('')\n+    expect(vm.$el.selectedIndex).toBe(-1)\n+    document.body.removeChild(vm.$el)\n+    document.body.appendChild(vm.$el)\n+    expect(vm.$el.value).toBe('')\n+    expect(vm.$el.selectedIndex).toBe(-1)\n+  })\n+\n+  it('should warn inline selected', () => {\n+    const vm = new Vue({\n+      data: {\n+        test: null\n+      },\n+      template:\n+        '<select v-model=\"test\">' +\n+          '<option selected>a</option>' +\n+        '</select>'\n+    }).$mount()\n+    expect(vm.$el.selectedIndex).toBe(-1)\n+    expect('inline selected attributes on <option> will be ignored when using v-model')\n+      .toHaveBeenWarned()\n+  })\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 8,
      "numOfChanges": 34,
      "qualityScore": 12
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "0e67d8235643ecf2b66676d3c908d87946a81f11",
      "url": "https://github.com/vuejs/vue/commit/0e67d8235643ecf2b66676d3c908d87946a81f11",
      "message": "remove transition specs (to be tested in its own suite)",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-26T23:46:33Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/modules/vdom/modules/props.js": [],
        "a/test/unit/modules/vdom/modules/transition.spec.js": [
          {
            "-": "-import Vue from 'vue'\n-import { patch } from 'web/runtime/patch'\n-import VNode from 'core/vdom/vnode'\n-import { isIE9 } from 'web/util/index'\n-\n-if (!isIE9) {\n-  describe('trasition module', () => {\n-    it('should transit with basic transition', () => {\n-      const vm = new Vue()\n-      // create\n-      const vnode1 = new VNode('div', {}, [\n-        new VNode('p', { transition: { definition: 'expand', appear: true }},\n-          undefined, undefined, undefined, undefined, vm\n-        )\n-      ])\n-      let elm = patch(null, vnode1)\n-      expect(elm.childNodes[0].classList.contains('expand-enter')).toBe(true)\n-      // remove\n-      const vnode2 = new VNode('div', {})\n-      elm = patch(vnode1, vnode2)\n-    })\n-  })\n-}\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "2421265f61eab9a50fc1b35f4727e7bd5bb32aa4",
      "url": "https://github.com/vuejs/vue/commit/2421265f61eab9a50fc1b35f4727e7bd5bb32aa4",
      "message": "tests for parent, name and mixins (#2959)\n\n* tests for parent, name and mixins\r\n\r\n* split mixin test case into to, prefixed test suites",
      "author": {
        "name": "Bartek Iwańczuk",
        "email": "biwanczuk@gmail.com",
        "date": "2016-05-26T22:11:56Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/13602871?v=4"
      },
      "diffObj": {
        "a/test/unit/features/options/mixins.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+const mergeOptions = Vue.util.mergeOptions\n+\n+describe('Options mixins', () => {\n+  it('vm should have options from mixin', () => {\n+    const mixin = {\n+      directives: {\n+        c: {}\n+      },\n+      methods: {\n+        a: function () {}\n+      }\n+    }\n+\n+    const vm = new Vue({\n+      mixins: [mixin],\n+      methods: {\n+        b: function () {}\n+      }\n+    }).$mount()\n+\n+    expect(vm.a).toBeDefined()\n+    expect(vm.b).toBeDefined()\n+    expect(vm.$options.directives.c).toBeDefined()\n+  })\n+\n+  it('should call hooks from mixins first', () => {\n+    const a = {}\n+    const b = {}\n+    const c = {}\n+    const f1 = function () {}\n+    const f2 = function () {}\n+    const f3 = function () {}\n+    const mixinA = {\n+      a: 1,\n+      template: 'foo',\n+      directives: {\n+        a: a\n+      },\n+      created: f1\n+    }\n+    const mixinB = {\n+      b: 1,\n+      directives: {\n+        b: b\n+      },\n+      created: f2\n+    }\n+    const result = mergeOptions({}, {\n+      directives: {\n+        c: c\n+      },\n+      template: 'bar',\n+      mixins: [mixinA, mixinB],\n+      created: f3\n+    })\n+    expect(result.a).toBe(1)\n+    expect(result.b).toBe(1)\n+    expect(result.directives.a).toBe(a)\n+    expect(result.directives.b).toBe(b)\n+    expect(result.directives.c).toBe(c)\n+    expect(result.created[0]).toBe(f1)\n+    expect(result.created[1]).toBe(f2)\n+    expect(result.created[2]).toBe(f3)\n+    expect(result.template).toBe('bar')\n+  })\n+\n+  it('mixin methods should not override defined method', () => {\n+    const f1 = function () {}\n+    const f2 = function () {}\n+    const f3 = function () {}\n+    const mixinA = {\n+      methods: {\n+        xyz: f1\n+      }\n+    }\n+    const mixinB = {\n+      methods: {\n+        xyz: f2\n+      }\n+    }\n+    const result = mergeOptions({}, {\n+      mixins: [mixinA, mixinB],\n+      methods: {\n+        xyz: f3\n+      }\n+    })\n+    expect(result.methods.xyz).toBe(f3)\n+  })\n+})\n",
            "-": ""
          }
        ],
        "a/test/unit/features/options/name.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+\n+describe('Options name', () => {\n+  it('should warn when giving instance a name', () => {\n+    new Vue({\n+      name: 'SuperVue'\n+    }).$mount()\n+\n+    /* eslint-disable */\n+    expect(`options \"name\" can only be used as a component definition option, not during instance creation.`)\n+      .toHaveBeenWarned()\n+    /* eslint-enable */\n+  })\n+\n+  it('should contain itself in self components', () => {\n+    const vm = Vue.extend({\n+      name: 'SuperVue'\n+    })\n+\n+    expect(vm.options.components['SuperVue']).toEqual(vm)\n+  })\n+\n+  it('should warn when incorrect name given', () => {\n+    Vue.extend({\n+      name: 'Hyper*Vue'\n+    })\n+\n+    /* eslint-disable */\n+    expect(`Invalid component name: \"Hyper*Vue\". Component names can only contain alphanumeric characaters and the hyphen.`)\n+      .toHaveBeenWarned()\n+    /* eslint-enable */\n+  })\n+\n+  it('when incorrect name given it should not contain itself in self components', () => {\n+    const vm = Vue.extend({\n+      name: 'Hyper*Vue'\n+    })\n+\n+    expect(vm.options.components['Hyper*Vue']).toBeUndefined()\n+  })\n+\n+  it('id should override given name when using Vue.component', () => {\n+    const SuperComponent = Vue.component('super-component', {\n+      name: 'SuperVue'\n+    })\n+\n+    expect(SuperComponent.options.components['SuperVue']).toBeUndefined()\n+    expect(SuperComponent.options.components['super-component']).toBeDefined()\n+    expect(SuperComponent.options.components['super-component']).toEqual(SuperComponent)\n+  })\n+})\n",
            "-": ""
          }
        ],
        "a/test/unit/features/options/parent.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+\n+describe('Options parent', () => {\n+  it('should work', () => {\n+    const parent = new Vue({}).$mount()\n+\n+    const child = new Vue({\n+      parent: parent\n+    }).$mount()\n+\n+    // this option is straight-forward\n+    // it should register 'parent' as a $parent for 'child'\n+    // and push 'child' to $children array on 'parent'\n+    expect(child.$options.parent).toBeDefined()\n+    expect(child.$options.parent).toEqual(parent)\n+    expect(child.$parent).toBeDefined()\n+    expect(child.$parent).toEqual(parent)\n+    expect(parent.$children).toContain(child)\n+\n+    // destroy 'child' and check if it was removed from 'parent' $children\n+    child.$destroy()\n+    expect(parent.$children.length).toEqual(0)\n+    parent.$destroy()\n+  })\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "056cb7f295502407694b8b22c09a6e38fff0e61e",
      "url": "https://github.com/vuejs/vue/commit/056cb7f295502407694b8b22c09a6e38fff0e61e",
      "message": "test for v-model text",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-26T17:54:37Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/codegen.js": [
          {
            "+": "+      needRuntime = !!gen(el, dir, warn)\n",
            "-": "-      needRuntime = !!gen(el, dir)\n"
          }
        ],
        "a/src/platforms/web/compiler/directives/model.js": [
          {
            "+": "+export default function model (\n+  el: ASTElement,\n+  dir: ASTDirective,\n+  warn: Function\n+): ?boolean {\n",
            "-": "-export default function model (el: ASTElement, dir: ASTDirective) {\n"
          },
          {
            "+": "+        return genDefaultModel(el, value, modifiers, warn)\n",
            "-": "-        return genDefaultModel(el, value, modifiers)\n"
          },
          {
            "+": "+function genCheckboxModel (el: ASTElement, value: ?string) {\n",
            "-": "-function genCheckboxModel (el, value) {\n"
          },
          {
            "+": "+function genRadioModel (el: ASTElement, value: ?string) {\n",
            "-": "-function genRadioModel (el, value) {\n"
          },
          {
            "+": "+function genDefaultModel (\n+  el: ASTElement,\n+  value: ?string,\n+  modifiers: ?Object,\n+  warn: Function\n+): ?boolean {\n+  if (process.env.NODE_ENV !== 'production') {\n+    if (el.tag === 'input' && el.attrsMap.value) {\n+      warn(\n+        `<${el.tag} v-model=\"${value}\" value=\"${el.attrsMap.value}\">:\\n` +\n+        'inline value attributes will be ignored when using v-model. ' +\n+        'Declare initial values in the component\\'s data option instead.'\n+      )\n+    }\n+    if (el.tag === 'textarea' && el.children.length) {\n+      warn(\n+        `<textarea v-model=\"${value}\">:\\n` +\n+        'inline content inside <textarea> will be ignored when using v-model. ' +\n+        'Declare initial values in the component\\'s data option instead.'\n+      )\n+    }\n+  }\n+\n",
            "-": "-function genDefaultModel (el, value, modifiers) {\n"
          },
          {
            "+": "+function patchChildOptions (el: ASTElement, fn: (arg: ?string) => string) {\n",
            "-": "-function patchChildOptions (el, fn) {\n"
          },
          {
            "+": "+function genSelect (el: ASTElement, value: ?string) {\n",
            "-": "-function genSelect (el, value) {\n"
          },
          {
            "+": "+function genMultiSelect (el: ASTElement, value: ?string) {\n",
            "-": "-function genMultiSelect (el, value) {\n"
          }
        ],
        "a/src/platforms/web/runtime/directives/model.js": [
          {
            "+": "+import { warn } from 'core/util/index'\n",
            "-": ""
          },
          {
            "+": "+/* istanbul ignore if */\n",
            "-": ""
          },
          {
            "+": "+  bind (el, value, vnode) {\n+    if (process.env.NODE_ENV !== 'production') {\n+      const tag = el.tagName.toLowerCase()\n+      if (!tag.match(/input|select|textarea/)) {\n+        warn(\n+          `v-model is not supported on element type: <${tag}>. ` +\n+          'If you are working with contenteditable, it\\'s recommended to ' +\n+          'wrap a library dedicated for that purpose inside a custom component.',\n+          vnode.context\n+        )\n+      }\n+    }\n",
            "-": "-  bind (el) {\n"
          }
        ],
        "a/test/helpers/trigger-event.js": [
          {
            "+": "+window.triggerEvent = function triggerEvent (target, event, process) {\n+  var e = document.createEvent('HTMLEvents')\n+  e.initEvent(event, true, true)\n+  if (process) process(e)\n+  target.dispatchEvent(e)\n+}\n",
            "-": ""
          }
        ],
        "a/test/unit/.eslintrc": [
          {
            "+": "+    \"waitForUpdate\": true,\n+    \"triggerEvent\": true\n",
            "-": "-    \"waitForUpdate\": true\n"
          }
        ],
        "a/test/unit/features/directives/model-checkbox.js": [],
        "a/test/unit/features/directives/model-radio.js": [],
        "a/test/unit/features/directives/model-select.js": [],
        "a/test/unit/features/directives/model-text.js": [],
        "a/test/unit/features/directives/model-text.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+import { isIE9, isAndroid } from 'web/util/index'\n+\n+describe('Directive v-model text', () => {\n+  it('should update value both ways', done => {\n+    const vm = new Vue({\n+      data: {\n+        test: 'b'\n+      },\n+      template: '<input v-model=\"test\">'\n+    }).$mount()\n+    expect(vm.$el.value).toBe('b')\n+    vm.test = 'a'\n+    waitForUpdate(() => {\n+      expect(vm.$el.value).toBe('a')\n+      vm.$el.value = 'c'\n+      triggerEvent(vm.$el, 'input')\n+      expect(vm.test).toBe('c')\n+    }).then(done)\n+  })\n+\n+  it('.lazy modifier', () => {\n+    const vm = new Vue({\n+      data: {\n+        test: 'b'\n+      },\n+      template: '<input v-model.lazy=\"test\">'\n+    }).$mount()\n+    expect(vm.$el.value).toBe('b')\n+    expect(vm.test).toBe('b')\n+    vm.$el.value = 'c'\n+    triggerEvent(vm.$el, 'input')\n+    expect(vm.test).toBe('b')\n+    triggerEvent(vm.$el, 'change')\n+    expect(vm.test).toBe('c')\n+  })\n+\n+  it('.number modifier', () => {\n+    const vm = new Vue({\n+      data: {\n+        test: 1\n+      },\n+      template: '<input v-model.number=\"test\">'\n+    }).$mount()\n+    expect(vm.test).toBe(1)\n+    vm.$el.value = '2'\n+    triggerEvent(vm.$el, 'input')\n+    expect(vm.test).toBe(2)\n+  })\n+\n+  it('.trim modifier', () => {\n+    const vm = new Vue({\n+      data: {\n+        test: 'hi'\n+      },\n+      template: '<input v-model.trim=\"test\">'\n+    }).$mount()\n+    expect(vm.test).toBe('hi')\n+    vm.$el.value = ' what '\n+    triggerEvent(vm.$el, 'input')\n+    expect(vm.test).toBe('what')\n+  })\n+\n+  if (isIE9) {\n+    it('cut and delete', done => {\n+      const vm = new Vue({\n+        data: {\n+          test: 'foo'\n+        },\n+        template: '<input v-model=\"test\">'\n+      }).$mount()\n+      const input = vm.$el\n+      input.value = 'bar'\n+      triggerEvent(input, 'cut')\n+      waitForUpdate(() => {\n+        expect(vm.test).toBe('bar')\n+        input.value = 'a'\n+        triggerEvent(input, 'keyup', (e) => { e.keyCode = 8 })\n+        expect(vm.test).toBe('a')\n+      }).then(done)\n+    })\n+  }\n+\n+  if (!isAndroid) {\n+    it('compositionevents', function (done) {\n+      const vm = new Vue({\n+        data: {\n+          test: 'foo'\n+        },\n+        template: '<input v-model=\"test\">'\n+      }).$mount()\n+      const input = vm.$el\n+      triggerEvent(input, 'compositionstart')\n+      input.value = 'baz'\n+      // input before composition unlock should not call set\n+      triggerEvent(input, 'input')\n+      expect(vm.test).toBe('foo')\n+      // after composition unlock it should work\n+      triggerEvent(input, 'compositionend')\n+      triggerEvent(input, 'input')\n+      expect(vm.test).toBe('baz')\n+      done()\n+    })\n+  }\n+\n+  it('warn inline value attribute', () => {\n+    const vm = new Vue({\n+      data: {\n+        test: 'foo'\n+      },\n+      template: '<input v-model=\"test\" value=\"bar\">'\n+    }).$mount()\n+    expect(vm.test).toBe('foo')\n+    expect(vm.$el.value).toBe('foo')\n+    expect('inline value attributes will be ignored').toHaveBeenWarned()\n+  })\n+\n+  it('warn textarea inline content', function () {\n+    const vm = new Vue({\n+      data: {\n+        test: 'foo'\n+      },\n+      template: '<textarea v-model=\"test\">bar</textarea>'\n+    }).$mount()\n+    expect(vm.test).toBe('foo')\n+    expect(vm.$el.value).toBe('foo')\n+    expect('inline content inside <textarea> will be ignored').toHaveBeenWarned()\n+  })\n+\n+  it('warn invalid tag', () => {\n+    new Vue({\n+      template: '<div v-model=\"test\"></div>'\n+    }).$mount()\n+    expect('v-model is not supported on element type: <div>').toHaveBeenWarned()\n+  })\n+})\n",
            "-": ""
          }
        ],
        "a/test/unit/index.js": [
          {
            "+": "+import '../helpers/trigger-event.js'\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 11,
      "numOfChanges": 16,
      "qualityScore": 9
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "34b37a62ec07bc65c995a0e80b9baaabf76358b4",
      "url": "https://github.com/vuejs/vue/commit/34b37a62ec07bc65c995a0e80b9baaabf76358b4",
      "message": "test for v-cloak",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-25T22:28:05Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/directives/cloak.spec.js": [
          {
            "+": "+import Vue from 'vue'\n+\n+describe('Directive v-cloak', () => {\n+  it('should be removed after compile', () => {\n+    const el = document.createElement('div')\n+    el.setAttribute('v-cloak', '')\n+    const vm = new Vue({ el })\n+    expect(vm.$el.hasAttribute('v-cloak')).toBe(false)\n+  })\n+})\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "5594a7cd3d2da61f06f89e888c6d6c810bbf4684",
      "url": "https://github.com/vuejs/vue/commit/5594a7cd3d2da61f06f89e888c6d6c810bbf4684",
      "message": "tests for v-bind object",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-25T00:51:01Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/ssr/ssr-string.spec.js": [
          {
            "+": "+  it('v-bind object', done => {\n+    renderVmWithOptions({\n+      data: {\n+        test: { id: 'a', class: 'b', value: 'c' }\n+      },\n+      template: '<input v-bind=\"test\">'\n+    }, result => {\n+      expect(result).toContain('<input id=\"a\" class=\"b\" server-rendered=\"true\" value=\"c\">')\n+      done()\n+    })\n+  })\n+\n",
            "-": ""
          }
        ],
        "a/test/unit/features/directives/bind.spec.js": [
          {
            "+": "+\n+  it('bind object', done => {\n+    const vm = new Vue({\n+      template: '<input v-bind=\"test\">',\n+      data: {\n+        test: {\n+          id: 'test',\n+          class: 'ok',\n+          value: 'hello'\n+        }\n+      }\n+    }).$mount()\n+    expect(vm.$el.getAttribute('id')).toBe('test')\n+    expect(vm.$el.getAttribute('class')).toBe('ok')\n+    expect(vm.$el.value).toBe('hello')\n+    vm.test.id = 'hi'\n+    vm.test.value = 'bye'\n+    waitForUpdate(() => {\n+      expect(vm.$el.getAttribute('id')).toBe('hi')\n+      expect(vm.$el.getAttribute('class')).toBe('ok')\n+      expect(vm.$el.value).toBe('bye')\n+    }).then(done)\n+  })\n+\n+  it('bind array', done => {\n+    const vm = new Vue({\n+      template: '<input v-bind=\"test\">',\n+      data: {\n+        test: [\n+          { id: 'test', class: 'ok' },\n+          { value: 'hello' }\n+        ]\n+      }\n+    }).$mount()\n+    expect(vm.$el.getAttribute('id')).toBe('test')\n+    expect(vm.$el.getAttribute('class')).toBe('ok')\n+    expect(vm.$el.value).toBe('hello')\n+    vm.test[0].id = 'hi'\n+    vm.test[1].value = 'bye'\n+    waitForUpdate(() => {\n+      expect(vm.$el.getAttribute('id')).toBe('hi')\n+      expect(vm.$el.getAttribute('class')).toBe('ok')\n+      expect(vm.$el.value).toBe('bye')\n+    }).then(done)\n+  })\n+\n+  it('warn expect object', () => {\n+    const vm = new Vue({\n+      template: '<input v-bind=\"test\">',\n+      data: {\n+        test: 1\n+      }\n+    }).$mount()\n+    expect('v-bind without argument expects an Object or Array value').toHaveBeenWarned()\n+  })\n",
            "-": ""
          }
        ],
        "a/test/unit/modules/compiler/codegen.spec.js": [
          {
            "+": "+  it('generate v-bind directive', () => {\n+    assertCodegen(\n+      '<p v-bind=\"test\"></p>',\n+      `with(this){return _h(_e('p',{hook:{\"construct\":function(n1,n2){_b(n1,test)}}}))}`\n+    )\n+  })\n+\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "df73cbf0a8e304d71e7ddf539a83a2be7a6cb7c8",
      "url": "https://github.com/vuejs/vue/commit/df73cbf0a8e304d71e7ddf539a83a2be7a6cb7c8",
      "message": "remove v-bind:style important test case due to phantomjs inconsistency",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-23T23:02:46Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/directives/style.spec.js": [
          {
            "-": "-  it('should not work with inline !important', done => {\n-    vm.styles = { color: 'red !important' }\n-    waitForUpdate(() => {\n-      expect(vm.$el.style.getPropertyPriority('color')).toBe('')\n-    }).then(done)\n-  })\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "ae7becf7418e8f8b0d26883dbb7e389ebd07be8b",
      "url": "https://github.com/vuejs/vue/commit/ae7becf7418e8f8b0d26883dbb7e389ebd07be8b",
      "message": "remove test.js",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-17T16:57:32Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/test.js": []
      },
      "numOfFiles": 1,
      "numOfChanges": 0,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "6dc2662b40dbdf40e28b0e0dc0aac556f0974268",
      "url": "https://github.com/vuejs/vue/commit/6dc2662b40dbdf40e28b0e0dc0aac556f0974268",
      "message": "remove branch restrictions so PRs can run",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-13T19:05:04Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/circle.yml": [
          {
            "-": "-general:\n-  branches:\n-    only:\n-      - next\n-\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "efbb3985a9d948c31cb5f23dfa87a7c897522c1d",
      "url": "https://github.com/vuejs/vue/commit/efbb3985a9d948c31cb5f23dfa87a7c897522c1d",
      "message": "remove tern, update flowconfig",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-12T03:00:00Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/.flowconfig": [
          {
            "+": "+.*/test/.*\n+.*/build/.*\n+.*/examples/.*\n+.*/benchmarks/.*\n",
            "-": ""
          }
        ],
        "a/.tern-project": [
          {
            "-": "-{\n-  \"ecmaVersion\": 6,\n-  \"libs\": [\n-    \"browser\"\n-  ]\n-}\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 2,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "4ff27c9ab7a4cf61ad7851376068ba9660d39616",
      "url": "https://github.com/vuejs/vue/commit/4ff27c9ab7a4cf61ad7851376068ba9660d39616",
      "message": "remove v-else support for v-show",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-05-06T19:51:38Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/codegen.js": [
          {
            "+": "+  if (el.attrsMap['v-show']) {\n",
            "-": "-  if (el.attrsMap['v-show'] || el.show) {\n"
          }
        ],
        "a/src/compiler/parser/index.js": [
          {
            "+": "+  if (prev && prev.if) {\n+    prev.elseBlock = el\n",
            "-": "-  if (prev && (prev.if || prev.attrsMap['v-show'])) {\n-    if (prev.if) {\n-      // v-if\n-      prev.elseBlock = el\n-    } else {\n-      // v-show: simply add a v-show with reversed value\n-      addDirective(el, 'show', `!(${prev.attrsMap['v-show']})`)\n-      // also copy its transition\n-      el.transition = prev.transition\n-      // als set show to true\n-      el.show = true\n-      parent.children.push(el)\n-    }\n"
          },
          {
            "+": "+      `v-else used on element <${el.tag}> without corresponding v-if.`\n",
            "-": "-      `v-else used on element <${el.tag}> without corresponding v-if/v-show.`\n"
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 3,
      "qualityScore": 0
    },
    {
      "formatStyle": "simple-text-style",
      "type": "test",
      "sha": "2679653362b08d3115ccfbba6cf92ac313e69171",
      "url": "https://github.com/vuejs/vue/commit/2679653362b08d3115ccfbba6cf92ac313e69171",
      "message": "test for Vue.compile",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-29T22:42:20Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/unit/features/global-api/global-api.spec.js": [
          {
            "+": "+\n+  it('compile', () => {\n+    const res = Vue.compile('<div><span>{{ msg }}</span></div>')\n+    const vm = new Vue({\n+      data: {\n+        msg: 'hello'\n+      },\n+      render: res.render,\n+      staticRenderFns: res.staticRenderFns\n+    })\n+    vm.$mount()\n+    expect(vm.$el.innerHTML).toContain('<span>hello</span>')\n+  })\n",
            "-": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "docs",
      "sha": "2792f3c95e0ce5e1166e0a677cedb55e37de9535",
      "url": "https://github.com/vuejs/vue/commit/2792f3c95e0ce5e1166e0a677cedb55e37de9535",
      "message": "readme, version, add dist files",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-26T17:29:27Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/README.md": [
          {
            "+": "+# vue-next [![CircleCI](https://img.shields.io/circleci/project/vuejs/vue/next.svg?maxAge=2592000)](https://circleci.com/gh/vuejs/vue/tree/next)\n+\n+> pre-alpha state, use at your own risk.\n+\n+### Build\n+\n+``` bash\n+npm install\n+npm run build\n+```\n",
            "-": ""
          }
        ],
        "a/dist/compiler.common.js": [
          {
            "+": "+'use strict';\n+\n+var entities = require('entities');\n+\n+/**\n+ * Convert a value to a string that is actually rendered.\n+ *\n+ * @param {*} val\n+ * @return {String}\n+ */\n+\n+function renderString(val) {\n+  return val == null ? '' : typeof val === 'object' ? JSON.stringify(val, null, 2) : String(val);\n+}\n+\n+/**\n+ * Make a map and return a function for checking if a key\n+ * is in that map.\n+ *\n+ * @param {String} str\n+ * @param {Boolean} expectsLowerCase\n+ * @return {Function}\n+ */\n+\n+function makeMap(str, expectsLowerCase) {\n+  var map = Object.create(null);\n+  var list = str.split(',');\n+  for (var i = 0; i < list.length; i++) {\n+    map[list[i]] = true;\n+  }\n+  return expectsLowerCase ? function (val) {\n+    return map[val.toLowerCase()];\n+  } : function (val) {\n+    return map[val];\n+  };\n+}\n+\n+/**\n+ * Check if a tag is a built-in tag.\n+ */\n+\n+var isBuiltInTag = makeMap('slot,component,render,transition', true);\n+\n+/**\n+ * Remove an item from an array\n+ *\n+ * @param {Array} arr\n+ * @param {*} item\n+ */\n+\n+function remove(arr, item) {\n+  if (arr.length) {\n+    var index = arr.indexOf(item);\n+    if (index > -1) {\n+      return arr.splice(index, 1);\n+    }\n+  }\n+}\n+\n+/**\n+ * Check whether the object has the property.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @return {Boolean}\n+ */\n+var hasOwnProperty = Object.prototype.hasOwnProperty;\n+function hasOwn(obj, key) {\n+  return hasOwnProperty.call(obj, key);\n+}\n+\n+/**\n+ * Check if value is primitive\n+ *\n+ * @param {*} value\n+ * @return {Boolean}\n+ */\n+\n+function isPrimitive(value) {\n+  return typeof value === 'string' || typeof value === 'number';\n+}\n+\n+/**\n+ * Create a cached version of a pure function.\n+ *\n+ * @param {Function} fn\n+ * @return {Function}\n+ */\n+\n+function cached(fn) {\n+  var cache = Object.create(null);\n+  return function cachedFn(str) {\n+    var hit = cache[str];\n+    return hit || (cache[str] = fn(str));\n+  };\n+}\n+\n+/**\n+ * Camelize a hyphen-delmited string.\n+ *\n+ * @param {String} str\n+ * @return {String}\n+ */\n+\n+var camelizeRE = /-(\\w)/g;\n+var camelize = cached(function (str) {\n+  return str.replace(camelizeRE, toUpper);\n+});\n+\n+function toUpper(_, c) {\n+  return c ? c.toUpperCase() : '';\n+}\n+\n+/**\n+ * Hyphenate a camelCase string.\n+ *\n+ * @param {String} str\n+ * @return {String}\n+ */\n+\n+var hyphenateRE = /([a-z\\d])([A-Z])/g;\n+var hyphenate = cached(function (str) {\n+  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n+});\n+\n+/**\n+ * Simple bind, faster than native\n+ *\n+ * @param {Function} fn\n+ * @param {Object} ctx\n+ * @return {Function}\n+ */\n+\n+function bind(fn, ctx) {\n+  return function (a) {\n+    var l = arguments.length;\n+    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n+  };\n+}\n+\n+/**\n+ * Convert an Array-like object to a real Array.\n+ *\n+ * @param {Array-like} list\n+ * @param {Number} [start] - start index\n+ * @return {Array}\n+ */\n+\n+function toArray(list, start) {\n+  start = start || 0;\n+  var i = list.length - start;\n+  var ret = new Array(i);\n+  while (i--) {\n+    ret[i] = list[i + start];\n+  }\n+  return ret;\n+}\n+\n+/**\n+ * Mix properties into target object.\n+ *\n+ * @param {Object} to\n+ * @param {Object} from\n+ */\n+\n+function extend(to, from) {\n+  for (var key in from) {\n+    to[key] = from[key];\n+  }\n+  return to;\n+}\n+\n+/**\n+ * Quick object check - this is primarily used to tell\n+ * Objects from primitive values when we know the value\n+ * is a JSON-compliant type.\n+ *\n+ * @param {*} obj\n+ * @return {Boolean}\n+ */\n+\n+function isObject(obj) {\n+  return obj !== null && typeof obj === 'object';\n+}\n+\n+/**\n+ * Strict object type check. Only returns true\n+ * for plain JavaScript objects.\n+ *\n+ * @param {*} obj\n+ * @return {Boolean}\n+ */\n+\n+var toString = Object.prototype.toString;\n+var OBJECT_STRING = '[object Object]';\n+function isPlainObject(obj) {\n+  return toString.call(obj) === OBJECT_STRING;\n+}\n+\n+/**\n+ * Array type check.\n+ *\n+ * @param {*} obj\n+ * @return {Boolean}\n+ */\n+\n+var isArray = Array.isArray;\n+\n+/**\n+ * Check if a string starts with $ or _\n+ *\n+ * @param {String} str\n+ * @return {Boolean}\n+ */\n+\n+function isReserved(str) {\n+  var c = (str + '').charCodeAt(0);\n+  return c === 0x24 || c === 0x5F;\n+}\n+\n+/**\n+ * Define a property.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @param {*} val\n+ * @param {Boolean} [enumerable]\n+ */\n+\n+function def(obj, key, val, enumerable) {\n+  Object.defineProperty(obj, key, {\n+    value: val,\n+    enumerable: !!enumerable,\n+    writable: true,\n+    configurable: true\n+  });\n+}\n+\n+/**\n+ * Parse simple path.\n+ */\n+\n+var bailRE = /[^\\w\\.]/;\n+function parsePath(path) {\n+  if (bailRE.test(path)) {\n+    return;\n+  } else {\n+    path = path.split('.');\n+    return function (obj) {\n+      for (var i = 0; i < path.length; i++) {\n+        if (!obj) return;\n+        obj = obj[path[i]];\n+      }\n+      return obj;\n+    };\n+  }\n+}\n+\n+/* global MutationObserver */\n+\n+// can we use __proto__?\n+var hasProto = '__proto__' in {};\n+\n+// Browser environment sniffing\n+var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n+\n+// UA sniffing for working around browser-specific quirks\n+var UA$1 = inBrowser && window.navigator.userAgent.toLowerCase();\n+var isIos = UA$1 && /(iphone|ipad|ipod|ios)/i.test(UA$1);\n+var isWechat = UA$1 && UA$1.indexOf('micromessenger') > 0;\n+\n+/**\n+ * Defer a task to execute it asynchronously. Ideally this\n+ * should be executed as a microtask, so we leverage\n+ * MutationObserver if it's available, and fallback to\n+ * setTimeout(0).\n+ *\n+ * @param {Function} cb\n+ * @param {Object} ctx\n+ */\n+\n+var nextTick = function () {\n+  var callbacks = [];\n+  var pending = false;\n+  var timerFunc;\n+  function nextTickHandler() {\n+    pending = false;\n+    var copies = callbacks.slice(0);\n+    callbacks = [];\n+    for (var i = 0; i < copies.length; i++) {\n+      copies[i]();\n+    }\n+  }\n+\n+  /* istanbul ignore if */\n+  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n+    var counter = 1;\n+    var observer = new MutationObserver(nextTickHandler);\n+    var textNode = document.createTextNode(counter);\n+    observer.observe(textNode, {\n+      characterData: true\n+    });\n+    timerFunc = function timerFunc() {\n+      counter = (counter + 1) % 2;\n+      textNode.data = counter;\n+    };\n+  } else {\n+    // webpack attempts to inject a shim for setImmediate\n+    // if it is used as a global, so we have to work around that to\n+    // avoid bundling unnecessary code.\n+    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n+    timerFunc = context.setImmediate || setTimeout;\n+  }\n+  return function (cb, ctx) {\n+    var func = ctx ? function () {\n+      cb.call(ctx);\n+    } : cb;\n+    callbacks.push(func);\n+    if (pending) return;\n+    pending = true;\n+    timerFunc(nextTickHandler, 0);\n+  };\n+}();\n+\n+var Set$1 = void 0;\n+/* istanbul ignore if */\n+if (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n+  // use native Set when available.\n+  Set$1 = Set;\n+} else {\n+  // a non-standard Set polyfill that only works with primitive keys.\n+  Set$1 = function _Set() {\n+    this.set = Object.create(null);\n+  };\n+  Set$1.prototype.has = function (key) {\n+    return this.set[key] !== undefined;\n+  };\n+  Set$1.prototype.add = function (key) {\n+    this.set[key] = 1;\n+  };\n+  Set$1.prototype.clear = function () {\n+    this.set = Object.create(null);\n+  };\n+}\n+\n+var hasProxy = void 0;\n+var proxyHandlers = void 0;\n+var initProxy = void 0;\n+if (process.env.NODE_ENV !== 'production') {\n+  (function () {\n+    var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl');\n+\n+    hasProxy = typeof Proxy !== 'undefined' && Proxy.toString().match(/native code/);\n+\n+    proxyHandlers = {\n+      has: function has(target, key) {\n+        var has = key in target;\n+        var isAllowedGlobal = allowedGlobals(key);\n+        if (!has && !isAllowedGlobal) {\n+          warn$1('Trying to access non-existent property \"' + key + '\" while rendering.', target);\n+        }\n+        return !isAllowedGlobal;\n+      }\n+    };\n+\n+    initProxy = function initProxy(vm) {\n+      if (hasProxy) {\n+        vm._renderProxy = new Proxy(vm, proxyHandlers);\n+      } else {\n+        vm._renderProxy = vm;\n+      }\n+    };\n+  })();\n+}\n+\n+var uid$2 = 0;\n+\n+/**\n+ * A dep is an observable that can have multiple\n+ * directives subscribing to it.\n+ *\n+ * @constructor\n+ */\n+\n+function Dep() {\n+  this.id = uid$2++;\n+  this.subs = [];\n+}\n+\n+// the current target watcher being evaluated.\n+// this is globally unique because there could be only one\n+// watcher being evaluated at any time.\n+Dep.target = null;\n+\n+/**\n+ * Add a directive subscriber.\n+ *\n+ * @param {Directive} sub\n+ */\n+\n+Dep.prototype.addSub = function (sub) {\n+  this.subs.push(sub);\n+};\n+\n+/**\n+ * Remove a directive subscriber.\n+ *\n+ * @param {Directive} sub\n+ */\n+\n+Dep.prototype.removeSub = function (sub) {\n+  remove(this.subs, sub);\n+};\n+\n+/**\n+ * Add self as a dependency to the target watcher.\n+ */\n+\n+Dep.prototype.depend = function () {\n+  Dep.target.addDep(this);\n+};\n+\n+/**\n+ * Notify all subscribers of a new value.\n+ */\n+\n+Dep.prototype.notify = function () {\n+  // stablize the subscriber list first\n+  var subs = this.subs.slice();\n+  for (var i = 0, l = subs.length; i < l; i++) {\n+    subs[i].update();\n+  }\n+};\n+\n+var config = {\n+\n+  /**\n+   * Preserve whitespaces between elements.\n+   */\n+\n+  preserveWhitespace: true,\n+\n+  /**\n+   * Whether to suppress warnings.\n+   *\n+   * @type {Boolean}\n+   */\n+\n+  silent: false,\n+\n+  /**\n+   * Check if a tag is reserved so that it cannot be registered as a\n+   * component. This is platform-dependent and may be overwritten.\n+   */\n+\n+  isReservedTag: function isReservedTag() {\n+    return false;\n+  },\n+\n+  /**\n+   * Check if a tag is an unknown element.\n+   * Platform-dependent.\n+   */\n+\n+  isUnknownElement: function isUnknownElement() {\n+    return false;\n+  },\n+\n+  /**\n+   * List of asset types that a component can own.\n+   *\n+   * @type {Array}\n+   */\n+\n+  _assetTypes: ['component', 'directive', 'transition'],\n+\n+  /**\n+   * List of lifecycle hooks.\n+   *\n+   * @type {Array}\n+   */\n+\n+  _lifecycleHooks: ['init', 'created', 'beforeMount', 'mounted', 'ready', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed'],\n+\n+  /**\n+   * Max circular updates allowed in a batcher flush cycle.\n+   */\n+\n+  _maxUpdateCount: 100\n+};\n+\n+// we have two separate queues: one for directive updates\n+// and one for user watcher registered via $watch().\n+// we want to guarantee directive updates to be called\n+// before user watchers so that when user watchers are\n+// triggered, the DOM would have already been in updated\n+// state.\n+\n+var queueIndex;\n+var queue = [];\n+var userQueue = [];\n+var has = {};\n+var circular = {};\n+var waiting = false;\n+var internalQueueDepleted = false;\n+\n+/**\n+ * Reset the batcher's state.\n+ */\n+\n+function resetBatcherState() {\n+  queue = [];\n+  userQueue = [];\n+  has = {};\n+  circular = {};\n+  waiting = internalQueueDepleted = false;\n+}\n+\n+/**\n+ * Flush both queues and run the watchers.\n+ */\n+\n+function flushBatcherQueue() {\n+  queue.sort(queueSorter);\n+  runBatcherQueue(queue);\n+  internalQueueDepleted = true;\n+  runBatcherQueue(userQueue);\n+  resetBatcherState();\n+}\n+\n+/**\n+ * Sort queue before flush.\n+ * This ensures components are updated from parent to child\n+ * so there will be no duplicate updates, e.g. a child was\n+ * pushed into the queue first and then its parent's props\n+ * changed.\n+ */\n+\n+function queueSorter(a, b) {\n+  return a.id - b.id;\n+}\n+\n+/**\n+ * Run the watchers in a single queue.\n+ *\n+ * @param {Array} queue\n+ */\n+\n+function runBatcherQueue(queue) {\n+  // do not cache length because more watchers might be pushed\n+  // as we run existing watchers\n+  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n+    var watcher = queue[queueIndex];\n+    var id = watcher.id;\n+    has[id] = null;\n+    watcher.run();\n+    // in dev build, check and stop circular updates.\n+    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n+      circular[id] = (circular[id] || 0) + 1;\n+      if (circular[id] > config._maxUpdateCount) {\n+        warn$1('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n+        break;\n+      }\n+    }\n+  }\n+}\n+\n+/**\n+ * Push a watcher into the watcher queue.\n+ * Jobs with duplicate IDs will be skipped unless it's\n+ * pushed when the queue is being flushed.\n+ *\n+ * @param {Watcher} watcher\n+ *   properties:\n+ *   - {Number} id\n+ *   - {Function} run\n+ */\n+\n+function pushWatcher(watcher) {\n+  var id = watcher.id;\n+  if (has[id] == null) {\n+    if (internalQueueDepleted && !watcher.user) {\n+      // an internal watcher triggered by a user watcher...\n+      // let's run it immediately after current user watcher is done.\n+      userQueue.splice(queueIndex + 1, 0, watcher);\n+    } else {\n+      // push watcher into appropriate queue\n+      var q = watcher.user ? userQueue : queue;\n+      has[id] = q.length;\n+      q.push(watcher);\n+      // queue the flush\n+      if (!waiting) {\n+        waiting = true;\n+        nextTick(flushBatcherQueue);\n+      }\n+    }\n+  }\n+}\n+\n+var uid$1 = 0;\n+var prevTarget = void 0;\n+\n+/**\n+ * A watcher parses an expression, collects dependencies,\n+ * and fires callback when the expression value changes.\n+ * This is used for both the $watch() api and directives.\n+ *\n+ * @param {Vue} vm\n+ * @param {String|Function} expOrFn\n+ * @param {Function} cb\n+ * @param {Object} options\n+ *                 - {Array} filters\n+ *                 - {Boolean} twoWay\n+ *                 - {Boolean} deep\n+ *                 - {Boolean} user\n+ *                 - {Boolean} sync\n+ *                 - {Boolean} lazy\n+ *                 - {Function} [preProcess]\n+ *                 - {Function} [postProcess]\n+ * @constructor\n+ */\n+\n+function Watcher(vm, expOrFn, cb, options) {\n+  // mix in options\n+  if (options) {\n+    extend(this, options);\n+  }\n+  var isFn = typeof expOrFn === 'function';\n+  this.vm = vm;\n+  vm._watchers.push(this);\n+  this.expression = expOrFn;\n+  this.cb = cb;\n+  this.id = ++uid$1; // uid for batching\n+  this.active = true;\n+  this.dirty = this.lazy; // for lazy watchers\n+  this.deps = [];\n+  this.newDeps = [];\n+  this.depIds = new Set$1();\n+  this.newDepIds = new Set$1();\n+  // parse expression for getter\n+  if (isFn) {\n+    this.getter = expOrFn;\n+  } else {\n+    this.getter = parsePath(expOrFn);\n+    if (!this.getter) {\n+      this.getter = function () {};\n+      process.env.NODE_ENV !== 'production' && warn$1('Failed watching path: ' + expOrFn + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);\n+    }\n+  }\n+  this.value = this.lazy ? undefined : this.get();\n+  // state for avoiding false triggers for deep and Array\n+  // watchers during vm._digest()\n+  this.queued = this.shallow = false;\n+}\n+\n+/**\n+ * Evaluate the getter, and re-collect dependencies.\n+ */\n+\n+Watcher.prototype.get = function () {\n+  this.beforeGet();\n+  var value = this.getter.call(this.vm, this.vm);\n+  // \"touch\" every property so they are all tracked as\n+  // dependencies for deep watching\n+  if (this.deep) {\n+    traverse(value);\n+  }\n+  this.afterGet();\n+  return value;\n+};\n+\n+/**\n+ * Prepare for dependency collection.\n+ */\n+\n+Watcher.prototype.beforeGet = function () {\n+  prevTarget = Dep.target;\n+  Dep.target = this;\n+};\n+\n+/**\n+ * Add a dependency to this directive.\n+ *\n+ * @param {Dep} dep\n+ */\n+\n+Watcher.prototype.addDep = function (dep) {\n+  var id = dep.id;\n+  if (!this.newDepIds.has(id)) {\n+    this.newDepIds.add(id);\n+    this.newDeps.push(dep);\n+    if (!this.depIds.has(id)) {\n+      dep.addSub(this);\n+    }\n+  }\n+};\n+\n+/**\n+ * Clean up for dependency collection.\n+ */\n+\n+Watcher.prototype.afterGet = function () {\n+  Dep.target = prevTarget;\n+  var i = this.deps.length;\n+  while (i--) {\n+    var dep = this.deps[i];\n+    if (!this.newDepIds.has(dep.id)) {\n+      dep.removeSub(this);\n+    }\n+  }\n+  var tmp = this.depIds;\n+  this.depIds = this.newDepIds;\n+  this.newDepIds = tmp;\n+  this.newDepIds.clear();\n+  tmp = this.deps;\n+  this.deps = this.newDeps;\n+  this.newDeps = tmp;\n+  this.newDeps.length = 0;\n+};\n+\n+/**\n+ * Subscriber interface.\n+ * Will be called when a dependency changes.\n+ *\n+ * @param {Boolean} shallow\n+ */\n+\n+Watcher.prototype.update = function (shallow) {\n+  if (this.lazy) {\n+    this.dirty = true;\n+  } else if (this.sync) {\n+    this.run();\n+  } else {\n+    // if queued, only overwrite shallow with non-shallow,\n+    // but not the other way around.\n+    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n+    this.queued = true;\n+    pushWatcher(this);\n+  }\n+};\n+\n+/**\n+ * Batcher job interface.\n+ * Will be called by the batcher.\n+ */\n+\n+Watcher.prototype.run = function () {\n+  if (this.active) {\n+    var value = this.get();\n+    if (value !== this.value ||\n+    // Deep watchers and watchers on Object/Arrays should fire even\n+    // when the value is the same, because the value may\n+    // have mutated; but only do so if this is a\n+    // non-shallow update (caused by a vm digest).\n+    (isObject(value) || this.deep) && !this.shallow) {\n+      // set new value\n+      var oldValue = this.value;\n+      this.value = value;\n+      this.cb.call(this.vm, value, oldValue);\n+    }\n+    this.queued = this.shallow = false;\n+  }\n+};\n+\n+/**\n+ * Evaluate the value of the watcher.\n+ * This only gets called for lazy watchers.\n+ */\n+\n+Watcher.prototype.evaluate = function () {\n+  // avoid overwriting another watcher that is being\n+  // collected.\n+  var current = Dep.target;\n+  this.value = this.get();\n+  this.dirty = false;\n+  Dep.target = current;\n+};\n+\n+/**\n+ * Depend on all deps collected by this watcher.\n+ */\n+\n+Watcher.prototype.depend = function () {\n+  var i = this.deps.length;\n+  while (i--) {\n+    this.deps[i].depend();\n+  }\n+};\n+\n+/**\n+ * Remove self from all dependencies' subcriber list.\n+ */\n+\n+Watcher.prototype.teardown = function () {\n+  if (this.active) {\n+    // remove self from vm's watcher list\n+    // this is a somewhat expensive operation so we skip it\n+    // if the vm is being destroyed or is performing a v-for\n+    // re-render (the watcher list is then filtered by v-for).\n+    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n+      remove(this.vm._watchers, this);\n+    }\n+    var i = this.deps.length;\n+    while (i--) {\n+      this.deps[i].removeSub(this);\n+    }\n+    this.active = false;\n+    this.vm = this.cb = this.value = null;\n+  }\n+};\n+\n+/**\n+ * Recrusively traverse an object to evoke all converted\n+ * getters, so that every nested property inside the object\n+ * is collected as a \"deep\" dependency.\n+ *\n+ * @param {*} val\n+ * @param {Set} seen\n+ */\n+\n+var seenObjects = new Set$1();\n+function traverse(val, seen) {\n+  var i = void 0,\n+      keys = void 0,\n+      isA = void 0,\n+      isO = void 0;\n+  if (!seen) {\n+    seen = seenObjects;\n+    seen.clear();\n+  }\n+  isA = isArray(val);\n+  isO = isObject(val);\n+  if (isA || isO) {\n+    if (val.__ob__) {\n+      var depId = val.__ob__.dep.id;\n+      if (seen.has(depId)) {\n+        return;\n+      } else {\n+        seen.add(depId);\n+      }\n+    }\n+    if (isA) {\n+      i = val.length;\n+      while (i--) {\n+        traverse(val[i], seen);\n+      }\n+    } else if (isO) {\n+      keys = Object.keys(val);\n+      i = keys.length;\n+      while (i--) {\n+        traverse(val[keys[i]], seen);\n+      }\n+    }\n+  }\n+}\n+\n+var arrayProto = Array.prototype;\n+var arrayMethods = Object.create(arrayProto)\n+\n+/**\n+ * Intercept mutating methods and emit events\n+ */\n+\n+;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n+  // cache original method\n+  var original = arrayProto[method];\n+  def(arrayMethods, method, function mutator() {\n+    // avoid leaking arguments:\n+    // http://jsperf.com/closure-with-arguments\n+    var i = arguments.length;\n+    var args = new Array(i);\n+    while (i--) {\n+      args[i] = arguments[i];\n+    }\n+    var result = original.apply(this, args);\n+    var ob = this.__ob__;\n+    var inserted;\n+    switch (method) {\n+      case 'push':\n+        inserted = args;\n+        break;\n+      case 'unshift':\n+        inserted = args;\n+        break;\n+      case 'splice':\n+        inserted = args.slice(2);\n+        break;\n+    }\n+    if (inserted) ob.observeArray(inserted);\n+    // notify change\n+    ob.dep.notify();\n+    return result;\n+  });\n+});\n+\n+var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n+\n+/**\n+ * By default, when a reactive property is set, the new value is\n+ * also converted to become reactive. However when passing down props,\n+ * we don't want to force conversion because the value may be a nested value\n+ * under a frozen data structure. Converting it would defeat the optimization.\n+ */\n+\n+var observerState = {\n+  shouldConvert: true\n+};\n+\n+/**\n+ * Observer class that are attached to each observed\n+ * object. Once attached, the observer converts target\n+ * object's property keys into getter/setters that\n+ * collect dependencies and dispatches updates.\n+ *\n+ * @param {Array|Object} value\n+ * @constructor\n+ */\n+\n+function Observer(value) {\n+  this.value = value;\n+  this.dep = new Dep();\n+  def(value, '__ob__', this);\n+  if (isArray(value)) {\n+    var augment = hasProto ? protoAugment : copyAugment;\n+    augment(value, arrayMethods, arrayKeys);\n+    this.observeArray(value);\n+  } else {\n+    this.walk(value);\n+  }\n+}\n+\n+// Instance methods\n+\n+/**\n+ * Walk through each property and convert them into\n+ * getter/setters. This method should only be called when\n+ * value type is Object.\n+ *\n+ * @param {Object} obj\n+ */\n+\n+Observer.prototype.walk = function (obj) {\n+  for (var key in obj) {\n+    this.convert(key, obj[key]);\n+  }\n+};\n+\n+/**\n+ * Observe a list of Array items.\n+ *\n+ * @param {Array} items\n+ */\n+\n+Observer.prototype.observeArray = function (items) {\n+  for (var i = 0, l = items.length; i < l; i++) {\n+    observe(items[i]);\n+  }\n+};\n+\n+/**\n+ * Convert a property into getter/setter so we can emit\n+ * the events when the property is accessed/changed.\n+ *\n+ * @param {String} key\n+ * @param {*} val\n+ */\n+\n+Observer.prototype.convert = function (key, val) {\n+  defineReactive(this.value, key, val);\n+};\n+\n+/**\n+ * Add an owner vm, so that when $set/$delete mutations\n+ * happen we can notify owner vms to proxy the keys and\n+ * digest the watchers. This is only called when the object\n+ * is observed as an instance's root $data.\n+ *\n+ * @param {Vue} vm\n+ */\n+\n+Observer.prototype.addVm = function (vm) {\n+  (this.vms || (this.vms = [])).push(vm);\n+};\n+\n+/**\n+ * Remove an owner vm. This is called when the object is\n+ * swapped out as an instance's $data object.\n+ *\n+ * @param {Vue} vm\n+ */\n+\n+Observer.prototype.removeVm = function (vm) {\n+  remove(this.vms, vm);\n+};\n+\n+// helpers\n+\n+/**\n+ * Augment an target Object or Array by intercepting\n+ * the prototype chain using __proto__\n+ *\n+ * @param {Object|Array} target\n+ * @param {Object} src\n+ */\n+\n+function protoAugment(target, src) {\n+  /* eslint-disable no-proto */\n+  target.__proto__ = src;\n+  /* eslint-enable no-proto */\n+}\n+\n+/**\n+ * Augment an target Object or Array by defining\n+ * hidden properties.\n+ *\n+ * @param {Object|Array} target\n+ * @param {Object} proto\n+ */\n+\n+function copyAugment(target, src, keys) {\n+  for (var i = 0, l = keys.length; i < l; i++) {\n+    var key = keys[i];\n+    def(target, key, src[key]);\n+  }\n+}\n+\n+/**\n+ * Attempt to create an observer instance for a value,\n+ * returns the new observer if successfully observed,\n+ * or the existing observer if the value already has one.\n+ *\n+ * @param {*} value\n+ * @param {Vue} [vm]\n+ * @return {Observer|undefined}\n+ * @static\n+ */\n+\n+function observe(value, vm) {\n+  if (!isObject(value)) {\n+    return;\n+  }\n+  var ob;\n+  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n+    ob = value.__ob__;\n+  } else if (observerState.shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n+    ob = new Observer(value);\n+  }\n+  if (ob && vm) {\n+    ob.addVm(vm);\n+  }\n+  return ob;\n+}\n+\n+/**\n+ * Define a reactive property on an Object.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @param {*} val\n+ */\n+\n+function defineReactive(obj, key, val) {\n+  var dep = new Dep();\n+\n+  var property = Object.getOwnPropertyDescriptor(obj, key);\n+  if (property && property.configurable === false) {\n+    return;\n+  }\n+\n+  // cater for pre-defined getter/setters\n+  var getter = property && property.get;\n+  var setter = property && property.set;\n+\n+  var childOb = observe(val);\n+  Object.defineProperty(obj, key, {\n+    enumerable: true,\n+    configurable: true,\n+    get: function reactiveGetter() {\n+      var value = getter ? getter.call(obj) : val;\n+      if (Dep.target) {\n+        dep.depend();\n+        if (childOb) {\n+          childOb.dep.depend();\n+        }\n+        if (isArray(value)) {\n+          for (var e, i = 0, l = value.length; i < l; i++) {\n+            e = value[i];\n+            e && e.__ob__ && e.__ob__.dep.depend();\n+          }\n+        }\n+      }\n+      return value;\n+    },\n+    set: function reactiveSetter(newVal) {\n+      var value = getter ? getter.call(obj) : val;\n+      if (newVal === value) {\n+        return;\n+      }\n+      if (setter) {\n+        setter.call(obj, newVal);\n+      } else {\n+        val = newVal;\n+      }\n+      childOb = observe(newVal);\n+      dep.notify();\n+    }\n+  });\n+}\n+\n+/**\n+ * Set a property on an object. Adds the new property and\n+ * triggers change notification if the property doesn't\n+ * already exist.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @param {*} val\n+ * @public\n+ */\n+\n+function set(obj, key, val) {\n+  if (isArray(obj)) {\n+    return obj.splice(key, 1, val);\n+  }\n+  if (hasOwn(obj, key)) {\n+    obj[key] = val;\n+    return;\n+  }\n+  if (obj._isVue) {\n+    set(obj._data, key, val);\n+    return;\n+  }\n+  var ob = obj.__ob__;\n+  if (!ob) {\n+    obj[key] = val;\n+    return;\n+  }\n+  ob.convert(key, val);\n+  ob.dep.notify();\n+  if (ob.vms) {\n+    var i = ob.vms.length;\n+    while (i--) {\n+      var vm = ob.vms[i];\n+      proxy(vm, key);\n+      vm.$forceUpdate();\n+    }\n+  }\n+  return val;\n+}\n+\n+function proxy(vm, key) {\n+  if (!isReserved(key)) {\n+    Object.defineProperty(vm, key, {\n+      configurable: true,\n+      enumerable: true,\n+      get: function proxyGetter() {\n+        return vm._data[key];\n+      },\n+      set: function proxySetter(val) {\n+        vm._data[key] = val;\n+      }\n+    });\n+  }\n+}\n+\n+function unproxy(vm, key) {\n+  if (!isReserved(key)) {\n+    delete vm[key];\n+  }\n+}\n+\n+function initState(vm) {\n+  vm._watchers = [];\n+  initProps(vm);\n+  initData(vm);\n+  initComputed(vm);\n+  initMethods(vm);\n+  initWatch(vm);\n+}\n+\n+function initProps(vm) {\n+  var props = vm.$options.props;\n+  var propsData = vm.$options.propsData;\n+  if (props) {\n+    var keys = vm.$options.propKeys = Object.keys(props);\n+    var isRoot = !vm.$parent;\n+    // root instance props should be converted\n+    observerState.shouldConvert = isRoot;\n+    for (var i = 0; i < keys.length; i++) {\n+      var key = keys[i];\n+      defineReactive(vm, key, validateProp(vm, key, propsData));\n+    }\n+    observerState.shouldConvert = true;\n+  }\n+}\n+\n+function initData(vm) {\n+  var data = vm.$options.data;\n+  data = vm._data = typeof data === 'function' ? data() : data || {};\n+  if (!isPlainObject(data)) {\n+    data = {};\n+    process.env.NODE_ENV !== 'production' && warn$1('data functions should return an object.', vm);\n+  }\n+  // proxy data on instance\n+  var keys = Object.keys(data);\n+  var i = keys.length;\n+  while (i--) {\n+    proxy(vm, keys[i]);\n+  }\n+  // observe data\n+  observe(data, vm);\n+}\n+\n+function noop() {}\n+\n+function initComputed(vm) {\n+  var computed = vm.$options.computed;\n+  if (computed) {\n+    for (var key in computed) {\n+      var userDef = computed[key];\n+      var def = {\n+        enumerable: true,\n+        configurable: true\n+      };\n+      if (typeof userDef === 'function') {\n+        def.get = makeComputedGetter(userDef, vm);\n+        def.set = noop;\n+      } else {\n+        def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, vm) : bind(userDef.get, vm) : noop;\n+        def.set = userDef.set ? bind(userDef.set, vm) : noop;\n+      }\n+      Object.defineProperty(vm, key, def);\n+    }\n+  }\n+}\n+\n+function makeComputedGetter(getter, owner) {\n+  var watcher = new Watcher(owner, getter, null, {\n+    lazy: true\n+  });\n+  return function computedGetter() {\n+    if (watcher.dirty) {\n+      watcher.evaluate();\n+    }\n+    if (Dep.target) {\n+      watcher.depend();\n+    }\n+    return watcher.value;\n+  };\n+}\n+\n+function initMethods(vm) {\n+  var methods = vm.$options.methods;\n+  if (methods) {\n+    for (var key in methods) {\n+      vm[key] = bind(methods[key], vm);\n+    }\n+  }\n+}\n+\n+function initWatch(vm) {\n+  var watch = vm.$options.watch;\n+  if (watch) {\n+    for (var key in watch) {\n+      var handler = watch[key];\n+      if (isArray(handler)) {\n+        for (var i = 0; i < handler.length; i++) {\n+          createWatcher(vm, key, handler[i]);\n+        }\n+      } else {\n+        createWatcher(vm, key, handler);\n+      }\n+    }\n+  }\n+}\n+\n+function createWatcher(vm, key, handler) {\n+  var options = void 0;\n+  if (isPlainObject(handler)) {\n+    options = handler;\n+    handler = handler.handler;\n+  }\n+  if (typeof handler === 'string') {\n+    handler = vm[handler];\n+  }\n+  vm.$watch(key, handler, options);\n+}\n+\n+function stateMixin(Vue) {\n+  Object.defineProperty(Vue.prototype, '$data', {\n+    get: function get() {\n+      return this._data;\n+    },\n+    set: function set(newData) {\n+      if (newData !== this._data) {\n+        setData(this, newData);\n+      }\n+    }\n+  });\n+\n+  Vue.prototype.$watch = function (fn, cb, options) {\n+    options = options || {};\n+    options.user = true;\n+    var watcher = new Watcher(this, fn, cb, options);\n+    if (options.immediate) {\n+      cb.call(this, watcher.value);\n+    }\n+    return function unwatchFn() {\n+      watcher.teardown();\n+    };\n+  };\n+}\n+\n+function setData(vm, newData) {\n+  newData = newData || {};\n+  var oldData = vm._data;\n+  vm._data = newData;\n+  var keys, key, i;\n+  // unproxy keys not present in new data\n+  keys = Object.keys(oldData);\n+  i = keys.length;\n+  while (i--) {\n+    key = keys[i];\n+    if (!(key in newData)) {\n+      unproxy(vm, key);\n+    }\n+  }\n+  // proxy keys not already proxied,\n+  // and trigger change for changed values\n+  keys = Object.keys(newData);\n+  i = keys.length;\n+  while (i--) {\n+    key = keys[i];\n+    if (!hasOwn(vm, key)) {\n+      // new property\n+      proxy(vm, key);\n+    }\n+  }\n+  oldData.__ob__.removeVm(vm);\n+  observe(newData, vm);\n+  vm.$forceUpdate();\n+}\n+\n+function VNode(tag, data, children, text, elm, ns, context) {\n+  return {\n+    tag: tag,\n+    data: data,\n+    children: children,\n+    text: text,\n+    elm: elm,\n+    ns: ns,\n+    context: context,\n+    key: data && data.key\n+  };\n+}\n+\n+function flatten(children) {\n+  if (typeof children === 'string') {\n+    return [VNode(undefined, undefined, undefined, children)];\n+  }\n+  if (isArray(children)) {\n+    var res = [];\n+    for (var i = 0, l = children.length; i < l; i++) {\n+      var c = children[i];\n+      // flatten nested\n+      if (isArray(c)) {\n+        res.push.apply(res, flatten(c));\n+      } else if (isPrimitive(c)) {\n+        // convert primitive to vnode\n+        res.push(VNode(undefined, undefined, undefined, c));\n+      } else if (c) {\n+        res.push(c);\n+      }\n+    }\n+    return res;\n+  }\n+}\n+\n+function updateListeners(on, oldOn, add) {\n+  var name = void 0,\n+      cur = void 0,\n+      old = void 0,\n+      event = void 0,\n+      capture = void 0;\n+  for (name in on) {\n+    cur = on[name];\n+    old = oldOn[name];\n+    if (old === undefined) {\n+      capture = name.charAt(0) === '!';\n+      event = capture ? name.slice(1) : name;\n+      if (isArray(cur)) {\n+        add(event, arrInvoker(cur), capture);\n+      } else {\n+        cur = { fn: cur };\n+        on[name] = cur;\n+        add(event, fnInvoker(cur), capture);\n+      }\n+    } else if (isArray(old)) {\n+      old.length = cur.length;\n+      for (var i = 0; i < old.length; i++) {\n+        old[i] = cur[i];\n+      }on[name] = old;\n+    } else {\n+      old.fn = cur;\n+      on[name] = old;\n+    }\n+  }\n+}\n+\n+function arrInvoker(arr) {\n+  return function (ev) {\n+    for (var i = 0; i < arr.length; i++) {\n+      arr[i](ev);\n+    }\n+  };\n+}\n+\n+function fnInvoker(o) {\n+  return function (ev) {\n+    o.fn(ev);\n+  };\n+}\n+\n+function initLifecycle(vm) {\n+  var options = vm.$options;\n+\n+  vm.$parent = options.parent;\n+  vm.$root = vm.$parent ? vm.$parent.$root : vm;\n+  if (vm.$parent) {\n+    vm.$parent.$children.push(vm);\n+  }\n+\n+  vm.$children = [];\n+  vm.$refs = {};\n+\n+  vm._isDestroyed = false;\n+  vm._isBeingDestroyed = false;\n+}\n+\n+function lifecycleMixin(Vue) {\n+  Vue.prototype._mount = function () {\n+    var _this = this;\n+\n+    if (!this.$options.render) {\n+      this.$options.render = function () {\n+        return _this.$createElement('div');\n+      };\n+      if (process.env.NODE_ENV !== 'production') {\n+        if (this.$options.template) {\n+          warn$1('You are using the runtime-only build of Vue where the template ' + 'option is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', this);\n+        } else {\n+          warn$1('Failed to mount component: template or render function not defined.', this);\n+        }\n+      }\n+    }\n+    // render static sub-trees for once on mount\n+    var staticRenderFns = this.$options.staticRenderFns;\n+    if (staticRenderFns) {\n+      this._staticTrees = new Array(staticRenderFns.length);\n+      for (var i = 0; i < staticRenderFns.length; i++) {\n+        this._staticTrees[i] = staticRenderFns[i].call(this._renderProxy);\n+      }\n+    }\n+    this._watcher = new Watcher(this, this._render, this._update);\n+    this._update(this._watcher.value);\n+    this._mounted = true;\n+    // root instance, call ready on self\n+    if (this.$root === this) {\n+      callHook(this, 'ready');\n+    }\n+    return this;\n+  };\n+\n+  Vue.prototype._update = function (vnode) {\n+    if (this._mounted) {\n+      callHook(this, 'beforeUpdate');\n+    }\n+    var parentNode = this.$options._parentVnode;\n+    // set vnode parent before patch\n+    vnode.parent = parentNode;\n+    if (!this._vnode) {\n+      // Vue.prototype.__patch__ is injected in entry points\n+      // based on the rendering backend used.\n+      this.$el = this.__patch__(this.$el, vnode);\n+    } else {\n+      this.$el = this.__patch__(this._vnode, vnode);\n+    }\n+    this._vnode = vnode;\n+    // set parent vnode element after patch\n+    if (parentNode) {\n+      parentNode.elm = this.$el;\n+    }\n+    if (this._mounted) {\n+      callHook(this, 'updated');\n+    }\n+  };\n+\n+  Vue.prototype._updateFromParent = function (propsData, listeners, parentVnode, children) {\n+    var _this2 = this;\n+\n+    this.$options._parentVnode = parentVnode;\n+    this.$options._renderChildren = children;\n+    // update props\n+    if (propsData && this.$options.props) {\n+      observerState.shouldConvert = false;\n+      var propKeys = this.$options.propKeys;\n+      for (var i = 0; i < propKeys.length; i++) {\n+        var key = propKeys[i];\n+        this[key] = validateProp(this, key, propsData);\n+      }\n+      observerState.shouldConvert = true;\n+    }\n+    // update listeners\n+    if (listeners) {\n+      var oldListeners = this.$options._parentListeners;\n+      this.$options._parentListeners = listeners;\n+      updateListeners(listeners, oldListeners || {}, function (event, handler) {\n+        _this2.$on(event, handler);\n+      });\n+    }\n+  };\n+\n+  Vue.prototype.$forceUpdate = function () {\n+    this._watcher.update();\n+  };\n+\n+  Vue.prototype.$destroy = function () {\n+    if (this._isDestroyed) {\n+      return;\n+    }\n+    callHook(this, 'beforeDestroy');\n+    this._isBeingDestroyed = true;\n+    // remove self from parent\n+    var parent = this.$parent;\n+    if (parent && !parent._isBeingDestroyed) {\n+      remove(parent.$children, this);\n+    }\n+    // unregister ref\n+    if (this._ref) {\n+      this._context.$refs[this._ref] = undefined;\n+    }\n+    // teardown watchers\n+    var i = this._watchers.length;\n+    while (i--) {\n+      this._watchers[i].teardown();\n+    }\n+    // remove reference from data ob\n+    // frozen object may not have observer.\n+    if (this._data.__ob__) {\n+      this._data.__ob__.removeVm(this);\n+    }\n+    // call the last hook...\n+    this._isDestroyed = true;\n+    callHook(this, 'destroyed');\n+    // turn off all instance listeners.\n+    this.$off();\n+  };\n+}\n+\n+function callHook(vm, hook) {\n+  vm.$emit('pre-hook:' + hook);\n+  var handlers = vm.$options[hook];\n+  if (handlers) {\n+    for (var i = 0, j = handlers.length; i < j; i++) {\n+      handlers[i].call(vm);\n+    }\n+  }\n+  vm.$emit('hook:' + hook);\n+}\n+\n+var hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy };\n+var hooksToMerge = Object.keys(hooks);\n+\n+function createComponent(Ctor, data, parent, children, context) {\n+  if (process.env.NODE_ENV !== 'production' && children && typeof children !== 'function') {\n+    warn$1('A component\\'s children should be a function that returns the ' + 'children array. This allows the component to track the children ' + 'dependencies and optimizes re-rendering.');\n+  }\n+  if (!Ctor) {\n+    return;\n+  }\n+  if (isObject(Ctor)) {\n+    Ctor = Vue.extend(Ctor);\n+  }\n+  if (process.env.NODE_ENV !== 'production' && typeof Ctor !== 'function') {\n+    warn$1('Invalid Component definition: ' + Ctor, parent);\n+    return;\n+  }\n+\n+  // async component\n+  if (!Ctor.cid) {\n+    if (Ctor.resolved) {\n+      Ctor = Ctor.resolved;\n+    } else {\n+      resolveAsyncComponent(Ctor, function () {\n+        // it's ok to queue this on every render because\n+        // $forceUpdate is buffered.\n+        parent.$forceUpdate();\n+      });\n+      return;\n+    }\n+  }\n+\n+  data = data || {};\n+\n+  // merge component management hooks onto the placeholder node\n+  mergeHooks(data);\n+\n+  // extract props\n+  var propsData = extractProps(data, Ctor);\n+\n+  // extract listeners, since these needs to be treated as\n+  // child component listeners instead of DOM listeners\n+  var listeners = data.on;\n+  if (listeners) {\n+    data.on = null;\n+  }\n+\n+  // return a placeholder vnode\n+  var name = Ctor.options.name ? '-' + Ctor.options.name : '';\n+  var vnode = VNode('vue-component-' + Ctor.cid + name, data, undefined, undefined, undefined, undefined, context);\n+  vnode.componentOptions = { Ctor: Ctor, propsData: propsData, listeners: listeners, parent: parent, children: children };\n+  return vnode;\n+}\n+\n+function init(vnode) {\n+  var _vnode$componentOptio = vnode.componentOptions;\n+  var Ctor = _vnode$componentOptio.Ctor;\n+  var propsData = _vnode$componentOptio.propsData;\n+  var listeners = _vnode$componentOptio.listeners;\n+  var parent = _vnode$componentOptio.parent;\n+  var children = _vnode$componentOptio.children;\n+\n+  var child = new Ctor({\n+    parent: parent,\n+    propsData: propsData,\n+    _parentVnode: vnode,\n+    _parentListeners: listeners,\n+    _renderChildren: children\n+  });\n+  // if this is a server-rendered mount,\n+  // the vnode would already have an element.\n+  // otherwise the child sets the parent vnode's elm when mounted\n+  // and when updated.\n+  child.$mount(vnode.elm);\n+  vnode.child = child;\n+}\n+\n+function prepatch(oldVnode, vnode) {\n+  var _vnode$componentOptio2 = vnode.componentOptions;\n+  var listeners = _vnode$componentOptio2.listeners;\n+  var propsData = _vnode$componentOptio2.propsData;\n+  var children = _vnode$componentOptio2.children;\n+\n+  vnode.child = oldVnode.child;\n+  vnode.child._updateFromParent(propsData, // updated props\n+  listeners, // updated listeners\n+  vnode, // new parent vnode\n+  children // new children\n+  );\n+}\n+\n+function insert(vnode) {\n+  callHook(vnode.child, 'ready');\n+}\n+\n+function destroy(vnode) {\n+  vnode.child.$destroy();\n+}\n+\n+function resolveAsyncComponent(factory, cb) {\n+  if (factory.resolved) {\n+    // cached\n+    cb(factory.resolved);\n+  } else if (factory.requested) {\n+    // pool callbacks\n+    factory.pendingCallbacks.push(cb);\n+  } else {\n+    (function () {\n+      factory.requested = true;\n+      var cbs = factory.pendingCallbacks = [cb];\n+      factory(function resolve(res) {\n+        if (isObject(res)) {\n+          res = Vue.extend(res);\n+        }\n+        // cache resolved\n+        factory.resolved = res;\n+        // invoke callbacks\n+        for (var i = 0, l = cbs.length; i < l; i++) {\n+          cbs[i](res);\n+        }\n+      }, function reject(reason) {\n+        process.env.NODE_ENV !== 'production' && warn$1('Failed to resolve async component: ' + factory + (reason ? '\\nReason: ' + reason : ''));\n+      });\n+    })();\n+  }\n+}\n+\n+function extractProps(data, Ctor) {\n+  // we are only extrating raw values here.\n+  // validation and default values are handled in the child\n+  // component itself.\n+  var propOptions = Ctor.options.props;\n+  if (!propOptions) {\n+    return;\n+  }\n+  var res = {};\n+  var attrs = data.attrs;\n+  var props = data.props;\n+  var staticAttrs = data.staticAttrs;\n+  if (!attrs && !props) {\n+    return res;\n+  }\n+  for (var key in propOptions) {\n+    var altKey = hyphenate(key);\n+    checkProp(res, attrs, key, altKey) || checkProp(res, props, key, altKey) || checkProp(res, staticAttrs, key, altKey);\n+  }\n+  return res;\n+}\n+\n+function checkProp(res, hash, key, altKey) {\n+  if (hash) {\n+    if (hasOwn(hash, key)) {\n+      res[key] = hash[key];\n+      delete hash[key];\n+      return true;\n+    } else if (hasOwn(hash, altKey)) {\n+      res[key] = hash[altKey];\n+      delete hash[altKey];\n+      return true;\n+    }\n+  }\n+}\n+\n+function mergeHooks(data) {\n+  if (data.hook) {\n+    for (var i = 0; i < hooksToMerge.length; i++) {\n+      var key = hooksToMerge[i];\n+      var fromParent = data.hook[key];\n+      var ours = hooks[key];\n+      data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n+    }\n+  } else {\n+    data.hook = hooks;\n+  }\n+}\n+\n+function mergeHook$1(a, b) {\n+  // since all hooks have at most two args, use fixed args\n+  // to avoid having to use fn.apply().\n+  return function (_, __) {\n+    a(_, __);\n+    b(_, __);\n+  };\n+}\n+\n+function createElement(tag, data, children, namespace) {\n+  var context = this;\n+  var parent = renderState.activeInstance;\n+  if (typeof tag === 'string') {\n+    var Ctor = void 0;\n+    if (config.isReservedTag(tag)) {\n+      return VNode(tag, data, flatten(children), undefined, undefined, namespace, context);\n+    } else if (Ctor = resolveAsset(context.$options, 'components', tag)) {\n+      return createComponent(Ctor, data, parent, children, context);\n+    } else {\n+      if (process.env.NODE_ENV !== 'production') {\n+        if (!namespace && config.isUnknownElement(tag)) {\n+          warn$1('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n+        }\n+      }\n+      return VNode(tag, data, flatten(children && children()), undefined, undefined, namespace, context);\n+    }\n+  } else {\n+    return createComponent(tag, data, parent, children, context);\n+  }\n+}\n+\n+var renderState = {\n+  activeInstance: null\n+};\n+\n+function initRender(vm) {\n+  vm._vnode = null;\n+  vm._mounted = false;\n+  vm._staticTrees = null;\n+  vm.$slots = {};\n+  // bind the public createElement fn to this instance\n+  // so that we get proper render context inside it.\n+  vm.$createElement = bind(createElement, vm);\n+  if (vm.$options.el) {\n+    vm.$mount(vm.$options.el);\n+  }\n+}\n+\n+function renderMixin(Vue) {\n+  Vue.prototype._render = function () {\n+    var prev = renderState.activeInstance;\n+    renderState.activeInstance = this;\n+    var _$options = this.$options;\n+    var render = _$options.render;\n+    var _renderChildren = _$options._renderChildren;\n+    // resolve slots. becaues slots are rendered in parent scope,\n+    // we set the activeInstance to parent.\n+\n+    if (_renderChildren) {\n+      resolveSlots(this, _renderChildren);\n+    }\n+    // render self\n+    var vnode = render.call(this._renderProxy);\n+    // restore render state\n+    renderState.activeInstance = prev;\n+    return vnode;\n+  };\n+\n+  // shorthands used in render functions\n+  Vue.prototype.__h__ = createElement;\n+\n+  // toString for mustaches\n+  Vue.prototype.__toString__ = renderString;\n+\n+  // render v-for\n+  Vue.prototype.__renderList__ = function (val, render) {\n+    var ret = void 0,\n+        i = void 0,\n+        l = void 0,\n+        keys = void 0,\n+        key = void 0;\n+    if (isArray(val)) {\n+      ret = new Array(val.length);\n+      for (i = 0, l = val.length; i < l; i++) {\n+        ret[i] = render(val[i], i, i);\n+      }\n+    } else if (typeof val === 'number') {\n+      ret = new Array(val);\n+      for (i = 0; i < val; i++) {\n+        ret[i] = render(i + 1, i, i);\n+      }\n+    } else if (isObject(val)) {\n+      keys = Object.keys(val);\n+      ret = new Array(keys.length);\n+      for (i = 0, l = keys.length; i < l; i++) {\n+        key = keys[i];\n+        ret[i] = render(val[key], i, key);\n+      }\n+    }\n+    return ret;\n+  };\n+\n+  // register ref\n+  Vue.prototype.__registerRef__ = function (key, ref, vFor, remove) {\n+    var refs = this.$refs;\n+    if (remove) {\n+      if (vFor) {\n+        remove(refs[key], ref);\n+      } else {\n+        refs[key] = undefined;\n+      }\n+    } else {\n+      if (vFor) {\n+        if (refs[key]) {\n+          refs[key].push(ref);\n+        } else {\n+          refs[key] = [ref];\n+        }\n+      } else {\n+        refs[key] = ref;\n+      }\n+    }\n+  };\n+}\n+\n+function resolveSlots(vm, children) {\n+  if (children) {\n+    children = flatten(isArray(children) ? children : children());\n+    var slots = { default: children };\n+    var i = children.length;\n+    var name = void 0,\n+        child = void 0;\n+    while (i--) {\n+      child = children[i];\n+      if (name = child.data && child.data.slot) {\n+        var slot = slots[name] || (slots[name] = []);\n+        if (child.tag === 'template') {\n+          slot.push.apply(slot, child.children);\n+        } else {\n+          slot.push(child);\n+        }\n+        children.splice(i, 1);\n+      }\n+    }\n+    vm.$slots = slots;\n+  }\n+}\n+\n+function initEvents(vm) {\n+  vm._events = Object.create(null);\n+  // init parent attached events\n+  var listeners = vm.$options._parentListeners;\n+  if (listeners) {\n+    updateListeners(listeners, {}, function (event, handler) {\n+      vm.$on(event, handler);\n+    });\n+  }\n+}\n+\n+function eventsMixin(Vue) {\n+  Vue.prototype.$on = function (event, fn) {\n+    (this._events[event] || (this._events[event] = [])).push(fn);\n+    return this;\n+  };\n+\n+  /**\n+   * Adds an `event` listener that will be invoked a single\n+   * time then automatically removed.\n+   *\n+   * @param {String} event\n+   * @param {Function} fn\n+   */\n+\n+  Vue.prototype.$once = function (event, fn) {\n+    var self = this;\n+    function on() {\n+      self.$off(event, on);\n+      fn.apply(this, arguments);\n+    }\n+    on.fn = fn;\n+    this.$on(event, on);\n+    return this;\n+  };\n+\n+  /**\n+   * Remove the given callback for `event` or all\n+   * registered callbacks.\n+   *\n+   * @param {String} event\n+   * @param {Function} fn\n+   */\n+\n+  Vue.prototype.$off = function (event, fn) {\n+    var cbs;\n+    // all\n+    if (!arguments.length) {\n+      this._events = Object.create(null);\n+      return this;\n+    }\n+    // specific event\n+    cbs = this._events[event];\n+    if (!cbs) {\n+      return this;\n+    }\n+    if (arguments.length === 1) {\n+      this._events[event] = null;\n+      return this;\n+    }\n+    // specific handler\n+    var cb;\n+    var i = cbs.length;\n+    while (i--) {\n+      cb = cbs[i];\n+      if (cb === fn || cb.fn === fn) {\n+        cbs.splice(i, 1);\n+        break;\n+      }\n+    }\n+    return this;\n+  };\n+\n+  /**\n+   * Trigger an event on self.\n+   *\n+   * @param {String} event\n+   */\n+\n+  Vue.prototype.$emit = function (event) {\n+    var cbs = this._events[event];\n+    if (cbs) {\n+      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n+      var args = toArray(arguments, 1);\n+      for (var i = 0, l = cbs.length; i < l; i++) {\n+        cbs[i].apply(this, args);\n+      }\n+    }\n+  };\n+}\n+\n+var uid = 0;\n+\n+function Vue(options) {\n+  this._init(options);\n+}\n+\n+Vue.prototype._init = function (options) {\n+  // a uid\n+  this._uid = uid++;\n+  // a flag to avoid this being observed\n+  this._isVue = true;\n+  // merge options\n+  this.$options = mergeOptions(this.constructor.options, options || {}, this);\n+  if (process.env.NODE_ENV !== 'production') {\n+    initProxy(this);\n+  } else {\n+    this._renderProxy = this;\n+  }\n+  initLifecycle(this);\n+  initEvents(this);\n+  callHook(this, 'init');\n+  initState(this);\n+  callHook(this, 'created');\n+  initRender(this);\n+};\n+\n+Vue.prototype.$nextTick = function (fn) {\n+  nextTick(fn, this);\n+};\n+\n+stateMixin(Vue);\n+eventsMixin(Vue);\n+lifecycleMixin(Vue);\n+renderMixin(Vue);\n+\n+var warn$1 = void 0;\n+var formatComponentName = void 0;\n+\n+if (process.env.NODE_ENV !== 'production') {\n+  (function () {\n+    var hasConsole = typeof console !== 'undefined';\n+\n+    warn$1 = function warn(msg, vm) {\n+      if (hasConsole && !config.silent) {\n+        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n+      }\n+    };\n+\n+    formatComponentName = function formatComponentName(vm) {\n+      var name = vm._isVue ? vm.$options.name : vm.name;\n+      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n+    };\n+  })();\n+}\n+\n+/**\n+ * Option overwriting strategies are functions that handle\n+ * how to merge a parent option value and a child option\n+ * value into the final value.\n+ *\n+ * All strategy functions follow the same signature:\n+ *\n+ * @param {*} parentVal\n+ * @param {*} childVal\n+ * @param {Vue} [vm]\n+ */\n+\n+var strats = config.optionMergeStrategies = Object.create(null);\n+\n+/**\n+ * Helper that recursively merges two data objects together.\n+ */\n+\n+function mergeData(to, from) {\n+  var key, toVal, fromVal;\n+  for (key in from) {\n+    toVal = to[key];\n+    fromVal = from[key];\n+    if (!hasOwn(to, key)) {\n+      set(to, key, fromVal);\n+    } else if (isObject(toVal) && isObject(fromVal)) {\n+      mergeData(toVal, fromVal);\n+    }\n+  }\n+  return to;\n+}\n+\n+/**\n+ * Data\n+ */\n+\n+strats.data = function (parentVal, childVal, vm) {\n+  if (!vm) {\n+    // in a Vue.extend merge, both should be functions\n+    if (!childVal) {\n+      return parentVal;\n+    }\n+    if (typeof childVal !== 'function') {\n+      process.env.NODE_ENV !== 'production' && warn$1('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n+      return parentVal;\n+    }\n+    if (!parentVal) {\n+      return childVal;\n+    }\n+    // when parentVal & childVal are both present,\n+    // we need to return a function that returns the\n+    // merged result of both functions... no need to\n+    // check if parentVal is a function here because\n+    // it has to be a function to pass previous merges.\n+    return function mergedDataFn() {\n+      return mergeData(childVal.call(this), parentVal.call(this));\n+    };\n+  } else if (parentVal || childVal) {\n+    return function mergedInstanceDataFn() {\n+      // instance merge\n+      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n+      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n+      if (instanceData) {\n+        return mergeData(instanceData, defaultData);\n+      } else {\n+        return defaultData;\n+      }\n+    };\n+  }\n+};\n+\n+/**\n+ * El\n+ */\n+\n+strats.el = function (parentVal, childVal, vm) {\n+  if (!vm && childVal && typeof childVal !== 'function') {\n+    process.env.NODE_ENV !== 'production' && warn$1('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n+    return;\n+  }\n+  var ret = childVal || parentVal;\n+  // invoke the element factory if this is instance merge\n+  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n+};\n+\n+/**\n+ * Hooks and param attributes are merged as arrays.\n+ */\n+\n+function mergeHook(parentVal, childVal) {\n+  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n+}\n+\n+config._lifecycleHooks.forEach(function (hook) {\n+  strats[hook] = mergeHook;\n+});\n+\n+/**\n+ * Assets\n+ *\n+ * When a vm is present (instance creation), we need to do\n+ * a three-way merge between constructor options, instance\n+ * options and parent options.\n+ */\n+\n+function mergeAssets(parentVal, childVal) {\n+  var res = Object.create(parentVal);\n+  return childVal ? extend(res, childVal) : res;\n+}\n+\n+config._assetTypes.forEach(function (type) {\n+  strats[type + 's'] = mergeAssets;\n+});\n+\n+/**\n+ * Watchers.\n+ *\n+ * Watchers hashes should not overwrite one\n+ * another, so we merge them as arrays.\n+ */\n+\n+strats.watch = function (parentVal, childVal) {\n+  if (!childVal) return parentVal;\n+  if (!parentVal) return childVal;\n+  var ret = {};\n+  extend(ret, parentVal);\n+  for (var key in childVal) {\n+    var parent = ret[key];\n+    var child = childVal[key];\n+    if (parent && !isArray(parent)) {\n+      parent = [parent];\n+    }\n+    ret[key] = parent ? parent.concat(child) : [child];\n+  }\n+  return ret;\n+};\n+\n+/**\n+ * Other object hashes.\n+ */\n+\n+strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n+  if (!childVal) return parentVal;\n+  if (!parentVal) return childVal;\n+  var ret = Object.create(null);\n+  extend(ret, parentVal);\n+  extend(ret, childVal);\n+  return ret;\n+};\n+\n+/**\n+ * Default strategy.\n+ */\n+\n+var defaultStrat = function defaultStrat(parentVal, childVal) {\n+  return childVal === undefined ? parentVal : childVal;\n+};\n+\n+/**\n+ * Make sure component options get converted to actual\n+ * constructors.\n+ *\n+ * @param {Object} options\n+ */\n+\n+function guardComponents(options) {\n+  if (options.components) {\n+    var components = options.components;\n+    var def;\n+    for (var key in components) {\n+      if (isBuiltInTag(key) || config.isReservedTag(key)) {\n+        process.env.NODE_ENV !== 'production' && warn$1('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n+        continue;\n+      }\n+      def = components[key];\n+      if (isPlainObject(def)) {\n+        components[key] = Vue.extend(def);\n+      }\n+    }\n+  }\n+}\n+\n+/**\n+ * Ensure all props option syntax are normalized into the\n+ * Object-based format.\n+ *\n+ * @param {Object} options\n+ */\n+\n+function guardProps(options) {\n+  var props = options.props;\n+  if (!props) return;\n+  var res = {};\n+  var i = void 0,\n+      val = void 0,\n+      name = void 0;\n+  if (isArray(props)) {\n+    i = props.length;\n+    while (i--) {\n+      val = props[i];\n+      if (typeof val === 'string') {\n+        name = camelize(val);\n+        res[name] = { type: null };\n+      } else if (process.env.NODE_ENV !== 'production') {\n+        warn$1('props must be strings when using array syntax.');\n+      }\n+    }\n+  } else if (isPlainObject(props)) {\n+    for (var key in props) {\n+      val = props[key];\n+      name = camelize(key);\n+      res[name] = isPlainObject(val) ? val : { type: val };\n+    }\n+  }\n+  options.props = res;\n+}\n+\n+function guardDirectives(options) {\n+  var dirs = options.directives;\n+  if (dirs) {\n+    for (var key in dirs) {\n+      if (typeof dirs[key] === 'function') {\n+        dirs[key] = { update: dirs[key] };\n+      }\n+    }\n+  }\n+}\n+\n+/**\n+ * Merge two option objects into a new one.\n+ * Core utility used in both instantiation and inheritance.\n+ *\n+ * @param {Object} parent\n+ * @param {Object} child\n+ * @param {Vue} [vm] - if vm is present, indicates this is\n+ *                     an instantiation merge.\n+ */\n+\n+function mergeOptions(parent, child, vm) {\n+  guardComponents(child);\n+  guardProps(child);\n+  guardDirectives(child);\n+  if (process.env.NODE_ENV !== 'production') {\n+    if (child.propsData && !vm) {\n+      warn$1('propsData can only be used as an instantiation option.');\n+    }\n+  }\n+  var options = {};\n+  var key;\n+  if (child.mixins) {\n+    for (var i = 0, l = child.mixins.length; i < l; i++) {\n+      parent = mergeOptions(parent, child.mixins[i], vm);\n+    }\n+  }\n+  for (key in parent) {\n+    mergeField(key);\n+  }\n+  for (key in child) {\n+    if (!hasOwn(parent, key)) {\n+      mergeField(key);\n+    }\n+  }\n+  function mergeField(key) {\n+    var strat = strats[key] || defaultStrat;\n+    options[key] = strat(parent[key], child[key], vm, key);\n+  }\n+  return options;\n+}\n+\n+/**\n+ * Resolve an asset.\n+ * This function is used because child instances need access\n+ * to assets defined in its ancestor chain.\n+ *\n+ * @param {Object} options\n+ * @param {String} type\n+ * @param {String} id\n+ * @param {Boolean} warnMissing\n+ * @return {Object|Function}\n+ */\n+\n+function resolveAsset(options, type, id, warnMissing) {\n+  /* istanbul ignore if */\n+  if (typeof id !== 'string') {\n+    return;\n+  }\n+  var assets = options[type];\n+  var camelizedId;\n+  var res = assets[id] ||\n+  // camelCase ID\n+  assets[camelizedId = camelize(id)] ||\n+  // Pascal Case ID\n+  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n+  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n+    warn$1('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n+  }\n+  return res;\n+}\n+\n+function validateProp(vm, key, propsData) {\n+  if (!propsData) return;\n+  var prop = vm.$options.props[key];\n+  var absent = hasOwn(propsData, key);\n+  var value = propsData[key];\n+  // check default value\n+  if (value === undefined) {\n+    value = getPropDefaultValue(vm, prop, key);\n+    // since the default value is a fresh copy,\n+    // make sure to observe it.\n+    observerState.shouldConvert = true;\n+    observe(value);\n+    observerState.shouldConvert = false;\n+  }\n+  if (process.env.NODE_ENV !== 'production') {\n+    assertProp(prop, key, value, vm, absent);\n+  }\n+  return value;\n+}\n+\n+/**\n+ * Get the default value of a prop.\n+ *\n+ * @param {Vue} vm\n+ * @param {Object} prop\n+ * @return {*}\n+ */\n+\n+function getPropDefaultValue(vm, prop, name) {\n+  // no default, return undefined\n+  if (!hasOwn(prop, 'default')) {\n+    // absent boolean value defaults to false\n+    return prop.type === Boolean ? false : undefined;\n+  }\n+  var def = prop.default;\n+  // warn against non-factory defaults for Object & Array\n+  if (isObject(def)) {\n+    process.env.NODE_ENV !== 'production' && warn$1('Invalid default value for prop \"' + name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n+  }\n+  // call factory function for non-Function types\n+  return typeof def === 'function' && prop.type !== Function ? def.call(vm) : def;\n+}\n+\n+/**\n+ * Assert whether a prop is valid.\n+ *\n+ * @param {Object} prop\n+ * @param {String} name\n+ * @param {*} value\n+ * @param {Vue} vm\n+ * @param {Boolean} absent\n+ */\n+\n+function assertProp(prop, name, value, vm, absent) {\n+  if (prop.required && absent) {\n+    process.env.NODE_ENV !== 'production' && warn$1('Missing required prop: \"' + name + '\"', vm);\n+    return false;\n+  }\n+  if (value == null) {\n+    return true;\n+  }\n+  var type = prop.type;\n+  var valid = !type;\n+  var expectedTypes = [];\n+  if (type) {\n+    if (!isArray(type)) {\n+      type = [type];\n+    }\n+    for (var i = 0; i < type.length && !valid; i++) {\n+      var assertedType = assertType(value, type[i]);\n+      expectedTypes.push(assertedType.expectedType);\n+      valid = assertedType.valid;\n+    }\n+  }\n+  if (!valid) {\n+    if (process.env.NODE_ENV !== 'production') {\n+      warn$1('Invalid prop: type check failed for prop \"' + name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n+    }\n+    return false;\n+  }\n+  var validator = prop.validator;\n+  if (validator) {\n+    if (!validator(value)) {\n+      process.env.NODE_ENV !== 'production' && warn$1('Invalid prop: custom validator check failed for prop \"' + name + '\".', vm);\n+      return false;\n+    }\n+  }\n+  return true;\n+}\n+\n+/**\n+ * Assert the type of a value\n+ *\n+ * @param {*} value\n+ * @param {Function} type\n+ * @return {Object}\n+ */\n+\n+function assertType(value, type) {\n+  var valid;\n+  var expectedType;\n+  if (type === String) {\n+    expectedType = 'string';\n+    valid = typeof value === expectedType;\n+  } else if (type === Number) {\n+    expectedType = 'number';\n+    valid = typeof value === expectedType;\n+  } else if (type === Boolean) {\n+    expectedType = 'boolean';\n+    valid = typeof value === expectedType;\n+  } else if (type === Function) {\n+    expectedType = 'function';\n+    valid = typeof value === expectedType;\n+  } else if (type === Object) {\n+    expectedType = 'object';\n+    valid = isPlainObject(value);\n+  } else if (type === Array) {\n+    expectedType = 'array';\n+    valid = isArray(value);\n+  } else {\n+    valid = value instanceof type;\n+  }\n+  return {\n+    valid: valid,\n+    expectedType: expectedType\n+  };\n+}\n+\n+/**\n+ * Format type for output\n+ *\n+ * @param {String} type\n+ * @return {String}\n+ */\n+\n+function formatType(type) {\n+  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n+}\n+\n+/**\n+ * Format value\n+ *\n+ * @param {*} value\n+ * @return {String}\n+ */\n+\n+function formatValue(val) {\n+  return Object.prototype.toString.call(val).slice(8, -1);\n+}\n+\n+// attributes that should be using props for binding\n+var mustUseProp = makeMap('value,selected,checked,muted');\n+\n+var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n+\n+var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');\n+\n+var isReservedTag = makeMap('html,base,head,link,meta,style,title,' + 'address,article,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,hr,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template');\n+\n+var isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr', true);\n+\n+// Elements that you can, intentionally, leave open\n+// (and which close themselves)\n+var canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source', true);\n+\n+// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n+// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\n+var isNonPhrasingTag = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' + 'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' + 'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' + 'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' + 'title,tr,track', true);\n+\n+// this map covers namespace elements that can appear as template root nodes\n+var isSVG = makeMap('svg,g,defs,symbol,use,image,text,circle,ellipse,' + 'line,path,polygon,polyline,rect', true);\n+\n+function getTagNamespace(tag) {\n+  if (isSVG(tag)) {\n+    return 'svg';\n+  }\n+  // basic support for MathML\n+  // note it doesn't support other MathML elements being component roots\n+  if (tag === 'math') {\n+    return 'math';\n+  }\n+}\n+\n+var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n+var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n+var isAndroid = UA && UA.indexOf('android') > 0;\n+\n+// Regular Expressions for parsing tags and attributes\n+var singleAttrIdentifier = /([^\\s\"'<>\\/=]+)/;\n+var singleAttrAssign = /=/;\n+var singleAttrAssigns = [singleAttrAssign];\n+var singleAttrValues = [\n+// attr value double quotes\n+/\"([^\"]*)\"+/.source,\n+// attr value, single quotes\n+/'([^']*)'+/.source,\n+// attr value, no quotes\n+/([^\\s\"'=<>`]+)/.source];\n+// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n+// but for Vue templates we can enforce a simple charset\n+var ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\n+var qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\n+var startTagOpen = new RegExp('^<' + qnameCapture);\n+var startTagClose = /^\\s*(\\/?)>/;\n+var endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\n+var doctype = /^<!DOCTYPE [^>]+>/i;\n+\n+var IS_REGEX_CAPTURING_BROKEN = false;\n+'x'.replace(/x(.)?/g, function (m, g) {\n+  IS_REGEX_CAPTURING_BROKEN = g === '';\n+});\n+\n+// Special Elements (can contain anything)\n+var special = makeMap('script,style', true);\n+\n+var reCache = {};\n+\n+function attrForHandler(handler) {\n+  var pattern = singleAttrIdentifier.source + '(?:\\\\s*(' + joinSingleAttrAssigns(handler) + ')' + '\\\\s*(?:' + singleAttrValues.join('|') + '))?';\n+  return new RegExp('^\\\\s*' + pattern);\n+}\n+\n+function joinSingleAttrAssigns(handler) {\n+  return singleAttrAssigns.map(function (assign) {\n+    return '(?:' + assign.source + ')';\n+  }).join('|');\n+}\n+\n+function parseHTML(html, handler) {\n+  var stack = [];\n+  var attribute = attrForHandler(handler);\n+  var expectHTML = handler.expectHTML;\n+  var isUnaryTag = handler.isUnaryTag || function () {\n+    return false;\n+  };\n+  var last = void 0,\n+      prevTag = void 0,\n+      nextTag = void 0,\n+      lastTag = void 0;\n+  while (html) {\n+    last = html;\n+    // Make sure we're not in a script or style element\n+    if (!lastTag || !special(lastTag)) {\n+      var textEnd = html.indexOf('<');\n+      if (textEnd === 0) {\n+        // Comment:\n+        if (/^<!--/.test(html)) {\n+          var commentEnd = html.indexOf('-->');\n+\n+          if (commentEnd >= 0) {\n+            html = html.substring(commentEnd + 3);\n+            prevTag = '';\n+            continue;\n+          }\n+        }\n+\n+        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n+        if (/^<!\\[/.test(html)) {\n+          var conditionalEnd = html.indexOf(']>');\n+\n+          if (conditionalEnd >= 0) {\n+            html = html.substring(conditionalEnd + 2);\n+            prevTag = '';\n+            continue;\n+          }\n+        }\n+\n+        // Doctype:\n+        var doctypeMatch = html.match(doctype);\n+        if (doctypeMatch) {\n+          if (handler.doctype) {\n+            handler.doctype(doctypeMatch[0]);\n+          }\n+          html = html.substring(doctypeMatch[0].length);\n+          prevTag = '';\n+          continue;\n+        }\n+\n+        // End tag:\n+        var endTagMatch = html.match(endTag);\n+        if (endTagMatch) {\n+          html = html.substring(endTagMatch[0].length);\n+          endTagMatch[0].replace(endTag, parseEndTag);\n+          prevTag = '/' + endTagMatch[1].toLowerCase();\n+          continue;\n+        }\n+\n+        // Start tag:\n+        var startTagMatch = parseStartTag(html);\n+        if (startTagMatch) {\n+          html = startTagMatch.rest;\n+          handleStartTag(startTagMatch);\n+          prevTag = startTagMatch.tagName.toLowerCase();\n+          continue;\n+        }\n+      }\n+\n+      var text;\n+      if (textEnd >= 0) {\n+        text = html.substring(0, textEnd);\n+        html = html.substring(textEnd);\n+      } else {\n+        text = html;\n+        html = '';\n+      }\n+\n+      // next tag\n+      var nextTagMatch = parseStartTag(html);\n+      if (nextTagMatch) {\n+        nextTag = nextTagMatch.tagName;\n+      } else {\n+        nextTagMatch = html.match(endTag);\n+        if (nextTagMatch) {\n+          nextTag = '/' + nextTagMatch[1];\n+        } else {\n+          nextTag = '';\n+        }\n+      }\n+\n+      if (handler.chars) {\n+        handler.chars(text, prevTag, nextTag);\n+      }\n+      prevTag = '';\n+    } else {\n+      var stackedTag = lastTag.toLowerCase();\n+      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)</' + stackedTag + '[^>]*>', 'i'));\n+\n+      html = html.replace(reStackedTag, function (all, text) {\n+        if (stackedTag !== 'script' && stackedTag !== 'style' && stackedTag !== 'noscript') {\n+          text = text.replace(/<!--([\\s\\S]*?)-->/g, '$1').replace(/<!\\[CDATA\\[([\\s\\S]*?)\\]\\]>/g, '$1');\n+        }\n+        if (handler.chars) {\n+          handler.chars(text);\n+        }\n+        return '';\n+      });\n+\n+      parseEndTag('</' + stackedTag + '>', stackedTag);\n+    }\n+\n+    if (html === last) {\n+      throw new Error('Error parsing template:\\n\\n' + html);\n+    }\n+  }\n+\n+  if (!handler.partialMarkup) {\n+    // Clean up any remaining tags\n+    parseEndTag();\n+  }\n+\n+  function parseStartTag(input) {\n+    var start = input.match(startTagOpen);\n+    if (start) {\n+      var match = {\n+        tagName: start[1],\n+        attrs: []\n+      };\n+      input = input.slice(start[0].length);\n+      var end, attr;\n+      while (!(end = input.match(startTagClose)) && (attr = input.match(attribute))) {\n+        input = input.slice(attr[0].length);\n+        match.attrs.push(attr);\n+      }\n+      if (end) {\n+        match.unarySlash = end[1];\n+        match.rest = input.slice(end[0].length);\n+        return match;\n+      }\n+    }\n+  }\n+\n+  function handleStartTag(match) {\n+    var tagName = match.tagName;\n+    var unarySlash = match.unarySlash;\n+\n+    if (expectHTML) {\n+      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n+        parseEndTag('', lastTag);\n+      }\n+      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n+        parseEndTag('', tagName);\n+      }\n+    }\n+\n+    var unary = isUnaryTag(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n+\n+    var attrs = match.attrs.map(function (args) {\n+      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n+      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n+        if (args[3] === '') {\n+          delete args[3];\n+        }\n+        if (args[4] === '') {\n+          delete args[4];\n+        }\n+        if (args[5] === '') {\n+          delete args[5];\n+        }\n+      }\n+      return {\n+        name: args[1],\n+        value: entities.decodeHTML(args[3] || args[4] || args[5] || '')\n+      };\n+    });\n+\n+    if (!unary) {\n+      stack.push({ tag: tagName, attrs: attrs });\n+      lastTag = tagName;\n+      unarySlash = '';\n+    }\n+\n+    if (handler.start) {\n+      handler.start(tagName, attrs, unary, unarySlash);\n+    }\n+  }\n+\n+  function parseEndTag(tag, tagName) {\n+    var pos;\n+\n+    // Find the closest opened tag of the same type\n+    if (tagName) {\n+      var needle = tagName.toLowerCase();\n+      for (pos = stack.length - 1; pos >= 0; pos--) {\n+        if (stack[pos].tag.toLowerCase() === needle) {\n+          break;\n+        }\n+      }\n+    } else {\n+      // If no tag name is provided, clean shop\n+      pos = 0;\n+    }\n+\n+    if (pos >= 0) {\n+      // Close all the open elements, up the stack\n+      for (var i = stack.length - 1; i >= pos; i--) {\n+        if (handler.end) {\n+          handler.end(stack[i].tag, stack[i].attrs, i > pos || !tag);\n+        }\n+      }\n+\n+      // Remove the open elements from the stack\n+      stack.length = pos;\n+      lastTag = pos && stack[pos - 1].tag;\n+    } else if (tagName.toLowerCase() === 'br') {\n+      if (handler.start) {\n+        handler.start(tagName, [], true, '');\n+      }\n+    } else if (tagName.toLowerCase() === 'p') {\n+      if (handler.start) {\n+        handler.start(tagName, [], false, '', true);\n+      }\n+      if (handler.end) {\n+        handler.end(tagName, []);\n+      }\n+    }\n+  }\n+}\n+\n+var tagRE = /\\{\\{((?:.|\\\\n)+?)\\}\\}/g;\n+\n+function parseText(text) {\n+  if (!tagRE.test(text)) {\n+    return null;\n+  }\n+  var tokens = [];\n+  var lastIndex = tagRE.lastIndex = 0;\n+  var match, index;\n+  while (match = tagRE.exec(text)) {\n+    index = match.index;\n+    // push text token\n+    if (index > lastIndex) {\n+      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n+    }\n+    // tag token\n+    var exp = match[1].trim();\n+    tokens.push('__toString__(' + exp + ')');\n+    lastIndex = index + match[0].length;\n+  }\n+  if (lastIndex < text.length) {\n+    tokens.push(JSON.stringify(text.slice(lastIndex)));\n+  }\n+  return tokens.join('+');\n+}\n+\n+function addProp(el, name, value) {\n+  (el.props || (el.props = [])).push({ name: name, value: value });\n+}\n+\n+function addAttr(el, name, value) {\n+  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n+}\n+\n+function addStaticAttr(el, name, value) {\n+  (el.staticAttrs || (el.staticAttrs = [])).push({ name: name, value: value });\n+}\n+\n+function addDirective(el, name, value, arg, modifiers) {\n+  (el.directives || (el.directives = [])).push({ name: name, value: value, arg: arg, modifiers: modifiers });\n+}\n+\n+function addHook(el, name, code) {\n+  var hooks = el.hooks || (el.hooks = {});\n+  var hook = hooks[name];\n+  if (hook) {\n+    hook.push(code);\n+  } else {\n+    hooks[name] = [code];\n+  }\n+}\n+\n+function addHandler(el, name, value, modifiers) {\n+  var events = el.events || (el.events = {});\n+  // check capture modifier\n+  if (modifiers && modifiers.capture) {\n+    delete modifiers.capture;\n+    name = '!' + name; // mark the event as captured\n+  }\n+  var newHandler = { value: value, modifiers: modifiers };\n+  var handlers = events[name];\n+  if (isArray(handlers)) {\n+    handlers.push(newHandler);\n+  } else if (handlers) {\n+    events[name] = [handlers, newHandler];\n+  } else {\n+    events[name] = newHandler;\n+  }\n+}\n+\n+function getBindingAttr(el, name, getStatic) {\n+  var staticValue = getStatic !== false && getAndRemoveAttr(el, name);\n+  return staticValue || staticValue === '' ? JSON.stringify(staticValue) : getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);\n+}\n+\n+function getAndRemoveAttr(el, name) {\n+  var val = void 0;\n+  if ((val = el.attrsMap[name]) != null) {\n+    el.attrsMap[name] = null;\n+    var list = el.attrsList;\n+    for (var i = 0, l = list.length; i < l; i++) {\n+      if (list[i].name === name) {\n+        list.splice(i, 1);\n+        break;\n+      }\n+    }\n+  }\n+  return val;\n+}\n+\n+var dirRE = /^v-|^@|^:/;\n+var bindRE = /^:|^v-bind:/;\n+var onRE = /^@|^v-on:/;\n+var argRE = /:(.*)$/;\n+var modifierRE = /\\.[^\\.]+/g;\n+var forAliasRE = /(.*)\\s+(?:in|of)\\s+(.*)/;\n+var forIteratorRE = /\\((.*),(.*)\\)/;\n+var camelRE = /[a-z\\d][A-Z]/;\n+\n+var decodeHTMLCached = cached(entities.decodeHTML);\n+\n+// make warning customizable depending on environment.\n+var warn = void 0;\n+var baseWarn = function baseWarn(msg) {\n+  return console.error('[Vue parser]: ' + msg);\n+};\n+\n+// platform-injected util functions\n+var platformGetTagNamespace = void 0;\n+var platformMustUseProp = void 0;\n+\n+/**\n+ * Convert HTML string to AST.\n+ *\n+ * @param {String} template\n+ * @param {Object} options\n+ * @return {Object}\n+ */\n+\n+function parse(template, options) {\n+  warn = options.warn || baseWarn;\n+  platformGetTagNamespace = options.getTagNamespace || function () {\n+    return null;\n+  };\n+  platformMustUseProp = options.mustUseProp || function () {\n+    return false;\n+  };\n+  var stack = [];\n+  var root = void 0;\n+  var currentParent = void 0;\n+  var inPre = false;\n+  var warned = false;\n+  parseHTML(template, {\n+    expectHTML: options.expectHTML,\n+    isUnaryTag: options.isUnaryTag,\n+    start: function start(tag, attrs, unary) {\n+      // check camelCase tag\n+      if (camelRE.test(tag)) {\n+        process.env.NODE_ENV !== 'production' && warn('Found camelCase tag in template: <' + tag + '>. ' + ('I\\'ve converted it to <' + hyphenate(tag) + '> for you.'));\n+        tag = hyphenate(tag);\n+      }\n+\n+      tag = tag.toLowerCase();\n+      var element = {\n+        tag: tag,\n+        attrsList: attrs,\n+        attrsMap: makeAttrsMap(attrs),\n+        parent: currentParent,\n+        children: []\n+      };\n+\n+      // check namespace.\n+      // inherit parent ns if there is one\n+      var ns = void 0;\n+      if ((ns = currentParent && currentParent.ns) || (ns = platformGetTagNamespace(tag))) {\n+        element.ns = ns;\n+      }\n+\n+      if (!inPre) {\n+        processPre(element);\n+        if (element.pre) {\n+          inPre = true;\n+        }\n+      }\n+      if (inPre) {\n+        processRawAttrs(element);\n+      } else {\n+        processFor(element);\n+        processIf(element);\n+        processOnce(element);\n+        // determine whether this is a plain element after\n+        // removing if/for/once attributes\n+        element.plain = !attrs.length;\n+        processRender(element);\n+        processSlot(element);\n+        processComponent(element);\n+        processClassBinding(element);\n+        processStyleBinding(element);\n+        processTransition(element);\n+        processAttrs(element);\n+      }\n+\n+      // tree management\n+      if (!root) {\n+        root = element;\n+      } else if (process.env.NODE_ENV !== 'production' && !stack.length && !warned) {\n+        warned = true;\n+        warn('Component template should contain exactly one root element:\\n\\n' + template);\n+      }\n+      if (currentParent) {\n+        if (element.else) {\n+          processElse(element, currentParent);\n+        } else {\n+          currentParent.children.push(element);\n+          element.parent = currentParent;\n+        }\n+      }\n+      if (!unary) {\n+        currentParent = element;\n+        stack.push(element);\n+      }\n+    },\n+    end: function end(tag) {\n+      // remove trailing whitespace\n+      var element = stack[stack.length - 1];\n+      var lastNode = element.children[element.children.length - 1];\n+      if (lastNode && lastNode.text === ' ') element.children.pop();\n+      // pop stack\n+      stack.length -= 1;\n+      currentParent = stack[stack.length - 1];\n+      // check pre state\n+      if (element.pre) {\n+        inPre = false;\n+      }\n+    },\n+    chars: function chars(text) {\n+      if (!currentParent) {\n+        if (process.env.NODE_ENV !== 'production' && !warned) {\n+          warned = true;\n+          warn('Component template should contain exactly one root element:\\n\\n' + template);\n+        }\n+        return;\n+      }\n+      text = currentParent.tag === 'pre' || text.trim() ? decodeHTMLCached(text)\n+      // only preserve whitespace if its not right after a starting tag\n+      : options.preserveWhitespace && currentParent.children.length ? ' ' : null;\n+      if (text) {\n+        var expression = void 0;\n+        if (!inPre && text !== ' ' && (expression = parseText(text))) {\n+          currentParent.children.push({ expression: expression });\n+        } else {\n+          currentParent.children.push({ text: text });\n+        }\n+      }\n+    }\n+  });\n+  return root;\n+}\n+\n+function processPre(el) {\n+  if (getAndRemoveAttr(el, 'v-pre') != null) {\n+    el.pre = true;\n+  }\n+}\n+\n+function processRawAttrs(el) {\n+  var l = el.attrsList.length;\n+  if (l) {\n+    el.attrs = new Array(l);\n+    for (var i = 0; i < l; i++) {\n+      el.attrs[i] = {\n+        name: el.attrsList[i].name,\n+        value: JSON.stringify(el.attrsList[i].value)\n+      };\n+    }\n+  }\n+}\n+\n+function processFor(el) {\n+  var exp = void 0;\n+  if (exp = getAndRemoveAttr(el, 'v-for')) {\n+    var inMatch = exp.match(forAliasRE);\n+    if (!inMatch) {\n+      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression: ' + exp);\n+      return;\n+    }\n+    el.for = inMatch[2].trim();\n+    var alias = inMatch[1].trim();\n+    var iteratorMatch = alias.match(forIteratorRE);\n+    if (iteratorMatch) {\n+      el.iterator = iteratorMatch[1].trim();\n+      el.alias = iteratorMatch[2].trim();\n+    } else {\n+      el.alias = alias;\n+    }\n+    if (exp = getAndRemoveAttr(el, 'track-by')) {\n+      el.key = exp === '$index' ? exp : el.alias + '[\"' + exp + '\"]';\n+    }\n+  }\n+}\n+\n+function processIf(el) {\n+  var exp = getAndRemoveAttr(el, 'v-if');\n+  if (exp) {\n+    el.if = exp;\n+  }\n+  if (getAndRemoveAttr(el, 'v-else') != null) {\n+    el.else = true;\n+  }\n+}\n+\n+function processElse(el, parent) {\n+  var prev = findPrevElement(parent.children);\n+  if (prev && (prev.if || prev.attrsMap['v-show'])) {\n+    if (prev.if) {\n+      // v-if\n+      prev.elseBlock = el;\n+    } else {\n+      // v-show: simply add a v-show with reversed value\n+      addDirective(el, 'show', '!(' + prev.attrsMap['v-show'] + ')');\n+      // also copy its transition\n+      el.transition = prev.transition;\n+      // als set show to true\n+      el.show = true;\n+      parent.children.push(el);\n+    }\n+  } else if (process.env.NODE_ENV !== 'production') {\n+    warn('v-else used on element <' + el.tag + '> without corresponding v-if/v-show.');\n+  }\n+}\n+\n+function processOnce(el) {\n+  var once = getAndRemoveAttr(el, 'v-once');\n+  if (once != null) {\n+    el.once = true;\n+  }\n+}\n+\n+function processRender(el) {\n+  if (el.tag === 'render') {\n+    el.render = true;\n+    el.renderMethod = el.attrsMap.method;\n+    el.renderArgs = el.attrsMap[':args'] || el.attrsMap['v-bind:args'];\n+    if (process.env.NODE_ENV !== 'production') {\n+      if (!el.renderMethod) {\n+        warn('method attribute is required on <render>.');\n+      }\n+      if (el.attrsMap.args) {\n+        warn('<render> args should use a dynamic binding, e.g. `:args=\"...\"`.');\n+      }\n+    }\n+  }\n+}\n+\n+function processSlot(el) {\n+  if (el.tag === 'slot') {\n+    el.slotName = getBindingAttr(el, 'name');\n+  } else {\n+    var slotTarget = getBindingAttr(el, 'slot');\n+    if (slotTarget) {\n+      el.slotTarget = slotTarget;\n+    }\n+  }\n+}\n+\n+function processComponent(el) {\n+  if (el.tag === 'component') {\n+    el.component = getBindingAttr(el, 'is');\n+  }\n+}\n+\n+function processClassBinding(el) {\n+  var staticClass = getAndRemoveAttr(el, 'class');\n+  el.staticClass = parseText(staticClass) || JSON.stringify(staticClass);\n+  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n+  if (classBinding) {\n+    el.classBinding = classBinding;\n+  }\n+}\n+\n+function processStyleBinding(el) {\n+  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n+  if (styleBinding) {\n+    el.styleBinding = styleBinding;\n+  }\n+}\n+\n+function processTransition(el) {\n+  var transition = getBindingAttr(el, 'transition');\n+  if (transition === '\"\"') {\n+    transition = true;\n+  }\n+  if (transition) {\n+    el.transition = transition;\n+    el.transitionOnAppear = getBindingAttr(el, 'transition-on-appear') != null;\n+  }\n+}\n+\n+function processAttrs(el) {\n+  var list = el.attrsList;\n+  var i = void 0,\n+      l = void 0,\n+      name = void 0,\n+      value = void 0,\n+      arg = void 0,\n+      modifiers = void 0;\n+  for (i = 0, l = list.length; i < l; i++) {\n+    name = list[i].name;\n+    value = list[i].value;\n+    if (dirRE.test(name)) {\n+      // modifiers\n+      modifiers = parseModifiers(name);\n+      if (modifiers) {\n+        name = name.replace(modifierRE, '');\n+      }\n+      if (bindRE.test(name)) {\n+        // v-bind\n+        name = name.replace(bindRE, '');\n+        if (platformMustUseProp(name)) {\n+          addProp(el, name, value);\n+        } else {\n+          addAttr(el, name, value);\n+        }\n+      } else if (onRE.test(name)) {\n+        // v-on\n+        name = name.replace(onRE, '');\n+        addHandler(el, name, value, modifiers);\n+      } else {\n+        // normal directives\n+        name = name.replace(dirRE, '');\n+        // parse arg\n+        if ((arg = name.match(argRE)) && (arg = arg[1])) {\n+          name = name.slice(0, -(arg.length + 1));\n+        }\n+        addDirective(el, name, value, arg, modifiers);\n+      }\n+    } else {\n+      // literal attribute\n+      var expression = parseText(value);\n+      if (expression) {\n+        warn('Interpolation inside attributes has been deprecated. ' + 'Use v-bind or the colon shorthand instead.');\n+      } else {\n+        addStaticAttr(el, name, JSON.stringify(value));\n+      }\n+    }\n+  }\n+}\n+\n+function parseModifiers(name) {\n+  var match = name.match(modifierRE);\n+  if (match) {\n+    var _ret = function () {\n+      var ret = {};\n+      match.forEach(function (m) {\n+        ret[m.slice(1)] = true;\n+      });\n+      return {\n+        v: ret\n+      };\n+    }();\n+\n+    if (typeof _ret === \"object\") return _ret.v;\n+  }\n+}\n+\n+function makeAttrsMap(attrs) {\n+  var map = {};\n+  for (var i = 0, l = attrs.length; i < l; i++) {\n+    if (process.env.NODE_ENV !== 'production' && map[attrs[i].name]) {\n+      warn('duplicate attribute: ' + attrs[i].name);\n+    }\n+    map[attrs[i].name] = attrs[i].value;\n+  }\n+  return map;\n+}\n+\n+function findPrevElement(children) {\n+  var i = children.length;\n+  while (i--) {\n+    if (children[i].tag) return children[i];\n+  }\n+}\n+\n+var isPlatformReservedTag = void 0;\n+\n+/**\n+ * Goal of the optimizier: walk the generated template AST tree\n+ * and detect sub-trees that are purely static, i.e. parts of\n+ * the DOM that never needs to change.\n+ *\n+ * Once we detect these sub-trees, we can:\n+ *\n+ * 1. Hoist them into constants, so that we no longer need to\n+ *    create fresh nodes for them on each re-render;\n+ * 2. Completely skip them in the patching process.\n+ */\n+\n+function optimize(root, options) {\n+  isPlatformReservedTag = options.isReservedTag || function () {\n+    return false;\n+  };\n+  // first pass: mark all non-static nodes.\n+  markStatic(root);\n+  // second pass: mark static roots.\n+  markStaticRoots(root);\n+}\n+\n+function markStatic(node) {\n+  node.static = isStatic(node);\n+  if (node.children) {\n+    for (var i = 0, l = node.children.length; i < l; i++) {\n+      var child = node.children[i];\n+      markStatic(child);\n+      if (!child.static) {\n+        node.static = false;\n+      }\n+    }\n+  }\n+}\n+\n+function markStaticRoots(node) {\n+  if (node.tag && (node.once || node.static)) {\n+    node.staticRoot = true;\n+    return;\n+  }\n+  if (node.children) {\n+    for (var i = 0, l = node.children.length; i < l; i++) {\n+      markStaticRoots(node.children[i]);\n+    }\n+  }\n+}\n+\n+var isStaticKey = makeMap('tag,attrsList,attrsMap,plain,parent,children,' + 'staticAttrs,staticClass');\n+\n+function isStatic(node) {\n+  return !!(node.text || node.pre || !node.expression && // not text with interpolation\n+  !node.if && !node.for && ( // not v-if or v-for or v-else\n+  !node.tag || isPlatformReservedTag(node.tag)) && // not a component\n+  !isBuiltInTag(node.tag) && ( // not a built-in\n+  node.plain || Object.keys(node).every(isStaticKey)) // no dynamic bindings\n+  );\n+}\n+\n+var simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n+\n+// keyCode aliases\n+var keyCodes = {\n+  esc: 27,\n+  tab: 9,\n+  enter: 13,\n+  space: 32,\n+  up: 38,\n+  left: 37,\n+  right: 39,\n+  down: 40,\n+  'delete': [8, 46]\n+};\n+\n+var modifierCode = {\n+  stop: '$event.stopPropagation();',\n+  prevent: '$event.preventDefault();',\n+  self: 'if($event.target !== $event.currentTarget)return;'\n+};\n+\n+function genHandlers(events) {\n+  var res = 'on:{';\n+  for (var name in events) {\n+    res += '\"' + name + '\":' + genHandler(events[name]) + ',';\n+  }\n+  return res.slice(0, -1) + '}';\n+}\n+\n+function genHandler(handler) {\n+  if (!handler) {\n+    return 'function(){}';\n+  } else if (isArray(handler)) {\n+    return '[' + handler.map(genHandler).join(',') + ']';\n+  } else if (!handler.modifiers) {\n+    return simplePathRE.test(handler.value) ? handler.value : 'function($event){' + handler.value + '}';\n+  } else {\n+    var code = 'function($event){';\n+    for (var key in handler.modifiers) {\n+      code += modifierCode[key] || genKeyFilter(key);\n+    }\n+    var handlerCode = simplePathRE.test(handler.value) ? handler.value + '($event)' : handler.value;\n+    return code + handlerCode + '}';\n+  }\n+}\n+\n+function genKeyFilter(key) {\n+  var code = keyCodes[key];\n+  if (isArray(code)) {\n+    return 'if(' + code.map(function (c) {\n+      return '$event.keyCode!==' + c;\n+    }).join('&&') + ')return;';\n+  } else {\n+    return 'if($event.keyCode!==' + code + ')return;';\n+  }\n+}\n+\n+function ref(el, dir) {\n+  // go up and check if this node is inside a v-for\n+  var isFor = false;\n+  var parent = el;\n+  while (parent) {\n+    if (parent.for !== undefined) {\n+      isFor = true;\n+    }\n+    parent = parent.parent;\n+  }\n+  // __registerRef__(name, ref, vFor?, remove?)\n+  var code = '__registerRef__(\"' + dir.arg + '\", n1.child || n1.elm, ' + (isFor ? 'true' : 'false');\n+  addHook(el, 'insert', code + ')');\n+  addHook(el, 'destroy', code + ', true)');\n+}\n+\n+var baseDirectives = {\n+  ref: ref,\n+  cloak: function cloak() {} // noop\n+};\n+\n+// platform-injected utils\n+var platformDirectives = void 0;\n+var isPlatformReservedTag$1 = void 0;\n+\n+// reset on each call\n+var staticRenderFns = void 0;\n+\n+function generate(ast, options) {\n+  staticRenderFns = [];\n+  platformDirectives = options.directives || {};\n+  isPlatformReservedTag$1 = options.isReservedTag || function () {\n+    return false;\n+  };\n+  var code = ast ? genElement(ast) : '__h__(\"div\")';\n+  return {\n+    render: 'with (this) { return ' + code + '}',\n+    staticRenderFns: staticRenderFns\n+  };\n+}\n+\n+function genElement(el) {\n+  if (el.for) {\n+    return genFor(el);\n+  } else if (el.if) {\n+    return genIf(el);\n+  } else if (el.tag === 'template' && !el.slotTarget) {\n+    return genChildren(el);\n+  } else if (el.tag === 'render') {\n+    return genRender(el);\n+  } else if (el.tag === 'slot') {\n+    return genSlot(el);\n+  } else if (el.tag === 'component') {\n+    return genComponent(el);\n+  } else {\n+    // if the element is potentially a component,\n+    // wrap its children as a thunk.\n+    var children = genChildren(el, !isPlatformReservedTag$1(el.tag) /* asThunk */);\n+    var code = '__h__(\\'' + el.tag + '\\', ' + genData(el) + ', ' + children + ', \\'' + (el.ns || '') + '\\')';\n+    if (el.staticRoot) {\n+      // hoist static sub-trees out\n+      staticRenderFns.push('with(this){return ' + code + '}');\n+      return '_staticTrees[' + (staticRenderFns.length - 1) + ']';\n+    } else {\n+      return code;\n+    }\n+  }\n+}\n+\n+function genIf(el) {\n+  var exp = el.if;\n+  el.if = false; // avoid recursion\n+  return '(' + exp + ') ? ' + genElement(el) + ' : ' + genElse(el);\n+}\n+\n+function genElse(el) {\n+  return el.elseBlock ? genElement(el.elseBlock) : 'null';\n+}\n+\n+function genFor(el) {\n+  var exp = el.for;\n+  var alias = el.alias;\n+  var iterator = el.iterator;\n+  el.for = false; // avoid recursion\n+  return '(' + exp + ')&&__renderList__((' + exp + '), ' + ('function(' + alias + ',$index' + (iterator ? ',' + iterator : '') + '){') + ('return ' + genElement(el)) + '})';\n+}\n+\n+function genData(el) {\n+  if (el.plain) {\n+    return 'undefined';\n+  }\n+\n+  var data = '{';\n+\n+  // directives first.\n+  // directives may mutate the el's other properties before they are generated.\n+  if (el.directives) {\n+    var dirs = genDirectives(el);\n+    if (dirs) data += dirs + ',';\n+  }\n+  // pre\n+  if (el.pre) {\n+    data += 'pre:true,';\n+  }\n+  // key\n+  if (el.key) {\n+    data += 'key:' + el.key + ',';\n+  }\n+  // slot target\n+  if (el.slotTarget) {\n+    data += 'slot:' + el.slotTarget + ',';\n+  }\n+  // class\n+  if (el.staticClass) {\n+    data += 'staticClass:' + el.staticClass + ',';\n+  }\n+  if (el.classBinding) {\n+    data += 'class:' + el.classBinding + ',';\n+  }\n+  // style\n+  if (el.styleBinding) {\n+    data += 'style:' + el.styleBinding + ',';\n+  }\n+  // transition\n+  if (el.transition) {\n+    data += 'transition:{definition:(' + el.transition + '),appear:' + el.transitionOnAppear + '},';\n+  }\n+  // v-show, used to avoid transition being applied\n+  // since v-show takes it over\n+  if (el.attrsMap['v-show'] || el.show) {\n+    data += 'show:true,';\n+  }\n+  // props\n+  if (el.props) {\n+    data += 'props:{' + genProps(el.props) + '},';\n+  }\n+  // attributes\n+  if (el.attrs) {\n+    data += 'attrs:{' + genProps(el.attrs) + '},';\n+  }\n+  // static attributes\n+  if (el.staticAttrs) {\n+    data += 'staticAttrs:{' + genProps(el.staticAttrs) + '},';\n+  }\n+  // hooks\n+  if (el.hooks) {\n+    data += 'hook:{' + genHooks(el.hooks) + '},';\n+  }\n+  // event handlers\n+  if (el.events) {\n+    data += genHandlers(el.events);\n+  }\n+  return data.replace(/,$/, '') + '}';\n+}\n+\n+function genDirectives(el) {\n+  var dirs = el.directives;\n+  var res = 'directives:[';\n+  var hasRuntime = false;\n+  var i = void 0,\n+      l = void 0,\n+      dir = void 0,\n+      needRuntime = void 0;\n+  for (i = 0, l = dirs.length; i < l; i++) {\n+    dir = dirs[i];\n+    needRuntime = true;\n+    var gen = platformDirectives[dir.name] || baseDirectives[dir.name];\n+    if (gen) {\n+      // compile-time directive that manipulates AST.\n+      // returns true if it also needs a runtime counterpart.\n+      needRuntime = !!gen(el, dir);\n+    }\n+    if (needRuntime) {\n+      hasRuntime = true;\n+      res += '{name:\"' + dir.name + '\"' + (dir.value ? ',value:(' + dir.value + ')' : '') + (dir.arg ? ',arg:\"' + dir.arg + '\"' : '') + (dir.modifiers ? ',modifiers:' + JSON.stringify(dir.modifiers) : '') + '},';\n+    }\n+  }\n+  if (hasRuntime) {\n+    return res.slice(0, -1) + ']';\n+  }\n+}\n+\n+function genChildren(el, asThunk) {\n+  if (!el.children.length) {\n+    return 'undefined';\n+  }\n+  var code = '[' + el.children.map(genNode).join(',') + ']';\n+  return asThunk ? 'function(){return ' + code + '}' : code;\n+}\n+\n+function genNode(node) {\n+  if (node.tag) {\n+    return genElement(node);\n+  } else {\n+    return genText(node);\n+  }\n+}\n+\n+function genText(text) {\n+  return text.expression ? '(' + text.expression + ')' : JSON.stringify(text.text);\n+}\n+\n+function genRender(el) {\n+  return el.renderMethod + '(' + (el.renderArgs || 'null') + ',' + genChildren(el) + ')';\n+}\n+\n+function genSlot(el) {\n+  var name = el.slotName || '\"default\"';\n+  return '($slots[' + name + '] || ' + genChildren(el) + ')';\n+}\n+\n+function genComponent(el) {\n+  return '__h__(' + el.component + ', ' + genData(el) + ', ' + genChildren(el, true) + ')';\n+}\n+\n+function genProps(props) {\n+  var res = '';\n+  for (var i = 0; i < props.length; i++) {\n+    var prop = props[i];\n+    res += '\"' + prop.name + '\":' + prop.value + ',';\n+  }\n+  return res.slice(0, -1);\n+}\n+\n+function genHooks(hooks) {\n+  var res = '';\n+  for (var key in hooks) {\n+    res += '\"' + key + '\":function(n1,n2){' + hooks[key].join(';') + '},';\n+  }\n+  return res.slice(0, -1);\n+}\n+\n+/**\n+ * Compile a template.\n+ *\n+ * @param {String} template\n+ * @param {Object} options\n+ *                 - warn\n+ *                 - directives\n+ *                 - isReservedTag\n+ *                 - mustUseProp\n+ *                 - getTagNamespace\n+ */\n+\n+function compile$1(template, options) {\n+  var ast = parse(template.trim(), options);\n+  optimize(ast, options);\n+  return generate(ast, options);\n+}\n+\n+function model(el, dir) {\n+  var value = dir.value;\n+  var modifiers = dir.modifiers;\n+  if (el.tag === 'select') {\n+    if (el.attrsMap.multiple != null) {\n+      genMultiSelect(el, value);\n+    } else {\n+      genSelect(el, value);\n+    }\n+  } else {\n+    switch (el.attrsMap.type) {\n+      case 'checkbox':\n+        genCheckboxModel(el, value);\n+        break;\n+      case 'radio':\n+        genRadioModel(el, value);\n+        break;\n+      default:\n+        return genDefaultModel(el, value, modifiers);\n+    }\n+  }\n+}\n+\n+function genCheckboxModel(el, value) {\n+  var valueBinding = getBindingAttr(el, 'value');\n+  addProp(el, 'checked', 'Array.isArray(' + value + ')' + ('?(' + value + ').indexOf(' + valueBinding + ')>-1') + (':!!(' + value + ')'));\n+  addHandler(el, 'change', 'var $$a=' + value + ',' + '$$el=$event.target,' + '$$c=$$el.checked;' + 'if(Array.isArray($$a)){' + ('var $$v=' + valueBinding + ',') + '$$i=$$a.indexOf($$v);' + 'if($$c){$$i<0&&$$a.push($$v)}' + 'else{$$i>-1&&$$a.splice($$i,1)}' + ('}else{' + value + '=$$c}'));\n+}\n+\n+function genRadioModel(el, value) {\n+  var valueBinding = getBindingAttr(el, 'value');\n+  addProp(el, 'checked', '(' + value + '==' + valueBinding + ')');\n+  addHandler(el, 'change', value + '=' + valueBinding);\n+}\n+\n+function genDefaultModel(el, value, modifiers) {\n+  var type = el.attrsMap.type;\n+\n+  var _ref = modifiers || {};\n+\n+  var lazy = _ref.lazy;\n+  var number = _ref.number;\n+  var trim = _ref.trim;\n+\n+  var event = lazy ? 'change' : 'input';\n+  var needCompositionGuard = !lazy && type !== 'range';\n+\n+  var valueExpression = '$event.target.value' + (trim ? '.trim()' : '');\n+  var code = number || type === 'number' ? value + '=Number(' + valueExpression + ')' : value + '=' + valueExpression;\n+  if (needCompositionGuard) {\n+    code = 'if($event.target.composing)return;' + code;\n+  }\n+  addProp(el, 'value', '(' + value + ')');\n+  addHandler(el, event, code);\n+  if (needCompositionGuard) {\n+    // need runtime directive code to help with composition events\n+    return true;\n+  }\n+}\n+\n+var getSelectedValueCode = 'Array.prototype.filter' + '.call($event.target.options,function(o){return o.selected})' + '.map(function(o){return \"_value\" in o ? o._value : o.value})';\n+\n+function patchChildOptions(el, fn) {\n+  for (var i = 0; i < el.children.length; i++) {\n+    var c = el.children[i];\n+    if (c.tag === 'option') {\n+      addProp(c, 'selected', fn(getBindingAttr(c, 'value')));\n+    }\n+  }\n+}\n+\n+function genSelect(el, value) {\n+  addHandler(el, 'change', value + '=' + getSelectedValueCode + '[0]');\n+  patchChildOptions(el, function (valueBinding) {\n+    return '$(' + value + ')===(' + valueBinding + ')';\n+  });\n+}\n+\n+function genMultiSelect(el, value) {\n+  addHandler(el, 'change', value + '=' + getSelectedValueCode);\n+  patchChildOptions(el, function (valueBinding) {\n+    return '$(' + value + ').indexOf(' + valueBinding + ')>-1';\n+  });\n+}\n+\n+function text(el, dir) {\n+  if (!dir.value) return;\n+  addProp(el, 'textContent', '__toString__(' + dir.value + ')');\n+}\n+\n+function html(el, dir) {\n+  if (!dir.value) return;\n+  addProp(el, 'innerHTML', '__toString__(' + dir.value + ')');\n+}\n+\n+var directives = {\n+  model: model,\n+  text: text,\n+  html: html\n+};\n+\n+var cache1 = Object.create(null);\n+var cache2 = Object.create(null);\n+\n+var baseOptions = {\n+  expectHTML: true,\n+  directives: directives,\n+  isReservedTag: isReservedTag,\n+  isUnaryTag: isUnaryTag,\n+  mustUseProp: mustUseProp,\n+  getTagNamespace: getTagNamespace\n+};\n+\n+function compile(template, options) {\n+  options = options ? extend(extend({}, baseOptions), options) : baseOptions;\n+  return compile$1(template, options);\n+}\n+\n+function compileToFunctions(template) {\n+  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n+\n+  var preserveWhitespace = options.preserveWhitespace !== false;\n+  var cache = preserveWhitespace ? cache1 : cache2;\n+  if (cache[template]) {\n+    return cache[template];\n+  }\n+  var res = {};\n+  var compiled = compile(template, { preserveWhitespace: preserveWhitespace });\n+  res.render = new Function(compiled.render);\n+  var l = compiled.staticRenderFns.length;\n+  if (l) {\n+    res.staticRenderFns = new Array(l);\n+    for (var i = 0; i < l; i++) {\n+      res.staticRenderFns[i] = new Function(compiled.staticRenderFns[i]);\n+    }\n+  }\n+  return cache[template] = res;\n+}\n+\n+exports.compile = compile;\n+exports.compileToFunctions = compileToFunctions;\n",
            "-": ""
          }
        ],
        "a/dist/server-renderer.js": [
          {
            "+": "+'use strict';\n+\n+function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n+\n+var stream = _interopDefault(require('stream'));\n+\n+var babelHelpers = {};\n+\n+babelHelpers.classCallCheck = function (instance, Constructor) {\n+  if (!(instance instanceof Constructor)) {\n+    throw new TypeError(\"Cannot call a class as a function\");\n+  }\n+};\n+\n+babelHelpers.createClass = function () {\n+  function defineProperties(target, props) {\n+    for (var i = 0; i < props.length; i++) {\n+      var descriptor = props[i];\n+      descriptor.enumerable = descriptor.enumerable || false;\n+      descriptor.configurable = true;\n+      if (\"value\" in descriptor) descriptor.writable = true;\n+      Object.defineProperty(target, descriptor.key, descriptor);\n+    }\n+  }\n+\n+  return function (Constructor, protoProps, staticProps) {\n+    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n+    if (staticProps) defineProperties(Constructor, staticProps);\n+    return Constructor;\n+  };\n+}();\n+\n+babelHelpers.inherits = function (subClass, superClass) {\n+  if (typeof superClass !== \"function\" && superClass !== null) {\n+    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n+  }\n+\n+  subClass.prototype = Object.create(superClass && superClass.prototype, {\n+    constructor: {\n+      value: subClass,\n+      enumerable: false,\n+      writable: true,\n+      configurable: true\n+    }\n+  });\n+  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n+};\n+\n+babelHelpers.possibleConstructorReturn = function (self, call) {\n+  if (!self) {\n+    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n+  }\n+\n+  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n+};\n+\n+babelHelpers;\n+\n+function renderStartingTag(node, modules, directives) {\n+  var markup = '<' + node.tag;\n+  if (node.data) {\n+    // check directives\n+    var dirs = node.data.directives;\n+    if (dirs) {\n+      for (var i = 0; i < dirs.length; i++) {\n+        var dirRenderer = directives[dirs[i].name];\n+        if (dirRenderer) {\n+          // directives mutate the node's data\n+          // which then gets rendered by modules\n+          dirRenderer(node, dirs[i]);\n+        }\n+      }\n+    }\n+    // apply other modules\n+    for (var _i = 0; _i < modules.length; _i++) {\n+      var res = modules[_i](node);\n+      if (res) {\n+        markup += res;\n+      }\n+    }\n+  }\n+  return markup + '>';\n+}\n+\n+function createSyncRenderer(modules, directives, isUnaryTag) {\n+  function renderComponent(component, isRoot) {\n+    component.$mount();\n+    return renderNode(component._vnode, isRoot);\n+  }\n+\n+  function renderNode(node, isRoot) {\n+    if (node.componentOptions) {\n+      node.data.hook.init(node);\n+      return renderComponent(node.child, isRoot);\n+    } else {\n+      return node.tag ? renderElement(node, isRoot) : node.text;\n+    }\n+  }\n+\n+  function renderElement(el, isRoot) {\n+    if (isRoot) {\n+      if (!el.data) el.data = {};\n+      if (!el.data.attrs) el.data.attrs = {};\n+      el.data.attrs['server-rendered'] = true;\n+    }\n+    var startTag = renderStartingTag(el, modules, directives);\n+    var endTag = '</' + el.tag + '>';\n+    if (isUnaryTag(el.tag)) {\n+      return startTag;\n+    } else if (!el.children || !el.children.length) {\n+      return startTag + endTag;\n+    } else {\n+      var children = '';\n+      for (var i = 0; i < el.children.length; i++) {\n+        children += renderNode(el.children[i]);\n+      }\n+      return startTag + children + endTag;\n+    }\n+  }\n+\n+  return function renderToString(component) {\n+    return renderComponent(component, true);\n+  };\n+}\n+\n+var MAX_STACK_DEPTH = 500;\n+\n+/**\n+ * Original RenderStream implmentation by Sasha Aickin (@aickin)\n+ * Licensed under the Apache License, Version 2.0\n+ * Modified by Evan You (@yyx990803)\n+ */\n+\n+var RenderStream = function (_stream$Readable) {\n+  babelHelpers.inherits(RenderStream, _stream$Readable);\n+\n+  function RenderStream(render) {\n+    babelHelpers.classCallCheck(this, RenderStream);\n+\n+    var _this = babelHelpers.possibleConstructorReturn(this, Object.getPrototypeOf(RenderStream).call(this));\n+\n+    _this.buffer = '';\n+    _this.render = render;\n+    return _this;\n+  }\n+\n+  babelHelpers.createClass(RenderStream, [{\n+    key: '_read',\n+    value: function _read(n) {\n+      var _this2 = this;\n+\n+      var bufferToPush;\n+      // it's possible that the last chunk added bumped the buffer up to > 2 * n,\n+      // which means we will need to go through multiple read calls to drain it\n+      // down to < n.\n+      if (this.done) {\n+        this.push(null);\n+        return;\n+      }\n+      if (this.buffer.length >= n) {\n+        bufferToPush = this.buffer.substring(0, n);\n+        this.buffer = this.buffer.substring(n);\n+        this.push(bufferToPush);\n+        return;\n+      }\n+      if (!this.next) {\n+        this.stackDepth = 0;\n+        // start the rendering chain.\n+        this.render(\n+        // write\n+        function (text, next) {\n+          _this2.buffer += text;\n+          if (_this2.buffer.length >= n) {\n+            _this2.next = next;\n+            bufferToPush = _this2.buffer.substring(0, n);\n+            _this2.buffer = _this2.buffer.substring(n);\n+            _this2.push(bufferToPush);\n+          } else {\n+            // continue rendering until we have enough text to call this.push().\n+            // sometimes do this as process.nextTick to get out of stack overflows.\n+            if (_this2.stackDepth >= MAX_STACK_DEPTH) {\n+              process.nextTick(next);\n+            } else {\n+              _this2.stackDepth++;\n+              next();\n+              _this2.stackDepth--;\n+            }\n+          }\n+        },\n+        // done\n+        function () {\n+          // the rendering is finished; we should push out the last of the buffer.\n+          _this2.done = true;\n+          _this2.push(_this2.buffer);\n+        });\n+      } else {\n+        // continue with the rendering.\n+        this.next();\n+      }\n+    }\n+  }]);\n+  return RenderStream;\n+}(stream.Readable);\n+\n+function createStreamingRenderer(modules, directives, isUnaryTag) {\n+  function renderComponent(component, write, next, isRoot) {\n+    component.$mount();\n+    renderNode(component._vnode, write, next, isRoot);\n+  }\n+\n+  function renderNode(node, write, next, isRoot) {\n+    if (node.componentOptions) {\n+      node.data.hook.init(node);\n+      renderComponent(node.child, write, next, isRoot);\n+    } else {\n+      if (node.tag) {\n+        renderElement(node, write, next, isRoot);\n+      } else {\n+        write(node.text, next);\n+      }\n+    }\n+  }\n+\n+  function renderElement(el, write, next, isRoot) {\n+    if (isRoot) {\n+      if (!el.data) el.data = {};\n+      if (!el.data.attrs) el.data.attrs = {};\n+      el.data.attrs['server-rendered'] = true;\n+    }\n+    var startTag = renderStartingTag(el, modules, directives);\n+    var endTag = '</' + el.tag + '>';\n+    if (isUnaryTag(el.tag)) {\n+      write(startTag, next);\n+    } else if (!el.children || !el.children.length) {\n+      write(startTag + endTag, next);\n+    } else {\n+      write(startTag, function () {\n+        var total = el.children.length;\n+        var rendered = 0;\n+\n+        function renderChild(child) {\n+          renderNode(child, write, function () {\n+            rendered++;\n+            if (rendered < total) {\n+              renderChild(el.children[rendered]);\n+            } else {\n+              write(endTag, next);\n+            }\n+          });\n+        }\n+\n+        renderChild(el.children[0]);\n+      });\n+    }\n+  }\n+\n+  return function renderToStream(component) {\n+    return new RenderStream(function (write, done) {\n+      renderComponent(component, write, done, true);\n+    });\n+  };\n+}\n+\n+function createRenderer() {\n+  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n+\n+  var _ref$modules = _ref.modules;\n+  var modules = _ref$modules === undefined ? [] : _ref$modules;\n+  var _ref$directives = _ref.directives;\n+  var directives = _ref$directives === undefined ? {} : _ref$directives;\n+  var _ref$isUnaryTag = _ref.isUnaryTag;\n+  var isUnaryTag = _ref$isUnaryTag === undefined ? function () {\n+    return false;\n+  } : _ref$isUnaryTag;\n+\n+  return {\n+    renderToString: createSyncRenderer(modules, directives, isUnaryTag),\n+    renderToStream: createStreamingRenderer(modules, directives, isUnaryTag)\n+  };\n+}\n+\n+/**\n+ * Convert a value to a string that is actually rendered.\n+ *\n+ * @param {*} val\n+ * @return {String}\n+ */\n+\n+function renderString(val) {\n+  return val == null ? '' : typeof val === 'object' ? JSON.stringify(val, null, 2) : String(val);\n+}\n+\n+/**\n+ * Make a map and return a function for checking if a key\n+ * is in that map.\n+ *\n+ * @param {String} str\n+ * @param {Boolean} expectsLowerCase\n+ * @return {Function}\n+ */\n+\n+function makeMap(str, expectsLowerCase) {\n+  var map = Object.create(null);\n+  var list = str.split(',');\n+  for (var i = 0; i < list.length; i++) {\n+    map[list[i]] = true;\n+  }\n+  return expectsLowerCase ? function (val) {\n+    return map[val.toLowerCase()];\n+  } : function (val) {\n+    return map[val];\n+  };\n+}\n+\n+/**\n+ * Check if a tag is a built-in tag.\n+ */\n+\n+var isBuiltInTag = makeMap('slot,component,render,transition', true);\n+\n+/**\n+ * Remove an item from an array\n+ *\n+ * @param {Array} arr\n+ * @param {*} item\n+ */\n+\n+function remove(arr, item) {\n+  if (arr.length) {\n+    var index = arr.indexOf(item);\n+    if (index > -1) {\n+      return arr.splice(index, 1);\n+    }\n+  }\n+}\n+\n+/**\n+ * Check whether the object has the property.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @return {Boolean}\n+ */\n+var hasOwnProperty = Object.prototype.hasOwnProperty;\n+function hasOwn(obj, key) {\n+  return hasOwnProperty.call(obj, key);\n+}\n+\n+/**\n+ * Check if value is primitive\n+ *\n+ * @param {*} value\n+ * @return {Boolean}\n+ */\n+\n+function isPrimitive(value) {\n+  return typeof value === 'string' || typeof value === 'number';\n+}\n+\n+/**\n+ * Create a cached version of a pure function.\n+ *\n+ * @param {Function} fn\n+ * @return {Function}\n+ */\n+\n+function cached(fn) {\n+  var cache = Object.create(null);\n+  return function cachedFn(str) {\n+    var hit = cache[str];\n+    return hit || (cache[str] = fn(str));\n+  };\n+}\n+\n+/**\n+ * Camelize a hyphen-delmited string.\n+ *\n+ * @param {String} str\n+ * @return {String}\n+ */\n+\n+var camelizeRE = /-(\\w)/g;\n+var camelize = cached(function (str) {\n+  return str.replace(camelizeRE, toUpper);\n+});\n+\n+function toUpper(_, c) {\n+  return c ? c.toUpperCase() : '';\n+}\n+\n+/**\n+ * Hyphenate a camelCase string.\n+ *\n+ * @param {String} str\n+ * @return {String}\n+ */\n+\n+var hyphenateRE = /([a-z\\d])([A-Z])/g;\n+var hyphenate = cached(function (str) {\n+  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n+});\n+\n+/**\n+ * Simple bind, faster than native\n+ *\n+ * @param {Function} fn\n+ * @param {Object} ctx\n+ * @return {Function}\n+ */\n+\n+function bind(fn, ctx) {\n+  return function (a) {\n+    var l = arguments.length;\n+    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n+  };\n+}\n+\n+/**\n+ * Convert an Array-like object to a real Array.\n+ *\n+ * @param {Array-like} list\n+ * @param {Number} [start] - start index\n+ * @return {Array}\n+ */\n+\n+function toArray(list, start) {\n+  start = start || 0;\n+  var i = list.length - start;\n+  var ret = new Array(i);\n+  while (i--) {\n+    ret[i] = list[i + start];\n+  }\n+  return ret;\n+}\n+\n+/**\n+ * Mix properties into target object.\n+ *\n+ * @param {Object} to\n+ * @param {Object} from\n+ */\n+\n+function extend(to, from) {\n+  for (var key in from) {\n+    to[key] = from[key];\n+  }\n+  return to;\n+}\n+\n+/**\n+ * Quick object check - this is primarily used to tell\n+ * Objects from primitive values when we know the value\n+ * is a JSON-compliant type.\n+ *\n+ * @param {*} obj\n+ * @return {Boolean}\n+ */\n+\n+function isObject(obj) {\n+  return obj !== null && typeof obj === 'object';\n+}\n+\n+/**\n+ * Strict object type check. Only returns true\n+ * for plain JavaScript objects.\n+ *\n+ * @param {*} obj\n+ * @return {Boolean}\n+ */\n+\n+var toString = Object.prototype.toString;\n+var OBJECT_STRING = '[object Object]';\n+function isPlainObject(obj) {\n+  return toString.call(obj) === OBJECT_STRING;\n+}\n+\n+/**\n+ * Array type check.\n+ *\n+ * @param {*} obj\n+ * @return {Boolean}\n+ */\n+\n+var isArray = Array.isArray;\n+\n+/**\n+ * Check if a string starts with $ or _\n+ *\n+ * @param {String} str\n+ * @return {Boolean}\n+ */\n+\n+function isReserved(str) {\n+  var c = (str + '').charCodeAt(0);\n+  return c === 0x24 || c === 0x5F;\n+}\n+\n+/**\n+ * Define a property.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @param {*} val\n+ * @param {Boolean} [enumerable]\n+ */\n+\n+function def(obj, key, val, enumerable) {\n+  Object.defineProperty(obj, key, {\n+    value: val,\n+    enumerable: !!enumerable,\n+    writable: true,\n+    configurable: true\n+  });\n+}\n+\n+/**\n+ * Parse simple path.\n+ */\n+\n+var bailRE = /[^\\w\\.]/;\n+function parsePath(path) {\n+  if (bailRE.test(path)) {\n+    return;\n+  } else {\n+    path = path.split('.');\n+    return function (obj) {\n+      for (var i = 0; i < path.length; i++) {\n+        if (!obj) return;\n+        obj = obj[path[i]];\n+      }\n+      return obj;\n+    };\n+  }\n+}\n+\n+/* global MutationObserver */\n+\n+// can we use __proto__?\n+var hasProto = '__proto__' in {};\n+\n+// Browser environment sniffing\n+var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n+\n+// UA sniffing for working around browser-specific quirks\n+var UA$1 = inBrowser && window.navigator.userAgent.toLowerCase();\n+var isIos = UA$1 && /(iphone|ipad|ipod|ios)/i.test(UA$1);\n+var isWechat = UA$1 && UA$1.indexOf('micromessenger') > 0;\n+\n+/**\n+ * Defer a task to execute it asynchronously. Ideally this\n+ * should be executed as a microtask, so we leverage\n+ * MutationObserver if it's available, and fallback to\n+ * setTimeout(0).\n+ *\n+ * @param {Function} cb\n+ * @param {Object} ctx\n+ */\n+\n+var nextTick = function () {\n+  var callbacks = [];\n+  var pending = false;\n+  var timerFunc;\n+  function nextTickHandler() {\n+    pending = false;\n+    var copies = callbacks.slice(0);\n+    callbacks = [];\n+    for (var i = 0; i < copies.length; i++) {\n+      copies[i]();\n+    }\n+  }\n+\n+  /* istanbul ignore if */\n+  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n+    var counter = 1;\n+    var observer = new MutationObserver(nextTickHandler);\n+    var textNode = document.createTextNode(counter);\n+    observer.observe(textNode, {\n+      characterData: true\n+    });\n+    timerFunc = function timerFunc() {\n+      counter = (counter + 1) % 2;\n+      textNode.data = counter;\n+    };\n+  } else {\n+    // webpack attempts to inject a shim for setImmediate\n+    // if it is used as a global, so we have to work around that to\n+    // avoid bundling unnecessary code.\n+    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n+    timerFunc = context.setImmediate || setTimeout;\n+  }\n+  return function (cb, ctx) {\n+    var func = ctx ? function () {\n+      cb.call(ctx);\n+    } : cb;\n+    callbacks.push(func);\n+    if (pending) return;\n+    pending = true;\n+    timerFunc(nextTickHandler, 0);\n+  };\n+}();\n+\n+var Set$1 = void 0;\n+/* istanbul ignore if */\n+if (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n+  // use native Set when available.\n+  Set$1 = Set;\n+} else {\n+  // a non-standard Set polyfill that only works with primitive keys.\n+  Set$1 = function _Set() {\n+    this.set = Object.create(null);\n+  };\n+  Set$1.prototype.has = function (key) {\n+    return this.set[key] !== undefined;\n+  };\n+  Set$1.prototype.add = function (key) {\n+    this.set[key] = 1;\n+  };\n+  Set$1.prototype.clear = function () {\n+    this.set = Object.create(null);\n+  };\n+}\n+\n+var hasProxy = void 0;\n+var proxyHandlers = void 0;\n+var initProxy = void 0;\n+if (process.env.NODE_ENV !== 'production') {\n+  (function () {\n+    var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl');\n+\n+    hasProxy = typeof Proxy !== 'undefined' && Proxy.toString().match(/native code/);\n+\n+    proxyHandlers = {\n+      has: function has(target, key) {\n+        var has = key in target;\n+        var isAllowedGlobal = allowedGlobals(key);\n+        if (!has && !isAllowedGlobal) {\n+          warn('Trying to access non-existent property \"' + key + '\" while rendering.', target);\n+        }\n+        return !isAllowedGlobal;\n+      }\n+    };\n+\n+    initProxy = function initProxy(vm) {\n+      if (hasProxy) {\n+        vm._renderProxy = new Proxy(vm, proxyHandlers);\n+      } else {\n+        vm._renderProxy = vm;\n+      }\n+    };\n+  })();\n+}\n+\n+var uid$2 = 0;\n+\n+/**\n+ * A dep is an observable that can have multiple\n+ * directives subscribing to it.\n+ *\n+ * @constructor\n+ */\n+\n+function Dep() {\n+  this.id = uid$2++;\n+  this.subs = [];\n+}\n+\n+// the current target watcher being evaluated.\n+// this is globally unique because there could be only one\n+// watcher being evaluated at any time.\n+Dep.target = null;\n+\n+/**\n+ * Add a directive subscriber.\n+ *\n+ * @param {Directive} sub\n+ */\n+\n+Dep.prototype.addSub = function (sub) {\n+  this.subs.push(sub);\n+};\n+\n+/**\n+ * Remove a directive subscriber.\n+ *\n+ * @param {Directive} sub\n+ */\n+\n+Dep.prototype.removeSub = function (sub) {\n+  remove(this.subs, sub);\n+};\n+\n+/**\n+ * Add self as a dependency to the target watcher.\n+ */\n+\n+Dep.prototype.depend = function () {\n+  Dep.target.addDep(this);\n+};\n+\n+/**\n+ * Notify all subscribers of a new value.\n+ */\n+\n+Dep.prototype.notify = function () {\n+  // stablize the subscriber list first\n+  var subs = this.subs.slice();\n+  for (var i = 0, l = subs.length; i < l; i++) {\n+    subs[i].update();\n+  }\n+};\n+\n+var config = {\n+\n+  /**\n+   * Preserve whitespaces between elements.\n+   */\n+\n+  preserveWhitespace: true,\n+\n+  /**\n+   * Whether to suppress warnings.\n+   *\n+   * @type {Boolean}\n+   */\n+\n+  silent: false,\n+\n+  /**\n+   * Check if a tag is reserved so that it cannot be registered as a\n+   * component. This is platform-dependent and may be overwritten.\n+   */\n+\n+  isReservedTag: function isReservedTag() {\n+    return false;\n+  },\n+\n+  /**\n+   * Check if a tag is an unknown element.\n+   * Platform-dependent.\n+   */\n+\n+  isUnknownElement: function isUnknownElement() {\n+    return false;\n+  },\n+\n+  /**\n+   * List of asset types that a component can own.\n+   *\n+   * @type {Array}\n+   */\n+\n+  _assetTypes: ['component', 'directive', 'transition'],\n+\n+  /**\n+   * List of lifecycle hooks.\n+   *\n+   * @type {Array}\n+   */\n+\n+  _lifecycleHooks: ['init', 'created', 'beforeMount', 'mounted', 'ready', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed'],\n+\n+  /**\n+   * Max circular updates allowed in a batcher flush cycle.\n+   */\n+\n+  _maxUpdateCount: 100\n+};\n+\n+// we have two separate queues: one for directive updates\n+// and one for user watcher registered via $watch().\n+// we want to guarantee directive updates to be called\n+// before user watchers so that when user watchers are\n+// triggered, the DOM would have already been in updated\n+// state.\n+\n+var queueIndex;\n+var queue = [];\n+var userQueue = [];\n+var has = {};\n+var circular = {};\n+var waiting = false;\n+var internalQueueDepleted = false;\n+\n+/**\n+ * Reset the batcher's state.\n+ */\n+\n+function resetBatcherState() {\n+  queue = [];\n+  userQueue = [];\n+  has = {};\n+  circular = {};\n+  waiting = internalQueueDepleted = false;\n+}\n+\n+/**\n+ * Flush both queues and run the watchers.\n+ */\n+\n+function flushBatcherQueue() {\n+  queue.sort(queueSorter);\n+  runBatcherQueue(queue);\n+  internalQueueDepleted = true;\n+  runBatcherQueue(userQueue);\n+  resetBatcherState();\n+}\n+\n+/**\n+ * Sort queue before flush.\n+ * This ensures components are updated from parent to child\n+ * so there will be no duplicate updates, e.g. a child was\n+ * pushed into the queue first and then its parent's props\n+ * changed.\n+ */\n+\n+function queueSorter(a, b) {\n+  return a.id - b.id;\n+}\n+\n+/**\n+ * Run the watchers in a single queue.\n+ *\n+ * @param {Array} queue\n+ */\n+\n+function runBatcherQueue(queue) {\n+  // do not cache length because more watchers might be pushed\n+  // as we run existing watchers\n+  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n+    var watcher = queue[queueIndex];\n+    var id = watcher.id;\n+    has[id] = null;\n+    watcher.run();\n+    // in dev build, check and stop circular updates.\n+    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n+      circular[id] = (circular[id] || 0) + 1;\n+      if (circular[id] > config._maxUpdateCount) {\n+        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n+        break;\n+      }\n+    }\n+  }\n+}\n+\n+/**\n+ * Push a watcher into the watcher queue.\n+ * Jobs with duplicate IDs will be skipped unless it's\n+ * pushed when the queue is being flushed.\n+ *\n+ * @param {Watcher} watcher\n+ *   properties:\n+ *   - {Number} id\n+ *   - {Function} run\n+ */\n+\n+function pushWatcher(watcher) {\n+  var id = watcher.id;\n+  if (has[id] == null) {\n+    if (internalQueueDepleted && !watcher.user) {\n+      // an internal watcher triggered by a user watcher...\n+      // let's run it immediately after current user watcher is done.\n+      userQueue.splice(queueIndex + 1, 0, watcher);\n+    } else {\n+      // push watcher into appropriate queue\n+      var q = watcher.user ? userQueue : queue;\n+      has[id] = q.length;\n+      q.push(watcher);\n+      // queue the flush\n+      if (!waiting) {\n+        waiting = true;\n+        nextTick(flushBatcherQueue);\n+      }\n+    }\n+  }\n+}\n+\n+var uid$1 = 0;\n+var prevTarget = void 0;\n+\n+/**\n+ * A watcher parses an expression, collects dependencies,\n+ * and fires callback when the expression value changes.\n+ * This is used for both the $watch() api and directives.\n+ *\n+ * @param {Vue} vm\n+ * @param {String|Function} expOrFn\n+ * @param {Function} cb\n+ * @param {Object} options\n+ *                 - {Array} filters\n+ *                 - {Boolean} twoWay\n+ *                 - {Boolean} deep\n+ *                 - {Boolean} user\n+ *                 - {Boolean} sync\n+ *                 - {Boolean} lazy\n+ *                 - {Function} [preProcess]\n+ *                 - {Function} [postProcess]\n+ * @constructor\n+ */\n+\n+function Watcher(vm, expOrFn, cb, options) {\n+  // mix in options\n+  if (options) {\n+    extend(this, options);\n+  }\n+  var isFn = typeof expOrFn === 'function';\n+  this.vm = vm;\n+  vm._watchers.push(this);\n+  this.expression = expOrFn;\n+  this.cb = cb;\n+  this.id = ++uid$1; // uid for batching\n+  this.active = true;\n+  this.dirty = this.lazy; // for lazy watchers\n+  this.deps = [];\n+  this.newDeps = [];\n+  this.depIds = new Set$1();\n+  this.newDepIds = new Set$1();\n+  // parse expression for getter\n+  if (isFn) {\n+    this.getter = expOrFn;\n+  } else {\n+    this.getter = parsePath(expOrFn);\n+    if (!this.getter) {\n+      this.getter = function () {};\n+      process.env.NODE_ENV !== 'production' && warn('Failed watching path: ' + expOrFn + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);\n+    }\n+  }\n+  this.value = this.lazy ? undefined : this.get();\n+  // state for avoiding false triggers for deep and Array\n+  // watchers during vm._digest()\n+  this.queued = this.shallow = false;\n+}\n+\n+/**\n+ * Evaluate the getter, and re-collect dependencies.\n+ */\n+\n+Watcher.prototype.get = function () {\n+  this.beforeGet();\n+  var value = this.getter.call(this.vm, this.vm);\n+  // \"touch\" every property so they are all tracked as\n+  // dependencies for deep watching\n+  if (this.deep) {\n+    traverse(value);\n+  }\n+  this.afterGet();\n+  return value;\n+};\n+\n+/**\n+ * Prepare for dependency collection.\n+ */\n+\n+Watcher.prototype.beforeGet = function () {\n+  prevTarget = Dep.target;\n+  Dep.target = this;\n+};\n+\n+/**\n+ * Add a dependency to this directive.\n+ *\n+ * @param {Dep} dep\n+ */\n+\n+Watcher.prototype.addDep = function (dep) {\n+  var id = dep.id;\n+  if (!this.newDepIds.has(id)) {\n+    this.newDepIds.add(id);\n+    this.newDeps.push(dep);\n+    if (!this.depIds.has(id)) {\n+      dep.addSub(this);\n+    }\n+  }\n+};\n+\n+/**\n+ * Clean up for dependency collection.\n+ */\n+\n+Watcher.prototype.afterGet = function () {\n+  Dep.target = prevTarget;\n+  var i = this.deps.length;\n+  while (i--) {\n+    var dep = this.deps[i];\n+    if (!this.newDepIds.has(dep.id)) {\n+      dep.removeSub(this);\n+    }\n+  }\n+  var tmp = this.depIds;\n+  this.depIds = this.newDepIds;\n+  this.newDepIds = tmp;\n+  this.newDepIds.clear();\n+  tmp = this.deps;\n+  this.deps = this.newDeps;\n+  this.newDeps = tmp;\n+  this.newDeps.length = 0;\n+};\n+\n+/**\n+ * Subscriber interface.\n+ * Will be called when a dependency changes.\n+ *\n+ * @param {Boolean} shallow\n+ */\n+\n+Watcher.prototype.update = function (shallow) {\n+  if (this.lazy) {\n+    this.dirty = true;\n+  } else if (this.sync) {\n+    this.run();\n+  } else {\n+    // if queued, only overwrite shallow with non-shallow,\n+    // but not the other way around.\n+    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n+    this.queued = true;\n+    pushWatcher(this);\n+  }\n+};\n+\n+/**\n+ * Batcher job interface.\n+ * Will be called by the batcher.\n+ */\n+\n+Watcher.prototype.run = function () {\n+  if (this.active) {\n+    var value = this.get();\n+    if (value !== this.value ||\n+    // Deep watchers and watchers on Object/Arrays should fire even\n+    // when the value is the same, because the value may\n+    // have mutated; but only do so if this is a\n+    // non-shallow update (caused by a vm digest).\n+    (isObject(value) || this.deep) && !this.shallow) {\n+      // set new value\n+      var oldValue = this.value;\n+      this.value = value;\n+      this.cb.call(this.vm, value, oldValue);\n+    }\n+    this.queued = this.shallow = false;\n+  }\n+};\n+\n+/**\n+ * Evaluate the value of the watcher.\n+ * This only gets called for lazy watchers.\n+ */\n+\n+Watcher.prototype.evaluate = function () {\n+  // avoid overwriting another watcher that is being\n+  // collected.\n+  var current = Dep.target;\n+  this.value = this.get();\n+  this.dirty = false;\n+  Dep.target = current;\n+};\n+\n+/**\n+ * Depend on all deps collected by this watcher.\n+ */\n+\n+Watcher.prototype.depend = function () {\n+  var i = this.deps.length;\n+  while (i--) {\n+    this.deps[i].depend();\n+  }\n+};\n+\n+/**\n+ * Remove self from all dependencies' subcriber list.\n+ */\n+\n+Watcher.prototype.teardown = function () {\n+  if (this.active) {\n+    // remove self from vm's watcher list\n+    // this is a somewhat expensive operation so we skip it\n+    // if the vm is being destroyed or is performing a v-for\n+    // re-render (the watcher list is then filtered by v-for).\n+    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n+      remove(this.vm._watchers, this);\n+    }\n+    var i = this.deps.length;\n+    while (i--) {\n+      this.deps[i].removeSub(this);\n+    }\n+    this.active = false;\n+    this.vm = this.cb = this.value = null;\n+  }\n+};\n+\n+/**\n+ * Recrusively traverse an object to evoke all converted\n+ * getters, so that every nested property inside the object\n+ * is collected as a \"deep\" dependency.\n+ *\n+ * @param {*} val\n+ * @param {Set} seen\n+ */\n+\n+var seenObjects = new Set$1();\n+function traverse(val, seen) {\n+  var i = void 0,\n+      keys = void 0,\n+      isA = void 0,\n+      isO = void 0;\n+  if (!seen) {\n+    seen = seenObjects;\n+    seen.clear();\n+  }\n+  isA = isArray(val);\n+  isO = isObject(val);\n+  if (isA || isO) {\n+    if (val.__ob__) {\n+      var depId = val.__ob__.dep.id;\n+      if (seen.has(depId)) {\n+        return;\n+      } else {\n+        seen.add(depId);\n+      }\n+    }\n+    if (isA) {\n+      i = val.length;\n+      while (i--) {\n+        traverse(val[i], seen);\n+      }\n+    } else if (isO) {\n+      keys = Object.keys(val);\n+      i = keys.length;\n+      while (i--) {\n+        traverse(val[keys[i]], seen);\n+      }\n+    }\n+  }\n+}\n+\n+var arrayProto = Array.prototype;\n+var arrayMethods = Object.create(arrayProto)\n+\n+/**\n+ * Intercept mutating methods and emit events\n+ */\n+\n+;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n+  // cache original method\n+  var original = arrayProto[method];\n+  def(arrayMethods, method, function mutator() {\n+    // avoid leaking arguments:\n+    // http://jsperf.com/closure-with-arguments\n+    var i = arguments.length;\n+    var args = new Array(i);\n+    while (i--) {\n+      args[i] = arguments[i];\n+    }\n+    var result = original.apply(this, args);\n+    var ob = this.__ob__;\n+    var inserted;\n+    switch (method) {\n+      case 'push':\n+        inserted = args;\n+        break;\n+      case 'unshift':\n+        inserted = args;\n+        break;\n+      case 'splice':\n+        inserted = args.slice(2);\n+        break;\n+    }\n+    if (inserted) ob.observeArray(inserted);\n+    // notify change\n+    ob.dep.notify();\n+    return result;\n+  });\n+});\n+\n+var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n+\n+/**\n+ * By default, when a reactive property is set, the new value is\n+ * also converted to become reactive. However when passing down props,\n+ * we don't want to force conversion because the value may be a nested value\n+ * under a frozen data structure. Converting it would defeat the optimization.\n+ */\n+\n+var observerState = {\n+  shouldConvert: true\n+};\n+\n+/**\n+ * Observer class that are attached to each observed\n+ * object. Once attached, the observer converts target\n+ * object's property keys into getter/setters that\n+ * collect dependencies and dispatches updates.\n+ *\n+ * @param {Array|Object} value\n+ * @constructor\n+ */\n+\n+function Observer(value) {\n+  this.value = value;\n+  this.dep = new Dep();\n+  def(value, '__ob__', this);\n+  if (isArray(value)) {\n+    var augment = hasProto ? protoAugment : copyAugment;\n+    augment(value, arrayMethods, arrayKeys);\n+    this.observeArray(value);\n+  } else {\n+    this.walk(value);\n+  }\n+}\n+\n+// Instance methods\n+\n+/**\n+ * Walk through each property and convert them into\n+ * getter/setters. This method should only be called when\n+ * value type is Object.\n+ *\n+ * @param {Object} obj\n+ */\n+\n+Observer.prototype.walk = function (obj) {\n+  for (var key in obj) {\n+    this.convert(key, obj[key]);\n+  }\n+};\n+\n+/**\n+ * Observe a list of Array items.\n+ *\n+ * @param {Array} items\n+ */\n+\n+Observer.prototype.observeArray = function (items) {\n+  for (var i = 0, l = items.length; i < l; i++) {\n+    observe(items[i]);\n+  }\n+};\n+\n+/**\n+ * Convert a property into getter/setter so we can emit\n+ * the events when the property is accessed/changed.\n+ *\n+ * @param {String} key\n+ * @param {*} val\n+ */\n+\n+Observer.prototype.convert = function (key, val) {\n+  defineReactive(this.value, key, val);\n+};\n+\n+/**\n+ * Add an owner vm, so that when $set/$delete mutations\n+ * happen we can notify owner vms to proxy the keys and\n+ * digest the watchers. This is only called when the object\n+ * is observed as an instance's root $data.\n+ *\n+ * @param {Vue} vm\n+ */\n+\n+Observer.prototype.addVm = function (vm) {\n+  (this.vms || (this.vms = [])).push(vm);\n+};\n+\n+/**\n+ * Remove an owner vm. This is called when the object is\n+ * swapped out as an instance's $data object.\n+ *\n+ * @param {Vue} vm\n+ */\n+\n+Observer.prototype.removeVm = function (vm) {\n+  remove(this.vms, vm);\n+};\n+\n+// helpers\n+\n+/**\n+ * Augment an target Object or Array by intercepting\n+ * the prototype chain using __proto__\n+ *\n+ * @param {Object|Array} target\n+ * @param {Object} src\n+ */\n+\n+function protoAugment(target, src) {\n+  /* eslint-disable no-proto */\n+  target.__proto__ = src;\n+  /* eslint-enable no-proto */\n+}\n+\n+/**\n+ * Augment an target Object or Array by defining\n+ * hidden properties.\n+ *\n+ * @param {Object|Array} target\n+ * @param {Object} proto\n+ */\n+\n+function copyAugment(target, src, keys) {\n+  for (var i = 0, l = keys.length; i < l; i++) {\n+    var key = keys[i];\n+    def(target, key, src[key]);\n+  }\n+}\n+\n+/**\n+ * Attempt to create an observer instance for a value,\n+ * returns the new observer if successfully observed,\n+ * or the existing observer if the value already has one.\n+ *\n+ * @param {*} value\n+ * @param {Vue} [vm]\n+ * @return {Observer|undefined}\n+ * @static\n+ */\n+\n+function observe(value, vm) {\n+  if (!isObject(value)) {\n+    return;\n+  }\n+  var ob;\n+  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n+    ob = value.__ob__;\n+  } else if (observerState.shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n+    ob = new Observer(value);\n+  }\n+  if (ob && vm) {\n+    ob.addVm(vm);\n+  }\n+  return ob;\n+}\n+\n+/**\n+ * Define a reactive property on an Object.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @param {*} val\n+ */\n+\n+function defineReactive(obj, key, val) {\n+  var dep = new Dep();\n+\n+  var property = Object.getOwnPropertyDescriptor(obj, key);\n+  if (property && property.configurable === false) {\n+    return;\n+  }\n+\n+  // cater for pre-defined getter/setters\n+  var getter = property && property.get;\n+  var setter = property && property.set;\n+\n+  var childOb = observe(val);\n+  Object.defineProperty(obj, key, {\n+    enumerable: true,\n+    configurable: true,\n+    get: function reactiveGetter() {\n+      var value = getter ? getter.call(obj) : val;\n+      if (Dep.target) {\n+        dep.depend();\n+        if (childOb) {\n+          childOb.dep.depend();\n+        }\n+        if (isArray(value)) {\n+          for (var e, i = 0, l = value.length; i < l; i++) {\n+            e = value[i];\n+            e && e.__ob__ && e.__ob__.dep.depend();\n+          }\n+        }\n+      }\n+      return value;\n+    },\n+    set: function reactiveSetter(newVal) {\n+      var value = getter ? getter.call(obj) : val;\n+      if (newVal === value) {\n+        return;\n+      }\n+      if (setter) {\n+        setter.call(obj, newVal);\n+      } else {\n+        val = newVal;\n+      }\n+      childOb = observe(newVal);\n+      dep.notify();\n+    }\n+  });\n+}\n+\n+/**\n+ * Set a property on an object. Adds the new property and\n+ * triggers change notification if the property doesn't\n+ * already exist.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @param {*} val\n+ * @public\n+ */\n+\n+function set(obj, key, val) {\n+  if (isArray(obj)) {\n+    return obj.splice(key, 1, val);\n+  }\n+  if (hasOwn(obj, key)) {\n+    obj[key] = val;\n+    return;\n+  }\n+  if (obj._isVue) {\n+    set(obj._data, key, val);\n+    return;\n+  }\n+  var ob = obj.__ob__;\n+  if (!ob) {\n+    obj[key] = val;\n+    return;\n+  }\n+  ob.convert(key, val);\n+  ob.dep.notify();\n+  if (ob.vms) {\n+    var i = ob.vms.length;\n+    while (i--) {\n+      var vm = ob.vms[i];\n+      proxy(vm, key);\n+      vm.$forceUpdate();\n+    }\n+  }\n+  return val;\n+}\n+\n+function proxy(vm, key) {\n+  if (!isReserved(key)) {\n+    Object.defineProperty(vm, key, {\n+      configurable: true,\n+      enumerable: true,\n+      get: function proxyGetter() {\n+        return vm._data[key];\n+      },\n+      set: function proxySetter(val) {\n+        vm._data[key] = val;\n+      }\n+    });\n+  }\n+}\n+\n+function unproxy(vm, key) {\n+  if (!isReserved(key)) {\n+    delete vm[key];\n+  }\n+}\n+\n+function initState(vm) {\n+  vm._watchers = [];\n+  initProps(vm);\n+  initData(vm);\n+  initComputed(vm);\n+  initMethods(vm);\n+  initWatch(vm);\n+}\n+\n+function initProps(vm) {\n+  var props = vm.$options.props;\n+  var propsData = vm.$options.propsData;\n+  if (props) {\n+    var keys = vm.$options.propKeys = Object.keys(props);\n+    var isRoot = !vm.$parent;\n+    // root instance props should be converted\n+    observerState.shouldConvert = isRoot;\n+    for (var i = 0; i < keys.length; i++) {\n+      var key = keys[i];\n+      defineReactive(vm, key, validateProp(vm, key, propsData));\n+    }\n+    observerState.shouldConvert = true;\n+  }\n+}\n+\n+function initData(vm) {\n+  var data = vm.$options.data;\n+  data = vm._data = typeof data === 'function' ? data() : data || {};\n+  if (!isPlainObject(data)) {\n+    data = {};\n+    process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', vm);\n+  }\n+  // proxy data on instance\n+  var keys = Object.keys(data);\n+  var i = keys.length;\n+  while (i--) {\n+    proxy(vm, keys[i]);\n+  }\n+  // observe data\n+  observe(data, vm);\n+}\n+\n+function noop() {}\n+\n+function initComputed(vm) {\n+  var computed = vm.$options.computed;\n+  if (computed) {\n+    for (var key in computed) {\n+      var userDef = computed[key];\n+      var def = {\n+        enumerable: true,\n+        configurable: true\n+      };\n+      if (typeof userDef === 'function') {\n+        def.get = makeComputedGetter(userDef, vm);\n+        def.set = noop;\n+      } else {\n+        def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, vm) : bind(userDef.get, vm) : noop;\n+        def.set = userDef.set ? bind(userDef.set, vm) : noop;\n+      }\n+      Object.defineProperty(vm, key, def);\n+    }\n+  }\n+}\n+\n+function makeComputedGetter(getter, owner) {\n+  var watcher = new Watcher(owner, getter, null, {\n+    lazy: true\n+  });\n+  return function computedGetter() {\n+    if (watcher.dirty) {\n+      watcher.evaluate();\n+    }\n+    if (Dep.target) {\n+      watcher.depend();\n+    }\n+    return watcher.value;\n+  };\n+}\n+\n+function initMethods(vm) {\n+  var methods = vm.$options.methods;\n+  if (methods) {\n+    for (var key in methods) {\n+      vm[key] = bind(methods[key], vm);\n+    }\n+  }\n+}\n+\n+function initWatch(vm) {\n+  var watch = vm.$options.watch;\n+  if (watch) {\n+    for (var key in watch) {\n+      var handler = watch[key];\n+      if (isArray(handler)) {\n+        for (var i = 0; i < handler.length; i++) {\n+          createWatcher(vm, key, handler[i]);\n+        }\n+      } else {\n+        createWatcher(vm, key, handler);\n+      }\n+    }\n+  }\n+}\n+\n+function createWatcher(vm, key, handler) {\n+  var options = void 0;\n+  if (isPlainObject(handler)) {\n+    options = handler;\n+    handler = handler.handler;\n+  }\n+  if (typeof handler === 'string') {\n+    handler = vm[handler];\n+  }\n+  vm.$watch(key, handler, options);\n+}\n+\n+function stateMixin(Vue) {\n+  Object.defineProperty(Vue.prototype, '$data', {\n+    get: function get() {\n+      return this._data;\n+    },\n+    set: function set(newData) {\n+      if (newData !== this._data) {\n+        setData(this, newData);\n+      }\n+    }\n+  });\n+\n+  Vue.prototype.$watch = function (fn, cb, options) {\n+    options = options || {};\n+    options.user = true;\n+    var watcher = new Watcher(this, fn, cb, options);\n+    if (options.immediate) {\n+      cb.call(this, watcher.value);\n+    }\n+    return function unwatchFn() {\n+      watcher.teardown();\n+    };\n+  };\n+}\n+\n+function setData(vm, newData) {\n+  newData = newData || {};\n+  var oldData = vm._data;\n+  vm._data = newData;\n+  var keys, key, i;\n+  // unproxy keys not present in new data\n+  keys = Object.keys(oldData);\n+  i = keys.length;\n+  while (i--) {\n+    key = keys[i];\n+    if (!(key in newData)) {\n+      unproxy(vm, key);\n+    }\n+  }\n+  // proxy keys not already proxied,\n+  // and trigger change for changed values\n+  keys = Object.keys(newData);\n+  i = keys.length;\n+  while (i--) {\n+    key = keys[i];\n+    if (!hasOwn(vm, key)) {\n+      // new property\n+      proxy(vm, key);\n+    }\n+  }\n+  oldData.__ob__.removeVm(vm);\n+  observe(newData, vm);\n+  vm.$forceUpdate();\n+}\n+\n+function VNode(tag, data, children, text, elm, ns, context) {\n+  return {\n+    tag: tag,\n+    data: data,\n+    children: children,\n+    text: text,\n+    elm: elm,\n+    ns: ns,\n+    context: context,\n+    key: data && data.key\n+  };\n+}\n+\n+function flatten(children) {\n+  if (typeof children === 'string') {\n+    return [VNode(undefined, undefined, undefined, children)];\n+  }\n+  if (isArray(children)) {\n+    var res = [];\n+    for (var i = 0, l = children.length; i < l; i++) {\n+      var c = children[i];\n+      // flatten nested\n+      if (isArray(c)) {\n+        res.push.apply(res, flatten(c));\n+      } else if (isPrimitive(c)) {\n+        // convert primitive to vnode\n+        res.push(VNode(undefined, undefined, undefined, c));\n+      } else if (c) {\n+        res.push(c);\n+      }\n+    }\n+    return res;\n+  }\n+}\n+\n+function updateListeners(on, oldOn, add) {\n+  var name = void 0,\n+      cur = void 0,\n+      old = void 0,\n+      event = void 0,\n+      capture = void 0;\n+  for (name in on) {\n+    cur = on[name];\n+    old = oldOn[name];\n+    if (old === undefined) {\n+      capture = name.charAt(0) === '!';\n+      event = capture ? name.slice(1) : name;\n+      if (isArray(cur)) {\n+        add(event, arrInvoker(cur), capture);\n+      } else {\n+        cur = { fn: cur };\n+        on[name] = cur;\n+        add(event, fnInvoker(cur), capture);\n+      }\n+    } else if (isArray(old)) {\n+      old.length = cur.length;\n+      for (var i = 0; i < old.length; i++) {\n+        old[i] = cur[i];\n+      }on[name] = old;\n+    } else {\n+      old.fn = cur;\n+      on[name] = old;\n+    }\n+  }\n+}\n+\n+function arrInvoker(arr) {\n+  return function (ev) {\n+    for (var i = 0; i < arr.length; i++) {\n+      arr[i](ev);\n+    }\n+  };\n+}\n+\n+function fnInvoker(o) {\n+  return function (ev) {\n+    o.fn(ev);\n+  };\n+}\n+\n+function initLifecycle(vm) {\n+  var options = vm.$options;\n+\n+  vm.$parent = options.parent;\n+  vm.$root = vm.$parent ? vm.$parent.$root : vm;\n+  if (vm.$parent) {\n+    vm.$parent.$children.push(vm);\n+  }\n+\n+  vm.$children = [];\n+  vm.$refs = {};\n+\n+  vm._isDestroyed = false;\n+  vm._isBeingDestroyed = false;\n+}\n+\n+function lifecycleMixin(Vue) {\n+  Vue.prototype._mount = function () {\n+    var _this = this;\n+\n+    if (!this.$options.render) {\n+      this.$options.render = function () {\n+        return _this.$createElement('div');\n+      };\n+      if (process.env.NODE_ENV !== 'production') {\n+        if (this.$options.template) {\n+          warn('You are using the runtime-only build of Vue where the template ' + 'option is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', this);\n+        } else {\n+          warn('Failed to mount component: template or render function not defined.', this);\n+        }\n+      }\n+    }\n+    // render static sub-trees for once on mount\n+    var staticRenderFns = this.$options.staticRenderFns;\n+    if (staticRenderFns) {\n+      this._staticTrees = new Array(staticRenderFns.length);\n+      for (var i = 0; i < staticRenderFns.length; i++) {\n+        this._staticTrees[i] = staticRenderFns[i].call(this._renderProxy);\n+      }\n+    }\n+    this._watcher = new Watcher(this, this._render, this._update);\n+    this._update(this._watcher.value);\n+    this._mounted = true;\n+    // root instance, call ready on self\n+    if (this.$root === this) {\n+      callHook(this, 'ready');\n+    }\n+    return this;\n+  };\n+\n+  Vue.prototype._update = function (vnode) {\n+    if (this._mounted) {\n+      callHook(this, 'beforeUpdate');\n+    }\n+    var parentNode = this.$options._parentVnode;\n+    // set vnode parent before patch\n+    vnode.parent = parentNode;\n+    if (!this._vnode) {\n+      // Vue.prototype.__patch__ is injected in entry points\n+      // based on the rendering backend used.\n+      this.$el = this.__patch__(this.$el, vnode);\n+    } else {\n+      this.$el = this.__patch__(this._vnode, vnode);\n+    }\n+    this._vnode = vnode;\n+    // set parent vnode element after patch\n+    if (parentNode) {\n+      parentNode.elm = this.$el;\n+    }\n+    if (this._mounted) {\n+      callHook(this, 'updated');\n+    }\n+  };\n+\n+  Vue.prototype._updateFromParent = function (propsData, listeners, parentVnode, children) {\n+    var _this2 = this;\n+\n+    this.$options._parentVnode = parentVnode;\n+    this.$options._renderChildren = children;\n+    // update props\n+    if (propsData && this.$options.props) {\n+      observerState.shouldConvert = false;\n+      var propKeys = this.$options.propKeys;\n+      for (var i = 0; i < propKeys.length; i++) {\n+        var key = propKeys[i];\n+        this[key] = validateProp(this, key, propsData);\n+      }\n+      observerState.shouldConvert = true;\n+    }\n+    // update listeners\n+    if (listeners) {\n+      var oldListeners = this.$options._parentListeners;\n+      this.$options._parentListeners = listeners;\n+      updateListeners(listeners, oldListeners || {}, function (event, handler) {\n+        _this2.$on(event, handler);\n+      });\n+    }\n+  };\n+\n+  Vue.prototype.$forceUpdate = function () {\n+    this._watcher.update();\n+  };\n+\n+  Vue.prototype.$destroy = function () {\n+    if (this._isDestroyed) {\n+      return;\n+    }\n+    callHook(this, 'beforeDestroy');\n+    this._isBeingDestroyed = true;\n+    // remove self from parent\n+    var parent = this.$parent;\n+    if (parent && !parent._isBeingDestroyed) {\n+      remove(parent.$children, this);\n+    }\n+    // unregister ref\n+    if (this._ref) {\n+      this._context.$refs[this._ref] = undefined;\n+    }\n+    // teardown watchers\n+    var i = this._watchers.length;\n+    while (i--) {\n+      this._watchers[i].teardown();\n+    }\n+    // remove reference from data ob\n+    // frozen object may not have observer.\n+    if (this._data.__ob__) {\n+      this._data.__ob__.removeVm(this);\n+    }\n+    // call the last hook...\n+    this._isDestroyed = true;\n+    callHook(this, 'destroyed');\n+    // turn off all instance listeners.\n+    this.$off();\n+  };\n+}\n+\n+function callHook(vm, hook) {\n+  vm.$emit('pre-hook:' + hook);\n+  var handlers = vm.$options[hook];\n+  if (handlers) {\n+    for (var i = 0, j = handlers.length; i < j; i++) {\n+      handlers[i].call(vm);\n+    }\n+  }\n+  vm.$emit('hook:' + hook);\n+}\n+\n+var hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy };\n+var hooksToMerge = Object.keys(hooks);\n+\n+function createComponent(Ctor, data, parent, children, context) {\n+  if (process.env.NODE_ENV !== 'production' && children && typeof children !== 'function') {\n+    warn('A component\\'s children should be a function that returns the ' + 'children array. This allows the component to track the children ' + 'dependencies and optimizes re-rendering.');\n+  }\n+  if (!Ctor) {\n+    return;\n+  }\n+  if (isObject(Ctor)) {\n+    Ctor = Vue.extend(Ctor);\n+  }\n+  if (process.env.NODE_ENV !== 'production' && typeof Ctor !== 'function') {\n+    warn('Invalid Component definition: ' + Ctor, parent);\n+    return;\n+  }\n+\n+  // async component\n+  if (!Ctor.cid) {\n+    if (Ctor.resolved) {\n+      Ctor = Ctor.resolved;\n+    } else {\n+      resolveAsyncComponent(Ctor, function () {\n+        // it's ok to queue this on every render because\n+        // $forceUpdate is buffered.\n+        parent.$forceUpdate();\n+      });\n+      return;\n+    }\n+  }\n+\n+  data = data || {};\n+\n+  // merge component management hooks onto the placeholder node\n+  mergeHooks(data);\n+\n+  // extract props\n+  var propsData = extractProps(data, Ctor);\n+\n+  // extract listeners, since these needs to be treated as\n+  // child component listeners instead of DOM listeners\n+  var listeners = data.on;\n+  if (listeners) {\n+    data.on = null;\n+  }\n+\n+  // return a placeholder vnode\n+  var name = Ctor.options.name ? '-' + Ctor.options.name : '';\n+  var vnode = VNode('vue-component-' + Ctor.cid + name, data, undefined, undefined, undefined, undefined, context);\n+  vnode.componentOptions = { Ctor: Ctor, propsData: propsData, listeners: listeners, parent: parent, children: children };\n+  return vnode;\n+}\n+\n+function init(vnode) {\n+  var _vnode$componentOptio = vnode.componentOptions;\n+  var Ctor = _vnode$componentOptio.Ctor;\n+  var propsData = _vnode$componentOptio.propsData;\n+  var listeners = _vnode$componentOptio.listeners;\n+  var parent = _vnode$componentOptio.parent;\n+  var children = _vnode$componentOptio.children;\n+\n+  var child = new Ctor({\n+    parent: parent,\n+    propsData: propsData,\n+    _parentVnode: vnode,\n+    _parentListeners: listeners,\n+    _renderChildren: children\n+  });\n+  // if this is a server-rendered mount,\n+  // the vnode would already have an element.\n+  // otherwise the child sets the parent vnode's elm when mounted\n+  // and when updated.\n+  child.$mount(vnode.elm);\n+  vnode.child = child;\n+}\n+\n+function prepatch(oldVnode, vnode) {\n+  var _vnode$componentOptio2 = vnode.componentOptions;\n+  var listeners = _vnode$componentOptio2.listeners;\n+  var propsData = _vnode$componentOptio2.propsData;\n+  var children = _vnode$componentOptio2.children;\n+\n+  vnode.child = oldVnode.child;\n+  vnode.child._updateFromParent(propsData, // updated props\n+  listeners, // updated listeners\n+  vnode, // new parent vnode\n+  children // new children\n+  );\n+}\n+\n+function insert(vnode) {\n+  callHook(vnode.child, 'ready');\n+}\n+\n+function destroy(vnode) {\n+  vnode.child.$destroy();\n+}\n+\n+function resolveAsyncComponent(factory, cb) {\n+  if (factory.resolved) {\n+    // cached\n+    cb(factory.resolved);\n+  } else if (factory.requested) {\n+    // pool callbacks\n+    factory.pendingCallbacks.push(cb);\n+  } else {\n+    (function () {\n+      factory.requested = true;\n+      var cbs = factory.pendingCallbacks = [cb];\n+      factory(function resolve(res) {\n+        if (isObject(res)) {\n+          res = Vue.extend(res);\n+        }\n+        // cache resolved\n+        factory.resolved = res;\n+        // invoke callbacks\n+        for (var i = 0, l = cbs.length; i < l; i++) {\n+          cbs[i](res);\n+        }\n+      }, function reject(reason) {\n+        process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + factory + (reason ? '\\nReason: ' + reason : ''));\n+      });\n+    })();\n+  }\n+}\n+\n+function extractProps(data, Ctor) {\n+  // we are only extrating raw values here.\n+  // validation and default values are handled in the child\n+  // component itself.\n+  var propOptions = Ctor.options.props;\n+  if (!propOptions) {\n+    return;\n+  }\n+  var res = {};\n+  var attrs = data.attrs;\n+  var props = data.props;\n+  var staticAttrs = data.staticAttrs;\n+  if (!attrs && !props) {\n+    return res;\n+  }\n+  for (var key in propOptions) {\n+    var altKey = hyphenate(key);\n+    checkProp(res, attrs, key, altKey) || checkProp(res, props, key, altKey) || checkProp(res, staticAttrs, key, altKey);\n+  }\n+  return res;\n+}\n+\n+function checkProp(res, hash, key, altKey) {\n+  if (hash) {\n+    if (hasOwn(hash, key)) {\n+      res[key] = hash[key];\n+      delete hash[key];\n+      return true;\n+    } else if (hasOwn(hash, altKey)) {\n+      res[key] = hash[altKey];\n+      delete hash[altKey];\n+      return true;\n+    }\n+  }\n+}\n+\n+function mergeHooks(data) {\n+  if (data.hook) {\n+    for (var i = 0; i < hooksToMerge.length; i++) {\n+      var key = hooksToMerge[i];\n+      var fromParent = data.hook[key];\n+      var ours = hooks[key];\n+      data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n+    }\n+  } else {\n+    data.hook = hooks;\n+  }\n+}\n+\n+function mergeHook$1(a, b) {\n+  // since all hooks have at most two args, use fixed args\n+  // to avoid having to use fn.apply().\n+  return function (_, __) {\n+    a(_, __);\n+    b(_, __);\n+  };\n+}\n+\n+function createElement(tag, data, children, namespace) {\n+  var context = this;\n+  var parent = renderState.activeInstance;\n+  if (typeof tag === 'string') {\n+    var Ctor = void 0;\n+    if (config.isReservedTag(tag)) {\n+      return VNode(tag, data, flatten(children), undefined, undefined, namespace, context);\n+    } else if (Ctor = resolveAsset(context.$options, 'components', tag)) {\n+      return createComponent(Ctor, data, parent, children, context);\n+    } else {\n+      if (process.env.NODE_ENV !== 'production') {\n+        if (!namespace && config.isUnknownElement(tag)) {\n+          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n+        }\n+      }\n+      return VNode(tag, data, flatten(children && children()), undefined, undefined, namespace, context);\n+    }\n+  } else {\n+    return createComponent(tag, data, parent, children, context);\n+  }\n+}\n+\n+var renderState = {\n+  activeInstance: null\n+};\n+\n+function initRender(vm) {\n+  vm._vnode = null;\n+  vm._mounted = false;\n+  vm._staticTrees = null;\n+  vm.$slots = {};\n+  // bind the public createElement fn to this instance\n+  // so that we get proper render context inside it.\n+  vm.$createElement = bind(createElement, vm);\n+  if (vm.$options.el) {\n+    vm.$mount(vm.$options.el);\n+  }\n+}\n+\n+function renderMixin(Vue) {\n+  Vue.prototype._render = function () {\n+    var prev = renderState.activeInstance;\n+    renderState.activeInstance = this;\n+    var _$options = this.$options;\n+    var render = _$options.render;\n+    var _renderChildren = _$options._renderChildren;\n+    // resolve slots. becaues slots are rendered in parent scope,\n+    // we set the activeInstance to parent.\n+\n+    if (_renderChildren) {\n+      resolveSlots(this, _renderChildren);\n+    }\n+    // render self\n+    var vnode = render.call(this._renderProxy);\n+    // restore render state\n+    renderState.activeInstance = prev;\n+    return vnode;\n+  };\n+\n+  // shorthands used in render functions\n+  Vue.prototype.__h__ = createElement;\n+\n+  // toString for mustaches\n+  Vue.prototype.__toString__ = renderString;\n+\n+  // render v-for\n+  Vue.prototype.__renderList__ = function (val, render) {\n+    var ret = void 0,\n+        i = void 0,\n+        l = void 0,\n+        keys = void 0,\n+        key = void 0;\n+    if (isArray(val)) {\n+      ret = new Array(val.length);\n+      for (i = 0, l = val.length; i < l; i++) {\n+        ret[i] = render(val[i], i, i);\n+      }\n+    } else if (typeof val === 'number') {\n+      ret = new Array(val);\n+      for (i = 0; i < val; i++) {\n+        ret[i] = render(i + 1, i, i);\n+      }\n+    } else if (isObject(val)) {\n+      keys = Object.keys(val);\n+      ret = new Array(keys.length);\n+      for (i = 0, l = keys.length; i < l; i++) {\n+        key = keys[i];\n+        ret[i] = render(val[key], i, key);\n+      }\n+    }\n+    return ret;\n+  };\n+\n+  // register ref\n+  Vue.prototype.__registerRef__ = function (key, ref, vFor, remove) {\n+    var refs = this.$refs;\n+    if (remove) {\n+      if (vFor) {\n+        remove(refs[key], ref);\n+      } else {\n+        refs[key] = undefined;\n+      }\n+    } else {\n+      if (vFor) {\n+        if (refs[key]) {\n+          refs[key].push(ref);\n+        } else {\n+          refs[key] = [ref];\n+        }\n+      } else {\n+        refs[key] = ref;\n+      }\n+    }\n+  };\n+}\n+\n+function resolveSlots(vm, children) {\n+  if (children) {\n+    children = flatten(isArray(children) ? children : children());\n+    var slots = { default: children };\n+    var i = children.length;\n+    var name = void 0,\n+        child = void 0;\n+    while (i--) {\n+      child = children[i];\n+      if (name = child.data && child.data.slot) {\n+        var slot = slots[name] || (slots[name] = []);\n+        if (child.tag === 'template') {\n+          slot.push.apply(slot, child.children);\n+        } else {\n+          slot.push(child);\n+        }\n+        children.splice(i, 1);\n+      }\n+    }\n+    vm.$slots = slots;\n+  }\n+}\n+\n+function initEvents(vm) {\n+  vm._events = Object.create(null);\n+  // init parent attached events\n+  var listeners = vm.$options._parentListeners;\n+  if (listeners) {\n+    updateListeners(listeners, {}, function (event, handler) {\n+      vm.$on(event, handler);\n+    });\n+  }\n+}\n+\n+function eventsMixin(Vue) {\n+  Vue.prototype.$on = function (event, fn) {\n+    (this._events[event] || (this._events[event] = [])).push(fn);\n+    return this;\n+  };\n+\n+  /**\n+   * Adds an `event` listener that will be invoked a single\n+   * time then automatically removed.\n+   *\n+   * @param {String} event\n+   * @param {Function} fn\n+   */\n+\n+  Vue.prototype.$once = function (event, fn) {\n+    var self = this;\n+    function on() {\n+      self.$off(event, on);\n+      fn.apply(this, arguments);\n+    }\n+    on.fn = fn;\n+    this.$on(event, on);\n+    return this;\n+  };\n+\n+  /**\n+   * Remove the given callback for `event` or all\n+   * registered callbacks.\n+   *\n+   * @param {String} event\n+   * @param {Function} fn\n+   */\n+\n+  Vue.prototype.$off = function (event, fn) {\n+    var cbs;\n+    // all\n+    if (!arguments.length) {\n+      this._events = Object.create(null);\n+      return this;\n+    }\n+    // specific event\n+    cbs = this._events[event];\n+    if (!cbs) {\n+      return this;\n+    }\n+    if (arguments.length === 1) {\n+      this._events[event] = null;\n+      return this;\n+    }\n+    // specific handler\n+    var cb;\n+    var i = cbs.length;\n+    while (i--) {\n+      cb = cbs[i];\n+      if (cb === fn || cb.fn === fn) {\n+        cbs.splice(i, 1);\n+        break;\n+      }\n+    }\n+    return this;\n+  };\n+\n+  /**\n+   * Trigger an event on self.\n+   *\n+   * @param {String} event\n+   */\n+\n+  Vue.prototype.$emit = function (event) {\n+    var cbs = this._events[event];\n+    if (cbs) {\n+      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n+      var args = toArray(arguments, 1);\n+      for (var i = 0, l = cbs.length; i < l; i++) {\n+        cbs[i].apply(this, args);\n+      }\n+    }\n+  };\n+}\n+\n+var uid = 0;\n+\n+function Vue(options) {\n+  this._init(options);\n+}\n+\n+Vue.prototype._init = function (options) {\n+  // a uid\n+  this._uid = uid++;\n+  // a flag to avoid this being observed\n+  this._isVue = true;\n+  // merge options\n+  this.$options = mergeOptions(this.constructor.options, options || {}, this);\n+  if (process.env.NODE_ENV !== 'production') {\n+    initProxy(this);\n+  } else {\n+    this._renderProxy = this;\n+  }\n+  initLifecycle(this);\n+  initEvents(this);\n+  callHook(this, 'init');\n+  initState(this);\n+  callHook(this, 'created');\n+  initRender(this);\n+};\n+\n+Vue.prototype.$nextTick = function (fn) {\n+  nextTick(fn, this);\n+};\n+\n+stateMixin(Vue);\n+eventsMixin(Vue);\n+lifecycleMixin(Vue);\n+renderMixin(Vue);\n+\n+var warn = void 0;\n+var formatComponentName = void 0;\n+\n+if (process.env.NODE_ENV !== 'production') {\n+  (function () {\n+    var hasConsole = typeof console !== 'undefined';\n+\n+    warn = function warn(msg, vm) {\n+      if (hasConsole && !config.silent) {\n+        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n+      }\n+    };\n+\n+    formatComponentName = function formatComponentName(vm) {\n+      var name = vm._isVue ? vm.$options.name : vm.name;\n+      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n+    };\n+  })();\n+}\n+\n+/**\n+ * Option overwriting strategies are functions that handle\n+ * how to merge a parent option value and a child option\n+ * value into the final value.\n+ *\n+ * All strategy functions follow the same signature:\n+ *\n+ * @param {*} parentVal\n+ * @param {*} childVal\n+ * @param {Vue} [vm]\n+ */\n+\n+var strats = config.optionMergeStrategies = Object.create(null);\n+\n+/**\n+ * Helper that recursively merges two data objects together.\n+ */\n+\n+function mergeData(to, from) {\n+  var key, toVal, fromVal;\n+  for (key in from) {\n+    toVal = to[key];\n+    fromVal = from[key];\n+    if (!hasOwn(to, key)) {\n+      set(to, key, fromVal);\n+    } else if (isObject(toVal) && isObject(fromVal)) {\n+      mergeData(toVal, fromVal);\n+    }\n+  }\n+  return to;\n+}\n+\n+/**\n+ * Data\n+ */\n+\n+strats.data = function (parentVal, childVal, vm) {\n+  if (!vm) {\n+    // in a Vue.extend merge, both should be functions\n+    if (!childVal) {\n+      return parentVal;\n+    }\n+    if (typeof childVal !== 'function') {\n+      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n+      return parentVal;\n+    }\n+    if (!parentVal) {\n+      return childVal;\n+    }\n+    // when parentVal & childVal are both present,\n+    // we need to return a function that returns the\n+    // merged result of both functions... no need to\n+    // check if parentVal is a function here because\n+    // it has to be a function to pass previous merges.\n+    return function mergedDataFn() {\n+      return mergeData(childVal.call(this), parentVal.call(this));\n+    };\n+  } else if (parentVal || childVal) {\n+    return function mergedInstanceDataFn() {\n+      // instance merge\n+      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n+      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n+      if (instanceData) {\n+        return mergeData(instanceData, defaultData);\n+      } else {\n+        return defaultData;\n+      }\n+    };\n+  }\n+};\n+\n+/**\n+ * El\n+ */\n+\n+strats.el = function (parentVal, childVal, vm) {\n+  if (!vm && childVal && typeof childVal !== 'function') {\n+    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n+    return;\n+  }\n+  var ret = childVal || parentVal;\n+  // invoke the element factory if this is instance merge\n+  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n+};\n+\n+/**\n+ * Hooks and param attributes are merged as arrays.\n+ */\n+\n+function mergeHook(parentVal, childVal) {\n+  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n+}\n+\n+config._lifecycleHooks.forEach(function (hook) {\n+  strats[hook] = mergeHook;\n+});\n+\n+/**\n+ * Assets\n+ *\n+ * When a vm is present (instance creation), we need to do\n+ * a three-way merge between constructor options, instance\n+ * options and parent options.\n+ */\n+\n+function mergeAssets(parentVal, childVal) {\n+  var res = Object.create(parentVal);\n+  return childVal ? extend(res, childVal) : res;\n+}\n+\n+config._assetTypes.forEach(function (type) {\n+  strats[type + 's'] = mergeAssets;\n+});\n+\n+/**\n+ * Watchers.\n+ *\n+ * Watchers hashes should not overwrite one\n+ * another, so we merge them as arrays.\n+ */\n+\n+strats.watch = function (parentVal, childVal) {\n+  if (!childVal) return parentVal;\n+  if (!parentVal) return childVal;\n+  var ret = {};\n+  extend(ret, parentVal);\n+  for (var key in childVal) {\n+    var parent = ret[key];\n+    var child = childVal[key];\n+    if (parent && !isArray(parent)) {\n+      parent = [parent];\n+    }\n+    ret[key] = parent ? parent.concat(child) : [child];\n+  }\n+  return ret;\n+};\n+\n+/**\n+ * Other object hashes.\n+ */\n+\n+strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n+  if (!childVal) return parentVal;\n+  if (!parentVal) return childVal;\n+  var ret = Object.create(null);\n+  extend(ret, parentVal);\n+  extend(ret, childVal);\n+  return ret;\n+};\n+\n+/**\n+ * Default strategy.\n+ */\n+\n+var defaultStrat = function defaultStrat(parentVal, childVal) {\n+  return childVal === undefined ? parentVal : childVal;\n+};\n+\n+/**\n+ * Make sure component options get converted to actual\n+ * constructors.\n+ *\n+ * @param {Object} options\n+ */\n+\n+function guardComponents(options) {\n+  if (options.components) {\n+    var components = options.components;\n+    var def;\n+    for (var key in components) {\n+      if (isBuiltInTag(key) || config.isReservedTag(key)) {\n+        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n+        continue;\n+      }\n+      def = components[key];\n+      if (isPlainObject(def)) {\n+        components[key] = Vue.extend(def);\n+      }\n+    }\n+  }\n+}\n+\n+/**\n+ * Ensure all props option syntax are normalized into the\n+ * Object-based format.\n+ *\n+ * @param {Object} options\n+ */\n+\n+function guardProps(options) {\n+  var props = options.props;\n+  if (!props) return;\n+  var res = {};\n+  var i = void 0,\n+      val = void 0,\n+      name = void 0;\n+  if (isArray(props)) {\n+    i = props.length;\n+    while (i--) {\n+      val = props[i];\n+      if (typeof val === 'string') {\n+        name = camelize(val);\n+        res[name] = { type: null };\n+      } else if (process.env.NODE_ENV !== 'production') {\n+        warn('props must be strings when using array syntax.');\n+      }\n+    }\n+  } else if (isPlainObject(props)) {\n+    for (var key in props) {\n+      val = props[key];\n+      name = camelize(key);\n+      res[name] = isPlainObject(val) ? val : { type: val };\n+    }\n+  }\n+  options.props = res;\n+}\n+\n+function guardDirectives(options) {\n+  var dirs = options.directives;\n+  if (dirs) {\n+    for (var key in dirs) {\n+      if (typeof dirs[key] === 'function') {\n+        dirs[key] = { update: dirs[key] };\n+      }\n+    }\n+  }\n+}\n+\n+/**\n+ * Merge two option objects into a new one.\n+ * Core utility used in both instantiation and inheritance.\n+ *\n+ * @param {Object} parent\n+ * @param {Object} child\n+ * @param {Vue} [vm] - if vm is present, indicates this is\n+ *                     an instantiation merge.\n+ */\n+\n+function mergeOptions(parent, child, vm) {\n+  guardComponents(child);\n+  guardProps(child);\n+  guardDirectives(child);\n+  if (process.env.NODE_ENV !== 'production') {\n+    if (child.propsData && !vm) {\n+      warn('propsData can only be used as an instantiation option.');\n+    }\n+  }\n+  var options = {};\n+  var key;\n+  if (child.mixins) {\n+    for (var i = 0, l = child.mixins.length; i < l; i++) {\n+      parent = mergeOptions(parent, child.mixins[i], vm);\n+    }\n+  }\n+  for (key in parent) {\n+    mergeField(key);\n+  }\n+  for (key in child) {\n+    if (!hasOwn(parent, key)) {\n+      mergeField(key);\n+    }\n+  }\n+  function mergeField(key) {\n+    var strat = strats[key] || defaultStrat;\n+    options[key] = strat(parent[key], child[key], vm, key);\n+  }\n+  return options;\n+}\n+\n+/**\n+ * Resolve an asset.\n+ * This function is used because child instances need access\n+ * to assets defined in its ancestor chain.\n+ *\n+ * @param {Object} options\n+ * @param {String} type\n+ * @param {String} id\n+ * @param {Boolean} warnMissing\n+ * @return {Object|Function}\n+ */\n+\n+function resolveAsset(options, type, id, warnMissing) {\n+  /* istanbul ignore if */\n+  if (typeof id !== 'string') {\n+    return;\n+  }\n+  var assets = options[type];\n+  var camelizedId;\n+  var res = assets[id] ||\n+  // camelCase ID\n+  assets[camelizedId = camelize(id)] ||\n+  // Pascal Case ID\n+  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n+  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n+    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n+  }\n+  return res;\n+}\n+\n+function validateProp(vm, key, propsData) {\n+  if (!propsData) return;\n+  var prop = vm.$options.props[key];\n+  var absent = hasOwn(propsData, key);\n+  var value = propsData[key];\n+  // check default value\n+  if (value === undefined) {\n+    value = getPropDefaultValue(vm, prop, key);\n+    // since the default value is a fresh copy,\n+    // make sure to observe it.\n+    observerState.shouldConvert = true;\n+    observe(value);\n+    observerState.shouldConvert = false;\n+  }\n+  if (process.env.NODE_ENV !== 'production') {\n+    assertProp(prop, key, value, vm, absent);\n+  }\n+  return value;\n+}\n+\n+/**\n+ * Get the default value of a prop.\n+ *\n+ * @param {Vue} vm\n+ * @param {Object} prop\n+ * @return {*}\n+ */\n+\n+function getPropDefaultValue(vm, prop, name) {\n+  // no default, return undefined\n+  if (!hasOwn(prop, 'default')) {\n+    // absent boolean value defaults to false\n+    return prop.type === Boolean ? false : undefined;\n+  }\n+  var def = prop.default;\n+  // warn against non-factory defaults for Object & Array\n+  if (isObject(def)) {\n+    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n+  }\n+  // call factory function for non-Function types\n+  return typeof def === 'function' && prop.type !== Function ? def.call(vm) : def;\n+}\n+\n+/**\n+ * Assert whether a prop is valid.\n+ *\n+ * @param {Object} prop\n+ * @param {String} name\n+ * @param {*} value\n+ * @param {Vue} vm\n+ * @param {Boolean} absent\n+ */\n+\n+function assertProp(prop, name, value, vm, absent) {\n+  if (prop.required && absent) {\n+    process.env.NODE_ENV !== 'production' && warn('Missing required prop: \"' + name + '\"', vm);\n+    return false;\n+  }\n+  if (value == null) {\n+    return true;\n+  }\n+  var type = prop.type;\n+  var valid = !type;\n+  var expectedTypes = [];\n+  if (type) {\n+    if (!isArray(type)) {\n+      type = [type];\n+    }\n+    for (var i = 0; i < type.length && !valid; i++) {\n+      var assertedType = assertType(value, type[i]);\n+      expectedTypes.push(assertedType.expectedType);\n+      valid = assertedType.valid;\n+    }\n+  }\n+  if (!valid) {\n+    if (process.env.NODE_ENV !== 'production') {\n+      warn('Invalid prop: type check failed for prop \"' + name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n+    }\n+    return false;\n+  }\n+  var validator = prop.validator;\n+  if (validator) {\n+    if (!validator(value)) {\n+      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + name + '\".', vm);\n+      return false;\n+    }\n+  }\n+  return true;\n+}\n+\n+/**\n+ * Assert the type of a value\n+ *\n+ * @param {*} value\n+ * @param {Function} type\n+ * @return {Object}\n+ */\n+\n+function assertType(value, type) {\n+  var valid;\n+  var expectedType;\n+  if (type === String) {\n+    expectedType = 'string';\n+    valid = typeof value === expectedType;\n+  } else if (type === Number) {\n+    expectedType = 'number';\n+    valid = typeof value === expectedType;\n+  } else if (type === Boolean) {\n+    expectedType = 'boolean';\n+    valid = typeof value === expectedType;\n+  } else if (type === Function) {\n+    expectedType = 'function';\n+    valid = typeof value === expectedType;\n+  } else if (type === Object) {\n+    expectedType = 'object';\n+    valid = isPlainObject(value);\n+  } else if (type === Array) {\n+    expectedType = 'array';\n+    valid = isArray(value);\n+  } else {\n+    valid = value instanceof type;\n+  }\n+  return {\n+    valid: valid,\n+    expectedType: expectedType\n+  };\n+}\n+\n+/**\n+ * Format type for output\n+ *\n+ * @param {String} type\n+ * @return {String}\n+ */\n+\n+function formatType(type) {\n+  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n+}\n+\n+/**\n+ * Format value\n+ *\n+ * @param {*} value\n+ * @return {String}\n+ */\n+\n+function formatValue(val) {\n+  return Object.prototype.toString.call(val).slice(8, -1);\n+}\n+\n+// attributes that should be using props for binding\n+var mustUseProp = makeMap('value,selected,checked,muted');\n+\n+var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n+\n+var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');\n+\n+var propsToAttrMap = {\n+  acceptCharset: 'accept-charset',\n+  className: 'class',\n+  htmlFor: 'for',\n+  httpEquiv: 'http-equiv'\n+};\n+\n+function genClassForVnode(vnode) {\n+  var data = vnode.data;\n+  // Important: check if this is a component container node\n+  // or a child component root node\n+  var i = void 0;\n+  if ((i = vnode.child) && (i = i._vnode.data)) {\n+    data = mergeClassData(i, data);\n+  }\n+  if ((i = vnode.parent) && (i = i.data)) {\n+    data = mergeClassData(data, i);\n+  }\n+  return genClassFromData(data);\n+}\n+\n+function mergeClassData(child, parent) {\n+  return {\n+    staticClass: concat(child.staticClass, parent.staticClass),\n+    class: child.class ? extend(child.class, parent.class) : parent.class\n+  };\n+}\n+\n+function genClassFromData(data) {\n+  var dynamicClass = data.class;\n+  var staticClass = data.staticClass;\n+  if (staticClass || dynamicClass) {\n+    return concat(staticClass, stringifyClass(dynamicClass));\n+  }\n+}\n+\n+function concat(a, b) {\n+  return a ? b ? a + ' ' + b : a : b || '';\n+}\n+\n+function stringifyClass(value) {\n+  if (!value) {\n+    return '';\n+  }\n+  if (typeof value === 'string') {\n+    return value;\n+  }\n+  if (isArray(value)) {\n+    var res = '';\n+    for (var i = 0, l = value.length; i < l; i++) {\n+      if (value[i]) res += stringifyClass(value[i]) + ' ';\n+    }\n+    return res.slice(0, -1);\n+  }\n+  if (isObject(value)) {\n+    var _res = '';\n+    for (var key in value) {\n+      if (value[key]) _res += key + ' ';\n+    }\n+    return _res.slice(0, -1);\n+  }\n+}\n+\n+var isReservedTag = makeMap('html,base,head,link,meta,style,title,' + 'address,article,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,hr,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template');\n+\n+var isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr', true);\n+\n+// Elements that you can, intentionally, leave open\n+// (and which close themselves)\n+var canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source', true);\n+\n+// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n+// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\n+var isNonPhrasingTag = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' + 'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' + 'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' + 'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' + 'title,tr,track', true);\n+\n+// this map covers namespace elements that can appear as template root nodes\n+var isSVG = makeMap('svg,g,defs,symbol,use,image,text,circle,ellipse,' + 'line,path,polygon,polyline,rect', true);\n+\n+var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n+var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n+var isAndroid = UA && UA.indexOf('android') > 0;\n+\n+function renderAttrs(node) {\n+  if (node.data.attrs || node.data.props || node.data.staticAttrs) {\n+    return serialize(node.data.staticAttrs) + serialize(node.data.attrs) + serialize(node.data.props, true);\n+  }\n+}\n+\n+function serialize(attrs, asProps) {\n+  var res = '';\n+  if (!attrs) {\n+    return res;\n+  }\n+  for (var key in attrs) {\n+    if (key === 'style') {\n+      // leave it to the style module\n+      continue;\n+    }\n+    if (asProps) {\n+      key = propsToAttrMap[key] || key.toLowerCase();\n+    }\n+    if (attrs[key] != null) {\n+      if (isBooleanAttr(key)) {\n+        res += ' ' + key + '=\"' + key + '\"';\n+      } else if (isEnumeratedAttr(key)) {\n+        res += ' ' + key + '=\"true\"';\n+      } else {\n+        res += ' ' + key + '=\"' + attrs[key] + '\"';\n+      }\n+    }\n+  }\n+  return res;\n+}\n+\n+function renderClass(node) {\n+  if (node.data.class || node.data.staticClass) {\n+    return ' class=\"' + genClassForVnode(node) + '\"';\n+  }\n+}\n+\n+function renderStyle(node) {\n+  var staticStyle = node.data.staticAttrs && node.data.staticAttrs.style;\n+  if (node.data.style || staticStyle) {\n+    var styles = node.data.style;\n+    var res = ' style=\"';\n+    for (var key in styles) {\n+      res += hyphenate(key) + ':' + styles[key] + ';';\n+    }\n+    return res + (staticStyle || '') + '\"';\n+  }\n+}\n+\n+function show(node, dir) {\n+  if (!dir.value) {\n+    (node.data.style || (node.data.style = {})).display = 'none';\n+  }\n+}\n+\n+var modules = [renderAttrs, renderClass, renderStyle];\n+\n+var baseDirectives = {\n+  show: show\n+};\n+\n+function publicCreateRenderer() {\n+  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n+\n+  // user can provide server-side implementations for custom directives\n+  // when creating the renderer.\n+  var directives = Object.assign(baseDirectives, options.directives);\n+  return createRenderer({\n+    isUnaryTag: isUnaryTag,\n+    modules: modules,\n+    directives: directives\n+  });\n+}\n+\n+module.exports = publicCreateRenderer;\n",
            "-": ""
          }
        ],
        "a/dist/vue.common.js": [
          {
            "+": "+'use strict';\n+\n+/**\n+ * Convert a value to a string that is actually rendered.\n+ *\n+ * @param {*} val\n+ * @return {String}\n+ */\n+\n+function renderString(val) {\n+  return val == null ? '' : typeof val === 'object' ? JSON.stringify(val, null, 2) : String(val);\n+}\n+\n+/**\n+ * Make a map and return a function for checking if a key\n+ * is in that map.\n+ *\n+ * @param {String} str\n+ * @param {Boolean} expectsLowerCase\n+ * @return {Function}\n+ */\n+\n+function makeMap(str, expectsLowerCase) {\n+  var map = Object.create(null);\n+  var list = str.split(',');\n+  for (var i = 0; i < list.length; i++) {\n+    map[list[i]] = true;\n+  }\n+  return expectsLowerCase ? function (val) {\n+    return map[val.toLowerCase()];\n+  } : function (val) {\n+    return map[val];\n+  };\n+}\n+\n+/**\n+ * Check if a tag is a built-in tag.\n+ */\n+\n+var isBuiltInTag = makeMap('slot,component,render,transition', true);\n+\n+/**\n+ * Remove an item from an array\n+ *\n+ * @param {Array} arr\n+ * @param {*} item\n+ */\n+\n+function remove(arr, item) {\n+  if (arr.length) {\n+    var index = arr.indexOf(item);\n+    if (index > -1) {\n+      return arr.splice(index, 1);\n+    }\n+  }\n+}\n+\n+/**\n+ * Check whether the object has the property.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @return {Boolean}\n+ */\n+var hasOwnProperty = Object.prototype.hasOwnProperty;\n+function hasOwn(obj, key) {\n+  return hasOwnProperty.call(obj, key);\n+}\n+\n+/**\n+ * Check if value is primitive\n+ *\n+ * @param {*} value\n+ * @return {Boolean}\n+ */\n+\n+function isPrimitive(value) {\n+  return typeof value === 'string' || typeof value === 'number';\n+}\n+\n+/**\n+ * Create a cached version of a pure function.\n+ *\n+ * @param {Function} fn\n+ * @return {Function}\n+ */\n+\n+function cached(fn) {\n+  var cache = Object.create(null);\n+  return function cachedFn(str) {\n+    var hit = cache[str];\n+    return hit || (cache[str] = fn(str));\n+  };\n+}\n+\n+/**\n+ * Camelize a hyphen-delmited string.\n+ *\n+ * @param {String} str\n+ * @return {String}\n+ */\n+\n+var camelizeRE = /-(\\w)/g;\n+var camelize = cached(function (str) {\n+  return str.replace(camelizeRE, toUpper);\n+});\n+\n+function toUpper(_, c) {\n+  return c ? c.toUpperCase() : '';\n+}\n+\n+/**\n+ * Hyphenate a camelCase string.\n+ *\n+ * @param {String} str\n+ * @return {String}\n+ */\n+\n+var hyphenateRE = /([a-z\\d])([A-Z])/g;\n+var hyphenate = cached(function (str) {\n+  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n+});\n+\n+/**\n+ * Simple bind, faster than native\n+ *\n+ * @param {Function} fn\n+ * @param {Object} ctx\n+ * @return {Function}\n+ */\n+\n+function bind(fn, ctx) {\n+  return function (a) {\n+    var l = arguments.length;\n+    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n+  };\n+}\n+\n+/**\n+ * Convert an Array-like object to a real Array.\n+ *\n+ * @param {Array-like} list\n+ * @param {Number} [start] - start index\n+ * @return {Array}\n+ */\n+\n+function toArray(list, start) {\n+  start = start || 0;\n+  var i = list.length - start;\n+  var ret = new Array(i);\n+  while (i--) {\n+    ret[i] = list[i + start];\n+  }\n+  return ret;\n+}\n+\n+/**\n+ * Mix properties into target object.\n+ *\n+ * @param {Object} to\n+ * @param {Object} from\n+ */\n+\n+function extend(to, from) {\n+  for (var key in from) {\n+    to[key] = from[key];\n+  }\n+  return to;\n+}\n+\n+/**\n+ * Quick object check - this is primarily used to tell\n+ * Objects from primitive values when we know the value\n+ * is a JSON-compliant type.\n+ *\n+ * @param {*} obj\n+ * @return {Boolean}\n+ */\n+\n+function isObject(obj) {\n+  return obj !== null && typeof obj === 'object';\n+}\n+\n+/**\n+ * Strict object type check. Only returns true\n+ * for plain JavaScript objects.\n+ *\n+ * @param {*} obj\n+ * @return {Boolean}\n+ */\n+\n+var toString = Object.prototype.toString;\n+var OBJECT_STRING = '[object Object]';\n+function isPlainObject(obj) {\n+  return toString.call(obj) === OBJECT_STRING;\n+}\n+\n+/**\n+ * Array type check.\n+ *\n+ * @param {*} obj\n+ * @return {Boolean}\n+ */\n+\n+var isArray = Array.isArray;\n+\n+/**\n+ * Check if a string starts with $ or _\n+ *\n+ * @param {String} str\n+ * @return {Boolean}\n+ */\n+\n+function isReserved(str) {\n+  var c = (str + '').charCodeAt(0);\n+  return c === 0x24 || c === 0x5F;\n+}\n+\n+/**\n+ * Define a property.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @param {*} val\n+ * @param {Boolean} [enumerable]\n+ */\n+\n+function def(obj, key, val, enumerable) {\n+  Object.defineProperty(obj, key, {\n+    value: val,\n+    enumerable: !!enumerable,\n+    writable: true,\n+    configurable: true\n+  });\n+}\n+\n+/**\n+ * Parse simple path.\n+ */\n+\n+var bailRE = /[^\\w\\.]/;\n+function parsePath(path) {\n+  if (bailRE.test(path)) {\n+    return;\n+  } else {\n+    path = path.split('.');\n+    return function (obj) {\n+      for (var i = 0; i < path.length; i++) {\n+        if (!obj) return;\n+        obj = obj[path[i]];\n+      }\n+      return obj;\n+    };\n+  }\n+}\n+\n+/* global MutationObserver */\n+\n+// can we use __proto__?\n+var hasProto = '__proto__' in {};\n+\n+// Browser environment sniffing\n+var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n+\n+// detect devtools\n+var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n+\n+// UA sniffing for working around browser-specific quirks\n+var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n+var isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n+var isWechat = UA && UA.indexOf('micromessenger') > 0;\n+\n+/**\n+ * Defer a task to execute it asynchronously. Ideally this\n+ * should be executed as a microtask, so we leverage\n+ * MutationObserver if it's available, and fallback to\n+ * setTimeout(0).\n+ *\n+ * @param {Function} cb\n+ * @param {Object} ctx\n+ */\n+\n+var nextTick = function () {\n+  var callbacks = [];\n+  var pending = false;\n+  var timerFunc;\n+  function nextTickHandler() {\n+    pending = false;\n+    var copies = callbacks.slice(0);\n+    callbacks = [];\n+    for (var i = 0; i < copies.length; i++) {\n+      copies[i]();\n+    }\n+  }\n+\n+  /* istanbul ignore if */\n+  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n+    var counter = 1;\n+    var observer = new MutationObserver(nextTickHandler);\n+    var textNode = document.createTextNode(counter);\n+    observer.observe(textNode, {\n+      characterData: true\n+    });\n+    timerFunc = function timerFunc() {\n+      counter = (counter + 1) % 2;\n+      textNode.data = counter;\n+    };\n+  } else {\n+    // webpack attempts to inject a shim for setImmediate\n+    // if it is used as a global, so we have to work around that to\n+    // avoid bundling unnecessary code.\n+    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n+    timerFunc = context.setImmediate || setTimeout;\n+  }\n+  return function (cb, ctx) {\n+    var func = ctx ? function () {\n+      cb.call(ctx);\n+    } : cb;\n+    callbacks.push(func);\n+    if (pending) return;\n+    pending = true;\n+    timerFunc(nextTickHandler, 0);\n+  };\n+}();\n+\n+var _Set = void 0;\n+/* istanbul ignore if */\n+if (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n+  // use native Set when available.\n+  _Set = Set;\n+} else {\n+  // a non-standard Set polyfill that only works with primitive keys.\n+  _Set = function _Set() {\n+    this.set = Object.create(null);\n+  };\n+  _Set.prototype.has = function (key) {\n+    return this.set[key] !== undefined;\n+  };\n+  _Set.prototype.add = function (key) {\n+    this.set[key] = 1;\n+  };\n+  _Set.prototype.clear = function () {\n+    this.set = Object.create(null);\n+  };\n+}\n+\n+var config = {\n+\n+  /**\n+   * Preserve whitespaces between elements.\n+   */\n+\n+  preserveWhitespace: true,\n+\n+  /**\n+   * Whether to suppress warnings.\n+   *\n+   * @type {Boolean}\n+   */\n+\n+  silent: false,\n+\n+  /**\n+   * Check if a tag is reserved so that it cannot be registered as a\n+   * component. This is platform-dependent and may be overwritten.\n+   */\n+\n+  isReservedTag: function isReservedTag() {\n+    return false;\n+  },\n+\n+  /**\n+   * Check if a tag is an unknown element.\n+   * Platform-dependent.\n+   */\n+\n+  isUnknownElement: function isUnknownElement() {\n+    return false;\n+  },\n+\n+  /**\n+   * List of asset types that a component can own.\n+   *\n+   * @type {Array}\n+   */\n+\n+  _assetTypes: ['component', 'directive', 'transition'],\n+\n+  /**\n+   * List of lifecycle hooks.\n+   *\n+   * @type {Array}\n+   */\n+\n+  _lifecycleHooks: ['init', 'created', 'beforeMount', 'mounted', 'ready', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed'],\n+\n+  /**\n+   * Max circular updates allowed in a batcher flush cycle.\n+   */\n+\n+  _maxUpdateCount: 100\n+};\n+\n+var warn = void 0;\n+var formatComponentName = void 0;\n+\n+if (process.env.NODE_ENV !== 'production') {\n+  (function () {\n+    var hasConsole = typeof console !== 'undefined';\n+\n+    warn = function warn(msg, vm) {\n+      if (hasConsole && !config.silent) {\n+        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n+      }\n+    };\n+\n+    formatComponentName = function formatComponentName(vm) {\n+      var name = vm._isVue ? vm.$options.name : vm.name;\n+      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n+    };\n+  })();\n+}\n+\n+var uid$1 = 0;\n+\n+/**\n+ * A dep is an observable that can have multiple\n+ * directives subscribing to it.\n+ *\n+ * @constructor\n+ */\n+\n+function Dep() {\n+  this.id = uid$1++;\n+  this.subs = [];\n+}\n+\n+// the current target watcher being evaluated.\n+// this is globally unique because there could be only one\n+// watcher being evaluated at any time.\n+Dep.target = null;\n+\n+/**\n+ * Add a directive subscriber.\n+ *\n+ * @param {Directive} sub\n+ */\n+\n+Dep.prototype.addSub = function (sub) {\n+  this.subs.push(sub);\n+};\n+\n+/**\n+ * Remove a directive subscriber.\n+ *\n+ * @param {Directive} sub\n+ */\n+\n+Dep.prototype.removeSub = function (sub) {\n+  remove(this.subs, sub);\n+};\n+\n+/**\n+ * Add self as a dependency to the target watcher.\n+ */\n+\n+Dep.prototype.depend = function () {\n+  Dep.target.addDep(this);\n+};\n+\n+/**\n+ * Notify all subscribers of a new value.\n+ */\n+\n+Dep.prototype.notify = function () {\n+  // stablize the subscriber list first\n+  var subs = this.subs.slice();\n+  for (var i = 0, l = subs.length; i < l; i++) {\n+    subs[i].update();\n+  }\n+};\n+\n+var arrayProto = Array.prototype;\n+var arrayMethods = Object.create(arrayProto)\n+\n+/**\n+ * Intercept mutating methods and emit events\n+ */\n+\n+;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n+  // cache original method\n+  var original = arrayProto[method];\n+  def(arrayMethods, method, function mutator() {\n+    // avoid leaking arguments:\n+    // http://jsperf.com/closure-with-arguments\n+    var i = arguments.length;\n+    var args = new Array(i);\n+    while (i--) {\n+      args[i] = arguments[i];\n+    }\n+    var result = original.apply(this, args);\n+    var ob = this.__ob__;\n+    var inserted;\n+    switch (method) {\n+      case 'push':\n+        inserted = args;\n+        break;\n+      case 'unshift':\n+        inserted = args;\n+        break;\n+      case 'splice':\n+        inserted = args.slice(2);\n+        break;\n+    }\n+    if (inserted) ob.observeArray(inserted);\n+    // notify change\n+    ob.dep.notify();\n+    return result;\n+  });\n+});\n+\n+var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n+\n+/**\n+ * By default, when a reactive property is set, the new value is\n+ * also converted to become reactive. However when passing down props,\n+ * we don't want to force conversion because the value may be a nested value\n+ * under a frozen data structure. Converting it would defeat the optimization.\n+ */\n+\n+var observerState = {\n+  shouldConvert: true\n+};\n+\n+/**\n+ * Observer class that are attached to each observed\n+ * object. Once attached, the observer converts target\n+ * object's property keys into getter/setters that\n+ * collect dependencies and dispatches updates.\n+ *\n+ * @param {Array|Object} value\n+ * @constructor\n+ */\n+\n+function Observer(value) {\n+  this.value = value;\n+  this.dep = new Dep();\n+  def(value, '__ob__', this);\n+  if (isArray(value)) {\n+    var augment = hasProto ? protoAugment : copyAugment;\n+    augment(value, arrayMethods, arrayKeys);\n+    this.observeArray(value);\n+  } else {\n+    this.walk(value);\n+  }\n+}\n+\n+// Instance methods\n+\n+/**\n+ * Walk through each property and convert them into\n+ * getter/setters. This method should only be called when\n+ * value type is Object.\n+ *\n+ * @param {Object} obj\n+ */\n+\n+Observer.prototype.walk = function (obj) {\n+  for (var key in obj) {\n+    this.convert(key, obj[key]);\n+  }\n+};\n+\n+/**\n+ * Observe a list of Array items.\n+ *\n+ * @param {Array} items\n+ */\n+\n+Observer.prototype.observeArray = function (items) {\n+  for (var i = 0, l = items.length; i < l; i++) {\n+    observe(items[i]);\n+  }\n+};\n+\n+/**\n+ * Convert a property into getter/setter so we can emit\n+ * the events when the property is accessed/changed.\n+ *\n+ * @param {String} key\n+ * @param {*} val\n+ */\n+\n+Observer.prototype.convert = function (key, val) {\n+  defineReactive(this.value, key, val);\n+};\n+\n+/**\n+ * Add an owner vm, so that when $set/$delete mutations\n+ * happen we can notify owner vms to proxy the keys and\n+ * digest the watchers. This is only called when the object\n+ * is observed as an instance's root $data.\n+ *\n+ * @param {Vue} vm\n+ */\n+\n+Observer.prototype.addVm = function (vm) {\n+  (this.vms || (this.vms = [])).push(vm);\n+};\n+\n+/**\n+ * Remove an owner vm. This is called when the object is\n+ * swapped out as an instance's $data object.\n+ *\n+ * @param {Vue} vm\n+ */\n+\n+Observer.prototype.removeVm = function (vm) {\n+  remove(this.vms, vm);\n+};\n+\n+// helpers\n+\n+/**\n+ * Augment an target Object or Array by intercepting\n+ * the prototype chain using __proto__\n+ *\n+ * @param {Object|Array} target\n+ * @param {Object} src\n+ */\n+\n+function protoAugment(target, src) {\n+  /* eslint-disable no-proto */\n+  target.__proto__ = src;\n+  /* eslint-enable no-proto */\n+}\n+\n+/**\n+ * Augment an target Object or Array by defining\n+ * hidden properties.\n+ *\n+ * @param {Object|Array} target\n+ * @param {Object} proto\n+ */\n+\n+function copyAugment(target, src, keys) {\n+  for (var i = 0, l = keys.length; i < l; i++) {\n+    var key = keys[i];\n+    def(target, key, src[key]);\n+  }\n+}\n+\n+/**\n+ * Attempt to create an observer instance for a value,\n+ * returns the new observer if successfully observed,\n+ * or the existing observer if the value already has one.\n+ *\n+ * @param {*} value\n+ * @param {Vue} [vm]\n+ * @return {Observer|undefined}\n+ * @static\n+ */\n+\n+function observe(value, vm) {\n+  if (!isObject(value)) {\n+    return;\n+  }\n+  var ob;\n+  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n+    ob = value.__ob__;\n+  } else if (observerState.shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n+    ob = new Observer(value);\n+  }\n+  if (ob && vm) {\n+    ob.addVm(vm);\n+  }\n+  return ob;\n+}\n+\n+/**\n+ * Define a reactive property on an Object.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @param {*} val\n+ */\n+\n+function defineReactive(obj, key, val) {\n+  var dep = new Dep();\n+\n+  var property = Object.getOwnPropertyDescriptor(obj, key);\n+  if (property && property.configurable === false) {\n+    return;\n+  }\n+\n+  // cater for pre-defined getter/setters\n+  var getter = property && property.get;\n+  var setter = property && property.set;\n+\n+  var childOb = observe(val);\n+  Object.defineProperty(obj, key, {\n+    enumerable: true,\n+    configurable: true,\n+    get: function reactiveGetter() {\n+      var value = getter ? getter.call(obj) : val;\n+      if (Dep.target) {\n+        dep.depend();\n+        if (childOb) {\n+          childOb.dep.depend();\n+        }\n+        if (isArray(value)) {\n+          for (var e, i = 0, l = value.length; i < l; i++) {\n+            e = value[i];\n+            e && e.__ob__ && e.__ob__.dep.depend();\n+          }\n+        }\n+      }\n+      return value;\n+    },\n+    set: function reactiveSetter(newVal) {\n+      var value = getter ? getter.call(obj) : val;\n+      if (newVal === value) {\n+        return;\n+      }\n+      if (setter) {\n+        setter.call(obj, newVal);\n+      } else {\n+        val = newVal;\n+      }\n+      childOb = observe(newVal);\n+      dep.notify();\n+    }\n+  });\n+}\n+\n+/**\n+ * Set a property on an object. Adds the new property and\n+ * triggers change notification if the property doesn't\n+ * already exist.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ * @param {*} val\n+ * @public\n+ */\n+\n+function set(obj, key, val) {\n+  if (isArray(obj)) {\n+    return obj.splice(key, 1, val);\n+  }\n+  if (hasOwn(obj, key)) {\n+    obj[key] = val;\n+    return;\n+  }\n+  if (obj._isVue) {\n+    set(obj._data, key, val);\n+    return;\n+  }\n+  var ob = obj.__ob__;\n+  if (!ob) {\n+    obj[key] = val;\n+    return;\n+  }\n+  ob.convert(key, val);\n+  ob.dep.notify();\n+  if (ob.vms) {\n+    var i = ob.vms.length;\n+    while (i--) {\n+      var vm = ob.vms[i];\n+      proxy(vm, key);\n+      vm.$forceUpdate();\n+    }\n+  }\n+  return val;\n+}\n+\n+/**\n+ * Delete a property and trigger change if necessary.\n+ *\n+ * @param {Object} obj\n+ * @param {String} key\n+ */\n+\n+function del(obj, key) {\n+  if (!hasOwn(obj, key)) {\n+    return;\n+  }\n+  delete obj[key];\n+  var ob = obj.__ob__;\n+\n+  if (!ob) {\n+    if (obj._isVue) {\n+      delete obj._data[key];\n+      obj.$forceUpdate();\n+    }\n+    return;\n+  }\n+  ob.dep.notify();\n+  if (ob.vms) {\n+    var i = ob.vms.length;\n+    while (i--) {\n+      var vm = ob.vms[i];\n+      unproxy(vm, key);\n+      vm.$forceUpdate();\n+    }\n+  }\n+}\n+\n+function proxy(vm, key) {\n+  if (!isReserved(key)) {\n+    Object.defineProperty(vm, key, {\n+      configurable: true,\n+      enumerable: true,\n+      get: function proxyGetter() {\n+        return vm._data[key];\n+      },\n+      set: function proxySetter(val) {\n+        vm._data[key] = val;\n+      }\n+    });\n+  }\n+}\n+\n+function unproxy(vm, key) {\n+  if (!isReserved(key)) {\n+    delete vm[key];\n+  }\n+}\n+\n+/**\n+ * Option overwriting strategies are functions that handle\n+ * how to merge a parent option value and a child option\n+ * value into the final value.\n+ *\n+ * All strategy functions follow the same signature:\n+ *\n+ * @param {*} parentVal\n+ * @param {*} childVal\n+ * @param {Vue} [vm]\n+ */\n+\n+var strats = config.optionMergeStrategies = Object.create(null);\n+\n+/**\n+ * Helper that recursively merges two data objects together.\n+ */\n+\n+function mergeData(to, from) {\n+  var key, toVal, fromVal;\n+  for (key in from) {\n+    toVal = to[key];\n+    fromVal = from[key];\n+    if (!hasOwn(to, key)) {\n+      set(to, key, fromVal);\n+    } else if (isObject(toVal) && isObject(fromVal)) {\n+      mergeData(toVal, fromVal);\n+    }\n+  }\n+  return to;\n+}\n+\n+/**\n+ * Data\n+ */\n+\n+strats.data = function (parentVal, childVal, vm) {\n+  if (!vm) {\n+    // in a Vue.extend merge, both should be functions\n+    if (!childVal) {\n+      return parentVal;\n+    }\n+    if (typeof childVal !== 'function') {\n+      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n+      return parentVal;\n+    }\n+    if (!parentVal) {\n+      return childVal;\n+    }\n+    // when parentVal & childVal are both present,\n+    // we need to return a function that returns the\n+    // merged result of both functions... no need to\n+    // check if parentVal is a function here because\n+    // it has to be a function to pass previous merges.\n+    return function mergedDataFn() {\n+      return mergeData(childVal.call(this), parentVal.call(this));\n+    };\n+  } else if (parentVal || childVal) {\n+    return function mergedInstanceDataFn() {\n+      // instance merge\n+      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n+      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n+      if (instanceData) {\n+        return mergeData(instanceData, defaultData);\n+      } else {\n+        return defaultData;\n+      }\n+    };\n+  }\n+};\n+\n+/**\n+ * El\n+ */\n+\n+strats.el = function (parentVal, childVal, vm) {\n+  if (!vm && childVal && typeof childVal !== 'function') {\n+    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n+    return;\n+  }\n+  var ret = childVal || parentVal;\n+  // invoke the element factory if this is instance merge\n+  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n+};\n+\n+/**\n+ * Hooks and param attributes are merged as arrays.\n+ */\n+\n+function mergeHook(parentVal, childVal) {\n+  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n+}\n+\n+config._lifecycleHooks.forEach(function (hook) {\n+  strats[hook] = mergeHook;\n+});\n+\n+/**\n+ * Assets\n+ *\n+ * When a vm is present (instance creation), we need to do\n+ * a three-way merge between constructor options, instance\n+ * options and parent options.\n+ */\n+\n+function mergeAssets(parentVal, childVal) {\n+  var res = Object.create(parentVal);\n+  return childVal ? extend(res, childVal) : res;\n+}\n+\n+config._assetTypes.forEach(function (type) {\n+  strats[type + 's'] = mergeAssets;\n+});\n+\n+/**\n+ * Watchers.\n+ *\n+ * Watchers hashes should not overwrite one\n+ * another, so we merge them as arrays.\n+ */\n+\n+strats.watch = function (parentVal, childVal) {\n+  if (!childVal) return parentVal;\n+  if (!parentVal) return childVal;\n+  var ret = {};\n+  extend(ret, parentVal);\n+  for (var key in childVal) {\n+    var parent = ret[key];\n+    var child = childVal[key];\n+    if (parent && !isArray(parent)) {\n+      parent = [parent];\n+    }\n+    ret[key] = parent ? parent.concat(child) : [child];\n+  }\n+  return ret;\n+};\n+\n+/**\n+ * Other object hashes.\n+ */\n+\n+strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n+  if (!childVal) return parentVal;\n+  if (!parentVal) return childVal;\n+  var ret = Object.create(null);\n+  extend(ret, parentVal);\n+  extend(ret, childVal);\n+  return ret;\n+};\n+\n+/**\n+ * Default strategy.\n+ */\n+\n+var defaultStrat = function defaultStrat(parentVal, childVal) {\n+  return childVal === undefined ? parentVal : childVal;\n+};\n+\n+/**\n+ * Make sure component options get converted to actual\n+ * constructors.\n+ *\n+ * @param {Object} options\n+ */\n+\n+function guardComponents(options) {\n+  if (options.components) {\n+    var components = options.components;\n+    var def;\n+    for (var key in components) {\n+      if (isBuiltInTag(key) || config.isReservedTag(key)) {\n+        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n+        continue;\n+      }\n+      def = components[key];\n+      if (isPlainObject(def)) {\n+        components[key] = Vue.extend(def);\n+      }\n+    }\n+  }\n+}\n+\n+/**\n+ * Ensure all props option syntax are normalized into the\n+ * Object-based format.\n+ *\n+ * @param {Object} options\n+ */\n+\n+function guardProps(options) {\n+  var props = options.props;\n+  if (!props) return;\n+  var res = {};\n+  var i = void 0,\n+      val = void 0,\n+      name = void 0;\n+  if (isArray(props)) {\n+    i = props.length;\n+    while (i--) {\n+      val = props[i];\n+      if (typeof val === 'string') {\n+        name = camelize(val);\n+        res[name] = { type: null };\n+      } else if (process.env.NODE_ENV !== 'production') {\n+        warn('props must be strings when using array syntax.');\n+      }\n+    }\n+  } else if (isPlainObject(props)) {\n+    for (var key in props) {\n+      val = props[key];\n+      name = camelize(key);\n+      res[name] = isPlainObject(val) ? val : { type: val };\n+    }\n+  }\n+  options.props = res;\n+}\n+\n+function guardDirectives(options) {\n+  var dirs = options.directives;\n+  if (dirs) {\n+    for (var key in dirs) {\n+      if (typeof dirs[key] === 'function') {\n+        dirs[key] = { update: dirs[key] };\n+      }\n+    }\n+  }\n+}\n+\n+/**\n+ * Merge two option objects into a new one.\n+ * Core utility used in both instantiation and inheritance.\n+ *\n+ * @param {Object} parent\n+ * @param {Object} child\n+ * @param {Vue} [vm] - if vm is present, indicates this is\n+ *                     an instantiation merge.\n+ */\n+\n+function mergeOptions(parent, child, vm) {\n+  guardComponents(child);\n+  guardProps(child);\n+  guardDirectives(child);\n+  if (process.env.NODE_ENV !== 'production') {\n+    if (child.propsData && !vm) {\n+      warn('propsData can only be used as an instantiation option.');\n+    }\n+  }\n+  var options = {};\n+  var key;\n+  if (child.mixins) {\n+    for (var i = 0, l = child.mixins.length; i < l; i++) {\n+      parent = mergeOptions(parent, child.mixins[i], vm);\n+    }\n+  }\n+  for (key in parent) {\n+    mergeField(key);\n+  }\n+  for (key in child) {\n+    if (!hasOwn(parent, key)) {\n+      mergeField(key);\n+    }\n+  }\n+  function mergeField(key) {\n+    var strat = strats[key] || defaultStrat;\n+    options[key] = strat(parent[key], child[key], vm, key);\n+  }\n+  return options;\n+}\n+\n+/**\n+ * Resolve an asset.\n+ * This function is used because child instances need access\n+ * to assets defined in its ancestor chain.\n+ *\n+ * @param {Object} options\n+ * @param {String} type\n+ * @param {String} id\n+ * @param {Boolean} warnMissing\n+ * @return {Object|Function}\n+ */\n+\n+function resolveAsset(options, type, id, warnMissing) {\n+  /* istanbul ignore if */\n+  if (typeof id !== 'string') {\n+    return;\n+  }\n+  var assets = options[type];\n+  var camelizedId;\n+  var res = assets[id] ||\n+  // camelCase ID\n+  assets[camelizedId = camelize(id)] ||\n+  // Pascal Case ID\n+  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n+  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n+    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n+  }\n+  return res;\n+}\n+\n+function validateProp(vm, key, propsData) {\n+  if (!propsData) return;\n+  var prop = vm.$options.props[key];\n+  var absent = hasOwn(propsData, key);\n+  var value = propsData[key];\n+  // check default value\n+  if (value === undefined) {\n+    value = getPropDefaultValue(vm, prop, key);\n+    // since the default value is a fresh copy,\n+    // make sure to observe it.\n+    observerState.shouldConvert = true;\n+    observe(value);\n+    observerState.shouldConvert = false;\n+  }\n+  if (process.env.NODE_ENV !== 'production') {\n+    assertProp(prop, key, value, vm, absent);\n+  }\n+  return value;\n+}\n+\n+/**\n+ * Get the default value of a prop.\n+ *\n+ * @param {Vue} vm\n+ * @param {Object} prop\n+ * @return {*}\n+ */\n+\n+function getPropDefaultValue(vm, prop, name) {\n+  // no default, return undefined\n+  if (!hasOwn(prop, 'default')) {\n+    // absent boolean value defaults to false\n+    return prop.type === Boolean ? false : undefined;\n+  }\n+  var def = prop.default;\n+  // warn against non-factory defaults for Object & Array\n+  if (isObject(def)) {\n+    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n+  }\n+  // call factory function for non-Function types\n+  return typeof def === 'function' && prop.type !== Function ? def.call(vm) : def;\n+}\n+\n+/**\n+ * Assert whether a prop is valid.\n+ *\n+ * @param {Object} prop\n+ * @param {String} name\n+ * @param {*} value\n+ * @param {Vue} vm\n+ * @param {Boolean} absent\n+ */\n+\n+function assertProp(prop, name, value, vm, absent) {\n+  if (prop.required && absent) {\n+    process.env.NODE_ENV !== 'production' && warn('Missing required prop: \"' + name + '\"', vm);\n+    return false;\n+  }\n+  if (value == null) {\n+    return true;\n+  }\n+  var type = prop.type;\n+  var valid = !type;\n+  var expectedTypes = [];\n+  if (type) {\n+    if (!isArray(type)) {\n+      type = [type];\n+    }\n+    for (var i = 0; i < type.length && !valid; i++) {\n+      var assertedType = assertType(value, type[i]);\n+      expectedTypes.push(assertedType.expectedType);\n+      valid = assertedType.valid;\n+    }\n+  }\n+  if (!valid) {\n+    if (process.env.NODE_ENV !== 'production') {\n+      warn('Invalid prop: type check failed for prop \"' + name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n+    }\n+    return false;\n+  }\n+  var validator = prop.validator;\n+  if (validator) {\n+    if (!validator(value)) {\n+      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + name + '\".', vm);\n+      return false;\n+    }\n+  }\n+  return true;\n+}\n+\n+/**\n+ * Assert the type of a value\n+ *\n+ * @param {*} value\n+ * @param {Function} type\n+ * @return {Object}\n+ */\n+\n+function assertType(value, type) {\n+  var valid;\n+  var expectedType;\n+  if (type === String) {\n+    expectedType = 'string';\n+    valid = typeof value === expectedType;\n+  } else if (type === Number) {\n+    expectedType = 'number';\n+    valid = typeof value === expectedType;\n+  } else if (type === Boolean) {\n+    expectedType = 'boolean';\n+    valid = typeof value === expectedType;\n+  } else if (type === Function) {\n+    expectedType = 'function';\n+    valid = typeof value === expectedType;\n+  } else if (type === Object) {\n+    expectedType = 'object';\n+    valid = isPlainObject(value);\n+  } else if (type === Array) {\n+    expectedType = 'array';\n+    valid = isArray(value);\n+  } else {\n+    valid = value instanceof type;\n+  }\n+  return {\n+    valid: valid,\n+    expectedType: expectedType\n+  };\n+}\n+\n+/**\n+ * Format type for output\n+ *\n+ * @param {String} type\n+ * @return {String}\n+ */\n+\n+function formatType(type) {\n+  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n+}\n+\n+/**\n+ * Format value\n+ *\n+ * @param {*} value\n+ * @return {String}\n+ */\n+\n+function formatValue(val) {\n+  return Object.prototype.toString.call(val).slice(8, -1);\n+}\n+\n+\n+\n+var util = Object.freeze({\n+\tdefineReactive: defineReactive,\n+\trenderString: renderString,\n+\tmakeMap: makeMap,\n+\tisBuiltInTag: isBuiltInTag,\n+\tremove: remove,\n+\thasOwn: hasOwn,\n+\tisPrimitive: isPrimitive,\n+\tcached: cached,\n+\tcamelize: camelize,\n+\thyphenate: hyphenate,\n+\tbind: bind,\n+\ttoArray: toArray,\n+\textend: extend,\n+\tisObject: isObject,\n+\tisPlainObject: isPlainObject,\n+\tisArray: isArray,\n+\tisReserved: isReserved,\n+\tdef: def,\n+\tparsePath: parsePath,\n+\thasProto: hasProto,\n+\tinBrowser: inBrowser,\n+\tdevtools: devtools,\n+\tnextTick: nextTick,\n+\tget _Set () { return _Set; },\n+\tmergeOptions: mergeOptions,\n+\tresolveAsset: resolveAsset,\n+\tget warn () { return warn; },\n+\tvalidateProp: validateProp\n+});\n+\n+var hasProxy = void 0;\n+var proxyHandlers = void 0;\n+var initProxy = void 0;\n+if (process.env.NODE_ENV !== 'production') {\n+  (function () {\n+    var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl');\n+\n+    hasProxy = typeof Proxy !== 'undefined' && Proxy.toString().match(/native code/);\n+\n+    proxyHandlers = {\n+      has: function has(target, key) {\n+        var has = key in target;\n+        var isAllowedGlobal = allowedGlobals(key);\n+        if (!has && !isAllowedGlobal) {\n+          warn('Trying to access non-existent property \"' + key + '\" while rendering.', target);\n+        }\n+        return !isAllowedGlobal;\n+      }\n+    };\n+\n+    initProxy = function initProxy(vm) {\n+      if (hasProxy) {\n+        vm._renderProxy = new Proxy(vm, proxyHandlers);\n+      } else {\n+        vm._renderProxy = vm;\n+      }\n+    };\n+  })();\n+}\n+\n+// we have two separate queues: one for directive updates\n+// and one for user watcher registered via $watch().\n+// we want to guarantee directive updates to be called\n+// before user watchers so that when user watchers are\n+// triggered, the DOM would have already been in updated\n+// state.\n+\n+var queueIndex;\n+var queue = [];\n+var userQueue = [];\n+var has = {};\n+var circular = {};\n+var waiting = false;\n+var internalQueueDepleted = false;\n+\n+/**\n+ * Reset the batcher's state.\n+ */\n+\n+function resetBatcherState() {\n+  queue = [];\n+  userQueue = [];\n+  has = {};\n+  circular = {};\n+  waiting = internalQueueDepleted = false;\n+}\n+\n+/**\n+ * Flush both queues and run the watchers.\n+ */\n+\n+function flushBatcherQueue() {\n+  queue.sort(queueSorter);\n+  runBatcherQueue(queue);\n+  internalQueueDepleted = true;\n+  runBatcherQueue(userQueue);\n+  resetBatcherState();\n+}\n+\n+/**\n+ * Sort queue before flush.\n+ * This ensures components are updated from parent to child\n+ * so there will be no duplicate updates, e.g. a child was\n+ * pushed into the queue first and then its parent's props\n+ * changed.\n+ */\n+\n+function queueSorter(a, b) {\n+  return a.id - b.id;\n+}\n+\n+/**\n+ * Run the watchers in a single queue.\n+ *\n+ * @param {Array} queue\n+ */\n+\n+function runBatcherQueue(queue) {\n+  // do not cache length because more watchers might be pushed\n+  // as we run existing watchers\n+  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n+    var watcher = queue[queueIndex];\n+    var id = watcher.id;\n+    has[id] = null;\n+    watcher.run();\n+    // in dev build, check and stop circular updates.\n+    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n+      circular[id] = (circular[id] || 0) + 1;\n+      if (circular[id] > config._maxUpdateCount) {\n+        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n+        break;\n+      }\n+    }\n+  }\n+}\n+\n+/**\n+ * Push a watcher into the watcher queue.\n+ * Jobs with duplicate IDs will be skipped unless it's\n+ * pushed when the queue is being flushed.\n+ *\n+ * @param {Watcher} watcher\n+ *   properties:\n+ *   - {Number} id\n+ *   - {Function} run\n+ */\n+\n+function pushWatcher(watcher) {\n+  var id = watcher.id;\n+  if (has[id] == null) {\n+    if (internalQueueDepleted && !watcher.user) {\n+      // an internal watcher triggered by a user watcher...\n+      // let's run it immediately after current user watcher is done.\n+      userQueue.splice(queueIndex + 1, 0, watcher);\n+    } else {\n+      // push watcher into appropriate queue\n+      var q = watcher.user ? userQueue : queue;\n+      has[id] = q.length;\n+      q.push(watcher);\n+      // queue the flush\n+      if (!waiting) {\n+        waiting = true;\n+        nextTick(flushBatcherQueue);\n+      }\n+    }\n+  }\n+}\n+\n+var uid$2 = 0;\n+var prevTarget = void 0;\n+\n+/**\n+ * A watcher parses an expression, collects dependencies,\n+ * and fires callback when the expression value changes.\n+ * This is used for both the $watch() api and directives.\n+ *\n+ * @param {Vue} vm\n+ * @param {String|Function} expOrFn\n+ * @param {Function} cb\n+ * @param {Object} options\n+ *                 - {Array} filters\n+ *                 - {Boolean} twoWay\n+ *                 - {Boolean} deep\n+ *                 - {Boolean} user\n+ *                 - {Boolean} sync\n+ *                 - {Boolean} lazy\n+ *                 - {Function} [preProcess]\n+ *                 - {Function} [postProcess]\n+ * @constructor\n+ */\n+\n+function Watcher(vm, expOrFn, cb, options) {\n+  // mix in options\n+  if (options) {\n+    extend(this, options);\n+  }\n+  var isFn = typeof expOrFn === 'function';\n+  this.vm = vm;\n+  vm._watchers.push(this);\n+  this.expression = expOrFn;\n+  this.cb = cb;\n+  this.id = ++uid$2; // uid for batching\n+  this.active = true;\n+  this.dirty = this.lazy; // for lazy watchers\n+  this.deps = [];\n+  this.newDeps = [];\n+  this.depIds = new _Set();\n+  this.newDepIds = new _Set();\n+  // parse expression for getter\n+  if (isFn) {\n+    this.getter = expOrFn;\n+  } else {\n+    this.getter = parsePath(expOrFn);\n+    if (!this.getter) {\n+      this.getter = function () {};\n+      process.env.NODE_ENV !== 'production' && warn('Failed watching path: ' + expOrFn + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);\n+    }\n+  }\n+  this.value = this.lazy ? undefined : this.get();\n+  // state for avoiding false triggers for deep and Array\n+  // watchers during vm._digest()\n+  this.queued = this.shallow = false;\n+}\n+\n+/**\n+ * Evaluate the getter, and re-collect dependencies.\n+ */\n+\n+Watcher.prototype.get = function () {\n+  this.beforeGet();\n+  var value = this.getter.call(this.vm, this.vm);\n+  // \"touch\" every property so they are all tracked as\n+  // dependencies for deep watching\n+  if (this.deep) {\n+    traverse(value);\n+  }\n+  this.afterGet();\n+  return value;\n+};\n+\n+/**\n+ * Prepare for dependency collection.\n+ */\n+\n+Watcher.prototype.beforeGet = function () {\n+  prevTarget = Dep.target;\n+  Dep.target = this;\n+};\n+\n+/**\n+ * Add a dependency to this directive.\n+ *\n+ * @param {Dep} dep\n+ */\n+\n+Watcher.prototype.addDep = function (dep) {\n+  var id = dep.id;\n+  if (!this.newDepIds.has(id)) {\n+    this.newDepIds.add(id);\n+    this.newDeps.push(dep);\n+    if (!this.depIds.has(id)) {\n+      dep.addSub(this);\n+    }\n+  }\n+};\n+\n+/**\n+ * Clean up for dependency collection.\n+ */\n+\n+Watcher.prototype.afterGet = function () {\n+  Dep.target = prevTarget;\n+  var i = this.deps.length;\n+  while (i--) {\n+    var dep = this.deps[i];\n+    if (!this.newDepIds.has(dep.id)) {\n+      dep.removeSub(this);\n+    }\n+  }\n+  var tmp = this.depIds;\n+  this.depIds = this.newDepIds;\n+  this.newDepIds = tmp;\n+  this.newDepIds.clear();\n+  tmp = this.deps;\n+  this.deps = this.newDeps;\n+  this.newDeps = tmp;\n+  this.newDeps.length = 0;\n+};\n+\n+/**\n+ * Subscriber interface.\n+ * Will be called when a dependency changes.\n+ *\n+ * @param {Boolean} shallow\n+ */\n+\n+Watcher.prototype.update = function (shallow) {\n+  if (this.lazy) {\n+    this.dirty = true;\n+  } else if (this.sync) {\n+    this.run();\n+  } else {\n+    // if queued, only overwrite shallow with non-shallow,\n+    // but not the other way around.\n+    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n+    this.queued = true;\n+    pushWatcher(this);\n+  }\n+};\n+\n+/**\n+ * Batcher job interface.\n+ * Will be called by the batcher.\n+ */\n+\n+Watcher.prototype.run = function () {\n+  if (this.active) {\n+    var value = this.get();\n+    if (value !== this.value ||\n+    // Deep watchers and watchers on Object/Arrays should fire even\n+    // when the value is the same, because the value may\n+    // have mutated; but only do so if this is a\n+    // non-shallow update (caused by a vm digest).\n+    (isObject(value) || this.deep) && !this.shallow) {\n+      // set new value\n+      var oldValue = this.value;\n+      this.value = value;\n+      this.cb.call(this.vm, value, oldValue);\n+    }\n+    this.queued = this.shallow = false;\n+  }\n+};\n+\n+/**\n+ * Evaluate the value of the watcher.\n+ * This only gets called for lazy watchers.\n+ */\n+\n+Watcher.prototype.evaluate = function () {\n+  // avoid overwriting another watcher that is being\n+  // collected.\n+  var current = Dep.target;\n+  this.value = this.get();\n+  this.dirty = false;\n+  Dep.target = current;\n+};\n+\n+/**\n+ * Depend on all deps collected by this watcher.\n+ */\n+\n+Watcher.prototype.depend = function () {\n+  var i = this.deps.length;\n+  while (i--) {\n+    this.deps[i].depend();\n+  }\n+};\n+\n+/**\n+ * Remove self from all dependencies' subcriber list.\n+ */\n+\n+Watcher.prototype.teardown = function () {\n+  if (this.active) {\n+    // remove self from vm's watcher list\n+    // this is a somewhat expensive operation so we skip it\n+    // if the vm is being destroyed or is performing a v-for\n+    // re-render (the watcher list is then filtered by v-for).\n+    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n+      remove(this.vm._watchers, this);\n+    }\n+    var i = this.deps.length;\n+    while (i--) {\n+      this.deps[i].removeSub(this);\n+    }\n+    this.active = false;\n+    this.vm = this.cb = this.value = null;\n+  }\n+};\n+\n+/**\n+ * Recrusively traverse an object to evoke all converted\n+ * getters, so that every nested property inside the object\n+ * is collected as a \"deep\" dependency.\n+ *\n+ * @param {*} val\n+ * @param {Set} seen\n+ */\n+\n+var seenObjects = new _Set();\n+function traverse(val, seen) {\n+  var i = void 0,\n+      keys = void 0,\n+      isA = void 0,\n+      isO = void 0;\n+  if (!seen) {\n+    seen = seenObjects;\n+    seen.clear();\n+  }\n+  isA = isArray(val);\n+  isO = isObject(val);\n+  if (isA || isO) {\n+    if (val.__ob__) {\n+      var depId = val.__ob__.dep.id;\n+      if (seen.has(depId)) {\n+        return;\n+      } else {\n+        seen.add(depId);\n+      }\n+    }\n+    if (isA) {\n+      i = val.length;\n+      while (i--) {\n+        traverse(val[i], seen);\n+      }\n+    } else if (isO) {\n+      keys = Object.keys(val);\n+      i = keys.length;\n+      while (i--) {\n+        traverse(val[keys[i]], seen);\n+      }\n+    }\n+  }\n+}\n+\n+function initState(vm) {\n+  vm._watchers = [];\n+  initProps(vm);\n+  initData(vm);\n+  initComputed(vm);\n+  initMethods(vm);\n+  initWatch(vm);\n+}\n+\n+function initProps(vm) {\n+  var props = vm.$options.props;\n+  var propsData = vm.$options.propsData;\n+  if (props) {\n+    var keys = vm.$options.propKeys = Object.keys(props);\n+    var isRoot = !vm.$parent;\n+    // root instance props should be converted\n+    observerState.shouldConvert = isRoot;\n+    for (var i = 0; i < keys.length; i++) {\n+      var key = keys[i];\n+      defineReactive(vm, key, validateProp(vm, key, propsData));\n+    }\n+    observerState.shouldConvert = true;\n+  }\n+}\n+\n+function initData(vm) {\n+  var data = vm.$options.data;\n+  data = vm._data = typeof data === 'function' ? data() : data || {};\n+  if (!isPlainObject(data)) {\n+    data = {};\n+    process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', vm);\n+  }\n+  // proxy data on instance\n+  var keys = Object.keys(data);\n+  var i = keys.length;\n+  while (i--) {\n+    proxy(vm, keys[i]);\n+  }\n+  // observe data\n+  observe(data, vm);\n+}\n+\n+function noop() {}\n+\n+function initComputed(vm) {\n+  var computed = vm.$options.computed;\n+  if (computed) {\n+    for (var key in computed) {\n+      var userDef = computed[key];\n+      var def = {\n+        enumerable: true,\n+        configurable: true\n+      };\n+      if (typeof userDef === 'function') {\n+        def.get = makeComputedGetter(userDef, vm);\n+        def.set = noop;\n+      } else {\n+        def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, vm) : bind(userDef.get, vm) : noop;\n+        def.set = userDef.set ? bind(userDef.set, vm) : noop;\n+      }\n+      Object.defineProperty(vm, key, def);\n+    }\n+  }\n+}\n+\n+function makeComputedGetter(getter, owner) {\n+  var watcher = new Watcher(owner, getter, null, {\n+    lazy: true\n+  });\n+  return function computedGetter() {\n+    if (watcher.dirty) {\n+      watcher.evaluate();\n+    }\n+    if (Dep.target) {\n+      watcher.depend();\n+    }\n+    return watcher.value;\n+  };\n+}\n+\n+function initMethods(vm) {\n+  var methods = vm.$options.methods;\n+  if (methods) {\n+    for (var key in methods) {\n+      vm[key] = bind(methods[key], vm);\n+    }\n+  }\n+}\n+\n+function initWatch(vm) {\n+  var watch = vm.$options.watch;\n+  if (watch) {\n+    for (var key in watch) {\n+      var handler = watch[key];\n+      if (isArray(handler)) {\n+        for (var i = 0; i < handler.length; i++) {\n+          createWatcher(vm, key, handler[i]);\n+        }\n+      } else {\n+        createWatcher(vm, key, handler);\n+      }\n+    }\n+  }\n+}\n+\n+function createWatcher(vm, key, handler) {\n+  var options = void 0;\n+  if (isPlainObject(handler)) {\n+    options = handler;\n+    handler = handler.handler;\n+  }\n+  if (typeof handler === 'string') {\n+    handler = vm[handler];\n+  }\n+  vm.$watch(key, handler, options);\n+}\n+\n+function stateMixin(Vue) {\n+  Object.defineProperty(Vue.prototype, '$data', {\n+    get: function get() {\n+      return this._data;\n+    },\n+    set: function set(newData) {\n+      if (newData !== this._data) {\n+        setData(this, newData);\n+      }\n+    }\n+  });\n+\n+  Vue.prototype.$watch = function (fn, cb, options) {\n+    options = options || {};\n+    options.user = true;\n+    var watcher = new Watcher(this, fn, cb, options);\n+    if (options.immediate) {\n+      cb.call(this, watcher.value);\n+    }\n+    return function unwatchFn() {\n+      watcher.teardown();\n+    };\n+  };\n+}\n+\n+function setData(vm, newData) {\n+  newData = newData || {};\n+  var oldData = vm._data;\n+  vm._data = newData;\n+  var keys, key, i;\n+  // unproxy keys not present in new data\n+  keys = Object.keys(oldData);\n+  i = keys.length;\n+  while (i--) {\n+    key = keys[i];\n+    if (!(key in newData)) {\n+      unproxy(vm, key);\n+    }\n+  }\n+  // proxy keys not already proxied,\n+  // and trigger change for changed values\n+  keys = Object.keys(newData);\n+  i = keys.length;\n+  while (i--) {\n+    key = keys[i];\n+    if (!hasOwn(vm, key)) {\n+      // new property\n+      proxy(vm, key);\n+    }\n+  }\n+  oldData.__ob__.removeVm(vm);\n+  observe(newData, vm);\n+  vm.$forceUpdate();\n+}\n+\n+function VNode(tag, data, children, text, elm, ns, context) {\n+  return {\n+    tag: tag,\n+    data: data,\n+    children: children,\n+    text: text,\n+    elm: elm,\n+    ns: ns,\n+    context: context,\n+    key: data && data.key\n+  };\n+}\n+\n+function flatten(children) {\n+  if (typeof children === 'string') {\n+    return [VNode(undefined, undefined, undefined, children)];\n+  }\n+  if (isArray(children)) {\n+    var res = [];\n+    for (var i = 0, l = children.length; i < l; i++) {\n+      var c = children[i];\n+      // flatten nested\n+      if (isArray(c)) {\n+        res.push.apply(res, flatten(c));\n+      } else if (isPrimitive(c)) {\n+        // convert primitive to vnode\n+        res.push(VNode(undefined, undefined, undefined, c));\n+      } else if (c) {\n+        res.push(c);\n+      }\n+    }\n+    return res;\n+  }\n+}\n+\n+function updateListeners(on, oldOn, add) {\n+  var name = void 0,\n+      cur = void 0,\n+      old = void 0,\n+      event = void 0,\n+      capture = void 0;\n+  for (name in on) {\n+    cur = on[name];\n+    old = oldOn[name];\n+    if (old === undefined) {\n+      capture = name.charAt(0) === '!';\n+      event = capture ? name.slice(1) : name;\n+      if (isArray(cur)) {\n+        add(event, arrInvoker(cur), capture);\n+      } else {\n+        cur = { fn: cur };\n+        on[name] = cur;\n+        add(event, fnInvoker(cur), capture);\n+      }\n+    } else if (isArray(old)) {\n+      old.length = cur.length;\n+      for (var i = 0; i < old.length; i++) {\n+        old[i] = cur[i];\n+      }on[name] = old;\n+    } else {\n+      old.fn = cur;\n+      on[name] = old;\n+    }\n+  }\n+}\n+\n+function arrInvoker(arr) {\n+  return function (ev) {\n+    for (var i = 0; i < arr.length; i++) {\n+      arr[i](ev);\n+    }\n+  };\n+}\n+\n+function fnInvoker(o) {\n+  return function (ev) {\n+    o.fn(ev);\n+  };\n+}\n+\n+function initLifecycle(vm) {\n+  var options = vm.$options;\n+\n+  vm.$parent = options.parent;\n+  vm.$root = vm.$parent ? vm.$parent.$root : vm;\n+  if (vm.$parent) {\n+    vm.$parent.$children.push(vm);\n+  }\n+\n+  vm.$children = [];\n+  vm.$refs = {};\n+\n+  vm._isDestroyed = false;\n+  vm._isBeingDestroyed = false;\n+}\n+\n+function lifecycleMixin(Vue) {\n+  Vue.prototype._mount = function () {\n+    var _this = this;\n+\n+    if (!this.$options.render) {\n+      this.$options.render = function () {\n+        return _this.$createElement('div');\n+      };\n+      if (process.env.NODE_ENV !== 'production') {\n+        if (this.$options.template) {\n+          warn('You are using the runtime-only build of Vue where the template ' + 'option is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', this);\n+        } else {\n+          warn('Failed to mount component: template or render function not defined.', this);\n+        }\n+      }\n+    }\n+    // render static sub-trees for once on mount\n+    var staticRenderFns = this.$options.staticRenderFns;\n+    if (staticRenderFns) {\n+      this._staticTrees = new Array(staticRenderFns.length);\n+      for (var i = 0; i < staticRenderFns.length; i++) {\n+        this._staticTrees[i] = staticRenderFns[i].call(this._renderProxy);\n+      }\n+    }\n+    this._watcher = new Watcher(this, this._render, this._update);\n+    this._update(this._watcher.value);\n+    this._mounted = true;\n+    // root instance, call ready on self\n+    if (this.$root === this) {\n+      callHook(this, 'ready');\n+    }\n+    return this;\n+  };\n+\n+  Vue.prototype._update = function (vnode) {\n+    if (this._mounted) {\n+      callHook(this, 'beforeUpdate');\n+    }\n+    var parentNode = this.$options._parentVnode;\n+    // set vnode parent before patch\n+    vnode.parent = parentNode;\n+    if (!this._vnode) {\n+      // Vue.prototype.__patch__ is injected in entry points\n+      // based on the rendering backend used.\n+      this.$el = this.__patch__(this.$el, vnode);\n+    } else {\n+      this.$el = this.__patch__(this._vnode, vnode);\n+    }\n+    this._vnode = vnode;\n+    // set parent vnode element after patch\n+    if (parentNode) {\n+      parentNode.elm = this.$el;\n+    }\n+    if (this._mounted) {\n+      callHook(this, 'updated');\n+    }\n+  };\n+\n+  Vue.prototype._updateFromParent = function (propsData, listeners, parentVnode, children) {\n+    var _this2 = this;\n+\n+    this.$options._parentVnode = parentVnode;\n+    this.$options._renderChildren = children;\n+    // update props\n+    if (propsData && this.$options.props) {\n+      observerState.shouldConvert = false;\n+      var propKeys = this.$options.propKeys;\n+      for (var i = 0; i < propKeys.length; i++) {\n+        var key = propKeys[i];\n+        this[key] = validateProp(this, key, propsData);\n+      }\n+      observerState.shouldConvert = true;\n+    }\n+    // update listeners\n+    if (listeners) {\n+      var oldListeners = this.$options._parentListeners;\n+      this.$options._parentListeners = listeners;\n+      updateListeners(listeners, oldListeners || {}, function (event, handler) {\n+        _this2.$on(event, handler);\n+      });\n+    }\n+  };\n+\n+  Vue.prototype.$forceUpdate = function () {\n+    this._watcher.update();\n+  };\n+\n+  Vue.prototype.$destroy = function () {\n+    if (this._isDestroyed) {\n+      return;\n+    }\n+    callHook(this, 'beforeDestroy');\n+    this._isBeingDestroyed = true;\n+    // remove self from parent\n+    var parent = this.$parent;\n+    if (parent && !parent._isBeingDestroyed) {\n+      remove(parent.$children, this);\n+    }\n+    // unregister ref\n+    if (this._ref) {\n+      this._context.$refs[this._ref] = undefined;\n+    }\n+    // teardown watchers\n+    var i = this._watchers.length;\n+    while (i--) {\n+      this._watchers[i].teardown();\n+    }\n+    // remove reference from data ob\n+    // frozen object may not have observer.\n+    if (this._data.__ob__) {\n+      this._data.__ob__.removeVm(this);\n+    }\n+    // call the last hook...\n+    this._isDestroyed = true;\n+    callHook(this, 'destroyed');\n+    // turn off all instance listeners.\n+    this.$off();\n+  };\n+}\n+\n+function callHook(vm, hook) {\n+  vm.$emit('pre-hook:' + hook);\n+  var handlers = vm.$options[hook];\n+  if (handlers) {\n+    for (var i = 0, j = handlers.length; i < j; i++) {\n+      handlers[i].call(vm);\n+    }\n+  }\n+  vm.$emit('hook:' + hook);\n+}\n+\n+var hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy };\n+var hooksToMerge = Object.keys(hooks);\n+\n+function createComponent(Ctor, data, parent, children, context) {\n+  if (process.env.NODE_ENV !== 'production' && children && typeof children !== 'function') {\n+    warn('A component\\'s children should be a function that returns the ' + 'children array. This allows the component to track the children ' + 'dependencies and optimizes re-rendering.');\n+  }\n+  if (!Ctor) {\n+    return;\n+  }\n+  if (isObject(Ctor)) {\n+    Ctor = Vue.extend(Ctor);\n+  }\n+  if (process.env.NODE_ENV !== 'production' && typeof Ctor !== 'function') {\n+    warn('Invalid Component definition: ' + Ctor, parent);\n+    return;\n+  }\n+\n+  // async component\n+  if (!Ctor.cid) {\n+    if (Ctor.resolved) {\n+      Ctor = Ctor.resolved;\n+    } else {\n+      resolveAsyncComponent(Ctor, function () {\n+        // it's ok to queue this on every render because\n+        // $forceUpdate is buffered.\n+        parent.$forceUpdate();\n+      });\n+      return;\n+    }\n+  }\n+\n+  data = data || {};\n+\n+  // merge component management hooks onto the placeholder node\n+  mergeHooks(data);\n+\n+  // extract props\n+  var propsData = extractProps(data, Ctor);\n+\n+  // extract listeners, since these needs to be treated as\n+  // child component listeners instead of DOM listeners\n+  var listeners = data.on;\n+  if (listeners) {\n+    data.on = null;\n+  }\n+\n+  // return a placeholder vnode\n+  var name = Ctor.options.name ? '-' + Ctor.options.name : '';\n+  var vnode = VNode('vue-component-' + Ctor.cid + name, data, undefined, undefined, undefined, undefined, context);\n+  vnode.componentOptions = { Ctor: Ctor, propsData: propsData, listeners: listeners, parent: parent, children: children };\n+  return vnode;\n+}\n+\n+function init(vnode) {\n+  var _vnode$componentOptio = vnode.componentOptions;\n+  var Ctor = _vnode$componentOptio.Ctor;\n+  var propsData = _vnode$componentOptio.propsData;\n+  var listeners = _vnode$componentOptio.listeners;\n+  var parent = _vnode$componentOptio.parent;\n+  var children = _vnode$componentOptio.children;\n+\n+  var child = new Ctor({\n+    parent: parent,\n+    propsData: propsData,\n+    _parentVnode: vnode,\n+    _parentListeners: listeners,\n+    _renderChildren: children\n+  });\n+  // if this is a server-rendered mount,\n+  // the vnode would already have an element.\n+  // otherwise the child sets the parent vnode's elm when mounted\n+  // and when updated.\n+  child.$mount(vnode.elm);\n+  vnode.child = child;\n+}\n+\n+function prepatch(oldVnode, vnode) {\n+  var _vnode$componentOptio2 = vnode.componentOptions;\n+  var listeners = _vnode$componentOptio2.listeners;\n+  var propsData = _vnode$componentOptio2.propsData;\n+  var children = _vnode$componentOptio2.children;\n+\n+  vnode.child = oldVnode.child;\n+  vnode.child._updateFromParent(propsData, // updated props\n+  listeners, // updated listeners\n+  vnode, // new parent vnode\n+  children // new children\n+  );\n+}\n+\n+function insert(vnode) {\n+  callHook(vnode.child, 'ready');\n+}\n+\n+function destroy(vnode) {\n+  vnode.child.$destroy();\n+}\n+\n+function resolveAsyncComponent(factory, cb) {\n+  if (factory.resolved) {\n+    // cached\n+    cb(factory.resolved);\n+  } else if (factory.requested) {\n+    // pool callbacks\n+    factory.pendingCallbacks.push(cb);\n+  } else {\n+    (function () {\n+      factory.requested = true;\n+      var cbs = factory.pendingCallbacks = [cb];\n+      factory(function resolve(res) {\n+        if (isObject(res)) {\n+          res = Vue.extend(res);\n+        }\n+        // cache resolved\n+        factory.resolved = res;\n+        // invoke callbacks\n+        for (var i = 0, l = cbs.length; i < l; i++) {\n+          cbs[i](res);\n+        }\n+      }, function reject(reason) {\n+        process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + factory + (reason ? '\\nReason: ' + reason : ''));\n+      });\n+    })();\n+  }\n+}\n+\n+function extractProps(data, Ctor) {\n+  // we are only extrating raw values here.\n+  // validation and default values are handled in the child\n+  // component itself.\n+  var propOptions = Ctor.options.props;\n+  if (!propOptions) {\n+    return;\n+  }\n+  var res = {};\n+  var attrs = data.attrs;\n+  var props = data.props;\n+  var staticAttrs = data.staticAttrs;\n+  if (!attrs && !props) {\n+    return res;\n+  }\n+  for (var key in propOptions) {\n+    var altKey = hyphenate(key);\n+    checkProp(res, attrs, key, altKey) || checkProp(res, props, key, altKey) || checkProp(res, staticAttrs, key, altKey);\n+  }\n+  return res;\n+}\n+\n+function checkProp(res, hash, key, altKey) {\n+  if (hash) {\n+    if (hasOwn(hash, key)) {\n+      res[key] = hash[key];\n+      delete hash[key];\n+      return true;\n+    } else if (hasOwn(hash, altKey)) {\n+      res[key] = hash[altKey];\n+      delete hash[altKey];\n+      return true;\n+    }\n+  }\n+}\n+\n+function mergeHooks(data) {\n+  if (data.hook) {\n+    for (var i = 0; i < hooksToMerge.length; i++) {\n+      var key = hooksToMerge[i];\n+      var fromParent = data.hook[key];\n+      var ours = hooks[key];\n+      data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n+    }\n+  } else {\n+    data.hook = hooks;\n+  }\n+}\n+\n+function mergeHook$1(a, b) {\n+  // since all hooks have at most two args, use fixed args\n+  // to avoid having to use fn.apply().\n+  return function (_, __) {\n+    a(_, __);\n+    b(_, __);\n+  };\n+}\n+\n+function createElement(tag, data, children, namespace) {\n+  var context = this;\n+  var parent = renderState.activeInstance;\n+  if (typeof tag === 'string') {\n+    var Ctor = void 0;\n+    if (config.isReservedTag(tag)) {\n+      return VNode(tag, data, flatten(children), undefined, undefined, namespace, context);\n+    } else if (Ctor = resolveAsset(context.$options, 'components', tag)) {\n+      return createComponent(Ctor, data, parent, children, context);\n+    } else {\n+      if (process.env.NODE_ENV !== 'production') {\n+        if (!namespace && config.isUnknownElement(tag)) {\n+          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n+        }\n+      }\n+      return VNode(tag, data, flatten(children && children()), undefined, undefined, namespace, context);\n+    }\n+  } else {\n+    return createComponent(tag, data, parent, children, context);\n+  }\n+}\n+\n+var renderState = {\n+  activeInstance: null\n+};\n+\n+function initRender(vm) {\n+  vm._vnode = null;\n+  vm._mounted = false;\n+  vm._staticTrees = null;\n+  vm.$slots = {};\n+  // bind the public createElement fn to this instance\n+  // so that we get proper render context inside it.\n+  vm.$createElement = bind(createElement, vm);\n+  if (vm.$options.el) {\n+    vm.$mount(vm.$options.el);\n+  }\n+}\n+\n+function renderMixin(Vue) {\n+  Vue.prototype._render = function () {\n+    var prev = renderState.activeInstance;\n+    renderState.activeInstance = this;\n+    var _$options = this.$options;\n+    var render = _$options.render;\n+    var _renderChildren = _$options._renderChildren;\n+    // resolve slots. becaues slots are rendered in parent scope,\n+    // we set the activeInstance to parent.\n+\n+    if (_renderChildren) {\n+      resolveSlots(this, _renderChildren);\n+    }\n+    // render self\n+    var vnode = render.call(this._renderProxy);\n+    // restore render state\n+    renderState.activeInstance = prev;\n+    return vnode;\n+  };\n+\n+  // shorthands used in render functions\n+  Vue.prototype.__h__ = createElement;\n+\n+  // toString for mustaches\n+  Vue.prototype.__toString__ = renderString;\n+\n+  // render v-for\n+  Vue.prototype.__renderList__ = function (val, render) {\n+    var ret = void 0,\n+        i = void 0,\n+        l = void 0,\n+        keys = void 0,\n+        key = void 0;\n+    if (isArray(val)) {\n+      ret = new Array(val.length);\n+      for (i = 0, l = val.length; i < l; i++) {\n+        ret[i] = render(val[i], i, i);\n+      }\n+    } else if (typeof val === 'number') {\n+      ret = new Array(val);\n+      for (i = 0; i < val; i++) {\n+        ret[i] = render(i + 1, i, i);\n+      }\n+    } else if (isObject(val)) {\n+      keys = Object.keys(val);\n+      ret = new Array(keys.length);\n+      for (i = 0, l = keys.length; i < l; i++) {\n+        key = keys[i];\n+        ret[i] = render(val[key], i, key);\n+      }\n+    }\n+    return ret;\n+  };\n+\n+  // register ref\n+  Vue.prototype.__registerRef__ = function (key, ref, vFor, remove) {\n+    var refs = this.$refs;\n+    if (remove) {\n+      if (vFor) {\n+        remove(refs[key], ref);\n+      } else {\n+        refs[key] = undefined;\n+      }\n+    } else {\n+      if (vFor) {\n+        if (refs[key]) {\n+          refs[key].push(ref);\n+        } else {\n+          refs[key] = [ref];\n+        }\n+      } else {\n+        refs[key] = ref;\n+      }\n+    }\n+  };\n+}\n+\n+function resolveSlots(vm, children) {\n+  if (children) {\n+    children = flatten(isArray(children) ? children : children());\n+    var slots = { default: children };\n+    var i = children.length;\n+    var name = void 0,\n+        child = void 0;\n+    while (i--) {\n+      child = children[i];\n+      if (name = child.data && child.data.slot) {\n+        var slot = slots[name] || (slots[name] = []);\n+        if (child.tag === 'template') {\n+          slot.push.apply(slot, child.children);\n+        } else {\n+          slot.push(child);\n+        }\n+        children.splice(i, 1);\n+      }\n+    }\n+    vm.$slots = slots;\n+  }\n+}\n+\n+function initEvents(vm) {\n+  vm._events = Object.create(null);\n+  // init parent attached events\n+  var listeners = vm.$options._parentListeners;\n+  if (listeners) {\n+    updateListeners(listeners, {}, function (event, handler) {\n+      vm.$on(event, handler);\n+    });\n+  }\n+}\n+\n+function eventsMixin(Vue) {\n+  Vue.prototype.$on = function (event, fn) {\n+    (this._events[event] || (this._events[event] = [])).push(fn);\n+    return this;\n+  };\n+\n+  /**\n+   * Adds an `event` listener that will be invoked a single\n+   * time then automatically removed.\n+   *\n+   * @param {String} event\n+   * @param {Function} fn\n+   */\n+\n+  Vue.prototype.$once = function (event, fn) {\n+    var self = this;\n+    function on() {\n+      self.$off(event, on);\n+      fn.apply(this, arguments);\n+    }\n+    on.fn = fn;\n+    this.$on(event, on);\n+    return this;\n+  };\n+\n+  /**\n+   * Remove the given callback for `event` or all\n+   * registered callbacks.\n+   *\n+   * @param {String} event\n+   * @param {Function} fn\n+   */\n+\n+  Vue.prototype.$off = function (event, fn) {\n+    var cbs;\n+    // all\n+    if (!arguments.length) {\n+      this._events = Object.create(null);\n+      return this;\n+    }\n+    // specific event\n+    cbs = this._events[event];\n+    if (!cbs) {\n+      return this;\n+    }\n+    if (arguments.length === 1) {\n+      this._events[event] = null;\n+      return this;\n+    }\n+    // specific handler\n+    var cb;\n+    var i = cbs.length;\n+    while (i--) {\n+      cb = cbs[i];\n+      if (cb === fn || cb.fn === fn) {\n+        cbs.splice(i, 1);\n+        break;\n+      }\n+    }\n+    return this;\n+  };\n+\n+  /**\n+   * Trigger an event on self.\n+   *\n+   * @param {String} event\n+   */\n+\n+  Vue.prototype.$emit = function (event) {\n+    var cbs = this._events[event];\n+    if (cbs) {\n+      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n+      var args = toArray(arguments, 1);\n+      for (var i = 0, l = cbs.length; i < l; i++) {\n+        cbs[i].apply(this, args);\n+      }\n+    }\n+  };\n+}\n+\n+var uid = 0;\n+\n+function Vue(options) {\n+  this._init(options);\n+}\n+\n+Vue.prototype._init = function (options) {\n+  // a uid\n+  this._uid = uid++;\n+  // a flag to avoid this being observed\n+  this._isVue = true;\n+  // merge options\n+  this.$options = mergeOptions(this.constructor.options, options || {}, this);\n+  if (process.env.NODE_ENV !== 'production') {\n+    initProxy(this);\n+  } else {\n+    this._renderProxy = this;\n+  }\n+  initLifecycle(this);\n+  initEvents(this);\n+  callHook(this, 'init');\n+  initState(this);\n+  callHook(this, 'created');\n+  initRender(this);\n+};\n+\n+Vue.prototype.$nextTick = function (fn) {\n+  nextTick(fn, this);\n+};\n+\n+stateMixin(Vue);\n+eventsMixin(Vue);\n+lifecycleMixin(Vue);\n+renderMixin(Vue);\n+\n+function initUse(Vue) {\n+  /**\n+   * Plugin system\n+   *\n+   * @param {Object} plugin\n+   */\n+\n+  Vue.use = function (plugin) {\n+    /* istanbul ignore if */\n+    if (plugin.installed) {\n+      return;\n+    }\n+    // additional parameters\n+    var args = toArray(arguments, 1);\n+    args.unshift(this);\n+    if (typeof plugin.install === 'function') {\n+      plugin.install.apply(plugin, args);\n+    } else {\n+      plugin.apply(null, args);\n+    }\n+    plugin.installed = true;\n+    return this;\n+  };\n+}\n+\n+function initMixin(Vue) {\n+  Vue.mixin = function (mixin) {\n+    Vue.options = mergeOptions(Vue.options, mixin);\n+  };\n+}\n+\n+function initExtend(Vue) {\n+  /**\n+   * Each instance constructor, including Vue, has a unique\n+   * cid. This enables us to create wrapped \"child\n+   * constructors\" for prototypal inheritance and cache them.\n+   */\n+\n+  Vue.cid = 0;\n+  var cid = 1;\n+\n+  /**\n+   * Class inheritance\n+   *\n+   * @param {Object} extendOptions\n+   */\n+\n+  Vue.extend = function (extendOptions) {\n+    extendOptions = extendOptions || {};\n+    var Super = this;\n+    var isFirstExtend = Super.cid === 0;\n+    if (isFirstExtend && extendOptions._Ctor) {\n+      return extendOptions._Ctor;\n+    }\n+    var name = extendOptions.name || Super.options.name;\n+    if (process.env.NODE_ENV !== 'production') {\n+      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n+        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n+        name = null;\n+      }\n+    }\n+    var Sub = function VueComponent(options) {\n+      this._init(options);\n+    };\n+    Sub.prototype = Object.create(Super.prototype);\n+    Sub.prototype.constructor = Sub;\n+    Sub.cid = cid++;\n+    Sub.options = mergeOptions(Super.options, extendOptions);\n+    Sub['super'] = Super;\n+    // allow further extension\n+    Sub.extend = Super.extend;\n+    // create asset registers, so extended classes\n+    // can have their private assets too.\n+    config._assetTypes.forEach(function (type) {\n+      Sub[type] = Super[type];\n+    });\n+    // enable recursive self-lookup\n+    if (name) {\n+      Sub.options.components[name] = Sub;\n+    }\n+    // cache constructor\n+    if (isFirstExtend) {\n+      extendOptions._Ctor = Sub;\n+    }\n+    return Sub;\n+  };\n+}\n+\n+function initAssetRegisters(Vue) {\n+  /**\n+     * Create asset registration methods with the following\n+     * signature:\n+     *\n+     * @param {String} id\n+     * @param {*} definition\n+     */\n+\n+  config._assetTypes.forEach(function (type) {\n+    Vue[type] = function (id, definition) {\n+      if (!definition) {\n+        return this.options[type + 's'][id];\n+      } else {\n+        /* istanbul ignore if */\n+        if (process.env.NODE_ENV !== 'production') {\n+          if (type === 'component' && config.isReservedTag(id)) {\n+            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n+          }\n+        }\n+        if (type === 'component' && isPlainObject(definition)) {\n+          definition.name = id;\n+          definition = Vue.extend(definition);\n+        }\n+        this.options[type + 's'][id] = definition;\n+        return definition;\n+      }\n+    };\n+  });\n+}\n+\n+function initGlobalAPI(Vue) {\n+  Vue.config = config;\n+  Vue.util = util;\n+  Vue.set = set;\n+  Vue.delete = del;\n+  Vue.nextTick = nextTick;\n+\n+  Vue.options = {\n+    directives: Object.create(null),\n+    filters: Object.create(null),\n+    components: Object.create(null),\n+    transitions: Object.create(null)\n+  };\n+\n+  initUse(Vue);\n+  initMixin(Vue);\n+  initExtend(Vue);\n+  initAssetRegisters(Vue);\n+}\n+\n+initGlobalAPI(Vue);\n+\n+Vue.version = '2.0.0-alpha.0';\n+\n+var emptyNode = VNode('', {}, []);\n+var hooks$1 = ['create', 'update', 'remove', 'destroy'];\n+\n+function isUndef(s) {\n+  return s === undefined;\n+}\n+\n+function isDef(s) {\n+  return s !== undefined;\n+}\n+\n+function sameVnode(vnode1, vnode2) {\n+  return vnode1.key === vnode2.key && vnode1.tag === vnode2.tag;\n+}\n+\n+function createKeyToOldIdx(children, beginIdx, endIdx) {\n+  var i = void 0,\n+      key = void 0;\n+  var map = {};\n+  for (i = beginIdx; i <= endIdx; ++i) {\n+    key = children[i].key;\n+    if (isDef(key)) map[key] = i;\n+  }\n+  return map;\n+}\n+\n+function createPatchFunction(backend) {\n+  var i = void 0,\n+      j = void 0;\n+  var cbs = {};\n+\n+  var modules = backend.modules;\n+  var nodeOps = backend.nodeOps;\n+\n+\n+  for (i = 0; i < hooks$1.length; ++i) {\n+    cbs[hooks$1[i]] = [];\n+    for (j = 0; j < modules.length; ++j) {\n+      if (modules[j][hooks$1[i]] !== undefined) cbs[hooks$1[i]].push(modules[j][hooks$1[i]]);\n+    }\n+  }\n+\n+  function emptyNodeAt(elm) {\n+    return VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);\n+  }\n+\n+  function createRmCb(childElm, listeners) {\n+    function remove() {\n+      if (--remove.listeners === 0) {\n+        removeElement(childElm);\n+      }\n+    }\n+    remove.listeners = listeners;\n+    return remove;\n+  }\n+\n+  function removeElement(el) {\n+    var parent = nodeOps.parentNode(el);\n+    nodeOps.removeChild(parent, el);\n+  }\n+\n+  function createElm(vnode, insertedVnodeQueue) {\n+    var i = void 0,\n+        elm = void 0;\n+    var data = vnode.data;\n+    if (isDef(data)) {\n+      if (isDef(i = data.hook) && isDef(i = i.init)) i(vnode);\n+      // after calling the init hook, if the vnode is a child component\n+      // it should've created a child instance and mounted it. the child\n+      // component also has set the placeholder vnode's elm.\n+      // in that case we can just return the element and be done.\n+      if (isDef(i = vnode.child)) {\n+        invokeCreateHooks(vnode, insertedVnodeQueue);\n+        return vnode.elm;\n+      }\n+    }\n+    var children = vnode.children;\n+    var tag = vnode.tag;\n+    if (isDef(tag)) {\n+      elm = vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag);\n+      if (Array.isArray(children)) {\n+        for (i = 0; i < children.length; ++i) {\n+          nodeOps.appendChild(elm, createElm(children[i], insertedVnodeQueue));\n+        }\n+      } else if (isPrimitive(vnode.text)) {\n+        nodeOps.appendChild(elm, nodeOps.createTextNode(vnode.text));\n+      }\n+      if (isDef(data)) {\n+        invokeCreateHooks(vnode, insertedVnodeQueue);\n+      }\n+    } else {\n+      elm = vnode.elm = nodeOps.createTextNode(vnode.text);\n+    }\n+    return vnode.elm;\n+  }\n+\n+  function invokeCreateHooks(vnode, insertedVnodeQueue) {\n+    for (var _i = 0; _i < cbs.create.length; ++_i) {\n+      cbs.create[_i](emptyNode, vnode);\n+    }\n+    i = vnode.data.hook; // Reuse variable\n+    if (isDef(i)) {\n+      if (i.create) i.create(emptyNode, vnode);\n+      if (i.insert) insertedVnodeQueue.push(vnode);\n+    }\n+  }\n+\n+  function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n+    for (; startIdx <= endIdx; ++startIdx) {\n+      nodeOps.insertBefore(parentElm, createElm(vnodes[startIdx], insertedVnodeQueue), before);\n+    }\n+  }\n+\n+  function invokeDestroyHook(vnode) {\n+    var i = void 0,\n+        j = void 0;\n+    var data = vnode.data;\n+    if (isDef(data)) {\n+      if (isDef(i = data.hook) && isDef(i = i.destroy)) i(vnode);\n+      for (i = 0; i < cbs.destroy.length; ++i) {\n+        cbs.destroy[i](vnode);\n+      }if (isDef(i = vnode.children)) {\n+        for (j = 0; j < vnode.children.length; ++j) {\n+          invokeDestroyHook(vnode.children[j]);\n+        }\n+      }\n+      if (isDef(i = vnode.child)) {\n+        invokeDestroyHook(i._vnode);\n+      }\n+    }\n+  }\n+\n+  function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n+    for (; startIdx <= endIdx; ++startIdx) {\n+      var ch = vnodes[startIdx];\n+      if (isDef(ch)) {\n+        if (isDef(ch.tag)) {\n+          invokeDestroyHook(ch);\n+          removeAndInvokeRemoveHook(ch);\n+        } else {\n+          // Text node\n+          nodeOps.removeChild(parentElm, ch.elm);\n+        }\n+      }\n+    }\n+  }\n+\n+  function removeAndInvokeRemoveHook(vnode, rm) {\n+    if (rm || isDef(vnode.data)) {\n+      var listeners = cbs.remove.length + 1;\n+      if (!rm) {\n+        // directly removing\n+        rm = createRmCb(vnode.elm, listeners);\n+      } else {\n+        // we have a recursively passed down rm callback\n+        // increase the listeners count\n+        rm.listeners += listeners;\n+      }\n+      // recursively invoke hooks on child component root node\n+      if (isDef(i = vnode.child) && isDef(i = i._vnode) && isDef(i.data)) {\n+        removeAndInvokeRemoveHook(i, rm);\n+      }\n+      for (i = 0; i < cbs.remove.length; ++i) {\n+        cbs.remove[i](vnode, rm);\n+      }\n+      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n+        i(vnode, rm);\n+      } else {\n+        rm();\n+      }\n+    } else {\n+      removeElement(vnode.elm);\n+    }\n+  }\n+\n+  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n+    var oldStartIdx = 0;\n+    var newStartIdx = 0;\n+    var oldEndIdx = oldCh.length - 1;\n+    var oldStartVnode = oldCh[0];\n+    var oldEndVnode = oldCh[oldEndIdx];\n+    var newEndIdx = newCh.length - 1;\n+    var newStartVnode = newCh[0];\n+    var newEndVnode = newCh[newEndIdx];\n+    var oldKeyToIdx = void 0,\n+        idxInOld = void 0,\n+        elmToMove = void 0,\n+        before = void 0;\n+\n+    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n+      if (isUndef(oldStartVnode)) {\n+        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n+      } else if (isUndef(oldEndVnode)) {\n+          oldEndVnode = oldCh[--oldEndIdx];\n+        } else if (sameVnode(oldStartVnode, newStartVnode)) {\n+          patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n+          oldStartVnode = oldCh[++oldStartIdx];\n+          newStartVnode = newCh[++newStartIdx];\n+        } else if (sameVnode(oldEndVnode, newEndVnode)) {\n+          patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n+          oldEndVnode = oldCh[--oldEndIdx];\n+          newEndVnode = newCh[--newEndIdx];\n+        } else if (sameVnode(oldStartVnode, newEndVnode)) {\n+          // Vnode moved right\n+          patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n+          nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n+          oldStartVnode = oldCh[++oldStartIdx];\n+          newEndVnode = newCh[--newEndIdx];\n+        } else if (sameVnode(oldEndVnode, newStartVnode)) {\n+          // Vnode moved left\n+          patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n+          nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n+          oldEndVnode = oldCh[--oldEndIdx];\n+          newStartVnode = newCh[++newStartIdx];\n+        } else {\n+          if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n+          idxInOld = oldKeyToIdx[newStartVnode.key];\n+          if (isUndef(idxInOld)) {\n+            // New element\n+            nodeOps.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n+            newStartVnode = newCh[++newStartIdx];\n+          } else {\n+            elmToMove = oldCh[idxInOld];\n+            if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n+              warn('Duplicate track-by key: ' + idxInOld + '. ' + 'Make sure each v-for item has a unique track-by key.');\n+            }\n+            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n+            oldCh[idxInOld] = undefined;\n+            nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n+            newStartVnode = newCh[++newStartIdx];\n+          }\n+        }\n+    }\n+    if (oldStartIdx > oldEndIdx) {\n+      before = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n+      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n+    } else if (newStartIdx > newEndIdx) {\n+      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n+    }\n+  }\n+\n+  function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n+    var i = void 0,\n+        hook = void 0;\n+    if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\n+      i(oldVnode, vnode);\n+    }\n+    // skip nodes with v-pre\n+    if (isDef(i = vnode.data) && i.pre) {\n+      return;\n+    }\n+    var elm = vnode.elm = oldVnode.elm;\n+    var oldCh = oldVnode.children;\n+    var ch = vnode.children;\n+    if (oldVnode === vnode) return;\n+    if (!sameVnode(oldVnode, vnode)) {\n+      var parentElm = nodeOps.parentNode(oldVnode.elm);\n+      elm = createElm(vnode, insertedVnodeQueue);\n+      nodeOps.insertBefore(parentElm, elm, oldVnode.elm);\n+      removeVnodes(parentElm, [oldVnode], 0, 0);\n+      return;\n+    }\n+    if (isDef(vnode.data)) {\n+      for (i = 0; i < cbs.update.length; ++i) {\n+        cbs.update[i](oldVnode, vnode);\n+      }i = vnode.data.hook;\n+      if (isDef(i) && isDef(i = i.update)) i(oldVnode, vnode);\n+    }\n+    if (isUndef(vnode.text)) {\n+      if (isDef(oldCh) && isDef(ch)) {\n+        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n+      } else if (isDef(ch)) {\n+        if (isDef(oldVnode.text)) nodeOps.setTextContent(elm, '');\n+        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n+      } else if (isDef(oldCh)) {\n+        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n+      } else if (isDef(oldVnode.text)) {\n+        nodeOps.setTextContent(elm, '');\n+      }\n+    } else if (oldVnode.text !== vnode.text) {\n+      nodeOps.setTextContent(elm, vnode.text);\n+    }\n+    if (isDef(hook) && isDef(i = hook.postpatch)) {\n+      i(oldVnode, vnode);\n+    }\n+  }\n+\n+  function invokeInsertHook(queue) {\n+    for (i = 0; i < queue.length; ++i) {\n+      queue[i].data.hook.insert(queue[i]);\n+    }\n+  }\n+\n+  function hydrate(elm, vnode, insertedVnodeQueue) {\n+    if (process.env.NODE_ENV !== 'production') {\n+      if (!assertNodeMatch(elm, vnode)) {\n+        return false;\n+      }\n+    }\n+    vnode.elm = elm;\n+    var tag = vnode.tag;\n+    var data = vnode.data;\n+    var children = vnode.children;\n+\n+    if (isDef(data)) {\n+      if (isDef(i = data.hook) && isDef(i = i.init)) i(vnode);\n+      if (isDef(i = vnode.child)) {\n+        // child component. it should have hydrated its own tree.\n+        invokeCreateHooks(vnode, insertedVnodeQueue);\n+        return true;\n+      }\n+    }\n+    if (isDef(tag)) {\n+      if (isDef(children)) {\n+        var childNodes = elm.childNodes;\n+        for (var _i2 = 0; _i2 < children.length; _i2++) {\n+          var success = hydrate(childNodes[_i2], children[_i2], insertedVnodeQueue);\n+          if (!success) {\n+            return false;\n+          }\n+        }\n+      }\n+      if (isDef(data)) {\n+        invokeCreateHooks(vnode, insertedVnodeQueue);\n+      }\n+    }\n+    return true;\n+  }\n+\n+  function assertNodeMatch(node, vnode) {\n+    if (vnode.tag) {\n+      if (vnode.tag.indexOf('vue-component') === 0) {\n+        return true;\n+      } else {\n+        return vnode.tag === node.tagName.toLowerCase() && (vnode.children ? vnode.children.length === node.childNodes.length : node.childNodes.length === 0);\n+      }\n+    } else {\n+      return renderString(vnode.text) === node.data;\n+    }\n+  }\n+\n+  return function patch(oldVnode, vnode) {\n+    var elm, parent;\n+    var insertedVnodeQueue = [];\n+\n+    if (!oldVnode) {\n+      // empty mount, create new root element\n+      createElm(vnode, insertedVnodeQueue);\n+    } else {\n+      if (sameVnode(oldVnode, vnode)) {\n+        patchVnode(oldVnode, vnode, insertedVnodeQueue);\n+      } else {\n+        if (isUndef(oldVnode.tag)) {\n+          // mounting to a real element\n+          // check if this is server-rendered content and if we can perform\n+          // a successful hydration.\n+          if (oldVnode.hasAttribute('server-rendered')) {\n+            oldVnode.removeAttribute('server-rendered');\n+            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n+              invokeInsertHook(insertedVnodeQueue);\n+              return oldVnode;\n+            } else if (process.env.NODE_ENV !== 'production') {\n+              warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. Bailing hydration and performing ' + 'full client-side render.');\n+            }\n+          }\n+          // either not server-rendered, or hydration failed.\n+          // create an empty node and replace it\n+          oldVnode = emptyNodeAt(oldVnode);\n+        }\n+        elm = oldVnode.elm;\n+        parent = nodeOps.parentNode(elm);\n+\n+        createElm(vnode, insertedVnodeQueue);\n+\n+        if (parent !== null) {\n+          nodeOps.insertBefore(parent, vnode.elm, nodeOps.nextSibling(elm));\n+          removeVnodes(parent, [oldVnode], 0, 0);\n+        }\n+      }\n+    }\n+\n+    invokeInsertHook(insertedVnodeQueue);\n+    return vnode.elm;\n+  };\n+}\n+\n+// attributes that should be using props for binding\n+var mustUseProp = makeMap('value,selected,checked,muted');\n+\n+var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n+\n+var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');\n+\n+var xlinkNS = 'http://www.w3.org/1999/xlink';\n+var isXlink = function isXlink(name) {\n+  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';\n+};\n+\n+function genClassForVnode(vnode) {\n+  var data = vnode.data;\n+  // Important: check if this is a component container node\n+  // or a child component root node\n+  var i = void 0;\n+  if ((i = vnode.child) && (i = i._vnode.data)) {\n+    data = mergeClassData(i, data);\n+  }\n+  if ((i = vnode.parent) && (i = i.data)) {\n+    data = mergeClassData(data, i);\n+  }\n+  return genClassFromData(data);\n+}\n+\n+function mergeClassData(child, parent) {\n+  return {\n+    staticClass: concat(child.staticClass, parent.staticClass),\n+    class: child.class ? extend(child.class, parent.class) : parent.class\n+  };\n+}\n+\n+function genClassFromData(data) {\n+  var dynamicClass = data.class;\n+  var staticClass = data.staticClass;\n+  if (staticClass || dynamicClass) {\n+    return concat(staticClass, stringifyClass(dynamicClass));\n+  }\n+}\n+\n+function concat(a, b) {\n+  return a ? b ? a + ' ' + b : a : b || '';\n+}\n+\n+function stringifyClass(value) {\n+  if (!value) {\n+    return '';\n+  }\n+  if (typeof value === 'string') {\n+    return value;\n+  }\n+  if (isArray(value)) {\n+    var res = '';\n+    for (var i = 0, l = value.length; i < l; i++) {\n+      if (value[i]) res += stringifyClass(value[i]) + ' ';\n+    }\n+    return res.slice(0, -1);\n+  }\n+  if (isObject(value)) {\n+    var _res = '';\n+    for (var key in value) {\n+      if (value[key]) _res += key + ' ';\n+    }\n+    return _res.slice(0, -1);\n+  }\n+}\n+\n+var namespaceMap = {\n+  svg: 'http://www.w3.org/2000/svg',\n+  math: 'http://www.w3.org/1998/Math/MathML'\n+};\n+\n+var isReservedTag = makeMap('html,base,head,link,meta,style,title,' + 'address,article,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,hr,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template');\n+\n+var isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr', true);\n+\n+// Elements that you can, intentionally, leave open\n+// (and which close themselves)\n+var canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source', true);\n+\n+// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n+// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\n+var isNonPhrasingTag = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' + 'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' + 'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' + 'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' + 'title,tr,track', true);\n+\n+// this map covers namespace elements that can appear as template root nodes\n+var isSVG = makeMap('svg,g,defs,symbol,use,image,text,circle,ellipse,' + 'line,path,polygon,polyline,rect', true);\n+\n+var unknownElementCache = Object.create(null);\n+function isUnknownElement(tag) {\n+  if (!inBrowser) {\n+    return true;\n+  }\n+  tag = tag.toLowerCase();\n+  if (unknownElementCache[tag] != null) {\n+    return unknownElementCache[tag];\n+  }\n+  var el = document.createElement(tag);\n+  if (tag.indexOf('-') > -1) {\n+    // http://stackoverflow.com/a/28210364/1070244\n+    return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n+  } else {\n+    return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()) &&\n+    // Chrome returns unknown for several HTML5 elements.\n+    // https://code.google.com/p/chromium/issues/detail?id=540526\n+    !/^(data|time|rtc|rb)$/.test(tag);\n+  }\n+}\n+\n+var UA$1 = inBrowser && window.navigator.userAgent.toLowerCase();\n+var isIE9 = UA$1 && UA$1.indexOf('msie 9.0') > 0;\n+var isAndroid = UA$1 && UA$1.indexOf('android') > 0;\n+\n+/**\n+ * Query an element selector if it's not an element already.\n+ *\n+ * @param {String|Element} el\n+ * @return {Element}\n+ */\n+\n+function query(el) {\n+  if (typeof el === 'string') {\n+    var selector = el;\n+    el = document.querySelector(el);\n+    if (!el) {\n+      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n+    }\n+  }\n+  return el;\n+}\n+\n+function createElement$1(tagName) {\n+  return document.createElement(tagName);\n+}\n+\n+function createElementNS(namespace, tagName) {\n+  return document.createElementNS(namespaceMap[namespace], tagName);\n+}\n+\n+function createTextNode(text) {\n+  return document.createTextNode(text);\n+}\n+\n+function insertBefore(parentNode, newNode, referenceNode) {\n+  parentNode.insertBefore(newNode, referenceNode);\n+}\n+\n+function removeChild(node, child) {\n+  node.removeChild(child);\n+}\n+\n+function appendChild(node, child) {\n+  node.appendChild(child);\n+}\n+\n+function parentNode(node) {\n+  return node.parentElement;\n+}\n+\n+function nextSibling(node) {\n+  return node.nextSibling;\n+}\n+\n+function tagName(node) {\n+  return node.tagName;\n+}\n+\n+function setTextContent(node, text) {\n+  node.textContent = text;\n+}\n+\n+var nodeOps = Object.freeze({\n+  createElement: createElement$1,\n+  createElementNS: createElementNS,\n+  createTextNode: createTextNode,\n+  insertBefore: insertBefore,\n+  removeChild: removeChild,\n+  appendChild: appendChild,\n+  parentNode: parentNode,\n+  nextSibling: nextSibling,\n+  tagName: tagName,\n+  setTextContent: setTextContent\n+});\n+\n+if (isIE9) {\n+  // http://www.matts411.com/post/internet-explorer-9-oninput/\n+  document.addEventListener('selectionchange', function () {\n+    var el = document.activeElement;\n+    if (el && el.vmodel) {\n+      trigger(el);\n+    }\n+  });\n+}\n+\n+var model = {\n+  bind: function bind(el) {\n+    if (!isAndroid) {\n+      el.addEventListener('compositionstart', onCompositionStart);\n+      el.addEventListener('compositionend', onCompositionEnd);\n+    }\n+    if (isIE9) {\n+      el.vmodel = true;\n+    }\n+  },\n+  unbind: function unbind(el) {\n+    if (!isAndroid) {\n+      el.removeEventListener('compositionstart', onCompositionStart);\n+      el.removeEventListener('compositionend', onCompositionEnd);\n+    }\n+  }\n+};\n+\n+function onCompositionStart(e) {\n+  e.target.composing = true;\n+}\n+\n+function onCompositionEnd(e) {\n+  e.target.composing = false;\n+  trigger(e.target);\n+}\n+\n+function trigger(el) {\n+  var e = document.createEvent('HTMLEvents');\n+  e.initEvent('input', true, true);\n+  el.dispatchEvent(e);\n+}\n+\n+var svgNS = namespaceMap.svg;\n+\n+/**\n+ * In IE9, setAttribute('class') will result in empty class\n+ * if the element also has the :class attribute; However in\n+ * PhantomJS, setting `className` does not work on SVG elements...\n+ * So we have to do a conditional check here.\n+ *\n+ * @param {Element} el\n+ * @param {String} cls\n+ */\n+\n+function setClass(el, cls) {\n+  /* istanbul ignore else */\n+  if (!isIE9 || el.namespaceURI === svgNS) {\n+    el.setAttribute('class', cls);\n+  } else {\n+    el.className = cls;\n+  }\n+}\n+\n+/**\n+ * Add class with compatibility for IE & SVG\n+ *\n+ * @param {Element} el\n+ * @param {String} cls\n+ */\n+\n+function addClass(el, cls) {\n+  if (el.classList) {\n+    if (cls.indexOf(' ') > -1) {\n+      cls.split(/\\s+/).forEach(function (c) {\n+        return el.classList.add(c);\n+      });\n+    } else {\n+      el.classList.add(cls);\n+    }\n+  } else {\n+    var cur = ' ' + getClass(el) + ' ';\n+    if (cur.indexOf(' ' + cls + ' ') < 0) {\n+      setClass(el, (cur + cls).trim());\n+    }\n+  }\n+}\n+\n+/**\n+ * Remove class with compatibility for IE & SVG\n+ *\n+ * @param {Element} el\n+ * @param {String} cls\n+ */\n+\n+function removeClass(el, cls) {\n+  if (el.classList) {\n+    if (cls.indexOf(' ') > -1) {\n+      cls.split(/\\s+/).forEach(function (c) {\n+        return el.classList.remove(c);\n+      });\n+    } else {\n+      el.classList.remove(cls);\n+    }\n+  } else {\n+    var cur = ' ' + getClass(el) + ' ';\n+    var tar = ' ' + cls + ' ';\n+    while (cur.indexOf(tar) >= 0) {\n+      cur = cur.replace(tar, ' ');\n+    }\n+    setClass(el, cur.trim());\n+  }\n+  if (!el.className) {\n+    el.removeAttribute('class');\n+  }\n+}\n+\n+/**\n+ * For IE9 compat: when both class and :class are present\n+ * getAttribute('class') returns wrong value... but className\n+ * on SVG elements returns an object.\n+ *\n+ * @param {Element} el\n+ * @return {String}\n+ */\n+\n+function getClass(el) {\n+  var classname = el.className;\n+  if (typeof classname === 'object') {\n+    classname = classname.baseVal || '';\n+  }\n+  return classname;\n+}\n+\n+var TRANSITION = 'transition';\n+var ANIMATION = 'animation';\n+\n+// Transition property/event sniffing\n+var transitionProp = void 0;\n+var transitionEndEvent = void 0;\n+var animationProp = void 0;\n+var animationEndEvent = void 0;\n+if (inBrowser && !isIE9) {\n+  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n+  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n+  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n+  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n+  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n+  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n+}\n+\n+var raf = inBrowser && window.requestAnimationFrame || setTimeout;\n+function nextFrame(fn) {\n+  raf(function () {\n+    raf(fn);\n+  });\n+}\n+\n+function enter(vnode) {\n+  var el = vnode.elm;\n+  // call leave callback now\n+  if (el._leaveCb) {\n+    el._leaveCb.cancelled = true;\n+    el._leaveCb();\n+  }\n+  var data = vnode.data.transition;\n+  if (!data) {\n+    return;\n+  }\n+  if (!vnode.context.$root._mounted && !data.appear) {\n+    return;\n+  }\n+\n+  var _resolveTransition = resolveTransition(data.definition, vnode.context);\n+\n+  var enterClass = _resolveTransition.enterClass;\n+  var enterActiveClass = _resolveTransition.enterActiveClass;\n+  var beforeEnter = _resolveTransition.beforeEnter;\n+  var enter = _resolveTransition.enter;\n+  var afterEnter = _resolveTransition.afterEnter;\n+  var enterCancelled = _resolveTransition.enterCancelled;\n+\n+\n+  var userWantsControl = enter && enter.length > 1;\n+  var cb = el._enterCb = once(function () {\n+    if (enterActiveClass) {\n+      removeTransitionClass(el, enterActiveClass);\n+    }\n+    if (cb.cancelled) {\n+      enterCancelled && enterCancelled(el);\n+    } else {\n+      afterEnter && afterEnter(el);\n+    }\n+    el._enterCb = null;\n+  });\n+\n+  beforeEnter && beforeEnter(el);\n+  if (enterClass) {\n+    addTransitionClass(el, enterClass);\n+    nextFrame(function () {\n+      removeTransitionClass(el, enterClass);\n+    });\n+  }\n+  if (enterActiveClass) {\n+    nextFrame(function () {\n+      addTransitionClass(el, enterActiveClass);\n+      if (!userWantsControl) {\n+        whenTransitionEnds(el, cb);\n+      }\n+    });\n+  }\n+  enter && enter(el, cb);\n+  if (!enterActiveClass && !userWantsControl) {\n+    cb();\n+  }\n+}\n+\n+function leave(vnode, rm) {\n+  var el = vnode.elm;\n+  // call enter callback now\n+  if (el._enterCb) {\n+    el._enterCb.cancelled = true;\n+    el._enterCb();\n+  }\n+  var data = vnode.data.transition;\n+  if (!data) {\n+    return rm();\n+  }\n+\n+  var _resolveTransition2 = resolveTransition(data.definition, vnode.context);\n+\n+  var leaveClass = _resolveTransition2.leaveClass;\n+  var leaveActiveClass = _resolveTransition2.leaveActiveClass;\n+  var beforeLeave = _resolveTransition2.beforeLeave;\n+  var leave = _resolveTransition2.leave;\n+  var afterLeave = _resolveTransition2.afterLeave;\n+  var leaveCancelled = _resolveTransition2.leaveCancelled;\n+\n+\n+  var userWantsControl = leave && leave.length > 1;\n+  var cb = el._leaveCb = once(function () {\n+    if (leaveActiveClass) {\n+      removeTransitionClass(el, leaveActiveClass);\n+    }\n+    if (cb.cancelled) {\n+      leaveCancelled && leaveCancelled(el);\n+    } else {\n+      rm();\n+      afterLeave && afterLeave(el);\n+    }\n+    el._leaveCb = null;\n+  });\n+\n+  beforeLeave && beforeLeave(el);\n+  if (leaveClass) {\n+    addTransitionClass(el, leaveClass);\n+    nextFrame(function () {\n+      removeTransitionClass(el, leaveClass);\n+    });\n+  }\n+  if (leaveActiveClass) {\n+    nextFrame(function () {\n+      addTransitionClass(el, leaveActiveClass);\n+      if (!userWantsControl) {\n+        whenTransitionEnds(el, cb);\n+      }\n+    });\n+  }\n+  leave && leave(el, cb);\n+  if (!leaveActiveClass && !userWantsControl) {\n+    cb();\n+  }\n+}\n+\n+function resolveTransition(id, context) {\n+  var definition = id && typeof id === 'string' ? resolveAsset(context.$options, 'transitions', id) || id : id;\n+  if (definition === true) definition = 'v';\n+  return typeof definition === 'string' ? autoCssTransition(definition) : definition;\n+}\n+\n+var autoCssTransition = cached(function (name) {\n+  return {\n+    enterClass: name + '-enter',\n+    leaveClass: name + '-leave',\n+    enterActiveClass: name + '-enter-active',\n+    leaveActiveClass: name + '-leave-active'\n+  };\n+});\n+\n+function addTransitionClass(el, cls) {\n+  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n+  addClass(el, cls);\n+}\n+\n+function removeTransitionClass(el, cls) {\n+  remove(el._transitionClasses, cls);\n+  removeClass(el, cls);\n+}\n+\n+function whenTransitionEnds(el, cb) {\n+  var _getTransitionInfo = getTransitionInfo(el);\n+\n+  var type = _getTransitionInfo.type;\n+  var timeout = _getTransitionInfo.timeout;\n+  var propCount = _getTransitionInfo.propCount;\n+\n+  if (!type) return cb();\n+  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n+  var ended = 0;\n+  var end = function end() {\n+    el.removeEventListener(event, onEnd);\n+    cb();\n+  };\n+  var onEnd = function onEnd() {\n+    if (++ended >= propCount) {\n+      end();\n+    }\n+  };\n+  setTimeout(function () {\n+    if (ended < propCount) {\n+      end();\n+    }\n+  }, timeout);\n+  el.addEventListener(event, onEnd);\n+}\n+\n+function getTransitionInfo(el) {\n+  var styles = window.getComputedStyle(el);\n+  // 1. determine the maximum duration (timeout)\n+  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n+  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n+  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n+  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n+  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n+  var animationTimeout = getTimeout(animationDelays, animationDurations);\n+  var timeout = Math.max(transitionTimeout, animationTimeout);\n+  var type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n+  var propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n+  return {\n+    type: type,\n+    timeout: timeout,\n+    propCount: propCount\n+  };\n+}\n+\n+function getTimeout(delays, durations) {\n+  return Math.max.apply(null, durations.map(function (d, i) {\n+    return toMs(d) + toMs(delays[i]);\n+  }));\n+}\n+\n+function toMs(s) {\n+  return Number(s.slice(0, -1)) * 1000;\n+}\n+\n+function once(fn) {\n+  var called = false;\n+  return function () {\n+    if (!called) {\n+      called = true;\n+      fn();\n+    }\n+  };\n+}\n+\n+function shouldSkipTransition(vnode) {\n+  return(\n+    // if this is a component root node and the compoennt's\n+    // parent container node also has transition, skip.\n+    vnode.parent && vnode.parent.data.transition ||\n+    // if the element has v-show, let the runtime directive\n+    // call the hooks instead\n+    vnode.data.show\n+  );\n+}\n+\n+var transition = !transitionEndEvent ? {} : {\n+  create: function create(_, vnode) {\n+    if (!shouldSkipTransition(vnode)) {\n+      enter(vnode);\n+    }\n+  },\n+  remove: function remove(vnode, rm) {\n+    if (!shouldSkipTransition(vnode)) {\n+      leave(vnode, rm);\n+    } else {\n+      rm();\n+    }\n+  }\n+};\n+\n+var show = {\n+  bind: function bind(el, value, _, vnode) {\n+    var transition = getTransition(vnode);\n+    if (value && transition && transition.appea && !isIE9) {\n+      enter(vnode);\n+    }\n+    el.style.display = value ? '' : 'none';\n+  },\n+  update: function update(el, value, _, vnode) {\n+    var transition = getTransition(vnode);\n+    if (transition && !isIE9) {\n+      if (value) {\n+        enter(vnode);\n+        el.style.display = '';\n+      } else {\n+        leave(vnode, function () {\n+          el.style.display = 'none';\n+        });\n+      }\n+    } else {\n+      el.style.display = value ? '' : 'none';\n+    }\n+  }\n+};\n+\n+function getTransition(vnode) {\n+  var parent = vnode.parent;\n+  return parent && parent.data.transition != null ? parent.data.transition : vnode.data.transition;\n+}\n+\n+var platformDirectives = {\n+  model: model,\n+  show: show\n+};\n+\n+var directives = {\n+  create: function bindDirectives(oldVnode, vnode) {\n+    applyDirectives(oldVnode, vnode, 'bind');\n+  },\n+  update: function updateDirectives(oldVnode, vnode) {\n+    applyDirectives(oldVnode, vnode, 'update', true);\n+  },\n+  destroy: function unbindDirectives(vnode) {\n+    applyDirectives(null, vnode, 'unbind');\n+  }\n+};\n+\n+function applyDirectives(oldVnode, vnode, hook, update) {\n+  var dirs = vnode.data.directives;\n+  if (dirs) {\n+    for (var i = 0; i < dirs.length; i++) {\n+      var dir = dirs[i];\n+      var def = resolveAsset(vnode.context.$options, 'directives', dir.name, true);\n+      var fn = def && def[hook];\n+      if (fn) {\n+        // only call update if value has changed\n+        if (update) {\n+          var oldValue = oldVnode.data.directives[i].value;\n+          if (oldValue === dir.value) {\n+            continue;\n+          }\n+        }\n+        fn(vnode.elm, dir.value, dir.modifiers, vnode, oldVnode);\n+      }\n+    }\n+  }\n+}\n+\n+var baseModules = [directives];\n+\n+function updateAttrs(oldVnode, vnode) {\n+  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n+    return;\n+  }\n+  var key = void 0,\n+      cur = void 0,\n+      old = void 0;\n+  var elm = vnode.elm;\n+  var oldAttrs = oldVnode.data.attrs || {};\n+  var attrs = vnode.data.attrs || {};\n+\n+  for (key in attrs) {\n+    cur = attrs[key];\n+    old = oldAttrs[key];\n+    if (old !== cur) {\n+      setAttr(elm, key, cur);\n+    }\n+  }\n+  for (key in oldAttrs) {\n+    if (attrs[key] == null) {\n+      if (isXlink(key)) {\n+        elm.removeAttributeNS(xlinkNS, key);\n+      } else {\n+        elm.removeAttribute(key);\n+      }\n+    }\n+  }\n+}\n+\n+function setAttr(el, key, value) {\n+  if (isBooleanAttr(key)) {\n+    if (value == null) {\n+      el.removeAttribute(key);\n+    } else {\n+      el.setAttribute(key, key);\n+    }\n+  } else if (isEnumeratedAttr(key)) {\n+    el.setAttribute(key, value == null ? 'false' : 'true');\n+  } else if (isXlink(key)) {\n+    el.setAttributeNS(xlinkNS, key, value);\n+  } else {\n+    el.setAttribute(key, value);\n+  }\n+}\n+\n+var attrs = {\n+  create: function create(_, vnode) {\n+    var attrs = vnode.data.staticAttrs;\n+    if (attrs) {\n+      for (var key in attrs) {\n+        if (!vnode.elm) debugger;\n+        setAttr(vnode.elm, key, attrs[key]);\n+      }\n+    }\n+    updateAttrs(_, vnode);\n+  },\n+  update: updateAttrs\n+};\n+\n+function updateClass(oldVnode, vnode) {\n+  var el = vnode.elm;\n+  var data = vnode.data;\n+  if (!data.staticClass && !data.class) {\n+    return;\n+  }\n+\n+  var cls = genClassForVnode(vnode);\n+\n+  // handle transition classes\n+  var transitionClass = el._transitionClasses;\n+  if (transitionClass) {\n+    cls = concat(cls, stringifyClass(transitionClass));\n+  }\n+\n+  // set the class\n+  if (cls !== el._prevClass) {\n+    setClass(el, cls);\n+    el._prevClass = cls;\n+  }\n+}\n+\n+var klass = {\n+  create: updateClass,\n+  update: updateClass\n+};\n+\n+function updateDOMListeners(oldVnode, vnode) {\n+  if (!oldVnode.data.on && !vnode.data.on) {\n+    return;\n+  }\n+  var on = vnode.data.on || {};\n+  var oldOn = oldVnode.data.on || {};\n+  updateListeners(on, oldOn, function (event, handler, capture) {\n+    vnode.elm.addEventListener(event, handler, capture);\n+  });\n+}\n+\n+var events = {\n+  create: updateDOMListeners,\n+  update: updateDOMListeners\n+};\n+\n+function updateProps(oldVnode, vnode) {\n+  if (!oldVnode.data.props && !vnode.data.props) {\n+    return;\n+  }\n+  var key = void 0,\n+      cur = void 0,\n+      old = void 0;\n+  var elm = vnode.elm;\n+  var oldProps = oldVnode.data.props || {};\n+  var props = vnode.data.props || {};\n+\n+  for (key in oldProps) {\n+    if (props[key] == null) {\n+      elm[key] = undefined;\n+    }\n+  }\n+  for (key in props) {\n+    cur = props[key];\n+    old = oldProps[key];\n+    if (old !== cur) {\n+      if (key === 'value') {\n+        // store value as _value as well since\n+        // non-string values will be stringified\n+        if (elm._value !== cur) {\n+          elm.value = elm._value = cur;\n+        }\n+      } else {\n+        elm[key] = cur;\n+      }\n+    }\n+  }\n+}\n+\n+var props = {\n+  create: updateProps,\n+  update: updateProps\n+};\n+\n+var prefixes = ['Webkit', 'Moz', 'ms'];\n+var testEl = inBrowser && document.createElement('div');\n+\n+var normalize = cached(function (prop) {\n+  prop = camelize(prop);\n+  if (prop !== 'filter' && prop in testEl.style) {\n+    return prop;\n+  }\n+  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n+  for (var i = 0; i < prefixes.length; i++) {\n+    var prefixed = prefixes[i] + upper;\n+    if (prefixed in testEl.style) {\n+      return prefixed;\n+    }\n+  }\n+});\n+\n+function updateStyle(oldVnode, vnode) {\n+  if (!oldVnode.data.style && !vnode.data.style) {\n+    return;\n+  }\n+  var cur = void 0,\n+      name = void 0;\n+  var elm = vnode.elm;\n+  var oldStyle = oldVnode.data.style || {};\n+  var style = vnode.data.style || {};\n+\n+  // handle array syntax\n+  if (isArray(style)) {\n+    style = vnode.data.style = toObject(style);\n+  }\n+\n+  for (name in oldStyle) {\n+    if (!style[name]) {\n+      elm.style[normalize(name)] = '';\n+    }\n+  }\n+  for (name in style) {\n+    cur = style[name];\n+    if (cur !== oldStyle[name]) {\n+      elm.style[normalize(name)] = cur;\n+    }\n+  }\n+}\n+\n+function toObject(arr) {\n+  var res = arr[0] || {};\n+  for (var i = 1; i < arr.length; i++) {\n+    if (arr[i]) {\n+      extend(res, arr[i]);\n+    }\n+  }\n+  return res;\n+}\n+\n+var style = {\n+  create: updateStyle,\n+  update: updateStyle\n+};\n+\n+var platformModules = [attrs, klass, events, props, style, transition];\n+\n+// install platform specific utils\n+Vue.config.isUnknownElement = isUnknownElement;\n+Vue.config.isReservedTag = isReservedTag;\n+\n+// install platform runtime directives\n+Vue.options.directives = platformDirectives;\n+\n+// install platform patch function\n+var modules = baseModules.concat(platformModules);\n+Vue.prototype.__patch__ = inBrowser ? createPatchFunction({ nodeOps: nodeOps, modules: modules }) : function noop() {};\n+\n+// wrap mount\n+Vue.prototype.$mount = function (el) {\n+  this.$el = el && query(el);\n+  this._mount();\n+};\n+\n+module.exports = Vue;\n",
            "-": ""
          }
        ],
        "a/dist/vue.js": [
          {
            "+": "+/*!\n+ * Vue.js v2.0.0-pre-alpha\n+ * (c) 2014-2016 Evan You\n+ * Released under the MIT License.\n+ */\n+(function (global, factory) {\n+  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n+  typeof define === 'function' && define.amd ? define(factory) :\n+  (global.Vue = factory());\n+}(this, function () { 'use strict';\n+\n+  var config = {\n+\n+    /**\n+     * Preserve whitespaces between elements.\n+     */\n+\n+    preserveWhitespace: true,\n+\n+    /**\n+     * Whether to suppress warnings.\n+     *\n+     * @type {Boolean}\n+     */\n+\n+    silent: false,\n+\n+    /**\n+     * Check if a tag is reserved so that it cannot be registered as a\n+     * component. This is platform-dependent and may be overwritten.\n+     */\n+\n+    isReservedTag: function isReservedTag() {\n+      return false;\n+    },\n+\n+    /**\n+     * Check if a tag is an unknown element.\n+     * Platform-dependent.\n+     */\n+\n+    isUnknownElement: function isUnknownElement() {\n+      return false;\n+    },\n+\n+    /**\n+     * List of asset types that a component can own.\n+     *\n+     * @type {Array}\n+     */\n+\n+    _assetTypes: ['component', 'directive', 'transition'],\n+\n+    /**\n+     * List of lifecycle hooks.\n+     *\n+     * @type {Array}\n+     */\n+\n+    _lifecycleHooks: ['init', 'created', 'beforeMount', 'mounted', 'ready', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed'],\n+\n+    /**\n+     * Max circular updates allowed in a batcher flush cycle.\n+     */\n+\n+    _maxUpdateCount: 100\n+  };\n+\n+  /**\n+   * Convert a value to a string that is actually rendered.\n+   *\n+   * @param {*} val\n+   * @return {String}\n+   */\n+\n+  function renderString(val) {\n+    return val == null ? '' : typeof val === 'object' ? JSON.stringify(val, null, 2) : String(val);\n+  }\n+\n+  /**\n+   * Make a map and return a function for checking if a key\n+   * is in that map.\n+   *\n+   * @param {String} str\n+   * @param {Boolean} expectsLowerCase\n+   * @return {Function}\n+   */\n+\n+  function makeMap(str, expectsLowerCase) {\n+    var map = Object.create(null);\n+    var list = str.split(',');\n+    for (var i = 0; i < list.length; i++) {\n+      map[list[i]] = true;\n+    }\n+    return expectsLowerCase ? function (val) {\n+      return map[val.toLowerCase()];\n+    } : function (val) {\n+      return map[val];\n+    };\n+  }\n+\n+  /**\n+   * Check if a tag is a built-in tag.\n+   */\n+\n+  var isBuiltInTag = makeMap('slot,component,render,transition', true);\n+\n+  /**\n+   * Remove an item from an array\n+   *\n+   * @param {Array} arr\n+   * @param {*} item\n+   */\n+\n+  function remove(arr, item) {\n+    if (arr.length) {\n+      var index = arr.indexOf(item);\n+      if (index > -1) {\n+        return arr.splice(index, 1);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Check whether the object has the property.\n+   *\n+   * @param {Object} obj\n+   * @param {String} key\n+   * @return {Boolean}\n+   */\n+  var hasOwnProperty = Object.prototype.hasOwnProperty;\n+  function hasOwn(obj, key) {\n+    return hasOwnProperty.call(obj, key);\n+  }\n+\n+  /**\n+   * Check if value is primitive\n+   *\n+   * @param {*} value\n+   * @return {Boolean}\n+   */\n+\n+  function isPrimitive(value) {\n+    return typeof value === 'string' || typeof value === 'number';\n+  }\n+\n+  /**\n+   * Create a cached version of a pure function.\n+   *\n+   * @param {Function} fn\n+   * @return {Function}\n+   */\n+\n+  function cached(fn) {\n+    var cache = Object.create(null);\n+    return function cachedFn(str) {\n+      var hit = cache[str];\n+      return hit || (cache[str] = fn(str));\n+    };\n+  }\n+\n+  /**\n+   * Camelize a hyphen-delmited string.\n+   *\n+   * @param {String} str\n+   * @return {String}\n+   */\n+\n+  var camelizeRE = /-(\\w)/g;\n+  var camelize = cached(function (str) {\n+    return str.replace(camelizeRE, toUpper);\n+  });\n+\n+  function toUpper(_, c) {\n+    return c ? c.toUpperCase() : '';\n+  }\n+\n+  /**\n+   * Hyphenate a camelCase string.\n+   *\n+   * @param {String} str\n+   * @return {String}\n+   */\n+\n+  var hyphenateRE = /([a-z\\d])([A-Z])/g;\n+  var hyphenate = cached(function (str) {\n+    return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n+  });\n+\n+  /**\n+   * Simple bind, faster than native\n+   *\n+   * @param {Function} fn\n+   * @param {Object} ctx\n+   * @return {Function}\n+   */\n+\n+  function bind(fn, ctx) {\n+    return function (a) {\n+      var l = arguments.length;\n+      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n+    };\n+  }\n+\n+  /**\n+   * Convert an Array-like object to a real Array.\n+   *\n+   * @param {Array-like} list\n+   * @param {Number} [start] - start index\n+   * @return {Array}\n+   */\n+\n+  function toArray(list, start) {\n+    start = start || 0;\n+    var i = list.length - start;\n+    var ret = new Array(i);\n+    while (i--) {\n+      ret[i] = list[i + start];\n+    }\n+    return ret;\n+  }\n+\n+  /**\n+   * Mix properties into target object.\n+   *\n+   * @param {Object} to\n+   * @param {Object} from\n+   */\n+\n+  function extend(to, from) {\n+    for (var key in from) {\n+      to[key] = from[key];\n+    }\n+    return to;\n+  }\n+\n+  /**\n+   * Quick object check - this is primarily used to tell\n+   * Objects from primitive values when we know the value\n+   * is a JSON-compliant type.\n+   *\n+   * @param {*} obj\n+   * @return {Boolean}\n+   */\n+\n+  function isObject(obj) {\n+    return obj !== null && typeof obj === 'object';\n+  }\n+\n+  /**\n+   * Strict object type check. Only returns true\n+   * for plain JavaScript objects.\n+   *\n+   * @param {*} obj\n+   * @return {Boolean}\n+   */\n+\n+  var toString = Object.prototype.toString;\n+  var OBJECT_STRING = '[object Object]';\n+  function isPlainObject(obj) {\n+    return toString.call(obj) === OBJECT_STRING;\n+  }\n+\n+  /**\n+   * Array type check.\n+   *\n+   * @param {*} obj\n+   * @return {Boolean}\n+   */\n+\n+  var isArray = Array.isArray;\n+\n+  /**\n+   * Check if a string starts with $ or _\n+   *\n+   * @param {String} str\n+   * @return {Boolean}\n+   */\n+\n+  function isReserved(str) {\n+    var c = (str + '').charCodeAt(0);\n+    return c === 0x24 || c === 0x5F;\n+  }\n+\n+  /**\n+   * Define a property.\n+   *\n+   * @param {Object} obj\n+   * @param {String} key\n+   * @param {*} val\n+   * @param {Boolean} [enumerable]\n+   */\n+\n+  function def(obj, key, val, enumerable) {\n+    Object.defineProperty(obj, key, {\n+      value: val,\n+      enumerable: !!enumerable,\n+      writable: true,\n+      configurable: true\n+    });\n+  }\n+\n+  /**\n+   * Parse simple path.\n+   */\n+\n+  var bailRE = /[^\\w\\.]/;\n+  function parsePath(path) {\n+    if (bailRE.test(path)) {\n+      return;\n+    } else {\n+      path = path.split('.');\n+      return function (obj) {\n+        for (var i = 0; i < path.length; i++) {\n+          if (!obj) return;\n+          obj = obj[path[i]];\n+        }\n+        return obj;\n+      };\n+    }\n+  }\n+\n+  /* global MutationObserver */\n+\n+  // can we use __proto__?\n+  var hasProto = '__proto__' in {};\n+\n+  // Browser environment sniffing\n+  var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n+\n+  // detect devtools\n+  var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n+\n+  // UA sniffing for working around browser-specific quirks\n+  var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n+  var isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n+  var isWechat = UA && UA.indexOf('micromessenger') > 0;\n+\n+  /**\n+   * Defer a task to execute it asynchronously. Ideally this\n+   * should be executed as a microtask, so we leverage\n+   * MutationObserver if it's available, and fallback to\n+   * setTimeout(0).\n+   *\n+   * @param {Function} cb\n+   * @param {Object} ctx\n+   */\n+\n+  var nextTick = function () {\n+    var callbacks = [];\n+    var pending = false;\n+    var timerFunc;\n+    function nextTickHandler() {\n+      pending = false;\n+      var copies = callbacks.slice(0);\n+      callbacks = [];\n+      for (var i = 0; i < copies.length; i++) {\n+        copies[i]();\n+      }\n+    }\n+\n+    /* istanbul ignore if */\n+    if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n+      var counter = 1;\n+      var observer = new MutationObserver(nextTickHandler);\n+      var textNode = document.createTextNode(counter);\n+      observer.observe(textNode, {\n+        characterData: true\n+      });\n+      timerFunc = function timerFunc() {\n+        counter = (counter + 1) % 2;\n+        textNode.data = counter;\n+      };\n+    } else {\n+      // webpack attempts to inject a shim for setImmediate\n+      // if it is used as a global, so we have to work around that to\n+      // avoid bundling unnecessary code.\n+      var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n+      timerFunc = context.setImmediate || setTimeout;\n+    }\n+    return function (cb, ctx) {\n+      var func = ctx ? function () {\n+        cb.call(ctx);\n+      } : cb;\n+      callbacks.push(func);\n+      if (pending) return;\n+      pending = true;\n+      timerFunc(nextTickHandler, 0);\n+    };\n+  }();\n+\n+  var _Set = void 0;\n+  /* istanbul ignore if */\n+  if (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n+    // use native Set when available.\n+    _Set = Set;\n+  } else {\n+    // a non-standard Set polyfill that only works with primitive keys.\n+    _Set = function _Set() {\n+      this.set = Object.create(null);\n+    };\n+    _Set.prototype.has = function (key) {\n+      return this.set[key] !== undefined;\n+    };\n+    _Set.prototype.add = function (key) {\n+      this.set[key] = 1;\n+    };\n+    _Set.prototype.clear = function () {\n+      this.set = Object.create(null);\n+    };\n+  }\n+\n+  var hasProxy = void 0;\n+  var proxyHandlers = void 0;\n+  var initProxy = void 0;\n+  if (\"development\" !== 'production') {\n+    (function () {\n+      var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl');\n+\n+      hasProxy = typeof Proxy !== 'undefined' && Proxy.toString().match(/native code/);\n+\n+      proxyHandlers = {\n+        has: function has(target, key) {\n+          var has = key in target;\n+          var isAllowedGlobal = allowedGlobals(key);\n+          if (!has && !isAllowedGlobal) {\n+            warn('Trying to access non-existent property \"' + key + '\" while rendering.', target);\n+          }\n+          return !isAllowedGlobal;\n+        }\n+      };\n+\n+      initProxy = function initProxy(vm) {\n+        if (hasProxy) {\n+          vm._renderProxy = new Proxy(vm, proxyHandlers);\n+        } else {\n+          vm._renderProxy = vm;\n+        }\n+      };\n+    })();\n+  }\n+\n+  var uid$2 = 0;\n+\n+  /**\n+   * A dep is an observable that can have multiple\n+   * directives subscribing to it.\n+   *\n+   * @constructor\n+   */\n+\n+  function Dep() {\n+    this.id = uid$2++;\n+    this.subs = [];\n+  }\n+\n+  // the current target watcher being evaluated.\n+  // this is globally unique because there could be only one\n+  // watcher being evaluated at any time.\n+  Dep.target = null;\n+\n+  /**\n+   * Add a directive subscriber.\n+   *\n+   * @param {Directive} sub\n+   */\n+\n+  Dep.prototype.addSub = function (sub) {\n+    this.subs.push(sub);\n+  };\n+\n+  /**\n+   * Remove a directive subscriber.\n+   *\n+   * @param {Directive} sub\n+   */\n+\n+  Dep.prototype.removeSub = function (sub) {\n+    remove(this.subs, sub);\n+  };\n+\n+  /**\n+   * Add self as a dependency to the target watcher.\n+   */\n+\n+  Dep.prototype.depend = function () {\n+    Dep.target.addDep(this);\n+  };\n+\n+  /**\n+   * Notify all subscribers of a new value.\n+   */\n+\n+  Dep.prototype.notify = function () {\n+    // stablize the subscriber list first\n+    var subs = this.subs.slice();\n+    for (var i = 0, l = subs.length; i < l; i++) {\n+      subs[i].update();\n+    }\n+  };\n+\n+  // we have two separate queues: one for directive updates\n+  // and one for user watcher registered via $watch().\n+  // we want to guarantee directive updates to be called\n+  // before user watchers so that when user watchers are\n+  // triggered, the DOM would have already been in updated\n+  // state.\n+\n+  var queueIndex;\n+  var queue = [];\n+  var userQueue = [];\n+  var has = {};\n+  var circular = {};\n+  var waiting = false;\n+  var internalQueueDepleted = false;\n+\n+  /**\n+   * Reset the batcher's state.\n+   */\n+\n+  function resetBatcherState() {\n+    queue = [];\n+    userQueue = [];\n+    has = {};\n+    circular = {};\n+    waiting = internalQueueDepleted = false;\n+  }\n+\n+  /**\n+   * Flush both queues and run the watchers.\n+   */\n+\n+  function flushBatcherQueue() {\n+    queue.sort(queueSorter);\n+    runBatcherQueue(queue);\n+    internalQueueDepleted = true;\n+    runBatcherQueue(userQueue);\n+    resetBatcherState();\n+  }\n+\n+  /**\n+   * Sort queue before flush.\n+   * This ensures components are updated from parent to child\n+   * so there will be no duplicate updates, e.g. a child was\n+   * pushed into the queue first and then its parent's props\n+   * changed.\n+   */\n+\n+  function queueSorter(a, b) {\n+    return a.id - b.id;\n+  }\n+\n+  /**\n+   * Run the watchers in a single queue.\n+   *\n+   * @param {Array} queue\n+   */\n+\n+  function runBatcherQueue(queue) {\n+    // do not cache length because more watchers might be pushed\n+    // as we run existing watchers\n+    for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n+      var watcher = queue[queueIndex];\n+      var id = watcher.id;\n+      has[id] = null;\n+      watcher.run();\n+      // in dev build, check and stop circular updates.\n+      if (\"development\" !== 'production' && has[id] != null) {\n+        circular[id] = (circular[id] || 0) + 1;\n+        if (circular[id] > config._maxUpdateCount) {\n+          warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n+          break;\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Push a watcher into the watcher queue.\n+   * Jobs with duplicate IDs will be skipped unless it's\n+   * pushed when the queue is being flushed.\n+   *\n+   * @param {Watcher} watcher\n+   *   properties:\n+   *   - {Number} id\n+   *   - {Function} run\n+   */\n+\n+  function pushWatcher(watcher) {\n+    var id = watcher.id;\n+    if (has[id] == null) {\n+      if (internalQueueDepleted && !watcher.user) {\n+        // an internal watcher triggered by a user watcher...\n+        // let's run it immediately after current user watcher is done.\n+        userQueue.splice(queueIndex + 1, 0, watcher);\n+      } else {\n+        // push watcher into appropriate queue\n+        var q = watcher.user ? userQueue : queue;\n+        has[id] = q.length;\n+        q.push(watcher);\n+        // queue the flush\n+        if (!waiting) {\n+          waiting = true;\n+          nextTick(flushBatcherQueue);\n+        }\n+      }\n+    }\n+  }\n+\n+  var uid$1 = 0;\n+  var prevTarget = void 0;\n+\n+  /**\n+   * A watcher parses an expression, collects dependencies,\n+   * and fires callback when the expression value changes.\n+   * This is used for both the $watch() api and directives.\n+   *\n+   * @param {Vue} vm\n+   * @param {String|Function} expOrFn\n+   * @param {Function} cb\n+   * @param {Object} options\n+   *                 - {Array} filters\n+   *                 - {Boolean} twoWay\n+   *                 - {Boolean} deep\n+   *                 - {Boolean} user\n+   *                 - {Boolean} sync\n+   *                 - {Boolean} lazy\n+   *                 - {Function} [preProcess]\n+   *                 - {Function} [postProcess]\n+   * @constructor\n+   */\n+\n+  function Watcher(vm, expOrFn, cb, options) {\n+    // mix in options\n+    if (options) {\n+      extend(this, options);\n+    }\n+    var isFn = typeof expOrFn === 'function';\n+    this.vm = vm;\n+    vm._watchers.push(this);\n+    this.expression = expOrFn;\n+    this.cb = cb;\n+    this.id = ++uid$1; // uid for batching\n+    this.active = true;\n+    this.dirty = this.lazy; // for lazy watchers\n+    this.deps = [];\n+    this.newDeps = [];\n+    this.depIds = new _Set();\n+    this.newDepIds = new _Set();\n+    // parse expression for getter\n+    if (isFn) {\n+      this.getter = expOrFn;\n+    } else {\n+      this.getter = parsePath(expOrFn);\n+      if (!this.getter) {\n+        this.getter = function () {};\n+        \"development\" !== 'production' && warn('Failed watching path: ' + expOrFn + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);\n+      }\n+    }\n+    this.value = this.lazy ? undefined : this.get();\n+    // state for avoiding false triggers for deep and Array\n+    // watchers during vm._digest()\n+    this.queued = this.shallow = false;\n+  }\n+\n+  /**\n+   * Evaluate the getter, and re-collect dependencies.\n+   */\n+\n+  Watcher.prototype.get = function () {\n+    this.beforeGet();\n+    var value = this.getter.call(this.vm, this.vm);\n+    // \"touch\" every property so they are all tracked as\n+    // dependencies for deep watching\n+    if (this.deep) {\n+      traverse(value);\n+    }\n+    this.afterGet();\n+    return value;\n+  };\n+\n+  /**\n+   * Prepare for dependency collection.\n+   */\n+\n+  Watcher.prototype.beforeGet = function () {\n+    prevTarget = Dep.target;\n+    Dep.target = this;\n+  };\n+\n+  /**\n+   * Add a dependency to this directive.\n+   *\n+   * @param {Dep} dep\n+   */\n+\n+  Watcher.prototype.addDep = function (dep) {\n+    var id = dep.id;\n+    if (!this.newDepIds.has(id)) {\n+      this.newDepIds.add(id);\n+      this.newDeps.push(dep);\n+      if (!this.depIds.has(id)) {\n+        dep.addSub(this);\n+      }\n+    }\n+  };\n+\n+  /**\n+   * Clean up for dependency collection.\n+   */\n+\n+  Watcher.prototype.afterGet = function () {\n+    Dep.target = prevTarget;\n+    var i = this.deps.length;\n+    while (i--) {\n+      var dep = this.deps[i];\n+      if (!this.newDepIds.has(dep.id)) {\n+        dep.removeSub(this);\n+      }\n+    }\n+    var tmp = this.depIds;\n+    this.depIds = this.newDepIds;\n+    this.newDepIds = tmp;\n+    this.newDepIds.clear();\n+    tmp = this.deps;\n+    this.deps = this.newDeps;\n+    this.newDeps = tmp;\n+    this.newDeps.length = 0;\n+  };\n+\n+  /**\n+   * Subscriber interface.\n+   * Will be called when a dependency changes.\n+   *\n+   * @param {Boolean} shallow\n+   */\n+\n+  Watcher.prototype.update = function (shallow) {\n+    if (this.lazy) {\n+      this.dirty = true;\n+    } else if (this.sync) {\n+      this.run();\n+    } else {\n+      // if queued, only overwrite shallow with non-shallow,\n+      // but not the other way around.\n+      this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n+      this.queued = true;\n+      pushWatcher(this);\n+    }\n+  };\n+\n+  /**\n+   * Batcher job interface.\n+   * Will be called by the batcher.\n+   */\n+\n+  Watcher.prototype.run = function () {\n+    if (this.active) {\n+      var value = this.get();\n+      if (value !== this.value ||\n+      // Deep watchers and watchers on Object/Arrays should fire even\n+      // when the value is the same, because the value may\n+      // have mutated; but only do so if this is a\n+      // non-shallow update (caused by a vm digest).\n+      (isObject(value) || this.deep) && !this.shallow) {\n+        // set new value\n+        var oldValue = this.value;\n+        this.value = value;\n+        this.cb.call(this.vm, value, oldValue);\n+      }\n+      this.queued = this.shallow = false;\n+    }\n+  };\n+\n+  /**\n+   * Evaluate the value of the watcher.\n+   * This only gets called for lazy watchers.\n+   */\n+\n+  Watcher.prototype.evaluate = function () {\n+    // avoid overwriting another watcher that is being\n+    // collected.\n+    var current = Dep.target;\n+    this.value = this.get();\n+    this.dirty = false;\n+    Dep.target = current;\n+  };\n+\n+  /**\n+   * Depend on all deps collected by this watcher.\n+   */\n+\n+  Watcher.prototype.depend = function () {\n+    var i = this.deps.length;\n+    while (i--) {\n+      this.deps[i].depend();\n+    }\n+  };\n+\n+  /**\n+   * Remove self from all dependencies' subcriber list.\n+   */\n+\n+  Watcher.prototype.teardown = function () {\n+    if (this.active) {\n+      // remove self from vm's watcher list\n+      // this is a somewhat expensive operation so we skip it\n+      // if the vm is being destroyed or is performing a v-for\n+      // re-render (the watcher list is then filtered by v-for).\n+      if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n+        remove(this.vm._watchers, this);\n+      }\n+      var i = this.deps.length;\n+      while (i--) {\n+        this.deps[i].removeSub(this);\n+      }\n+      this.active = false;\n+      this.vm = this.cb = this.value = null;\n+    }\n+  };\n+\n+  /**\n+   * Recrusively traverse an object to evoke all converted\n+   * getters, so that every nested property inside the object\n+   * is collected as a \"deep\" dependency.\n+   *\n+   * @param {*} val\n+   * @param {Set} seen\n+   */\n+\n+  var seenObjects = new _Set();\n+  function traverse(val, seen) {\n+    var i = void 0,\n+        keys = void 0,\n+        isA = void 0,\n+        isO = void 0;\n+    if (!seen) {\n+      seen = seenObjects;\n+      seen.clear();\n+    }\n+    isA = isArray(val);\n+    isO = isObject(val);\n+    if (isA || isO) {\n+      if (val.__ob__) {\n+        var depId = val.__ob__.dep.id;\n+        if (seen.has(depId)) {\n+          return;\n+        } else {\n+          seen.add(depId);\n+        }\n+      }\n+      if (isA) {\n+        i = val.length;\n+        while (i--) {\n+          traverse(val[i], seen);\n+        }\n+      } else if (isO) {\n+        keys = Object.keys(val);\n+        i = keys.length;\n+        while (i--) {\n+          traverse(val[keys[i]], seen);\n+        }\n+      }\n+    }\n+  }\n+\n+  var arrayProto = Array.prototype;\n+  var arrayMethods = Object.create(arrayProto)\n+\n+  /**\n+   * Intercept mutating methods and emit events\n+   */\n+\n+  ;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n+    // cache original method\n+    var original = arrayProto[method];\n+    def(arrayMethods, method, function mutator() {\n+      // avoid leaking arguments:\n+      // http://jsperf.com/closure-with-arguments\n+      var i = arguments.length;\n+      var args = new Array(i);\n+      while (i--) {\n+        args[i] = arguments[i];\n+      }\n+      var result = original.apply(this, args);\n+      var ob = this.__ob__;\n+      var inserted;\n+      switch (method) {\n+        case 'push':\n+          inserted = args;\n+          break;\n+        case 'unshift':\n+          inserted = args;\n+          break;\n+        case 'splice':\n+          inserted = args.slice(2);\n+          break;\n+      }\n+      if (inserted) ob.observeArray(inserted);\n+      // notify change\n+      ob.dep.notify();\n+      return result;\n+    });\n+  });\n+\n+  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n+\n+  /**\n+   * By default, when a reactive property is set, the new value is\n+   * also converted to become reactive. However when passing down props,\n+   * we don't want to force conversion because the value may be a nested value\n+   * under a frozen data structure. Converting it would defeat the optimization.\n+   */\n+\n+  var observerState = {\n+    shouldConvert: true\n+  };\n+\n+  /**\n+   * Observer class that are attached to each observed\n+   * object. Once attached, the observer converts target\n+   * object's property keys into getter/setters that\n+   * collect dependencies and dispatches updates.\n+   *\n+   * @param {Array|Object} value\n+   * @constructor\n+   */\n+\n+  function Observer(value) {\n+    this.value = value;\n+    this.dep = new Dep();\n+    def(value, '__ob__', this);\n+    if (isArray(value)) {\n+      var augment = hasProto ? protoAugment : copyAugment;\n+      augment(value, arrayMethods, arrayKeys);\n+      this.observeArray(value);\n+    } else {\n+      this.walk(value);\n+    }\n+  }\n+\n+  // Instance methods\n+\n+  /**\n+   * Walk through each property and convert them into\n+   * getter/setters. This method should only be called when\n+   * value type is Object.\n+   *\n+   * @param {Object} obj\n+   */\n+\n+  Observer.prototype.walk = function (obj) {\n+    for (var key in obj) {\n+      this.convert(key, obj[key]);\n+    }\n+  };\n+\n+  /**\n+   * Observe a list of Array items.\n+   *\n+   * @param {Array} items\n+   */\n+\n+  Observer.prototype.observeArray = function (items) {\n+    for (var i = 0, l = items.length; i < l; i++) {\n+      observe(items[i]);\n+    }\n+  };\n+\n+  /**\n+   * Convert a property into getter/setter so we can emit\n+   * the events when the property is accessed/changed.\n+   *\n+   * @param {String} key\n+   * @param {*} val\n+   */\n+\n+  Observer.prototype.convert = function (key, val) {\n+    defineReactive(this.value, key, val);\n+  };\n+\n+  /**\n+   * Add an owner vm, so that when $set/$delete mutations\n+   * happen we can notify owner vms to proxy the keys and\n+   * digest the watchers. This is only called when the object\n+   * is observed as an instance's root $data.\n+   *\n+   * @param {Vue} vm\n+   */\n+\n+  Observer.prototype.addVm = function (vm) {\n+    (this.vms || (this.vms = [])).push(vm);\n+  };\n+\n+  /**\n+   * Remove an owner vm. This is called when the object is\n+   * swapped out as an instance's $data object.\n+   *\n+   * @param {Vue} vm\n+   */\n+\n+  Observer.prototype.removeVm = function (vm) {\n+    remove(this.vms, vm);\n+  };\n+\n+  // helpers\n+\n+  /**\n+   * Augment an target Object or Array by intercepting\n+   * the prototype chain using __proto__\n+   *\n+   * @param {Object|Array} target\n+   * @param {Object} src\n+   */\n+\n+  function protoAugment(target, src) {\n+    /* eslint-disable no-proto */\n+    target.__proto__ = src;\n+    /* eslint-enable no-proto */\n+  }\n+\n+  /**\n+   * Augment an target Object or Array by defining\n+   * hidden properties.\n+   *\n+   * @param {Object|Array} target\n+   * @param {Object} proto\n+   */\n+\n+  function copyAugment(target, src, keys) {\n+    for (var i = 0, l = keys.length; i < l; i++) {\n+      var key = keys[i];\n+      def(target, key, src[key]);\n+    }\n+  }\n+\n+  /**\n+   * Attempt to create an observer instance for a value,\n+   * returns the new observer if successfully observed,\n+   * or the existing observer if the value already has one.\n+   *\n+   * @param {*} value\n+   * @param {Vue} [vm]\n+   * @return {Observer|undefined}\n+   * @static\n+   */\n+\n+  function observe(value, vm) {\n+    if (!isObject(value)) {\n+      return;\n+    }\n+    var ob;\n+    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n+      ob = value.__ob__;\n+    } else if (observerState.shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n+      ob = new Observer(value);\n+    }\n+    if (ob && vm) {\n+      ob.addVm(vm);\n+    }\n+    return ob;\n+  }\n+\n+  /**\n+   * Define a reactive property on an Object.\n+   *\n+   * @param {Object} obj\n+   * @param {String} key\n+   * @param {*} val\n+   */\n+\n+  function defineReactive(obj, key, val) {\n+    var dep = new Dep();\n+\n+    var property = Object.getOwnPropertyDescriptor(obj, key);\n+    if (property && property.configurable === false) {\n+      return;\n+    }\n+\n+    // cater for pre-defined getter/setters\n+    var getter = property && property.get;\n+    var setter = property && property.set;\n+\n+    var childOb = observe(val);\n+    Object.defineProperty(obj, key, {\n+      enumerable: true,\n+      configurable: true,\n+      get: function reactiveGetter() {\n+        var value = getter ? getter.call(obj) : val;\n+        if (Dep.target) {\n+          dep.depend();\n+          if (childOb) {\n+            childOb.dep.depend();\n+          }\n+          if (isArray(value)) {\n+            for (var e, i = 0, l = value.length; i < l; i++) {\n+              e = value[i];\n+              e && e.__ob__ && e.__ob__.dep.depend();\n+            }\n+          }\n+        }\n+        return value;\n+      },\n+      set: function reactiveSetter(newVal) {\n+        var value = getter ? getter.call(obj) : val;\n+        if (newVal === value) {\n+          return;\n+        }\n+        if (setter) {\n+          setter.call(obj, newVal);\n+        } else {\n+          val = newVal;\n+        }\n+        childOb = observe(newVal);\n+        dep.notify();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Set a property on an object. Adds the new property and\n+   * triggers change notification if the property doesn't\n+   * already exist.\n+   *\n+   * @param {Object} obj\n+   * @param {String} key\n+   * @param {*} val\n+   * @public\n+   */\n+\n+  function set(obj, key, val) {\n+    if (isArray(obj)) {\n+      return obj.splice(key, 1, val);\n+    }\n+    if (hasOwn(obj, key)) {\n+      obj[key] = val;\n+      return;\n+    }\n+    if (obj._isVue) {\n+      set(obj._data, key, val);\n+      return;\n+    }\n+    var ob = obj.__ob__;\n+    if (!ob) {\n+      obj[key] = val;\n+      return;\n+    }\n+    ob.convert(key, val);\n+    ob.dep.notify();\n+    if (ob.vms) {\n+      var i = ob.vms.length;\n+      while (i--) {\n+        var vm = ob.vms[i];\n+        proxy(vm, key);\n+        vm.$forceUpdate();\n+      }\n+    }\n+    return val;\n+  }\n+\n+  /**\n+   * Delete a property and trigger change if necessary.\n+   *\n+   * @param {Object} obj\n+   * @param {String} key\n+   */\n+\n+  function del(obj, key) {\n+    if (!hasOwn(obj, key)) {\n+      return;\n+    }\n+    delete obj[key];\n+    var ob = obj.__ob__;\n+\n+    if (!ob) {\n+      if (obj._isVue) {\n+        delete obj._data[key];\n+        obj.$forceUpdate();\n+      }\n+      return;\n+    }\n+    ob.dep.notify();\n+    if (ob.vms) {\n+      var i = ob.vms.length;\n+      while (i--) {\n+        var vm = ob.vms[i];\n+        unproxy(vm, key);\n+        vm.$forceUpdate();\n+      }\n+    }\n+  }\n+\n+  function proxy(vm, key) {\n+    if (!isReserved(key)) {\n+      Object.defineProperty(vm, key, {\n+        configurable: true,\n+        enumerable: true,\n+        get: function proxyGetter() {\n+          return vm._data[key];\n+        },\n+        set: function proxySetter(val) {\n+          vm._data[key] = val;\n+        }\n+      });\n+    }\n+  }\n+\n+  function unproxy(vm, key) {\n+    if (!isReserved(key)) {\n+      delete vm[key];\n+    }\n+  }\n+\n+  function initState(vm) {\n+    vm._watchers = [];\n+    initProps(vm);\n+    initData(vm);\n+    initComputed(vm);\n+    initMethods(vm);\n+    initWatch(vm);\n+  }\n+\n+  function initProps(vm) {\n+    var props = vm.$options.props;\n+    var propsData = vm.$options.propsData;\n+    if (props) {\n+      var keys = vm.$options.propKeys = Object.keys(props);\n+      var isRoot = !vm.$parent;\n+      // root instance props should be converted\n+      observerState.shouldConvert = isRoot;\n+      for (var i = 0; i < keys.length; i++) {\n+        var key = keys[i];\n+        defineReactive(vm, key, validateProp(vm, key, propsData));\n+      }\n+      observerState.shouldConvert = true;\n+    }\n+  }\n+\n+  function initData(vm) {\n+    var data = vm.$options.data;\n+    data = vm._data = typeof data === 'function' ? data() : data || {};\n+    if (!isPlainObject(data)) {\n+      data = {};\n+      \"development\" !== 'production' && warn('data functions should return an object.', vm);\n+    }\n+    // proxy data on instance\n+    var keys = Object.keys(data);\n+    var i = keys.length;\n+    while (i--) {\n+      proxy(vm, keys[i]);\n+    }\n+    // observe data\n+    observe(data, vm);\n+  }\n+\n+  function noop() {}\n+\n+  function initComputed(vm) {\n+    var computed = vm.$options.computed;\n+    if (computed) {\n+      for (var key in computed) {\n+        var userDef = computed[key];\n+        var def = {\n+          enumerable: true,\n+          configurable: true\n+        };\n+        if (typeof userDef === 'function') {\n+          def.get = makeComputedGetter(userDef, vm);\n+          def.set = noop;\n+        } else {\n+          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, vm) : bind(userDef.get, vm) : noop;\n+          def.set = userDef.set ? bind(userDef.set, vm) : noop;\n+        }\n+        Object.defineProperty(vm, key, def);\n+      }\n+    }\n+  }\n+\n+  function makeComputedGetter(getter, owner) {\n+    var watcher = new Watcher(owner, getter, null, {\n+      lazy: true\n+    });\n+    return function computedGetter() {\n+      if (watcher.dirty) {\n+        watcher.evaluate();\n+      }\n+      if (Dep.target) {\n+        watcher.depend();\n+      }\n+      return watcher.value;\n+    };\n+  }\n+\n+  function initMethods(vm) {\n+    var methods = vm.$options.methods;\n+    if (methods) {\n+      for (var key in methods) {\n+        vm[key] = bind(methods[key], vm);\n+      }\n+    }\n+  }\n+\n+  function initWatch(vm) {\n+    var watch = vm.$options.watch;\n+    if (watch) {\n+      for (var key in watch) {\n+        var handler = watch[key];\n+        if (isArray(handler)) {\n+          for (var i = 0; i < handler.length; i++) {\n+            createWatcher(vm, key, handler[i]);\n+          }\n+        } else {\n+          createWatcher(vm, key, handler);\n+        }\n+      }\n+    }\n+  }\n+\n+  function createWatcher(vm, key, handler) {\n+    var options = void 0;\n+    if (isPlainObject(handler)) {\n+      options = handler;\n+      handler = handler.handler;\n+    }\n+    if (typeof handler === 'string') {\n+      handler = vm[handler];\n+    }\n+    vm.$watch(key, handler, options);\n+  }\n+\n+  function stateMixin(Vue) {\n+    Object.defineProperty(Vue.prototype, '$data', {\n+      get: function get() {\n+        return this._data;\n+      },\n+      set: function set(newData) {\n+        if (newData !== this._data) {\n+          setData(this, newData);\n+        }\n+      }\n+    });\n+\n+    Vue.prototype.$watch = function (fn, cb, options) {\n+      options = options || {};\n+      options.user = true;\n+      var watcher = new Watcher(this, fn, cb, options);\n+      if (options.immediate) {\n+        cb.call(this, watcher.value);\n+      }\n+      return function unwatchFn() {\n+        watcher.teardown();\n+      };\n+    };\n+  }\n+\n+  function setData(vm, newData) {\n+    newData = newData || {};\n+    var oldData = vm._data;\n+    vm._data = newData;\n+    var keys, key, i;\n+    // unproxy keys not present in new data\n+    keys = Object.keys(oldData);\n+    i = keys.length;\n+    while (i--) {\n+      key = keys[i];\n+      if (!(key in newData)) {\n+        unproxy(vm, key);\n+      }\n+    }\n+    // proxy keys not already proxied,\n+    // and trigger change for changed values\n+    keys = Object.keys(newData);\n+    i = keys.length;\n+    while (i--) {\n+      key = keys[i];\n+      if (!hasOwn(vm, key)) {\n+        // new property\n+        proxy(vm, key);\n+      }\n+    }\n+    oldData.__ob__.removeVm(vm);\n+    observe(newData, vm);\n+    vm.$forceUpdate();\n+  }\n+\n+  function VNode(tag, data, children, text, elm, ns, context) {\n+    return {\n+      tag: tag,\n+      data: data,\n+      children: children,\n+      text: text,\n+      elm: elm,\n+      ns: ns,\n+      context: context,\n+      key: data && data.key\n+    };\n+  }\n+\n+  function flatten(children) {\n+    if (typeof children === 'string') {\n+      return [VNode(undefined, undefined, undefined, children)];\n+    }\n+    if (isArray(children)) {\n+      var res = [];\n+      for (var i = 0, l = children.length; i < l; i++) {\n+        var c = children[i];\n+        // flatten nested\n+        if (isArray(c)) {\n+          res.push.apply(res, flatten(c));\n+        } else if (isPrimitive(c)) {\n+          // convert primitive to vnode\n+          res.push(VNode(undefined, undefined, undefined, c));\n+        } else if (c) {\n+          res.push(c);\n+        }\n+      }\n+      return res;\n+    }\n+  }\n+\n+  function updateListeners(on, oldOn, add) {\n+    var name = void 0,\n+        cur = void 0,\n+        old = void 0,\n+        event = void 0,\n+        capture = void 0;\n+    for (name in on) {\n+      cur = on[name];\n+      old = oldOn[name];\n+      if (old === undefined) {\n+        capture = name.charAt(0) === '!';\n+        event = capture ? name.slice(1) : name;\n+        if (isArray(cur)) {\n+          add(event, arrInvoker(cur), capture);\n+        } else {\n+          cur = { fn: cur };\n+          on[name] = cur;\n+          add(event, fnInvoker(cur), capture);\n+        }\n+      } else if (isArray(old)) {\n+        old.length = cur.length;\n+        for (var i = 0; i < old.length; i++) {\n+          old[i] = cur[i];\n+        }on[name] = old;\n+      } else {\n+        old.fn = cur;\n+        on[name] = old;\n+      }\n+    }\n+  }\n+\n+  function arrInvoker(arr) {\n+    return function (ev) {\n+      for (var i = 0; i < arr.length; i++) {\n+        arr[i](ev);\n+      }\n+    };\n+  }\n+\n+  function fnInvoker(o) {\n+    return function (ev) {\n+      o.fn(ev);\n+    };\n+  }\n+\n+  function initLifecycle(vm) {\n+    var options = vm.$options;\n+\n+    vm.$parent = options.parent;\n+    vm.$root = vm.$parent ? vm.$parent.$root : vm;\n+    if (vm.$parent) {\n+      vm.$parent.$children.push(vm);\n+    }\n+\n+    vm.$children = [];\n+    vm.$refs = {};\n+\n+    vm._isDestroyed = false;\n+    vm._isBeingDestroyed = false;\n+  }\n+\n+  function lifecycleMixin(Vue) {\n+    Vue.prototype._mount = function () {\n+      var _this = this;\n+\n+      if (!this.$options.render) {\n+        this.$options.render = function () {\n+          return _this.$createElement('div');\n+        };\n+        if (\"development\" !== 'production') {\n+          if (this.$options.template) {\n+            warn('You are using the runtime-only build of Vue where the template ' + 'option is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', this);\n+          } else {\n+            warn('Failed to mount component: template or render function not defined.', this);\n+          }\n+        }\n+      }\n+      // render static sub-trees for once on mount\n+      var staticRenderFns = this.$options.staticRenderFns;\n+      if (staticRenderFns) {\n+        this._staticTrees = new Array(staticRenderFns.length);\n+        for (var i = 0; i < staticRenderFns.length; i++) {\n+          this._staticTrees[i] = staticRenderFns[i].call(this._renderProxy);\n+        }\n+      }\n+      this._watcher = new Watcher(this, this._render, this._update);\n+      this._update(this._watcher.value);\n+      this._mounted = true;\n+      // root instance, call ready on self\n+      if (this.$root === this) {\n+        callHook(this, 'ready');\n+      }\n+      return this;\n+    };\n+\n+    Vue.prototype._update = function (vnode) {\n+      if (this._mounted) {\n+        callHook(this, 'beforeUpdate');\n+      }\n+      var parentNode = this.$options._parentVnode;\n+      // set vnode parent before patch\n+      vnode.parent = parentNode;\n+      if (!this._vnode) {\n+        // Vue.prototype.__patch__ is injected in entry points\n+        // based on the rendering backend used.\n+        this.$el = this.__patch__(this.$el, vnode);\n+      } else {\n+        this.$el = this.__patch__(this._vnode, vnode);\n+      }\n+      this._vnode = vnode;\n+      // set parent vnode element after patch\n+      if (parentNode) {\n+        parentNode.elm = this.$el;\n+      }\n+      if (this._mounted) {\n+        callHook(this, 'updated');\n+      }\n+    };\n+\n+    Vue.prototype._updateFromParent = function (propsData, listeners, parentVnode, children) {\n+      var _this2 = this;\n+\n+      this.$options._parentVnode = parentVnode;\n+      this.$options._renderChildren = children;\n+      // update props\n+      if (propsData && this.$options.props) {\n+        observerState.shouldConvert = false;\n+        var propKeys = this.$options.propKeys;\n+        for (var i = 0; i < propKeys.length; i++) {\n+          var key = propKeys[i];\n+          this[key] = validateProp(this, key, propsData);\n+        }\n+        observerState.shouldConvert = true;\n+      }\n+      // update listeners\n+      if (listeners) {\n+        var oldListeners = this.$options._parentListeners;\n+        this.$options._parentListeners = listeners;\n+        updateListeners(listeners, oldListeners || {}, function (event, handler) {\n+          _this2.$on(event, handler);\n+        });\n+      }\n+    };\n+\n+    Vue.prototype.$forceUpdate = function () {\n+      this._watcher.update();\n+    };\n+\n+    Vue.prototype.$destroy = function () {\n+      if (this._isDestroyed) {\n+        return;\n+      }\n+      callHook(this, 'beforeDestroy');\n+      this._isBeingDestroyed = true;\n+      // remove self from parent\n+      var parent = this.$parent;\n+      if (parent && !parent._isBeingDestroyed) {\n+        remove(parent.$children, this);\n+      }\n+      // unregister ref\n+      if (this._ref) {\n+        this._context.$refs[this._ref] = undefined;\n+      }\n+      // teardown watchers\n+      var i = this._watchers.length;\n+      while (i--) {\n+        this._watchers[i].teardown();\n+      }\n+      // remove reference from data ob\n+      // frozen object may not have observer.\n+      if (this._data.__ob__) {\n+        this._data.__ob__.removeVm(this);\n+      }\n+      // call the last hook...\n+      this._isDestroyed = true;\n+      callHook(this, 'destroyed');\n+      // turn off all instance listeners.\n+      this.$off();\n+    };\n+  }\n+\n+  function callHook(vm, hook) {\n+    vm.$emit('pre-hook:' + hook);\n+    var handlers = vm.$options[hook];\n+    if (handlers) {\n+      for (var i = 0, j = handlers.length; i < j; i++) {\n+        handlers[i].call(vm);\n+      }\n+    }\n+    vm.$emit('hook:' + hook);\n+  }\n+\n+  var hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy };\n+  var hooksToMerge = Object.keys(hooks);\n+\n+  function createComponent(Ctor, data, parent, children, context) {\n+    if (\"development\" !== 'production' && children && typeof children !== 'function') {\n+      warn('A component\\'s children should be a function that returns the ' + 'children array. This allows the component to track the children ' + 'dependencies and optimizes re-rendering.');\n+    }\n+    if (!Ctor) {\n+      return;\n+    }\n+    if (isObject(Ctor)) {\n+      Ctor = Vue.extend(Ctor);\n+    }\n+    if (\"development\" !== 'production' && typeof Ctor !== 'function') {\n+      warn('Invalid Component definition: ' + Ctor, parent);\n+      return;\n+    }\n+\n+    // async component\n+    if (!Ctor.cid) {\n+      if (Ctor.resolved) {\n+        Ctor = Ctor.resolved;\n+      } else {\n+        resolveAsyncComponent(Ctor, function () {\n+          // it's ok to queue this on every render because\n+          // $forceUpdate is buffered.\n+          parent.$forceUpdate();\n+        });\n+        return;\n+      }\n+    }\n+\n+    data = data || {};\n+\n+    // merge component management hooks onto the placeholder node\n+    mergeHooks(data);\n+\n+    // extract props\n+    var propsData = extractProps(data, Ctor);\n+\n+    // extract listeners, since these needs to be treated as\n+    // child component listeners instead of DOM listeners\n+    var listeners = data.on;\n+    if (listeners) {\n+      data.on = null;\n+    }\n+\n+    // return a placeholder vnode\n+    var name = Ctor.options.name ? '-' + Ctor.options.name : '';\n+    var vnode = VNode('vue-component-' + Ctor.cid + name, data, undefined, undefined, undefined, undefined, context);\n+    vnode.componentOptions = { Ctor: Ctor, propsData: propsData, listeners: listeners, parent: parent, children: children };\n+    return vnode;\n+  }\n+\n+  function init(vnode) {\n+    var _vnode$componentOptio = vnode.componentOptions;\n+    var Ctor = _vnode$componentOptio.Ctor;\n+    var propsData = _vnode$componentOptio.propsData;\n+    var listeners = _vnode$componentOptio.listeners;\n+    var parent = _vnode$componentOptio.parent;\n+    var children = _vnode$componentOptio.children;\n+\n+    var child = new Ctor({\n+      parent: parent,\n+      propsData: propsData,\n+      _parentVnode: vnode,\n+      _parentListeners: listeners,\n+      _renderChildren: children\n+    });\n+    // if this is a server-rendered mount,\n+    // the vnode would already have an element.\n+    // otherwise the child sets the parent vnode's elm when mounted\n+    // and when updated.\n+    child.$mount(vnode.elm);\n+    vnode.child = child;\n+  }\n+\n+  function prepatch(oldVnode, vnode) {\n+    var _vnode$componentOptio2 = vnode.componentOptions;\n+    var listeners = _vnode$componentOptio2.listeners;\n+    var propsData = _vnode$componentOptio2.propsData;\n+    var children = _vnode$componentOptio2.children;\n+\n+    vnode.child = oldVnode.child;\n+    vnode.child._updateFromParent(propsData, // updated props\n+    listeners, // updated listeners\n+    vnode, // new parent vnode\n+    children // new children\n+    );\n+  }\n+\n+  function insert(vnode) {\n+    callHook(vnode.child, 'ready');\n+  }\n+\n+  function destroy(vnode) {\n+    vnode.child.$destroy();\n+  }\n+\n+  function resolveAsyncComponent(factory, cb) {\n+    if (factory.resolved) {\n+      // cached\n+      cb(factory.resolved);\n+    } else if (factory.requested) {\n+      // pool callbacks\n+      factory.pendingCallbacks.push(cb);\n+    } else {\n+      (function () {\n+        factory.requested = true;\n+        var cbs = factory.pendingCallbacks = [cb];\n+        factory(function resolve(res) {\n+          if (isObject(res)) {\n+            res = Vue.extend(res);\n+          }\n+          // cache resolved\n+          factory.resolved = res;\n+          // invoke callbacks\n+          for (var i = 0, l = cbs.length; i < l; i++) {\n+            cbs[i](res);\n+          }\n+        }, function reject(reason) {\n+          \"development\" !== 'production' && warn('Failed to resolve async component: ' + factory + (reason ? '\\nReason: ' + reason : ''));\n+        });\n+      })();\n+    }\n+  }\n+\n+  function extractProps(data, Ctor) {\n+    // we are only extrating raw values here.\n+    // validation and default values are handled in the child\n+    // component itself.\n+    var propOptions = Ctor.options.props;\n+    if (!propOptions) {\n+      return;\n+    }\n+    var res = {};\n+    var attrs = data.attrs;\n+    var props = data.props;\n+    var staticAttrs = data.staticAttrs;\n+    if (!attrs && !props) {\n+      return res;\n+    }\n+    for (var key in propOptions) {\n+      var altKey = hyphenate(key);\n+      checkProp(res, attrs, key, altKey) || checkProp(res, props, key, altKey) || checkProp(res, staticAttrs, key, altKey);\n+    }\n+    return res;\n+  }\n+\n+  function checkProp(res, hash, key, altKey) {\n+    if (hash) {\n+      if (hasOwn(hash, key)) {\n+        res[key] = hash[key];\n+        delete hash[key];\n+        return true;\n+      } else if (hasOwn(hash, altKey)) {\n+        res[key] = hash[altKey];\n+        delete hash[altKey];\n+        return true;\n+      }\n+    }\n+  }\n+\n+  function mergeHooks(data) {\n+    if (data.hook) {\n+      for (var i = 0; i < hooksToMerge.length; i++) {\n+        var key = hooksToMerge[i];\n+        var fromParent = data.hook[key];\n+        var ours = hooks[key];\n+        data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n+      }\n+    } else {\n+      data.hook = hooks;\n+    }\n+  }\n+\n+  function mergeHook$1(a, b) {\n+    // since all hooks have at most two args, use fixed args\n+    // to avoid having to use fn.apply().\n+    return function (_, __) {\n+      a(_, __);\n+      b(_, __);\n+    };\n+  }\n+\n+  function createElement(tag, data, children, namespace) {\n+    var context = this;\n+    var parent = renderState.activeInstance;\n+    if (typeof tag === 'string') {\n+      var Ctor = void 0;\n+      if (config.isReservedTag(tag)) {\n+        return VNode(tag, data, flatten(children), undefined, undefined, namespace, context);\n+      } else if (Ctor = resolveAsset(context.$options, 'components', tag)) {\n+        return createComponent(Ctor, data, parent, children, context);\n+      } else {\n+        if (\"development\" !== 'production') {\n+          if (!namespace && config.isUnknownElement(tag)) {\n+            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n+          }\n+        }\n+        return VNode(tag, data, flatten(children && children()), undefined, undefined, namespace, context);\n+      }\n+    } else {\n+      return createComponent(tag, data, parent, children, context);\n+    }\n+  }\n+\n+  var renderState = {\n+    activeInstance: null\n+  };\n+\n+  function initRender(vm) {\n+    vm._vnode = null;\n+    vm._mounted = false;\n+    vm._staticTrees = null;\n+    vm.$slots = {};\n+    // bind the public createElement fn to this instance\n+    // so that we get proper render context inside it.\n+    vm.$createElement = bind(createElement, vm);\n+    if (vm.$options.el) {\n+      vm.$mount(vm.$options.el);\n+    }\n+  }\n+\n+  function renderMixin(Vue) {\n+    Vue.prototype._render = function () {\n+      var prev = renderState.activeInstance;\n+      renderState.activeInstance = this;\n+      var _$options = this.$options;\n+      var render = _$options.render;\n+      var _renderChildren = _$options._renderChildren;\n+      // resolve slots. becaues slots are rendered in parent scope,\n+      // we set the activeInstance to parent.\n+\n+      if (_renderChildren) {\n+        resolveSlots(this, _renderChildren);\n+      }\n+      // render self\n+      var vnode = render.call(this._renderProxy);\n+      // restore render state\n+      renderState.activeInstance = prev;\n+      return vnode;\n+    };\n+\n+    // shorthands used in render functions\n+    Vue.prototype.__h__ = createElement;\n+\n+    // toString for mustaches\n+    Vue.prototype.__toString__ = renderString;\n+\n+    // render v-for\n+    Vue.prototype.__renderList__ = function (val, render) {\n+      var ret = void 0,\n+          i = void 0,\n+          l = void 0,\n+          keys = void 0,\n+          key = void 0;\n+      if (isArray(val)) {\n+        ret = new Array(val.length);\n+        for (i = 0, l = val.length; i < l; i++) {\n+          ret[i] = render(val[i], i, i);\n+        }\n+      } else if (typeof val === 'number') {\n+        ret = new Array(val);\n+        for (i = 0; i < val; i++) {\n+          ret[i] = render(i + 1, i, i);\n+        }\n+      } else if (isObject(val)) {\n+        keys = Object.keys(val);\n+        ret = new Array(keys.length);\n+        for (i = 0, l = keys.length; i < l; i++) {\n+          key = keys[i];\n+          ret[i] = render(val[key], i, key);\n+        }\n+      }\n+      return ret;\n+    };\n+\n+    // register ref\n+    Vue.prototype.__registerRef__ = function (key, ref, vFor, remove) {\n+      var refs = this.$refs;\n+      if (remove) {\n+        if (vFor) {\n+          remove(refs[key], ref);\n+        } else {\n+          refs[key] = undefined;\n+        }\n+      } else {\n+        if (vFor) {\n+          if (refs[key]) {\n+            refs[key].push(ref);\n+          } else {\n+            refs[key] = [ref];\n+          }\n+        } else {\n+          refs[key] = ref;\n+        }\n+      }\n+    };\n+  }\n+\n+  function resolveSlots(vm, children) {\n+    if (children) {\n+      children = flatten(isArray(children) ? children : children());\n+      var slots = { default: children };\n+      var i = children.length;\n+      var name = void 0,\n+          child = void 0;\n+      while (i--) {\n+        child = children[i];\n+        if (name = child.data && child.data.slot) {\n+          var slot = slots[name] || (slots[name] = []);\n+          if (child.tag === 'template') {\n+            slot.push.apply(slot, child.children);\n+          } else {\n+            slot.push(child);\n+          }\n+          children.splice(i, 1);\n+        }\n+      }\n+      vm.$slots = slots;\n+    }\n+  }\n+\n+  function initEvents(vm) {\n+    vm._events = Object.create(null);\n+    // init parent attached events\n+    var listeners = vm.$options._parentListeners;\n+    if (listeners) {\n+      updateListeners(listeners, {}, function (event, handler) {\n+        vm.$on(event, handler);\n+      });\n+    }\n+  }\n+\n+  function eventsMixin(Vue) {\n+    Vue.prototype.$on = function (event, fn) {\n+      (this._events[event] || (this._events[event] = [])).push(fn);\n+      return this;\n+    };\n+\n+    /**\n+     * Adds an `event` listener that will be invoked a single\n+     * time then automatically removed.\n+     *\n+     * @param {String} event\n+     * @param {Function} fn\n+     */\n+\n+    Vue.prototype.$once = function (event, fn) {\n+      var self = this;\n+      function on() {\n+        self.$off(event, on);\n+        fn.apply(this, arguments);\n+      }\n+      on.fn = fn;\n+      this.$on(event, on);\n+      return this;\n+    };\n+\n+    /**\n+     * Remove the given callback for `event` or all\n+     * registered callbacks.\n+     *\n+     * @param {String} event\n+     * @param {Function} fn\n+     */\n+\n+    Vue.prototype.$off = function (event, fn) {\n+      var cbs;\n+      // all\n+      if (!arguments.length) {\n+        this._events = Object.create(null);\n+        return this;\n+      }\n+      // specific event\n+      cbs = this._events[event];\n+      if (!cbs) {\n+        return this;\n+      }\n+      if (arguments.length === 1) {\n+        this._events[event] = null;\n+        return this;\n+      }\n+      // specific handler\n+      var cb;\n+      var i = cbs.length;\n+      while (i--) {\n+        cb = cbs[i];\n+        if (cb === fn || cb.fn === fn) {\n+          cbs.splice(i, 1);\n+          break;\n+        }\n+      }\n+      return this;\n+    };\n+\n+    /**\n+     * Trigger an event on self.\n+     *\n+     * @param {String} event\n+     */\n+\n+    Vue.prototype.$emit = function (event) {\n+      var cbs = this._events[event];\n+      if (cbs) {\n+        cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n+        var args = toArray(arguments, 1);\n+        for (var i = 0, l = cbs.length; i < l; i++) {\n+          cbs[i].apply(this, args);\n+        }\n+      }\n+    };\n+  }\n+\n+  var uid = 0;\n+\n+  function Vue(options) {\n+    this._init(options);\n+  }\n+\n+  Vue.prototype._init = function (options) {\n+    // a uid\n+    this._uid = uid++;\n+    // a flag to avoid this being observed\n+    this._isVue = true;\n+    // merge options\n+    this.$options = mergeOptions(this.constructor.options, options || {}, this);\n+    if (\"development\" !== 'production') {\n+      initProxy(this);\n+    } else {}\n+    initLifecycle(this);\n+    initEvents(this);\n+    callHook(this, 'init');\n+    initState(this);\n+    callHook(this, 'created');\n+    initRender(this);\n+  };\n+\n+  Vue.prototype.$nextTick = function (fn) {\n+    nextTick(fn, this);\n+  };\n+\n+  stateMixin(Vue);\n+  eventsMixin(Vue);\n+  lifecycleMixin(Vue);\n+  renderMixin(Vue);\n+\n+  var warn = void 0;\n+  var formatComponentName = void 0;\n+\n+  if (\"development\" !== 'production') {\n+    (function () {\n+      var hasConsole = typeof console !== 'undefined';\n+\n+      warn = function warn(msg, vm) {\n+        if (hasConsole && !config.silent) {\n+          console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n+        }\n+      };\n+\n+      formatComponentName = function formatComponentName(vm) {\n+        var name = vm._isVue ? vm.$options.name : vm.name;\n+        return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n+      };\n+    })();\n+  }\n+\n+  /**\n+   * Option overwriting strategies are functions that handle\n+   * how to merge a parent option value and a child option\n+   * value into the final value.\n+   *\n+   * All strategy functions follow the same signature:\n+   *\n+   * @param {*} parentVal\n+   * @param {*} childVal\n+   * @param {Vue} [vm]\n+   */\n+\n+  var strats = config.optionMergeStrategies = Object.create(null);\n+\n+  /**\n+   * Helper that recursively merges two data objects together.\n+   */\n+\n+  function mergeData(to, from) {\n+    var key, toVal, fromVal;\n+    for (key in from) {\n+      toVal = to[key];\n+      fromVal = from[key];\n+      if (!hasOwn(to, key)) {\n+        set(to, key, fromVal);\n+      } else if (isObject(toVal) && isObject(fromVal)) {\n+        mergeData(toVal, fromVal);\n+      }\n+    }\n+    return to;\n+  }\n+\n+  /**\n+   * Data\n+   */\n+\n+  strats.data = function (parentVal, childVal, vm) {\n+    if (!vm) {\n+      // in a Vue.extend merge, both should be functions\n+      if (!childVal) {\n+        return parentVal;\n+      }\n+      if (typeof childVal !== 'function') {\n+        \"development\" !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n+        return parentVal;\n+      }\n+      if (!parentVal) {\n+        return childVal;\n+      }\n+      // when parentVal & childVal are both present,\n+      // we need to return a function that returns the\n+      // merged result of both functions... no need to\n+      // check if parentVal is a function here because\n+      // it has to be a function to pass previous merges.\n+      return function mergedDataFn() {\n+        return mergeData(childVal.call(this), parentVal.call(this));\n+      };\n+    } else if (parentVal || childVal) {\n+      return function mergedInstanceDataFn() {\n+        // instance merge\n+        var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n+        var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n+        if (instanceData) {\n+          return mergeData(instanceData, defaultData);\n+        } else {\n+          return defaultData;\n+        }\n+      };\n+    }\n+  };\n+\n+  /**\n+   * El\n+   */\n+\n+  strats.el = function (parentVal, childVal, vm) {\n+    if (!vm && childVal && typeof childVal !== 'function') {\n+      \"development\" !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n+      return;\n+    }\n+    var ret = childVal || parentVal;\n+    // invoke the element factory if this is instance merge\n+    return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n+  };\n+\n+  /**\n+   * Hooks and param attributes are merged as arrays.\n+   */\n+\n+  function mergeHook(parentVal, childVal) {\n+    return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n+  }\n+\n+  config._lifecycleHooks.forEach(function (hook) {\n+    strats[hook] = mergeHook;\n+  });\n+\n+  /**\n+   * Assets\n+   *\n+   * When a vm is present (instance creation), we need to do\n+   * a three-way merge between constructor options, instance\n+   * options and parent options.\n+   */\n+\n+  function mergeAssets(parentVal, childVal) {\n+    var res = Object.create(parentVal);\n+    return childVal ? extend(res, childVal) : res;\n+  }\n+\n+  config._assetTypes.forEach(function (type) {\n+    strats[type + 's'] = mergeAssets;\n+  });\n+\n+  /**\n+   * Watchers.\n+   *\n+   * Watchers hashes should not overwrite one\n+   * another, so we merge them as arrays.\n+   */\n+\n+  strats.watch = function (parentVal, childVal) {\n+    if (!childVal) return parentVal;\n+    if (!parentVal) return childVal;\n+    var ret = {};\n+    extend(ret, parentVal);\n+    for (var key in childVal) {\n+      var parent = ret[key];\n+      var child = childVal[key];\n+      if (parent && !isArray(parent)) {\n+        parent = [parent];\n+      }\n+      ret[key] = parent ? parent.concat(child) : [child];\n+    }\n+    return ret;\n+  };\n+\n+  /**\n+   * Other object hashes.\n+   */\n+\n+  strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n+    if (!childVal) return parentVal;\n+    if (!parentVal) return childVal;\n+    var ret = Object.create(null);\n+    extend(ret, parentVal);\n+    extend(ret, childVal);\n+    return ret;\n+  };\n+\n+  /**\n+   * Default strategy.\n+   */\n+\n+  var defaultStrat = function defaultStrat(parentVal, childVal) {\n+    return childVal === undefined ? parentVal : childVal;\n+  };\n+\n+  /**\n+   * Make sure component options get converted to actual\n+   * constructors.\n+   *\n+   * @param {Object} options\n+   */\n+\n+  function guardComponents(options) {\n+    if (options.components) {\n+      var components = options.components;\n+      var def;\n+      for (var key in components) {\n+        if (isBuiltInTag(key) || config.isReservedTag(key)) {\n+          \"development\" !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n+          continue;\n+        }\n+        def = components[key];\n+        if (isPlainObject(def)) {\n+          components[key] = Vue.extend(def);\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Ensure all props option syntax are normalized into the\n+   * Object-based format.\n+   *\n+   * @param {Object} options\n+   */\n+\n+  function guardProps(options) {\n+    var props = options.props;\n+    if (!props) return;\n+    var res = {};\n+    var i = void 0,\n+        val = void 0,\n+        name = void 0;\n+    if (isArray(props)) {\n+      i = props.length;\n+      while (i--) {\n+        val = props[i];\n+        if (typeof val === 'string') {\n+          name = camelize(val);\n+          res[name] = { type: null };\n+        } else if (\"development\" !== 'production') {\n+          warn('props must be strings when using array syntax.');\n+        }\n+      }\n+    } else if (isPlainObject(props)) {\n+      for (var key in props) {\n+        val = props[key];\n+        name = camelize(key);\n+        res[name] = isPlainObject(val) ? val : { type: val };\n+      }\n+    }\n+    options.props = res;\n+  }\n+\n+  function guardDirectives(options) {\n+    var dirs = options.directives;\n+    if (dirs) {\n+      for (var key in dirs) {\n+        if (typeof dirs[key] === 'function') {\n+          dirs[key] = { update: dirs[key] };\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Merge two option objects into a new one.\n+   * Core utility used in both instantiation and inheritance.\n+   *\n+   * @param {Object} parent\n+   * @param {Object} child\n+   * @param {Vue} [vm] - if vm is present, indicates this is\n+   *                     an instantiation merge.\n+   */\n+\n+  function mergeOptions(parent, child, vm) {\n+    guardComponents(child);\n+    guardProps(child);\n+    guardDirectives(child);\n+    if (\"development\" !== 'production') {\n+      if (child.propsData && !vm) {\n+        warn('propsData can only be used as an instantiation option.');\n+      }\n+    }\n+    var options = {};\n+    var key;\n+    if (child.mixins) {\n+      for (var i = 0, l = child.mixins.length; i < l; i++) {\n+        parent = mergeOptions(parent, child.mixins[i], vm);\n+      }\n+    }\n+    for (key in parent) {\n+      mergeField(key);\n+    }\n+    for (key in child) {\n+      if (!hasOwn(parent, key)) {\n+        mergeField(key);\n+      }\n+    }\n+    function mergeField(key) {\n+      var strat = strats[key] || defaultStrat;\n+      options[key] = strat(parent[key], child[key], vm, key);\n+    }\n+    return options;\n+  }\n+\n+  /**\n+   * Resolve an asset.\n+   * This function is used because child instances need access\n+   * to assets defined in its ancestor chain.\n+   *\n+   * @param {Object} options\n+   * @param {String} type\n+   * @param {String} id\n+   * @param {Boolean} warnMissing\n+   * @return {Object|Function}\n+   */\n+\n+  function resolveAsset(options, type, id, warnMissing) {\n+    /* istanbul ignore if */\n+    if (typeof id !== 'string') {\n+      return;\n+    }\n+    var assets = options[type];\n+    var camelizedId;\n+    var res = assets[id] ||\n+    // camelCase ID\n+    assets[camelizedId = camelize(id)] ||\n+    // Pascal Case ID\n+    assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n+    if (\"development\" !== 'production' && warnMissing && !res) {\n+      warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n+    }\n+    return res;\n+  }\n+\n+  function validateProp(vm, key, propsData) {\n+    if (!propsData) return;\n+    var prop = vm.$options.props[key];\n+    var absent = hasOwn(propsData, key);\n+    var value = propsData[key];\n+    // check default value\n+    if (value === undefined) {\n+      value = getPropDefaultValue(vm, prop, key);\n+      // since the default value is a fresh copy,\n+      // make sure to observe it.\n+      observerState.shouldConvert = true;\n+      observe(value);\n+      observerState.shouldConvert = false;\n+    }\n+    if (\"development\" !== 'production') {\n+      assertProp(prop, key, value, vm, absent);\n+    }\n+    return value;\n+  }\n+\n+  /**\n+   * Get the default value of a prop.\n+   *\n+   * @param {Vue} vm\n+   * @param {Object} prop\n+   * @return {*}\n+   */\n+\n+  function getPropDefaultValue(vm, prop, name) {\n+    // no default, return undefined\n+    if (!hasOwn(prop, 'default')) {\n+      // absent boolean value defaults to false\n+      return prop.type === Boolean ? false : undefined;\n+    }\n+    var def = prop.default;\n+    // warn against non-factory defaults for Object & Array\n+    if (isObject(def)) {\n+      \"development\" !== 'production' && warn('Invalid default value for prop \"' + name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n+    }\n+    // call factory function for non-Function types\n+    return typeof def === 'function' && prop.type !== Function ? def.call(vm) : def;\n+  }\n+\n+  /**\n+   * Assert whether a prop is valid.\n+   *\n+   * @param {Object} prop\n+   * @param {String} name\n+   * @param {*} value\n+   * @param {Vue} vm\n+   * @param {Boolean} absent\n+   */\n+\n+  function assertProp(prop, name, value, vm, absent) {\n+    if (prop.required && absent) {\n+      \"development\" !== 'production' && warn('Missing required prop: \"' + name + '\"', vm);\n+      return false;\n+    }\n+    if (value == null) {\n+      return true;\n+    }\n+    var type = prop.type;\n+    var valid = !type;\n+    var expectedTypes = [];\n+    if (type) {\n+      if (!isArray(type)) {\n+        type = [type];\n+      }\n+      for (var i = 0; i < type.length && !valid; i++) {\n+        var assertedType = assertType(value, type[i]);\n+        expectedTypes.push(assertedType.expectedType);\n+        valid = assertedType.valid;\n+      }\n+    }\n+    if (!valid) {\n+      if (\"development\" !== 'production') {\n+        warn('Invalid prop: type check failed for prop \"' + name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n+      }\n+      return false;\n+    }\n+    var validator = prop.validator;\n+    if (validator) {\n+      if (!validator(value)) {\n+        \"development\" !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + name + '\".', vm);\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n+\n+  /**\n+   * Assert the type of a value\n+   *\n+   * @param {*} value\n+   * @param {Function} type\n+   * @return {Object}\n+   */\n+\n+  function assertType(value, type) {\n+    var valid;\n+    var expectedType;\n+    if (type === String) {\n+      expectedType = 'string';\n+      valid = typeof value === expectedType;\n+    } else if (type === Number) {\n+      expectedType = 'number';\n+      valid = typeof value === expectedType;\n+    } else if (type === Boolean) {\n+      expectedType = 'boolean';\n+      valid = typeof value === expectedType;\n+    } else if (type === Function) {\n+      expectedType = 'function';\n+      valid = typeof value === expectedType;\n+    } else if (type === Object) {\n+      expectedType = 'object';\n+      valid = isPlainObject(value);\n+    } else if (type === Array) {\n+      expectedType = 'array';\n+      valid = isArray(value);\n+    } else {\n+      valid = value instanceof type;\n+    }\n+    return {\n+      valid: valid,\n+      expectedType: expectedType\n+    };\n+  }\n+\n+  /**\n+   * Format type for output\n+   *\n+   * @param {String} type\n+   * @return {String}\n+   */\n+\n+  function formatType(type) {\n+    return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n+  }\n+\n+  /**\n+   * Format value\n+   *\n+   * @param {*} value\n+   * @return {String}\n+   */\n+\n+  function formatValue(val) {\n+    return Object.prototype.toString.call(val).slice(8, -1);\n+  }\n+\n+\n+\n+  var util = Object.freeze({\n+  \tdefineReactive: defineReactive,\n+  \trenderString: renderString,\n+  \tmakeMap: makeMap,\n+  \tisBuiltInTag: isBuiltInTag,\n+  \tremove: remove,\n+  \thasOwn: hasOwn,\n+  \tisPrimitive: isPrimitive,\n+  \tcached: cached,\n+  \tcamelize: camelize,\n+  \thyphenate: hyphenate,\n+  \tbind: bind,\n+  \ttoArray: toArray,\n+  \textend: extend,\n+  \tisObject: isObject,\n+  \tisPlainObject: isPlainObject,\n+  \tisArray: isArray,\n+  \tisReserved: isReserved,\n+  \tdef: def,\n+  \tparsePath: parsePath,\n+  \thasProto: hasProto,\n+  \tinBrowser: inBrowser,\n+  \tdevtools: devtools,\n+  \tnextTick: nextTick,\n+  \tget _Set () { return _Set; },\n+  \tmergeOptions: mergeOptions,\n+  \tresolveAsset: resolveAsset,\n+  \tget warn () { return warn; },\n+  \tvalidateProp: validateProp\n+  });\n+\n+  // attributes that should be using props for binding\n+  var mustUseProp = makeMap('value,selected,checked,muted');\n+\n+  var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n+\n+  var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');\n+\n+  var xlinkNS = 'http://www.w3.org/1999/xlink';\n+  var isXlink = function isXlink(name) {\n+    return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';\n+  };\n+\n+  function genClassForVnode(vnode) {\n+    var data = vnode.data;\n+    // Important: check if this is a component container node\n+    // or a child component root node\n+    var i = void 0;\n+    if ((i = vnode.child) && (i = i._vnode.data)) {\n+      data = mergeClassData(i, data);\n+    }\n+    if ((i = vnode.parent) && (i = i.data)) {\n+      data = mergeClassData(data, i);\n+    }\n+    return genClassFromData(data);\n+  }\n+\n+  function mergeClassData(child, parent) {\n+    return {\n+      staticClass: concat(child.staticClass, parent.staticClass),\n+      class: child.class ? extend(child.class, parent.class) : parent.class\n+    };\n+  }\n+\n+  function genClassFromData(data) {\n+    var dynamicClass = data.class;\n+    var staticClass = data.staticClass;\n+    if (staticClass || dynamicClass) {\n+      return concat(staticClass, stringifyClass(dynamicClass));\n+    }\n+  }\n+\n+  function concat(a, b) {\n+    return a ? b ? a + ' ' + b : a : b || '';\n+  }\n+\n+  function stringifyClass(value) {\n+    if (!value) {\n+      return '';\n+    }\n+    if (typeof value === 'string') {\n+      return value;\n+    }\n+    if (isArray(value)) {\n+      var res = '';\n+      for (var i = 0, l = value.length; i < l; i++) {\n+        if (value[i]) res += stringifyClass(value[i]) + ' ';\n+      }\n+      return res.slice(0, -1);\n+    }\n+    if (isObject(value)) {\n+      var _res = '';\n+      for (var key in value) {\n+        if (value[key]) _res += key + ' ';\n+      }\n+      return _res.slice(0, -1);\n+    }\n+  }\n+\n+  var namespaceMap = {\n+    svg: 'http://www.w3.org/2000/svg',\n+    math: 'http://www.w3.org/1998/Math/MathML'\n+  };\n+\n+  var isReservedTag = makeMap('html,base,head,link,meta,style,title,' + 'address,article,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,hr,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template');\n+\n+  var isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr', true);\n+\n+  // Elements that you can, intentionally, leave open\n+  // (and which close themselves)\n+  var canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source', true);\n+\n+  // HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n+  // Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\n+  var isNonPhrasingTag = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' + 'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' + 'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' + 'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' + 'title,tr,track', true);\n+\n+  // this map covers namespace elements that can appear as template root nodes\n+  var isSVG = makeMap('svg,g,defs,symbol,use,image,text,circle,ellipse,' + 'line,path,polygon,polyline,rect', true);\n+\n+  function getTagNamespace(tag) {\n+    if (isSVG(tag)) {\n+      return 'svg';\n+    }\n+    // basic support for MathML\n+    // note it doesn't support other MathML elements being component roots\n+    if (tag === 'math') {\n+      return 'math';\n+    }\n+  }\n+\n+  var unknownElementCache = Object.create(null);\n+  function isUnknownElement(tag) {\n+    if (!inBrowser) {\n+      return true;\n+    }\n+    tag = tag.toLowerCase();\n+    if (unknownElementCache[tag] != null) {\n+      return unknownElementCache[tag];\n+    }\n+    var el = document.createElement(tag);\n+    if (tag.indexOf('-') > -1) {\n+      // http://stackoverflow.com/a/28210364/1070244\n+      return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n+    } else {\n+      return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()) &&\n+      // Chrome returns unknown for several HTML5 elements.\n+      // https://code.google.com/p/chromium/issues/detail?id=540526\n+      !/^(data|time|rtc|rb)$/.test(tag);\n+    }\n+  }\n+\n+  var UA$1 = inBrowser && window.navigator.userAgent.toLowerCase();\n+  var isIE9 = UA$1 && UA$1.indexOf('msie 9.0') > 0;\n+  var isAndroid = UA$1 && UA$1.indexOf('android') > 0;\n+\n+  /**\n+   * Query an element selector if it's not an element already.\n+   *\n+   * @param {String|Element} el\n+   * @return {Element}\n+   */\n+\n+  function query(el) {\n+    if (typeof el === 'string') {\n+      var selector = el;\n+      el = document.querySelector(el);\n+      if (!el) {\n+        \"development\" !== 'production' && warn('Cannot find element: ' + selector);\n+      }\n+    }\n+    return el;\n+  }\n+\n+  function initUse(Vue) {\n+    /**\n+     * Plugin system\n+     *\n+     * @param {Object} plugin\n+     */\n+\n+    Vue.use = function (plugin) {\n+      /* istanbul ignore if */\n+      if (plugin.installed) {\n+        return;\n+      }\n+      // additional parameters\n+      var args = toArray(arguments, 1);\n+      args.unshift(this);\n+      if (typeof plugin.install === 'function') {\n+        plugin.install.apply(plugin, args);\n+      } else {\n+        plugin.apply(null, args);\n+      }\n+      plugin.installed = true;\n+      return this;\n+    };\n+  }\n+\n+  function initMixin(Vue) {\n+    Vue.mixin = function (mixin) {\n+      Vue.options = mergeOptions(Vue.options, mixin);\n+    };\n+  }\n+\n+  function initExtend(Vue) {\n+    /**\n+     * Each instance constructor, including Vue, has a unique\n+     * cid. This enables us to create wrapped \"child\n+     * constructors\" for prototypal inheritance and cache them.\n+     */\n+\n+    Vue.cid = 0;\n+    var cid = 1;\n+\n+    /**\n+     * Class inheritance\n+     *\n+     * @param {Object} extendOptions\n+     */\n+\n+    Vue.extend = function (extendOptions) {\n+      extendOptions = extendOptions || {};\n+      var Super = this;\n+      var isFirstExtend = Super.cid === 0;\n+      if (isFirstExtend && extendOptions._Ctor) {\n+        return extendOptions._Ctor;\n+      }\n+      var name = extendOptions.name || Super.options.name;\n+      if (\"development\" !== 'production') {\n+        if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n+          warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n+          name = null;\n+        }\n+      }\n+      var Sub = function VueComponent(options) {\n+        this._init(options);\n+      };\n+      Sub.prototype = Object.create(Super.prototype);\n+      Sub.prototype.constructor = Sub;\n+      Sub.cid = cid++;\n+      Sub.options = mergeOptions(Super.options, extendOptions);\n+      Sub['super'] = Super;\n+      // allow further extension\n+      Sub.extend = Super.extend;\n+      // create asset registers, so extended classes\n+      // can have their private assets too.\n+      config._assetTypes.forEach(function (type) {\n+        Sub[type] = Super[type];\n+      });\n+      // enable recursive self-lookup\n+      if (name) {\n+        Sub.options.components[name] = Sub;\n+      }\n+      // cache constructor\n+      if (isFirstExtend) {\n+        extendOptions._Ctor = Sub;\n+      }\n+      return Sub;\n+    };\n+  }\n+\n+  function initAssetRegisters(Vue) {\n+    /**\n+       * Create asset registration methods with the following\n+       * signature:\n+       *\n+       * @param {String} id\n+       * @param {*} definition\n+       */\n+\n+    config._assetTypes.forEach(function (type) {\n+      Vue[type] = function (id, definition) {\n+        if (!definition) {\n+          return this.options[type + 's'][id];\n+        } else {\n+          /* istanbul ignore if */\n+          if (\"development\" !== 'production') {\n+            if (type === 'component' && config.isReservedTag(id)) {\n+              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n+            }\n+          }\n+          if (type === 'component' && isPlainObject(definition)) {\n+            definition.name = id;\n+            definition = Vue.extend(definition);\n+          }\n+          this.options[type + 's'][id] = definition;\n+          return definition;\n+        }\n+      };\n+    });\n+  }\n+\n+  function initGlobalAPI(Vue) {\n+    Vue.config = config;\n+    Vue.util = util;\n+    Vue.set = set;\n+    Vue.delete = del;\n+    Vue.nextTick = nextTick;\n+\n+    Vue.options = {\n+      directives: Object.create(null),\n+      filters: Object.create(null),\n+      components: Object.create(null),\n+      transitions: Object.create(null)\n+    };\n+\n+    initUse(Vue);\n+    initMixin(Vue);\n+    initExtend(Vue);\n+    initAssetRegisters(Vue);\n+  }\n+\n+  initGlobalAPI(Vue);\n+\n+  Vue.version = '2.0.0-alpha.0';\n+\n+  var emptyNode = VNode('', {}, []);\n+  var hooks$1 = ['create', 'update', 'remove', 'destroy'];\n+\n+  function isUndef(s) {\n+    return s === undefined;\n+  }\n+\n+  function isDef(s) {\n+    return s !== undefined;\n+  }\n+\n+  function sameVnode(vnode1, vnode2) {\n+    return vnode1.key === vnode2.key && vnode1.tag === vnode2.tag;\n+  }\n+\n+  function createKeyToOldIdx(children, beginIdx, endIdx) {\n+    var i = void 0,\n+        key = void 0;\n+    var map = {};\n+    for (i = beginIdx; i <= endIdx; ++i) {\n+      key = children[i].key;\n+      if (isDef(key)) map[key] = i;\n+    }\n+    return map;\n+  }\n+\n+  function createPatchFunction(backend) {\n+    var i = void 0,\n+        j = void 0;\n+    var cbs = {};\n+\n+    var modules = backend.modules;\n+    var nodeOps = backend.nodeOps;\n+\n+\n+    for (i = 0; i < hooks$1.length; ++i) {\n+      cbs[hooks$1[i]] = [];\n+      for (j = 0; j < modules.length; ++j) {\n+        if (modules[j][hooks$1[i]] !== undefined) cbs[hooks$1[i]].push(modules[j][hooks$1[i]]);\n+      }\n+    }\n+\n+    function emptyNodeAt(elm) {\n+      return VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);\n+    }\n+\n+    function createRmCb(childElm, listeners) {\n+      function remove() {\n+        if (--remove.listeners === 0) {\n+          removeElement(childElm);\n+        }\n+      }\n+      remove.listeners = listeners;\n+      return remove;\n+    }\n+\n+    function removeElement(el) {\n+      var parent = nodeOps.parentNode(el);\n+      nodeOps.removeChild(parent, el);\n+    }\n+\n+    function createElm(vnode, insertedVnodeQueue) {\n+      var i = void 0,\n+          elm = void 0;\n+      var data = vnode.data;\n+      if (isDef(data)) {\n+        if (isDef(i = data.hook) && isDef(i = i.init)) i(vnode);\n+        // after calling the init hook, if the vnode is a child component\n+        // it should've created a child instance and mounted it. the child\n+        // component also has set the placeholder vnode's elm.\n+        // in that case we can just return the element and be done.\n+        if (isDef(i = vnode.child)) {\n+          invokeCreateHooks(vnode, insertedVnodeQueue);\n+          return vnode.elm;\n+        }\n+      }\n+      var children = vnode.children;\n+      var tag = vnode.tag;\n+      if (isDef(tag)) {\n+        elm = vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag);\n+        if (Array.isArray(children)) {\n+          for (i = 0; i < children.length; ++i) {\n+            nodeOps.appendChild(elm, createElm(children[i], insertedVnodeQueue));\n+          }\n+        } else if (isPrimitive(vnode.text)) {\n+          nodeOps.appendChild(elm, nodeOps.createTextNode(vnode.text));\n+        }\n+        if (isDef(data)) {\n+          invokeCreateHooks(vnode, insertedVnodeQueue);\n+        }\n+      } else {\n+        elm = vnode.elm = nodeOps.createTextNode(vnode.text);\n+      }\n+      return vnode.elm;\n+    }\n+\n+    function invokeCreateHooks(vnode, insertedVnodeQueue) {\n+      for (var _i = 0; _i < cbs.create.length; ++_i) {\n+        cbs.create[_i](emptyNode, vnode);\n+      }\n+      i = vnode.data.hook; // Reuse variable\n+      if (isDef(i)) {\n+        if (i.create) i.create(emptyNode, vnode);\n+        if (i.insert) insertedVnodeQueue.push(vnode);\n+      }\n+    }\n+\n+    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n+      for (; startIdx <= endIdx; ++startIdx) {\n+        nodeOps.insertBefore(parentElm, createElm(vnodes[startIdx], insertedVnodeQueue), before);\n+      }\n+    }\n+\n+    function invokeDestroyHook(vnode) {\n+      var i = void 0,\n+          j = void 0;\n+      var data = vnode.data;\n+      if (isDef(data)) {\n+        if (isDef(i = data.hook) && isDef(i = i.destroy)) i(vnode);\n+        for (i = 0; i < cbs.destroy.length; ++i) {\n+          cbs.destroy[i](vnode);\n+        }if (isDef(i = vnode.children)) {\n+          for (j = 0; j < vnode.children.length; ++j) {\n+            invokeDestroyHook(vnode.children[j]);\n+          }\n+        }\n+        if (isDef(i = vnode.child)) {\n+          invokeDestroyHook(i._vnode);\n+        }\n+      }\n+    }\n+\n+    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n+      for (; startIdx <= endIdx; ++startIdx) {\n+        var ch = vnodes[startIdx];\n+        if (isDef(ch)) {\n+          if (isDef(ch.tag)) {\n+            invokeDestroyHook(ch);\n+            removeAndInvokeRemoveHook(ch);\n+          } else {\n+            // Text node\n+            nodeOps.removeChild(parentElm, ch.elm);\n+          }\n+        }\n+      }\n+    }\n+\n+    function removeAndInvokeRemoveHook(vnode, rm) {\n+      if (rm || isDef(vnode.data)) {\n+        var listeners = cbs.remove.length + 1;\n+        if (!rm) {\n+          // directly removing\n+          rm = createRmCb(vnode.elm, listeners);\n+        } else {\n+          // we have a recursively passed down rm callback\n+          // increase the listeners count\n+          rm.listeners += listeners;\n+        }\n+        // recursively invoke hooks on child component root node\n+        if (isDef(i = vnode.child) && isDef(i = i._vnode) && isDef(i.data)) {\n+          removeAndInvokeRemoveHook(i, rm);\n+        }\n+        for (i = 0; i < cbs.remove.length; ++i) {\n+          cbs.remove[i](vnode, rm);\n+        }\n+        if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n+          i(vnode, rm);\n+        } else {\n+          rm();\n+        }\n+      } else {\n+        removeElement(vnode.elm);\n+      }\n+    }\n+\n+    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n+      var oldStartIdx = 0;\n+      var newStartIdx = 0;\n+      var oldEndIdx = oldCh.length - 1;\n+      var oldStartVnode = oldCh[0];\n+      var oldEndVnode = oldCh[oldEndIdx];\n+      var newEndIdx = newCh.length - 1;\n+      var newStartVnode = newCh[0];\n+      var newEndVnode = newCh[newEndIdx];\n+      var oldKeyToIdx = void 0,\n+          idxInOld = void 0,\n+          elmToMove = void 0,\n+          before = void 0;\n+\n+      while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n+        if (isUndef(oldStartVnode)) {\n+          oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n+        } else if (isUndef(oldEndVnode)) {\n+            oldEndVnode = oldCh[--oldEndIdx];\n+          } else if (sameVnode(oldStartVnode, newStartVnode)) {\n+            patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n+            oldStartVnode = oldCh[++oldStartIdx];\n+            newStartVnode = newCh[++newStartIdx];\n+          } else if (sameVnode(oldEndVnode, newEndVnode)) {\n+            patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n+            oldEndVnode = oldCh[--oldEndIdx];\n+            newEndVnode = newCh[--newEndIdx];\n+          } else if (sameVnode(oldStartVnode, newEndVnode)) {\n+            // Vnode moved right\n+            patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n+            nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n+            oldStartVnode = oldCh[++oldStartIdx];\n+            newEndVnode = newCh[--newEndIdx];\n+          } else if (sameVnode(oldEndVnode, newStartVnode)) {\n+            // Vnode moved left\n+            patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n+            nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n+            oldEndVnode = oldCh[--oldEndIdx];\n+            newStartVnode = newCh[++newStartIdx];\n+          } else {\n+            if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n+            idxInOld = oldKeyToIdx[newStartVnode.key];\n+            if (isUndef(idxInOld)) {\n+              // New element\n+              nodeOps.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n+              newStartVnode = newCh[++newStartIdx];\n+            } else {\n+              elmToMove = oldCh[idxInOld];\n+              if (\"development\" !== 'production' && !elmToMove) {\n+                warn('Duplicate track-by key: ' + idxInOld + '. ' + 'Make sure each v-for item has a unique track-by key.');\n+              }\n+              patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n+              oldCh[idxInOld] = undefined;\n+              nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n+              newStartVnode = newCh[++newStartIdx];\n+            }\n+          }\n+      }\n+      if (oldStartIdx > oldEndIdx) {\n+        before = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n+        addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n+      } else if (newStartIdx > newEndIdx) {\n+        removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n+      }\n+    }\n+\n+    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n+      var i = void 0,\n+          hook = void 0;\n+      if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\n+        i(oldVnode, vnode);\n+      }\n+      // skip nodes with v-pre\n+      if (isDef(i = vnode.data) && i.pre) {\n+        return;\n+      }\n+      var elm = vnode.elm = oldVnode.elm;\n+      var oldCh = oldVnode.children;\n+      var ch = vnode.children;\n+      if (oldVnode === vnode) return;\n+      if (!sameVnode(oldVnode, vnode)) {\n+        var parentElm = nodeOps.parentNode(oldVnode.elm);\n+        elm = createElm(vnode, insertedVnodeQueue);\n+        nodeOps.insertBefore(parentElm, elm, oldVnode.elm);\n+        removeVnodes(parentElm, [oldVnode], 0, 0);\n+        return;\n+      }\n+      if (isDef(vnode.data)) {\n+        for (i = 0; i < cbs.update.length; ++i) {\n+          cbs.update[i](oldVnode, vnode);\n+        }i = vnode.data.hook;\n+        if (isDef(i) && isDef(i = i.update)) i(oldVnode, vnode);\n+      }\n+      if (isUndef(vnode.text)) {\n+        if (isDef(oldCh) && isDef(ch)) {\n+          if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n+        } else if (isDef(ch)) {\n+          if (isDef(oldVnode.text)) nodeOps.setTextContent(elm, '');\n+          addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n+        } else if (isDef(oldCh)) {\n+          removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n+        } else if (isDef(oldVnode.text)) {\n+          nodeOps.setTextContent(elm, '');\n+        }\n+      } else if (oldVnode.text !== vnode.text) {\n+        nodeOps.setTextContent(elm, vnode.text);\n+      }\n+      if (isDef(hook) && isDef(i = hook.postpatch)) {\n+        i(oldVnode, vnode);\n+      }\n+    }\n+\n+    function invokeInsertHook(queue) {\n+      for (i = 0; i < queue.length; ++i) {\n+        queue[i].data.hook.insert(queue[i]);\n+      }\n+    }\n+\n+    function hydrate(elm, vnode, insertedVnodeQueue) {\n+      if (\"development\" !== 'production') {\n+        if (!assertNodeMatch(elm, vnode)) {\n+          return false;\n+        }\n+      }\n+      vnode.elm = elm;\n+      var tag = vnode.tag;\n+      var data = vnode.data;\n+      var children = vnode.children;\n+\n+      if (isDef(data)) {\n+        if (isDef(i = data.hook) && isDef(i = i.init)) i(vnode);\n+        if (isDef(i = vnode.child)) {\n+          // child component. it should have hydrated its own tree.\n+          invokeCreateHooks(vnode, insertedVnodeQueue);\n+          return true;\n+        }\n+      }\n+      if (isDef(tag)) {\n+        if (isDef(children)) {\n+          var childNodes = elm.childNodes;\n+          for (var _i2 = 0; _i2 < children.length; _i2++) {\n+            var success = hydrate(childNodes[_i2], children[_i2], insertedVnodeQueue);\n+            if (!success) {\n+              return false;\n+            }\n+          }\n+        }\n+        if (isDef(data)) {\n+          invokeCreateHooks(vnode, insertedVnodeQueue);\n+        }\n+      }\n+      return true;\n+    }\n+\n+    function assertNodeMatch(node, vnode) {\n+      if (vnode.tag) {\n+        if (vnode.tag.indexOf('vue-component') === 0) {\n+          return true;\n+        } else {\n+          return vnode.tag === node.tagName.toLowerCase() && (vnode.children ? vnode.children.length === node.childNodes.length : node.childNodes.length === 0);\n+        }\n+      } else {\n+        return renderString(vnode.text) === node.data;\n+      }\n+    }\n+\n+    return function patch(oldVnode, vnode) {\n+      var elm, parent;\n+      var insertedVnodeQueue = [];\n+\n+      if (!oldVnode) {\n+        // empty mount, create new root element\n+        createElm(vnode, insertedVnodeQueue);\n+      } else {\n+        if (sameVnode(oldVnode, vnode)) {\n+          patchVnode(oldVnode, vnode, insertedVnodeQueue);\n+        } else {\n+          if (isUndef(oldVnode.tag)) {\n+            // mounting to a real element\n+            // check if this is server-rendered content and if we can perform\n+            // a successful hydration.\n+            if (oldVnode.hasAttribute('server-rendered')) {\n+              oldVnode.removeAttribute('server-rendered');\n+              if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n+                invokeInsertHook(insertedVnodeQueue);\n+                return oldVnode;\n+              } else if (\"development\" !== 'production') {\n+                warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. Bailing hydration and performing ' + 'full client-side render.');\n+              }\n+            }\n+            // either not server-rendered, or hydration failed.\n+            // create an empty node and replace it\n+            oldVnode = emptyNodeAt(oldVnode);\n+          }\n+          elm = oldVnode.elm;\n+          parent = nodeOps.parentNode(elm);\n+\n+          createElm(vnode, insertedVnodeQueue);\n+\n+          if (parent !== null) {\n+            nodeOps.insertBefore(parent, vnode.elm, nodeOps.nextSibling(elm));\n+            removeVnodes(parent, [oldVnode], 0, 0);\n+          }\n+        }\n+      }\n+\n+      invokeInsertHook(insertedVnodeQueue);\n+      return vnode.elm;\n+    };\n+  }\n+\n+  function createElement$1(tagName) {\n+    return document.createElement(tagName);\n+  }\n+\n+  function createElementNS(namespace, tagName) {\n+    return document.createElementNS(namespaceMap[namespace], tagName);\n+  }\n+\n+  function createTextNode(text) {\n+    return document.createTextNode(text);\n+  }\n+\n+  function insertBefore(parentNode, newNode, referenceNode) {\n+    parentNode.insertBefore(newNode, referenceNode);\n+  }\n+\n+  function removeChild(node, child) {\n+    node.removeChild(child);\n+  }\n+\n+  function appendChild(node, child) {\n+    node.appendChild(child);\n+  }\n+\n+  function parentNode(node) {\n+    return node.parentElement;\n+  }\n+\n+  function nextSibling(node) {\n+    return node.nextSibling;\n+  }\n+\n+  function tagName(node) {\n+    return node.tagName;\n+  }\n+\n+  function setTextContent(node, text) {\n+    node.textContent = text;\n+  }\n+\n+var nodeOps = Object.freeze({\n+    createElement: createElement$1,\n+    createElementNS: createElementNS,\n+    createTextNode: createTextNode,\n+    insertBefore: insertBefore,\n+    removeChild: removeChild,\n+    appendChild: appendChild,\n+    parentNode: parentNode,\n+    nextSibling: nextSibling,\n+    tagName: tagName,\n+    setTextContent: setTextContent\n+  });\n+\n+  if (isIE9) {\n+    // http://www.matts411.com/post/internet-explorer-9-oninput/\n+    document.addEventListener('selectionchange', function () {\n+      var el = document.activeElement;\n+      if (el && el.vmodel) {\n+        trigger(el);\n+      }\n+    });\n+  }\n+\n+  var model = {\n+    bind: function bind(el) {\n+      if (!isAndroid) {\n+        el.addEventListener('compositionstart', onCompositionStart);\n+        el.addEventListener('compositionend', onCompositionEnd);\n+      }\n+      if (isIE9) {\n+        el.vmodel = true;\n+      }\n+    },\n+    unbind: function unbind(el) {\n+      if (!isAndroid) {\n+        el.removeEventListener('compositionstart', onCompositionStart);\n+        el.removeEventListener('compositionend', onCompositionEnd);\n+      }\n+    }\n+  };\n+\n+  function onCompositionStart(e) {\n+    e.target.composing = true;\n+  }\n+\n+  function onCompositionEnd(e) {\n+    e.target.composing = false;\n+    trigger(e.target);\n+  }\n+\n+  function trigger(el) {\n+    var e = document.createEvent('HTMLEvents');\n+    e.initEvent('input', true, true);\n+    el.dispatchEvent(e);\n+  }\n+\n+  var svgNS = namespaceMap.svg;\n+\n+  /**\n+   * In IE9, setAttribute('class') will result in empty class\n+   * if the element also has the :class attribute; However in\n+   * PhantomJS, setting `className` does not work on SVG elements...\n+   * So we have to do a conditional check here.\n+   *\n+   * @param {Element} el\n+   * @param {String} cls\n+   */\n+\n+  function setClass(el, cls) {\n+    /* istanbul ignore else */\n+    if (!isIE9 || el.namespaceURI === svgNS) {\n+      el.setAttribute('class', cls);\n+    } else {\n+      el.className = cls;\n+    }\n+  }\n+\n+  /**\n+   * Add class with compatibility for IE & SVG\n+   *\n+   * @param {Element} el\n+   * @param {String} cls\n+   */\n+\n+  function addClass(el, cls) {\n+    if (el.classList) {\n+      if (cls.indexOf(' ') > -1) {\n+        cls.split(/\\s+/).forEach(function (c) {\n+          return el.classList.add(c);\n+        });\n+      } else {\n+        el.classList.add(cls);\n+      }\n+    } else {\n+      var cur = ' ' + getClass(el) + ' ';\n+      if (cur.indexOf(' ' + cls + ' ') < 0) {\n+        setClass(el, (cur + cls).trim());\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Remove class with compatibility for IE & SVG\n+   *\n+   * @param {Element} el\n+   * @param {String} cls\n+   */\n+\n+  function removeClass(el, cls) {\n+    if (el.classList) {\n+      if (cls.indexOf(' ') > -1) {\n+        cls.split(/\\s+/).forEach(function (c) {\n+          return el.classList.remove(c);\n+        });\n+      } else {\n+        el.classList.remove(cls);\n+      }\n+    } else {\n+      var cur = ' ' + getClass(el) + ' ';\n+      var tar = ' ' + cls + ' ';\n+      while (cur.indexOf(tar) >= 0) {\n+        cur = cur.replace(tar, ' ');\n+      }\n+      setClass(el, cur.trim());\n+    }\n+    if (!el.className) {\n+      el.removeAttribute('class');\n+    }\n+  }\n+\n+  /**\n+   * For IE9 compat: when both class and :class are present\n+   * getAttribute('class') returns wrong value... but className\n+   * on SVG elements returns an object.\n+   *\n+   * @param {Element} el\n+   * @return {String}\n+   */\n+\n+  function getClass(el) {\n+    var classname = el.className;\n+    if (typeof classname === 'object') {\n+      classname = classname.baseVal || '';\n+    }\n+    return classname;\n+  }\n+\n+  var TRANSITION = 'transition';\n+  var ANIMATION = 'animation';\n+\n+  // Transition property/event sniffing\n+  var transitionProp = void 0;\n+  var transitionEndEvent = void 0;\n+  var animationProp = void 0;\n+  var animationEndEvent = void 0;\n+  if (inBrowser && !isIE9) {\n+    var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n+    var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n+    transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n+    transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n+    animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n+    animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n+  }\n+\n+  var raf = inBrowser && window.requestAnimationFrame || setTimeout;\n+  function nextFrame(fn) {\n+    raf(function () {\n+      raf(fn);\n+    });\n+  }\n+\n+  function enter(vnode) {\n+    var el = vnode.elm;\n+    // call leave callback now\n+    if (el._leaveCb) {\n+      el._leaveCb.cancelled = true;\n+      el._leaveCb();\n+    }\n+    var data = vnode.data.transition;\n+    if (!data) {\n+      return;\n+    }\n+    if (!vnode.context.$root._mounted && !data.appear) {\n+      return;\n+    }\n+\n+    var _resolveTransition = resolveTransition(data.definition, vnode.context);\n+\n+    var enterClass = _resolveTransition.enterClass;\n+    var enterActiveClass = _resolveTransition.enterActiveClass;\n+    var beforeEnter = _resolveTransition.beforeEnter;\n+    var enter = _resolveTransition.enter;\n+    var afterEnter = _resolveTransition.afterEnter;\n+    var enterCancelled = _resolveTransition.enterCancelled;\n+\n+\n+    var userWantsControl = enter && enter.length > 1;\n+    var cb = el._enterCb = once(function () {\n+      if (enterActiveClass) {\n+        removeTransitionClass(el, enterActiveClass);\n+      }\n+      if (cb.cancelled) {\n+        enterCancelled && enterCancelled(el);\n+      } else {\n+        afterEnter && afterEnter(el);\n+      }\n+      el._enterCb = null;\n+    });\n+\n+    beforeEnter && beforeEnter(el);\n+    if (enterClass) {\n+      addTransitionClass(el, enterClass);\n+      nextFrame(function () {\n+        removeTransitionClass(el, enterClass);\n+      });\n+    }\n+    if (enterActiveClass) {\n+      nextFrame(function () {\n+        addTransitionClass(el, enterActiveClass);\n+        if (!userWantsControl) {\n+          whenTransitionEnds(el, cb);\n+        }\n+      });\n+    }\n+    enter && enter(el, cb);\n+    if (!enterActiveClass && !userWantsControl) {\n+      cb();\n+    }\n+  }\n+\n+  function leave(vnode, rm) {\n+    var el = vnode.elm;\n+    // call enter callback now\n+    if (el._enterCb) {\n+      el._enterCb.cancelled = true;\n+      el._enterCb();\n+    }\n+    var data = vnode.data.transition;\n+    if (!data) {\n+      return rm();\n+    }\n+\n+    var _resolveTransition2 = resolveTransition(data.definition, vnode.context);\n+\n+    var leaveClass = _resolveTransition2.leaveClass;\n+    var leaveActiveClass = _resolveTransition2.leaveActiveClass;\n+    var beforeLeave = _resolveTransition2.beforeLeave;\n+    var leave = _resolveTransition2.leave;\n+    var afterLeave = _resolveTransition2.afterLeave;\n+    var leaveCancelled = _resolveTransition2.leaveCancelled;\n+\n+\n+    var userWantsControl = leave && leave.length > 1;\n+    var cb = el._leaveCb = once(function () {\n+      if (leaveActiveClass) {\n+        removeTransitionClass(el, leaveActiveClass);\n+      }\n+      if (cb.cancelled) {\n+        leaveCancelled && leaveCancelled(el);\n+      } else {\n+        rm();\n+        afterLeave && afterLeave(el);\n+      }\n+      el._leaveCb = null;\n+    });\n+\n+    beforeLeave && beforeLeave(el);\n+    if (leaveClass) {\n+      addTransitionClass(el, leaveClass);\n+      nextFrame(function () {\n+        removeTransitionClass(el, leaveClass);\n+      });\n+    }\n+    if (leaveActiveClass) {\n+      nextFrame(function () {\n+        addTransitionClass(el, leaveActiveClass);\n+        if (!userWantsControl) {\n+          whenTransitionEnds(el, cb);\n+        }\n+      });\n+    }\n+    leave && leave(el, cb);\n+    if (!leaveActiveClass && !userWantsControl) {\n+      cb();\n+    }\n+  }\n+\n+  function resolveTransition(id, context) {\n+    var definition = id && typeof id === 'string' ? resolveAsset(context.$options, 'transitions', id) || id : id;\n+    if (definition === true) definition = 'v';\n+    return typeof definition === 'string' ? autoCssTransition(definition) : definition;\n+  }\n+\n+  var autoCssTransition = cached(function (name) {\n+    return {\n+      enterClass: name + '-enter',\n+      leaveClass: name + '-leave',\n+      enterActiveClass: name + '-enter-active',\n+      leaveActiveClass: name + '-leave-active'\n+    };\n+  });\n+\n+  function addTransitionClass(el, cls) {\n+    (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n+    addClass(el, cls);\n+  }\n+\n+  function removeTransitionClass(el, cls) {\n+    remove(el._transitionClasses, cls);\n+    removeClass(el, cls);\n+  }\n+\n+  function whenTransitionEnds(el, cb) {\n+    var _getTransitionInfo = getTransitionInfo(el);\n+\n+    var type = _getTransitionInfo.type;\n+    var timeout = _getTransitionInfo.timeout;\n+    var propCount = _getTransitionInfo.propCount;\n+\n+    if (!type) return cb();\n+    var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n+    var ended = 0;\n+    var end = function end() {\n+      el.removeEventListener(event, onEnd);\n+      cb();\n+    };\n+    var onEnd = function onEnd() {\n+      if (++ended >= propCount) {\n+        end();\n+      }\n+    };\n+    setTimeout(function () {\n+      if (ended < propCount) {\n+        end();\n+      }\n+    }, timeout);\n+    el.addEventListener(event, onEnd);\n+  }\n+\n+  function getTransitionInfo(el) {\n+    var styles = window.getComputedStyle(el);\n+    // 1. determine the maximum duration (timeout)\n+    var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n+    var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n+    var animationDelays = styles[animationProp + 'Delay'].split(', ');\n+    var animationDurations = styles[animationProp + 'Duration'].split(', ');\n+    var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n+    var animationTimeout = getTimeout(animationDelays, animationDurations);\n+    var timeout = Math.max(transitionTimeout, animationTimeout);\n+    var type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n+    var propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n+    return {\n+      type: type,\n+      timeout: timeout,\n+      propCount: propCount\n+    };\n+  }\n+\n+  function getTimeout(delays, durations) {\n+    return Math.max.apply(null, durations.map(function (d, i) {\n+      return toMs(d) + toMs(delays[i]);\n+    }));\n+  }\n+\n+  function toMs(s) {\n+    return Number(s.slice(0, -1)) * 1000;\n+  }\n+\n+  function once(fn) {\n+    var called = false;\n+    return function () {\n+      if (!called) {\n+        called = true;\n+        fn();\n+      }\n+    };\n+  }\n+\n+  function shouldSkipTransition(vnode) {\n+    return(\n+      // if this is a component root node and the compoennt's\n+      // parent container node also has transition, skip.\n+      vnode.parent && vnode.parent.data.transition ||\n+      // if the element has v-show, let the runtime directive\n+      // call the hooks instead\n+      vnode.data.show\n+    );\n+  }\n+\n+  var transition = !transitionEndEvent ? {} : {\n+    create: function create(_, vnode) {\n+      if (!shouldSkipTransition(vnode)) {\n+        enter(vnode);\n+      }\n+    },\n+    remove: function remove(vnode, rm) {\n+      if (!shouldSkipTransition(vnode)) {\n+        leave(vnode, rm);\n+      } else {\n+        rm();\n+      }\n+    }\n+  };\n+\n+  var show = {\n+    bind: function bind(el, value, _, vnode) {\n+      var transition = getTransition(vnode);\n+      if (value && transition && transition.appea && !isIE9) {\n+        enter(vnode);\n+      }\n+      el.style.display = value ? '' : 'none';\n+    },\n+    update: function update(el, value, _, vnode) {\n+      var transition = getTransition(vnode);\n+      if (transition && !isIE9) {\n+        if (value) {\n+          enter(vnode);\n+          el.style.display = '';\n+        } else {\n+          leave(vnode, function () {\n+            el.style.display = 'none';\n+          });\n+        }\n+      } else {\n+        el.style.display = value ? '' : 'none';\n+      }\n+    }\n+  };\n+\n+  function getTransition(vnode) {\n+    var parent = vnode.parent;\n+    return parent && parent.data.transition != null ? parent.data.transition : vnode.data.transition;\n+  }\n+\n+  var platformDirectives = {\n+    model: model,\n+    show: show\n+  };\n+\n+  var directives = {\n+    create: function bindDirectives(oldVnode, vnode) {\n+      applyDirectives(oldVnode, vnode, 'bind');\n+    },\n+    update: function updateDirectives(oldVnode, vnode) {\n+      applyDirectives(oldVnode, vnode, 'update', true);\n+    },\n+    destroy: function unbindDirectives(vnode) {\n+      applyDirectives(null, vnode, 'unbind');\n+    }\n+  };\n+\n+  function applyDirectives(oldVnode, vnode, hook, update) {\n+    var dirs = vnode.data.directives;\n+    if (dirs) {\n+      for (var i = 0; i < dirs.length; i++) {\n+        var dir = dirs[i];\n+        var def = resolveAsset(vnode.context.$options, 'directives', dir.name, true);\n+        var fn = def && def[hook];\n+        if (fn) {\n+          // only call update if value has changed\n+          if (update) {\n+            var oldValue = oldVnode.data.directives[i].value;\n+            if (oldValue === dir.value) {\n+              continue;\n+            }\n+          }\n+          fn(vnode.elm, dir.value, dir.modifiers, vnode, oldVnode);\n+        }\n+      }\n+    }\n+  }\n+\n+  var baseModules = [directives];\n+\n+  function updateAttrs(oldVnode, vnode) {\n+    if (!oldVnode.data.attrs && !vnode.data.attrs) {\n+      return;\n+    }\n+    var key = void 0,\n+        cur = void 0,\n+        old = void 0;\n+    var elm = vnode.elm;\n+    var oldAttrs = oldVnode.data.attrs || {};\n+    var attrs = vnode.data.attrs || {};\n+\n+    for (key in attrs) {\n+      cur = attrs[key];\n+      old = oldAttrs[key];\n+      if (old !== cur) {\n+        setAttr(elm, key, cur);\n+      }\n+    }\n+    for (key in oldAttrs) {\n+      if (attrs[key] == null) {\n+        if (isXlink(key)) {\n+          elm.removeAttributeNS(xlinkNS, key);\n+        } else {\n+          elm.removeAttribute(key);\n+        }\n+      }\n+    }\n+  }\n+\n+  function setAttr(el, key, value) {\n+    if (isBooleanAttr(key)) {\n+      if (value == null) {\n+        el.removeAttribute(key);\n+      } else {\n+        el.setAttribute(key, key);\n+      }\n+    } else if (isEnumeratedAttr(key)) {\n+      el.setAttribute(key, value == null ? 'false' : 'true');\n+    } else if (isXlink(key)) {\n+      el.setAttributeNS(xlinkNS, key, value);\n+    } else {\n+      el.setAttribute(key, value);\n+    }\n+  }\n+\n+  var attrs = {\n+    create: function create(_, vnode) {\n+      var attrs = vnode.data.staticAttrs;\n+      if (attrs) {\n+        for (var key in attrs) {\n+          if (!vnode.elm) debugger;\n+          setAttr(vnode.elm, key, attrs[key]);\n+        }\n+      }\n+      updateAttrs(_, vnode);\n+    },\n+    update: updateAttrs\n+  };\n+\n+  function updateClass(oldVnode, vnode) {\n+    var el = vnode.elm;\n+    var data = vnode.data;\n+    if (!data.staticClass && !data.class) {\n+      return;\n+    }\n+\n+    var cls = genClassForVnode(vnode);\n+\n+    // handle transition classes\n+    var transitionClass = el._transitionClasses;\n+    if (transitionClass) {\n+      cls = concat(cls, stringifyClass(transitionClass));\n+    }\n+\n+    // set the class\n+    if (cls !== el._prevClass) {\n+      setClass(el, cls);\n+      el._prevClass = cls;\n+    }\n+  }\n+\n+  var klass = {\n+    create: updateClass,\n+    update: updateClass\n+  };\n+\n+  function updateDOMListeners(oldVnode, vnode) {\n+    if (!oldVnode.data.on && !vnode.data.on) {\n+      return;\n+    }\n+    var on = vnode.data.on || {};\n+    var oldOn = oldVnode.data.on || {};\n+    updateListeners(on, oldOn, function (event, handler, capture) {\n+      vnode.elm.addEventListener(event, handler, capture);\n+    });\n+  }\n+\n+  var events = {\n+    create: updateDOMListeners,\n+    update: updateDOMListeners\n+  };\n+\n+  function updateProps(oldVnode, vnode) {\n+    if (!oldVnode.data.props && !vnode.data.props) {\n+      return;\n+    }\n+    var key = void 0,\n+        cur = void 0,\n+        old = void 0;\n+    var elm = vnode.elm;\n+    var oldProps = oldVnode.data.props || {};\n+    var props = vnode.data.props || {};\n+\n+    for (key in oldProps) {\n+      if (props[key] == null) {\n+        elm[key] = undefined;\n+      }\n+    }\n+    for (key in props) {\n+      cur = props[key];\n+      old = oldProps[key];\n+      if (old !== cur) {\n+        if (key === 'value') {\n+          // store value as _value as well since\n+          // non-string values will be stringified\n+          if (elm._value !== cur) {\n+            elm.value = elm._value = cur;\n+          }\n+        } else {\n+          elm[key] = cur;\n+        }\n+      }\n+    }\n+  }\n+\n+  var props = {\n+    create: updateProps,\n+    update: updateProps\n+  };\n+\n+  var prefixes = ['Webkit', 'Moz', 'ms'];\n+  var testEl = inBrowser && document.createElement('div');\n+\n+  var normalize = cached(function (prop) {\n+    prop = camelize(prop);\n+    if (prop !== 'filter' && prop in testEl.style) {\n+      return prop;\n+    }\n+    var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n+    for (var i = 0; i < prefixes.length; i++) {\n+      var prefixed = prefixes[i] + upper;\n+      if (prefixed in testEl.style) {\n+        return prefixed;\n+      }\n+    }\n+  });\n+\n+  function updateStyle(oldVnode, vnode) {\n+    if (!oldVnode.data.style && !vnode.data.style) {\n+      return;\n+    }\n+    var cur = void 0,\n+        name = void 0;\n+    var elm = vnode.elm;\n+    var oldStyle = oldVnode.data.style || {};\n+    var style = vnode.data.style || {};\n+\n+    // handle array syntax\n+    if (isArray(style)) {\n+      style = vnode.data.style = toObject(style);\n+    }\n+\n+    for (name in oldStyle) {\n+      if (!style[name]) {\n+        elm.style[normalize(name)] = '';\n+      }\n+    }\n+    for (name in style) {\n+      cur = style[name];\n+      if (cur !== oldStyle[name]) {\n+        elm.style[normalize(name)] = cur;\n+      }\n+    }\n+  }\n+\n+  function toObject(arr) {\n+    var res = arr[0] || {};\n+    for (var i = 1; i < arr.length; i++) {\n+      if (arr[i]) {\n+        extend(res, arr[i]);\n+      }\n+    }\n+    return res;\n+  }\n+\n+  var style = {\n+    create: updateStyle,\n+    update: updateStyle\n+  };\n+\n+  var platformModules = [attrs, klass, events, props, style, transition];\n+\n+  // install platform specific utils\n+  Vue.config.isUnknownElement = isUnknownElement;\n+  Vue.config.isReservedTag = isReservedTag;\n+\n+  // install platform runtime directives\n+  Vue.options.directives = platformDirectives;\n+\n+  // install platform patch function\n+  var modules = baseModules.concat(platformModules);\n+  Vue.prototype.__patch__ = inBrowser ? createPatchFunction({ nodeOps: nodeOps, modules: modules }) : function noop() {};\n+\n+  // wrap mount\n+  Vue.prototype.$mount = function (el) {\n+    this.$el = el && query(el);\n+    this._mount();\n+  };\n+\n+  var decoder = document.createElement('div');\n+\n+  function decodeHTML(html) {\n+    decoder.innerHTML = html;\n+    return decoder.textContent;\n+  }\n+\n+  // Regular Expressions for parsing tags and attributes\n+  var singleAttrIdentifier = /([^\\s\"'<>\\/=]+)/;\n+  var singleAttrAssign = /=/;\n+  var singleAttrAssigns = [singleAttrAssign];\n+  var singleAttrValues = [\n+  // attr value double quotes\n+  /\"([^\"]*)\"+/.source,\n+  // attr value, single quotes\n+  /'([^']*)'+/.source,\n+  // attr value, no quotes\n+  /([^\\s\"'=<>`]+)/.source];\n+  // could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n+  // but for Vue templates we can enforce a simple charset\n+  var ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\n+  var qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\n+  var startTagOpen = new RegExp('^<' + qnameCapture);\n+  var startTagClose = /^\\s*(\\/?)>/;\n+  var endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\n+  var doctype = /^<!DOCTYPE [^>]+>/i;\n+\n+  var IS_REGEX_CAPTURING_BROKEN = false;\n+  'x'.replace(/x(.)?/g, function (m, g) {\n+    IS_REGEX_CAPTURING_BROKEN = g === '';\n+  });\n+\n+  // Special Elements (can contain anything)\n+  var special = makeMap('script,style', true);\n+\n+  var reCache = {};\n+\n+  function attrForHandler(handler) {\n+    var pattern = singleAttrIdentifier.source + '(?:\\\\s*(' + joinSingleAttrAssigns(handler) + ')' + '\\\\s*(?:' + singleAttrValues.join('|') + '))?';\n+    return new RegExp('^\\\\s*' + pattern);\n+  }\n+\n+  function joinSingleAttrAssigns(handler) {\n+    return singleAttrAssigns.map(function (assign) {\n+      return '(?:' + assign.source + ')';\n+    }).join('|');\n+  }\n+\n+  function parseHTML(html, handler) {\n+    var stack = [];\n+    var attribute = attrForHandler(handler);\n+    var expectHTML = handler.expectHTML;\n+    var isUnaryTag = handler.isUnaryTag || function () {\n+      return false;\n+    };\n+    var last = void 0,\n+        prevTag = void 0,\n+        nextTag = void 0,\n+        lastTag = void 0;\n+    while (html) {\n+      last = html;\n+      // Make sure we're not in a script or style element\n+      if (!lastTag || !special(lastTag)) {\n+        var textEnd = html.indexOf('<');\n+        if (textEnd === 0) {\n+          // Comment:\n+          if (/^<!--/.test(html)) {\n+            var commentEnd = html.indexOf('-->');\n+\n+            if (commentEnd >= 0) {\n+              html = html.substring(commentEnd + 3);\n+              prevTag = '';\n+              continue;\n+            }\n+          }\n+\n+          // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n+          if (/^<!\\[/.test(html)) {\n+            var conditionalEnd = html.indexOf(']>');\n+\n+            if (conditionalEnd >= 0) {\n+              html = html.substring(conditionalEnd + 2);\n+              prevTag = '';\n+              continue;\n+            }\n+          }\n+\n+          // Doctype:\n+          var doctypeMatch = html.match(doctype);\n+          if (doctypeMatch) {\n+            if (handler.doctype) {\n+              handler.doctype(doctypeMatch[0]);\n+            }\n+            html = html.substring(doctypeMatch[0].length);\n+            prevTag = '';\n+            continue;\n+          }\n+\n+          // End tag:\n+          var endTagMatch = html.match(endTag);\n+          if (endTagMatch) {\n+            html = html.substring(endTagMatch[0].length);\n+            endTagMatch[0].replace(endTag, parseEndTag);\n+            prevTag = '/' + endTagMatch[1].toLowerCase();\n+            continue;\n+          }\n+\n+          // Start tag:\n+          var startTagMatch = parseStartTag(html);\n+          if (startTagMatch) {\n+            html = startTagMatch.rest;\n+            handleStartTag(startTagMatch);\n+            prevTag = startTagMatch.tagName.toLowerCase();\n+            continue;\n+          }\n+        }\n+\n+        var text;\n+        if (textEnd >= 0) {\n+          text = html.substring(0, textEnd);\n+          html = html.substring(textEnd);\n+        } else {\n+          text = html;\n+          html = '';\n+        }\n+\n+        // next tag\n+        var nextTagMatch = parseStartTag(html);\n+        if (nextTagMatch) {\n+          nextTag = nextTagMatch.tagName;\n+        } else {\n+          nextTagMatch = html.match(endTag);\n+          if (nextTagMatch) {\n+            nextTag = '/' + nextTagMatch[1];\n+          } else {\n+            nextTag = '';\n+          }\n+        }\n+\n+        if (handler.chars) {\n+          handler.chars(text, prevTag, nextTag);\n+        }\n+        prevTag = '';\n+      } else {\n+        var stackedTag = lastTag.toLowerCase();\n+        var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)</' + stackedTag + '[^>]*>', 'i'));\n+\n+        html = html.replace(reStackedTag, function (all, text) {\n+          if (stackedTag !== 'script' && stackedTag !== 'style' && stackedTag !== 'noscript') {\n+            text = text.replace(/<!--([\\s\\S]*?)-->/g, '$1').replace(/<!\\[CDATA\\[([\\s\\S]*?)\\]\\]>/g, '$1');\n+          }\n+          if (handler.chars) {\n+            handler.chars(text);\n+          }\n+          return '';\n+        });\n+\n+        parseEndTag('</' + stackedTag + '>', stackedTag);\n+      }\n+\n+      if (html === last) {\n+        throw new Error('Error parsing template:\\n\\n' + html);\n+      }\n+    }\n+\n+    if (!handler.partialMarkup) {\n+      // Clean up any remaining tags\n+      parseEndTag();\n+    }\n+\n+    function parseStartTag(input) {\n+      var start = input.match(startTagOpen);\n+      if (start) {\n+        var match = {\n+          tagName: start[1],\n+          attrs: []\n+        };\n+        input = input.slice(start[0].length);\n+        var end, attr;\n+        while (!(end = input.match(startTagClose)) && (attr = input.match(attribute))) {\n+          input = input.slice(attr[0].length);\n+          match.attrs.push(attr);\n+        }\n+        if (end) {\n+          match.unarySlash = end[1];\n+          match.rest = input.slice(end[0].length);\n+          return match;\n+        }\n+      }\n+    }\n+\n+    function handleStartTag(match) {\n+      var tagName = match.tagName;\n+      var unarySlash = match.unarySlash;\n+\n+      if (expectHTML) {\n+        if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n+          parseEndTag('', lastTag);\n+        }\n+        if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n+          parseEndTag('', tagName);\n+        }\n+      }\n+\n+      var unary = isUnaryTag(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n+\n+      var attrs = match.attrs.map(function (args) {\n+        // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n+        if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n+          if (args[3] === '') {\n+            delete args[3];\n+          }\n+          if (args[4] === '') {\n+            delete args[4];\n+          }\n+          if (args[5] === '') {\n+            delete args[5];\n+          }\n+        }\n+        return {\n+          name: args[1],\n+          value: decodeHTML(args[3] || args[4] || args[5] || '')\n+        };\n+      });\n+\n+      if (!unary) {\n+        stack.push({ tag: tagName, attrs: attrs });\n+        lastTag = tagName;\n+        unarySlash = '';\n+      }\n+\n+      if (handler.start) {\n+        handler.start(tagName, attrs, unary, unarySlash);\n+      }\n+    }\n+\n+    function parseEndTag(tag, tagName) {\n+      var pos;\n+\n+      // Find the closest opened tag of the same type\n+      if (tagName) {\n+        var needle = tagName.toLowerCase();\n+        for (pos = stack.length - 1; pos >= 0; pos--) {\n+          if (stack[pos].tag.toLowerCase() === needle) {\n+            break;\n+          }\n+        }\n+      } else {\n+        // If no tag name is provided, clean shop\n+        pos = 0;\n+      }\n+\n+      if (pos >= 0) {\n+        // Close all the open elements, up the stack\n+        for (var i = stack.length - 1; i >= pos; i--) {\n+          if (handler.end) {\n+            handler.end(stack[i].tag, stack[i].attrs, i > pos || !tag);\n+          }\n+        }\n+\n+        // Remove the open elements from the stack\n+        stack.length = pos;\n+        lastTag = pos && stack[pos - 1].tag;\n+      } else if (tagName.toLowerCase() === 'br') {\n+        if (handler.start) {\n+          handler.start(tagName, [], true, '');\n+        }\n+      } else if (tagName.toLowerCase() === 'p') {\n+        if (handler.start) {\n+          handler.start(tagName, [], false, '', true);\n+        }\n+        if (handler.end) {\n+          handler.end(tagName, []);\n+        }\n+      }\n+    }\n+  }\n+\n+  var tagRE = /\\{\\{((?:.|\\\\n)+?)\\}\\}/g;\n+\n+  function parseText(text) {\n+    if (!tagRE.test(text)) {\n+      return null;\n+    }\n+    var tokens = [];\n+    var lastIndex = tagRE.lastIndex = 0;\n+    var match, index;\n+    while (match = tagRE.exec(text)) {\n+      index = match.index;\n+      // push text token\n+      if (index > lastIndex) {\n+        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n+      }\n+      // tag token\n+      var exp = match[1].trim();\n+      tokens.push('__toString__(' + exp + ')');\n+      lastIndex = index + match[0].length;\n+    }\n+    if (lastIndex < text.length) {\n+      tokens.push(JSON.stringify(text.slice(lastIndex)));\n+    }\n+    return tokens.join('+');\n+  }\n+\n+  function addProp(el, name, value) {\n+    (el.props || (el.props = [])).push({ name: name, value: value });\n+  }\n+\n+  function addAttr(el, name, value) {\n+    (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n+  }\n+\n+  function addStaticAttr(el, name, value) {\n+    (el.staticAttrs || (el.staticAttrs = [])).push({ name: name, value: value });\n+  }\n+\n+  function addDirective(el, name, value, arg, modifiers) {\n+    (el.directives || (el.directives = [])).push({ name: name, value: value, arg: arg, modifiers: modifiers });\n+  }\n+\n+  function addHook(el, name, code) {\n+    var hooks = el.hooks || (el.hooks = {});\n+    var hook = hooks[name];\n+    if (hook) {\n+      hook.push(code);\n+    } else {\n+      hooks[name] = [code];\n+    }\n+  }\n+\n+  function addHandler(el, name, value, modifiers) {\n+    var events = el.events || (el.events = {});\n+    // check capture modifier\n+    if (modifiers && modifiers.capture) {\n+      delete modifiers.capture;\n+      name = '!' + name; // mark the event as captured\n+    }\n+    var newHandler = { value: value, modifiers: modifiers };\n+    var handlers = events[name];\n+    if (isArray(handlers)) {\n+      handlers.push(newHandler);\n+    } else if (handlers) {\n+      events[name] = [handlers, newHandler];\n+    } else {\n+      events[name] = newHandler;\n+    }\n+  }\n+\n+  function getBindingAttr(el, name, getStatic) {\n+    var staticValue = getStatic !== false && getAndRemoveAttr(el, name);\n+    return staticValue || staticValue === '' ? JSON.stringify(staticValue) : getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);\n+  }\n+\n+  function getAndRemoveAttr(el, name) {\n+    var val = void 0;\n+    if ((val = el.attrsMap[name]) != null) {\n+      el.attrsMap[name] = null;\n+      var list = el.attrsList;\n+      for (var i = 0, l = list.length; i < l; i++) {\n+        if (list[i].name === name) {\n+          list.splice(i, 1);\n+          break;\n+        }\n+      }\n+    }\n+    return val;\n+  }\n+\n+  var dirRE = /^v-|^@|^:/;\n+  var bindRE = /^:|^v-bind:/;\n+  var onRE = /^@|^v-on:/;\n+  var argRE = /:(.*)$/;\n+  var modifierRE = /\\.[^\\.]+/g;\n+  var forAliasRE = /(.*)\\s+(?:in|of)\\s+(.*)/;\n+  var forIteratorRE = /\\((.*),(.*)\\)/;\n+  var camelRE = /[a-z\\d][A-Z]/;\n+\n+  var decodeHTMLCached = cached(decodeHTML);\n+\n+  // make warning customizable depending on environment.\n+  var warn$1 = void 0;\n+  var baseWarn = function baseWarn(msg) {\n+    return console.error('[Vue parser]: ' + msg);\n+  };\n+\n+  // platform-injected util functions\n+  var platformGetTagNamespace = void 0;\n+  var platformMustUseProp = void 0;\n+\n+  /**\n+   * Convert HTML string to AST.\n+   *\n+   * @param {String} template\n+   * @param {Object} options\n+   * @return {Object}\n+   */\n+\n+  function parse(template, options) {\n+    warn$1 = options.warn || baseWarn;\n+    platformGetTagNamespace = options.getTagNamespace || function () {\n+      return null;\n+    };\n+    platformMustUseProp = options.mustUseProp || function () {\n+      return false;\n+    };\n+    var stack = [];\n+    var root = void 0;\n+    var currentParent = void 0;\n+    var inPre = false;\n+    var warned = false;\n+    parseHTML(template, {\n+      expectHTML: options.expectHTML,\n+      isUnaryTag: options.isUnaryTag,\n+      start: function start(tag, attrs, unary) {\n+        // check camelCase tag\n+        if (camelRE.test(tag)) {\n+          \"development\" !== 'production' && warn$1('Found camelCase tag in template: <' + tag + '>. ' + ('I\\'ve converted it to <' + hyphenate(tag) + '> for you.'));\n+          tag = hyphenate(tag);\n+        }\n+\n+        tag = tag.toLowerCase();\n+        var element = {\n+          tag: tag,\n+          attrsList: attrs,\n+          attrsMap: makeAttrsMap(attrs),\n+          parent: currentParent,\n+          children: []\n+        };\n+\n+        // check namespace.\n+        // inherit parent ns if there is one\n+        var ns = void 0;\n+        if ((ns = currentParent && currentParent.ns) || (ns = platformGetTagNamespace(tag))) {\n+          element.ns = ns;\n+        }\n+\n+        if (!inPre) {\n+          processPre(element);\n+          if (element.pre) {\n+            inPre = true;\n+          }\n+        }\n+        if (inPre) {\n+          processRawAttrs(element);\n+        } else {\n+          processFor(element);\n+          processIf(element);\n+          processOnce(element);\n+          // determine whether this is a plain element after\n+          // removing if/for/once attributes\n+          element.plain = !attrs.length;\n+          processRender(element);\n+          processSlot(element);\n+          processComponent(element);\n+          processClassBinding(element);\n+          processStyleBinding(element);\n+          processTransition(element);\n+          processAttrs(element);\n+        }\n+\n+        // tree management\n+        if (!root) {\n+          root = element;\n+        } else if (\"development\" !== 'production' && !stack.length && !warned) {\n+          warned = true;\n+          warn$1('Component template should contain exactly one root element:\\n\\n' + template);\n+        }\n+        if (currentParent) {\n+          if (element.else) {\n+            processElse(element, currentParent);\n+          } else {\n+            currentParent.children.push(element);\n+            element.parent = currentParent;\n+          }\n+        }\n+        if (!unary) {\n+          currentParent = element;\n+          stack.push(element);\n+        }\n+      },\n+      end: function end(tag) {\n+        // remove trailing whitespace\n+        var element = stack[stack.length - 1];\n+        var lastNode = element.children[element.children.length - 1];\n+        if (lastNode && lastNode.text === ' ') element.children.pop();\n+        // pop stack\n+        stack.length -= 1;\n+        currentParent = stack[stack.length - 1];\n+        // check pre state\n+        if (element.pre) {\n+          inPre = false;\n+        }\n+      },\n+      chars: function chars(text) {\n+        if (!currentParent) {\n+          if (\"development\" !== 'production' && !warned) {\n+            warned = true;\n+            warn$1('Component template should contain exactly one root element:\\n\\n' + template);\n+          }\n+          return;\n+        }\n+        text = currentParent.tag === 'pre' || text.trim() ? decodeHTMLCached(text)\n+        // only preserve whitespace if its not right after a starting tag\n+        : options.preserveWhitespace && currentParent.children.length ? ' ' : null;\n+        if (text) {\n+          var expression = void 0;\n+          if (!inPre && text !== ' ' && (expression = parseText(text))) {\n+            currentParent.children.push({ expression: expression });\n+          } else {\n+            currentParent.children.push({ text: text });\n+          }\n+        }\n+      }\n+    });\n+    return root;\n+  }\n+\n+  function processPre(el) {\n+    if (getAndRemoveAttr(el, 'v-pre') != null) {\n+      el.pre = true;\n+    }\n+  }\n+\n+  function processRawAttrs(el) {\n+    var l = el.attrsList.length;\n+    if (l) {\n+      el.attrs = new Array(l);\n+      for (var i = 0; i < l; i++) {\n+        el.attrs[i] = {\n+          name: el.attrsList[i].name,\n+          value: JSON.stringify(el.attrsList[i].value)\n+        };\n+      }\n+    }\n+  }\n+\n+  function processFor(el) {\n+    var exp = void 0;\n+    if (exp = getAndRemoveAttr(el, 'v-for')) {\n+      var inMatch = exp.match(forAliasRE);\n+      if (!inMatch) {\n+        \"development\" !== 'production' && warn$1('Invalid v-for expression: ' + exp);\n+        return;\n+      }\n+      el.for = inMatch[2].trim();\n+      var alias = inMatch[1].trim();\n+      var iteratorMatch = alias.match(forIteratorRE);\n+      if (iteratorMatch) {\n+        el.iterator = iteratorMatch[1].trim();\n+        el.alias = iteratorMatch[2].trim();\n+      } else {\n+        el.alias = alias;\n+      }\n+      if (exp = getAndRemoveAttr(el, 'track-by')) {\n+        el.key = exp === '$index' ? exp : el.alias + '[\"' + exp + '\"]';\n+      }\n+    }\n+  }\n+\n+  function processIf(el) {\n+    var exp = getAndRemoveAttr(el, 'v-if');\n+    if (exp) {\n+      el.if = exp;\n+    }\n+    if (getAndRemoveAttr(el, 'v-else') != null) {\n+      el.else = true;\n+    }\n+  }\n+\n+  function processElse(el, parent) {\n+    var prev = findPrevElement(parent.children);\n+    if (prev && (prev.if || prev.attrsMap['v-show'])) {\n+      if (prev.if) {\n+        // v-if\n+        prev.elseBlock = el;\n+      } else {\n+        // v-show: simply add a v-show with reversed value\n+        addDirective(el, 'show', '!(' + prev.attrsMap['v-show'] + ')');\n+        // also copy its transition\n+        el.transition = prev.transition;\n+        // als set show to true\n+        el.show = true;\n+        parent.children.push(el);\n+      }\n+    } else if (\"development\" !== 'production') {\n+      warn$1('v-else used on element <' + el.tag + '> without corresponding v-if/v-show.');\n+    }\n+  }\n+\n+  function processOnce(el) {\n+    var once = getAndRemoveAttr(el, 'v-once');\n+    if (once != null) {\n+      el.once = true;\n+    }\n+  }\n+\n+  function processRender(el) {\n+    if (el.tag === 'render') {\n+      el.render = true;\n+      el.renderMethod = el.attrsMap.method;\n+      el.renderArgs = el.attrsMap[':args'] || el.attrsMap['v-bind:args'];\n+      if (\"development\" !== 'production') {\n+        if (!el.renderMethod) {\n+          warn$1('method attribute is required on <render>.');\n+        }\n+        if (el.attrsMap.args) {\n+          warn$1('<render> args should use a dynamic binding, e.g. `:args=\"...\"`.');\n+        }\n+      }\n+    }\n+  }\n+\n+  function processSlot(el) {\n+    if (el.tag === 'slot') {\n+      el.slotName = getBindingAttr(el, 'name');\n+    } else {\n+      var slotTarget = getBindingAttr(el, 'slot');\n+      if (slotTarget) {\n+        el.slotTarget = slotTarget;\n+      }\n+    }\n+  }\n+\n+  function processComponent(el) {\n+    if (el.tag === 'component') {\n+      el.component = getBindingAttr(el, 'is');\n+    }\n+  }\n+\n+  function processClassBinding(el) {\n+    var staticClass = getAndRemoveAttr(el, 'class');\n+    el.staticClass = parseText(staticClass) || JSON.stringify(staticClass);\n+    var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n+    if (classBinding) {\n+      el.classBinding = classBinding;\n+    }\n+  }\n+\n+  function processStyleBinding(el) {\n+    var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n+    if (styleBinding) {\n+      el.styleBinding = styleBinding;\n+    }\n+  }\n+\n+  function processTransition(el) {\n+    var transition = getBindingAttr(el, 'transition');\n+    if (transition === '\"\"') {\n+      transition = true;\n+    }\n+    if (transition) {\n+      el.transition = transition;\n+      el.transitionOnAppear = getBindingAttr(el, 'transition-on-appear') != null;\n+    }\n+  }\n+\n+  function processAttrs(el) {\n+    var list = el.attrsList;\n+    var i = void 0,\n+        l = void 0,\n+        name = void 0,\n+        value = void 0,\n+        arg = void 0,\n+        modifiers = void 0;\n+    for (i = 0, l = list.length; i < l; i++) {\n+      name = list[i].name;\n+      value = list[i].value;\n+      if (dirRE.test(name)) {\n+        // modifiers\n+        modifiers = parseModifiers(name);\n+        if (modifiers) {\n+          name = name.replace(modifierRE, '');\n+        }\n+        if (bindRE.test(name)) {\n+          // v-bind\n+          name = name.replace(bindRE, '');\n+          if (platformMustUseProp(name)) {\n+            addProp(el, name, value);\n+          } else {\n+            addAttr(el, name, value);\n+          }\n+        } else if (onRE.test(name)) {\n+          // v-on\n+          name = name.replace(onRE, '');\n+          addHandler(el, name, value, modifiers);\n+        } else {\n+          // normal directives\n+          name = name.replace(dirRE, '');\n+          // parse arg\n+          if ((arg = name.match(argRE)) && (arg = arg[1])) {\n+            name = name.slice(0, -(arg.length + 1));\n+          }\n+          addDirective(el, name, value, arg, modifiers);\n+        }\n+      } else {\n+        // literal attribute\n+        var expression = parseText(value);\n+        if (expression) {\n+          warn$1('Interpolation inside attributes has been deprecated. ' + 'Use v-bind or the colon shorthand instead.');\n+        } else {\n+          addStaticAttr(el, name, JSON.stringify(value));\n+        }\n+      }\n+    }\n+  }\n+\n+  function parseModifiers(name) {\n+    var match = name.match(modifierRE);\n+    if (match) {\n+      var _ret = function () {\n+        var ret = {};\n+        match.forEach(function (m) {\n+          ret[m.slice(1)] = true;\n+        });\n+        return {\n+          v: ret\n+        };\n+      }();\n+\n+      if (typeof _ret === \"object\") return _ret.v;\n+    }\n+  }\n+\n+  function makeAttrsMap(attrs) {\n+    var map = {};\n+    for (var i = 0, l = attrs.length; i < l; i++) {\n+      if (\"development\" !== 'production' && map[attrs[i].name]) {\n+        warn$1('duplicate attribute: ' + attrs[i].name);\n+      }\n+      map[attrs[i].name] = attrs[i].value;\n+    }\n+    return map;\n+  }\n+\n+  function findPrevElement(children) {\n+    var i = children.length;\n+    while (i--) {\n+      if (children[i].tag) return children[i];\n+    }\n+  }\n+\n+  var isPlatformReservedTag = void 0;\n+\n+  /**\n+   * Goal of the optimizier: walk the generated template AST tree\n+   * and detect sub-trees that are purely static, i.e. parts of\n+   * the DOM that never needs to change.\n+   *\n+   * Once we detect these sub-trees, we can:\n+   *\n+   * 1. Hoist them into constants, so that we no longer need to\n+   *    create fresh nodes for them on each re-render;\n+   * 2. Completely skip them in the patching process.\n+   */\n+\n+  function optimize(root, options) {\n+    isPlatformReservedTag = options.isReservedTag || function () {\n+      return false;\n+    };\n+    // first pass: mark all non-static nodes.\n+    markStatic(root);\n+    // second pass: mark static roots.\n+    markStaticRoots(root);\n+  }\n+\n+  function markStatic(node) {\n+    node.static = isStatic(node);\n+    if (node.children) {\n+      for (var i = 0, l = node.children.length; i < l; i++) {\n+        var child = node.children[i];\n+        markStatic(child);\n+        if (!child.static) {\n+          node.static = false;\n+        }\n+      }\n+    }\n+  }\n+\n+  function markStaticRoots(node) {\n+    if (node.tag && (node.once || node.static)) {\n+      node.staticRoot = true;\n+      return;\n+    }\n+    if (node.children) {\n+      for (var i = 0, l = node.children.length; i < l; i++) {\n+        markStaticRoots(node.children[i]);\n+      }\n+    }\n+  }\n+\n+  var isStaticKey = makeMap('tag,attrsList,attrsMap,plain,parent,children,' + 'staticAttrs,staticClass');\n+\n+  function isStatic(node) {\n+    return !!(node.text || node.pre || !node.expression && // not text with interpolation\n+    !node.if && !node.for && ( // not v-if or v-for or v-else\n+    !node.tag || isPlatformReservedTag(node.tag)) && // not a component\n+    !isBuiltInTag(node.tag) && ( // not a built-in\n+    node.plain || Object.keys(node).every(isStaticKey)) // no dynamic bindings\n+    );\n+  }\n+\n+  var simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n+\n+  // keyCode aliases\n+  var keyCodes = {\n+    esc: 27,\n+    tab: 9,\n+    enter: 13,\n+    space: 32,\n+    up: 38,\n+    left: 37,\n+    right: 39,\n+    down: 40,\n+    'delete': [8, 46]\n+  };\n+\n+  var modifierCode = {\n+    stop: '$event.stopPropagation();',\n+    prevent: '$event.preventDefault();',\n+    self: 'if($event.target !== $event.currentTarget)return;'\n+  };\n+\n+  function genHandlers(events) {\n+    var res = 'on:{';\n+    for (var name in events) {\n+      res += '\"' + name + '\":' + genHandler(events[name]) + ',';\n+    }\n+    return res.slice(0, -1) + '}';\n+  }\n+\n+  function genHandler(handler) {\n+    if (!handler) {\n+      return 'function(){}';\n+    } else if (isArray(handler)) {\n+      return '[' + handler.map(genHandler).join(',') + ']';\n+    } else if (!handler.modifiers) {\n+      return simplePathRE.test(handler.value) ? handler.value : 'function($event){' + handler.value + '}';\n+    } else {\n+      var code = 'function($event){';\n+      for (var key in handler.modifiers) {\n+        code += modifierCode[key] || genKeyFilter(key);\n+      }\n+      var handlerCode = simplePathRE.test(handler.value) ? handler.value + '($event)' : handler.value;\n+      return code + handlerCode + '}';\n+    }\n+  }\n+\n+  function genKeyFilter(key) {\n+    var code = keyCodes[key];\n+    if (isArray(code)) {\n+      return 'if(' + code.map(function (c) {\n+        return '$event.keyCode!==' + c;\n+      }).join('&&') + ')return;';\n+    } else {\n+      return 'if($event.keyCode!==' + code + ')return;';\n+    }\n+  }\n+\n+  function ref(el, dir) {\n+    // go up and check if this node is inside a v-for\n+    var isFor = false;\n+    var parent = el;\n+    while (parent) {\n+      if (parent.for !== undefined) {\n+        isFor = true;\n+      }\n+      parent = parent.parent;\n+    }\n+    // __registerRef__(name, ref, vFor?, remove?)\n+    var code = '__registerRef__(\"' + dir.arg + '\", n1.child || n1.elm, ' + (isFor ? 'true' : 'false');\n+    addHook(el, 'insert', code + ')');\n+    addHook(el, 'destroy', code + ', true)');\n+  }\n+\n+  var baseDirectives = {\n+    ref: ref,\n+    cloak: function cloak() {} // noop\n+  };\n+\n+  // platform-injected utils\n+  var platformDirectives$1 = void 0;\n+  var isPlatformReservedTag$1 = void 0;\n+\n+  // reset on each call\n+  var staticRenderFns = void 0;\n+\n+  function generate(ast, options) {\n+    staticRenderFns = [];\n+    platformDirectives$1 = options.directives || {};\n+    isPlatformReservedTag$1 = options.isReservedTag || function () {\n+      return false;\n+    };\n+    var code = ast ? genElement(ast) : '__h__(\"div\")';\n+    return {\n+      render: 'with (this) { return ' + code + '}',\n+      staticRenderFns: staticRenderFns\n+    };\n+  }\n+\n+  function genElement(el) {\n+    if (el.for) {\n+      return genFor(el);\n+    } else if (el.if) {\n+      return genIf(el);\n+    } else if (el.tag === 'template' && !el.slotTarget) {\n+      return genChildren(el);\n+    } else if (el.tag === 'render') {\n+      return genRender(el);\n+    } else if (el.tag === 'slot') {\n+      return genSlot(el);\n+    } else if (el.tag === 'component') {\n+      return genComponent(el);\n+    } else {\n+      // if the element is potentially a component,\n+      // wrap its children as a thunk.\n+      var children = genChildren(el, !isPlatformReservedTag$1(el.tag) /* asThunk */);\n+      var code = '__h__(\\'' + el.tag + '\\', ' + genData(el) + ', ' + children + ', \\'' + (el.ns || '') + '\\')';\n+      if (el.staticRoot) {\n+        // hoist static sub-trees out\n+        staticRenderFns.push('with(this){return ' + code + '}');\n+        return '_staticTrees[' + (staticRenderFns.length - 1) + ']';\n+      } else {\n+        return code;\n+      }\n+    }\n+  }\n+\n+  function genIf(el) {\n+    var exp = el.if;\n+    el.if = false; // avoid recursion\n+    return '(' + exp + ') ? ' + genElement(el) + ' : ' + genElse(el);\n+  }\n+\n+  function genElse(el) {\n+    return el.elseBlock ? genElement(el.elseBlock) : 'null';\n+  }\n+\n+  function genFor(el) {\n+    var exp = el.for;\n+    var alias = el.alias;\n+    var iterator = el.iterator;\n+    el.for = false; // avoid recursion\n+    return '(' + exp + ')&&__renderList__((' + exp + '), ' + ('function(' + alias + ',$index' + (iterator ? ',' + iterator : '') + '){') + ('return ' + genElement(el)) + '})';\n+  }\n+\n+  function genData(el) {\n+    if (el.plain) {\n+      return 'undefined';\n+    }\n+\n+    var data = '{';\n+\n+    // directives first.\n+    // directives may mutate the el's other properties before they are generated.\n+    if (el.directives) {\n+      var dirs = genDirectives(el);\n+      if (dirs) data += dirs + ',';\n+    }\n+    // pre\n+    if (el.pre) {\n+      data += 'pre:true,';\n+    }\n+    // key\n+    if (el.key) {\n+      data += 'key:' + el.key + ',';\n+    }\n+    // slot target\n+    if (el.slotTarget) {\n+      data += 'slot:' + el.slotTarget + ',';\n+    }\n+    // class\n+    if (el.staticClass) {\n+      data += 'staticClass:' + el.staticClass + ',';\n+    }\n+    if (el.classBinding) {\n+      data += 'class:' + el.classBinding + ',';\n+    }\n+    // style\n+    if (el.styleBinding) {\n+      data += 'style:' + el.styleBinding + ',';\n+    }\n+    // transition\n+    if (el.transition) {\n+      data += 'transition:{definition:(' + el.transition + '),appear:' + el.transitionOnAppear + '},';\n+    }\n+    // v-show, used to avoid transition being applied\n+    // since v-show takes it over\n+    if (el.attrsMap['v-show'] || el.show) {\n+      data += 'show:true,';\n+    }\n+    // props\n+    if (el.props) {\n+      data += 'props:{' + genProps(el.props) + '},';\n+    }\n+    // attributes\n+    if (el.attrs) {\n+      data += 'attrs:{' + genProps(el.attrs) + '},';\n+    }\n+    // static attributes\n+    if (el.staticAttrs) {\n+      data += 'staticAttrs:{' + genProps(el.staticAttrs) + '},';\n+    }\n+    // hooks\n+    if (el.hooks) {\n+      data += 'hook:{' + genHooks(el.hooks) + '},';\n+    }\n+    // event handlers\n+    if (el.events) {\n+      data += genHandlers(el.events);\n+    }\n+    return data.replace(/,$/, '') + '}';\n+  }\n+\n+  function genDirectives(el) {\n+    var dirs = el.directives;\n+    var res = 'directives:[';\n+    var hasRuntime = false;\n+    var i = void 0,\n+        l = void 0,\n+        dir = void 0,\n+        needRuntime = void 0;\n+    for (i = 0, l = dirs.length; i < l; i++) {\n+      dir = dirs[i];\n+      needRuntime = true;\n+      var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n+      if (gen) {\n+        // compile-time directive that manipulates AST.\n+        // returns true if it also needs a runtime counterpart.\n+        needRuntime = !!gen(el, dir);\n+      }\n+      if (needRuntime) {\n+        hasRuntime = true;\n+        res += '{name:\"' + dir.name + '\"' + (dir.value ? ',value:(' + dir.value + ')' : '') + (dir.arg ? ',arg:\"' + dir.arg + '\"' : '') + (dir.modifiers ? ',modifiers:' + JSON.stringify(dir.modifiers) : '') + '},';\n+      }\n+    }\n+    if (hasRuntime) {\n+      return res.slice(0, -1) + ']';\n+    }\n+  }\n+\n+  function genChildren(el, asThunk) {\n+    if (!el.children.length) {\n+      return 'undefined';\n+    }\n+    var code = '[' + el.children.map(genNode).join(',') + ']';\n+    return asThunk ? 'function(){return ' + code + '}' : code;\n+  }\n+\n+  function genNode(node) {\n+    if (node.tag) {\n+      return genElement(node);\n+    } else {\n+      return genText(node);\n+    }\n+  }\n+\n+  function genText(text) {\n+    return text.expression ? '(' + text.expression + ')' : JSON.stringify(text.text);\n+  }\n+\n+  function genRender(el) {\n+    return el.renderMethod + '(' + (el.renderArgs || 'null') + ',' + genChildren(el) + ')';\n+  }\n+\n+  function genSlot(el) {\n+    var name = el.slotName || '\"default\"';\n+    return '($slots[' + name + '] || ' + genChildren(el) + ')';\n+  }\n+\n+  function genComponent(el) {\n+    return '__h__(' + el.component + ', ' + genData(el) + ', ' + genChildren(el, true) + ')';\n+  }\n+\n+  function genProps(props) {\n+    var res = '';\n+    for (var i = 0; i < props.length; i++) {\n+      var prop = props[i];\n+      res += '\"' + prop.name + '\":' + prop.value + ',';\n+    }\n+    return res.slice(0, -1);\n+  }\n+\n+  function genHooks(hooks) {\n+    var res = '';\n+    for (var key in hooks) {\n+      res += '\"' + key + '\":function(n1,n2){' + hooks[key].join(';') + '},';\n+    }\n+    return res.slice(0, -1);\n+  }\n+\n+  /**\n+   * Compile a template.\n+   *\n+   * @param {String} template\n+   * @param {Object} options\n+   *                 - warn\n+   *                 - directives\n+   *                 - isReservedTag\n+   *                 - mustUseProp\n+   *                 - getTagNamespace\n+   */\n+\n+  function compile$1(template, options) {\n+    var ast = parse(template.trim(), options);\n+    optimize(ast, options);\n+    return generate(ast, options);\n+  }\n+\n+  function model$1(el, dir) {\n+    var value = dir.value;\n+    var modifiers = dir.modifiers;\n+    if (el.tag === 'select') {\n+      if (el.attrsMap.multiple != null) {\n+        genMultiSelect(el, value);\n+      } else {\n+        genSelect(el, value);\n+      }\n+    } else {\n+      switch (el.attrsMap.type) {\n+        case 'checkbox':\n+          genCheckboxModel(el, value);\n+          break;\n+        case 'radio':\n+          genRadioModel(el, value);\n+          break;\n+        default:\n+          return genDefaultModel(el, value, modifiers);\n+      }\n+    }\n+  }\n+\n+  function genCheckboxModel(el, value) {\n+    var valueBinding = getBindingAttr(el, 'value');\n+    addProp(el, 'checked', 'Array.isArray(' + value + ')' + ('?(' + value + ').indexOf(' + valueBinding + ')>-1') + (':!!(' + value + ')'));\n+    addHandler(el, 'change', 'var $$a=' + value + ',' + '$$el=$event.target,' + '$$c=$$el.checked;' + 'if(Array.isArray($$a)){' + ('var $$v=' + valueBinding + ',') + '$$i=$$a.indexOf($$v);' + 'if($$c){$$i<0&&$$a.push($$v)}' + 'else{$$i>-1&&$$a.splice($$i,1)}' + ('}else{' + value + '=$$c}'));\n+  }\n+\n+  function genRadioModel(el, value) {\n+    var valueBinding = getBindingAttr(el, 'value');\n+    addProp(el, 'checked', '(' + value + '==' + valueBinding + ')');\n+    addHandler(el, 'change', value + '=' + valueBinding);\n+  }\n+\n+  function genDefaultModel(el, value, modifiers) {\n+    var type = el.attrsMap.type;\n+\n+    var _ref = modifiers || {};\n+\n+    var lazy = _ref.lazy;\n+    var number = _ref.number;\n+    var trim = _ref.trim;\n+\n+    var event = lazy ? 'change' : 'input';\n+    var needCompositionGuard = !lazy && type !== 'range';\n+\n+    var valueExpression = '$event.target.value' + (trim ? '.trim()' : '');\n+    var code = number || type === 'number' ? value + '=Number(' + valueExpression + ')' : value + '=' + valueExpression;\n+    if (needCompositionGuard) {\n+      code = 'if($event.target.composing)return;' + code;\n+    }\n+    addProp(el, 'value', '(' + value + ')');\n+    addHandler(el, event, code);\n+    if (needCompositionGuard) {\n+      // need runtime directive code to help with composition events\n+      return true;\n+    }\n+  }\n+\n+  var getSelectedValueCode = 'Array.prototype.filter' + '.call($event.target.options,function(o){return o.selected})' + '.map(function(o){return \"_value\" in o ? o._value : o.value})';\n+\n+  function patchChildOptions(el, fn) {\n+    for (var i = 0; i < el.children.length; i++) {\n+      var c = el.children[i];\n+      if (c.tag === 'option') {\n+        addProp(c, 'selected', fn(getBindingAttr(c, 'value')));\n+      }\n+    }\n+  }\n+\n+  function genSelect(el, value) {\n+    addHandler(el, 'change', value + '=' + getSelectedValueCode + '[0]');\n+    patchChildOptions(el, function (valueBinding) {\n+      return '$(' + value + ')===(' + valueBinding + ')';\n+    });\n+  }\n+\n+  function genMultiSelect(el, value) {\n+    addHandler(el, 'change', value + '=' + getSelectedValueCode);\n+    patchChildOptions(el, function (valueBinding) {\n+      return '$(' + value + ').indexOf(' + valueBinding + ')>-1';\n+    });\n+  }\n+\n+  function text(el, dir) {\n+    if (!dir.value) return;\n+    addProp(el, 'textContent', '__toString__(' + dir.value + ')');\n+  }\n+\n+  function html(el, dir) {\n+    if (!dir.value) return;\n+    addProp(el, 'innerHTML', '__toString__(' + dir.value + ')');\n+  }\n+\n+  var directives$1 = {\n+    model: model$1,\n+    text: text,\n+    html: html\n+  };\n+\n+  var cache1 = Object.create(null);\n+  var cache2 = Object.create(null);\n+\n+  var baseOptions = {\n+    expectHTML: true,\n+    directives: directives$1,\n+    isReservedTag: isReservedTag,\n+    isUnaryTag: isUnaryTag,\n+    mustUseProp: mustUseProp,\n+    getTagNamespace: getTagNamespace\n+  };\n+\n+  function compile(template, options) {\n+    options = options ? extend(extend({}, baseOptions), options) : baseOptions;\n+    return compile$1(template, options);\n+  }\n+\n+  function compileToFunctions(template) {\n+    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n+\n+    var preserveWhitespace = options.preserveWhitespace !== false;\n+    var cache = preserveWhitespace ? cache1 : cache2;\n+    if (cache[template]) {\n+      return cache[template];\n+    }\n+    var res = {};\n+    var compiled = compile(template, { preserveWhitespace: preserveWhitespace });\n+    res.render = new Function(compiled.render);\n+    var l = compiled.staticRenderFns.length;\n+    if (l) {\n+      res.staticRenderFns = new Array(l);\n+      for (var i = 0; i < l; i++) {\n+        res.staticRenderFns[i] = new Function(compiled.staticRenderFns[i]);\n+      }\n+    }\n+    return cache[template] = res;\n+  }\n+\n+  var idToTemplate = cached(function (id) {\n+    return query(id).innerHTML;\n+  });\n+  var mount = Vue.prototype.$mount;\n+\n+  Vue.prototype.$mount = function (el) {\n+    el = el && query(el);\n+    var options = this.$options;\n+    // resolve template/el and convert to render function\n+    if (!options.render) {\n+      var template = options.template;\n+      if (template) {\n+        if (typeof template === 'string') {\n+          if (template.charAt(0) === '#') {\n+            template = idToTemplate(template);\n+          }\n+        } else if (template.nodeType) {\n+          template = template.innerHTML;\n+        } else {\n+          warn('invalid template option:' + template, this);\n+        }\n+      } else if (el) {\n+        template = getOuterHTML(el);\n+      }\n+      if (template) {\n+        var _compileToFunctions = compileToFunctions(template, {\n+          preserveWhitespace: config.preserveWhitespace\n+        });\n+\n+        var render = _compileToFunctions.render;\n+        var staticRenderFns = _compileToFunctions.staticRenderFns;\n+\n+        options.render = render;\n+        options.staticRenderFns = staticRenderFns;\n+      }\n+    }\n+    mount.call(this, el);\n+  };\n+\n+  /**\n+   * Get outerHTML of elements, taking care\n+   * of SVG elements in IE as well.\n+   *\n+   * @param {Element} el\n+   * @return {String}\n+   */\n+\n+  function getOuterHTML(el) {\n+    if (el.outerHTML) {\n+      return el.outerHTML;\n+    } else {\n+      var container = document.createElement('div');\n+      container.appendChild(el.cloneNode(true));\n+      return container.innerHTML;\n+    }\n+  }\n+\n+  Vue.compile = compileToFunctions;\n+\n+  return Vue;\n+\n+}));\n",
            "-": ""
          }
        ],
        "a/dist/vue.min.js": [
          {
            "+": "+/*!\n+ * Vue.js v2.0.0-pre-alpha\n+ * (c) 2014-2016 Evan You\n+ * Released under the MIT License.\n+ */\n+!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.Vue=e()}(this,function(){\"use strict\";function t(t){return null==t?\"\":\"object\"==typeof t?JSON.stringify(t,null,2):String(t)}function e(t,e){for(var n=Object.create(null),r=t.split(\",\"),i=0;i<r.length;i++)n[r[i]]=!0;return e?function(t){return n[t.toLowerCase()]}:function(t){return n[t]}}function n(t,e){if(t.length){var n=t.indexOf(e);if(n>-1)return t.splice(n,1)}}function r(t,e){return Hn.call(t,e)}function i(t){return\"string\"==typeof t||\"number\"==typeof t}function o(t){var e=Object.create(null);return function(n){var r=e[n];return r||(e[n]=t(n))}}function a(t,e){return e?e.toUpperCase():\"\"}function s(t,e){return function(n){var r=arguments.length;return r?r>1?t.apply(e,arguments):t.call(e,n):t.call(e)}}function u(t,e){e=e||0;for(var n=t.length-e,r=new Array(n);n--;)r[n]=t[n+e];return r}function c(t,e){for(var n in e)t[n]=e[n];return t}function l(t){return null!==t&&\"object\"==typeof t}function f(t){return Jn.call(t)===Wn}function d(t){var e=(t+\"\").charCodeAt(0);return 36===e||95===e}function v(t,e,n,r){Object.defineProperty(t,e,{value:n,enumerable:!!r,writable:!0,configurable:!0})}function p(t){return Gn.test(t)?void 0:(t=t.split(\".\"),function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e})}function h(){this.id=ir++,this.subs=[]}function m(){ar=[],sr=[],ur={},cr={},lr=fr=!1}function g(){ar.sort(y),_(ar),fr=!0,_(sr),m()}function y(t,e){return t.id-e.id}function _(t){for(or=0;or<t.length;or++){var e=t[or],n=e.id;ur[n]=null,e.run()}}function b(t){var e=t.id;if(null==ur[e])if(fr&&!t.user)sr.splice(or+1,0,t);else{var n=t.user?sr:ar;ur[e]=n.length,n.push(t),lr||(lr=!0,nr(g))}}function w(t,e,n,r){r&&c(this,r);var i=\"function\"==typeof e;this.vm=t,t._watchers.push(this),this.expression=e,this.cb=n,this.id=++dr,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new rr,this.newDepIds=new rr,i?this.getter=e:(this.getter=p(e),this.getter||(this.getter=function(){})),this.value=this.lazy?void 0:this.get(),this.queued=this.shallow=!1}function $(t,e){var n=void 0,r=void 0,i=void 0,o=void 0;if(e||(e=pr,e.clear()),i=Zn(t),o=l(t),i||o){if(t.__ob__){var a=t.__ob__.dep.id;if(e.has(a))return;e.add(a)}if(i)for(n=t.length;n--;)$(t[n],e);else if(o)for(r=Object.keys(t),n=r.length;n--;)$(t[r[n]],e)}}function x(t){if(this.value=t,this.dep=new h,v(t,\"__ob__\",this),Zn(t)){var e=Kn?C:k;e(t,mr,gr),this.observeArray(t)}else this.walk(t)}function C(t,e){t.__proto__=e}function k(t,e,n){for(var r=0,i=n.length;i>r;r++){var o=n[r];v(t,o,e[o])}}function O(t,e){if(l(t)){var n;return r(t,\"__ob__\")&&t.__ob__ instanceof x?n=t.__ob__:yr.shouldConvert&&(Zn(t)||f(t))&&Object.isExtensible(t)&&!t._isVue&&(n=new x(t)),n&&e&&n.addVm(e),n}}function A(t,e,n){var r=new h,i=Object.getOwnPropertyDescriptor(t,e);if(!i||i.configurable!==!1){var o=i&&i.get,a=i&&i.set,s=O(n);Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){var e=o?o.call(t):n;if(h.target&&(r.depend(),s&&s.dep.depend(),Zn(e)))for(var i,a=0,u=e.length;u>a;a++)i=e[a],i&&i.__ob__&&i.__ob__.dep.depend();return e},set:function(e){var i=o?o.call(t):n;e!==i&&(a?a.call(t,e):n=e,s=O(e),r.notify())}})}}function T(t,e,n){if(Zn(t))return t.splice(e,1,n);if(r(t,e))return void(t[e]=n);if(t._isVue)return void T(t._data,e,n);var i=t.__ob__;if(!i)return void(t[e]=n);if(i.convert(e,n),i.dep.notify(),i.vms)for(var o=i.vms.length;o--;){var a=i.vms[o];j(a,e),a.$forceUpdate()}return n}function L(t,e){if(r(t,e)){delete t[e];var n=t.__ob__;if(!n)return void(t._isVue&&(delete t._data[e],t.$forceUpdate()));if(n.dep.notify(),n.vms)for(var i=n.vms.length;i--;){var o=n.vms[i];E(o,e),o.$forceUpdate()}}}function j(t,e){d(e)||Object.defineProperty(t,e,{configurable:!0,enumerable:!0,get:function(){return t._data[e]},set:function(n){t._data[e]=n}})}function E(t,e){d(e)||delete t[e]}function S(t){t._watchers=[],M(t),N(t),R(t),U(t),P(t)}function M(t){var e=t.$options.props,n=t.$options.propsData;if(e){var r=t.$options.propKeys=Object.keys(e),i=!t.$parent;yr.shouldConvert=i;for(var o=0;o<r.length;o++){var a=r[o];A(t,a,$t(t,a,n))}yr.shouldConvert=!0}}function N(t){var e=t.$options.data;e=t._data=\"function\"==typeof e?e():e||{},f(e)||(e={});for(var n=Object.keys(e),r=n.length;r--;)j(t,n[r]);O(e,t)}function D(){}function R(t){var e=t.$options.computed;if(e)for(var n in e){var r=e[n],i={enumerable:!0,configurable:!0};\"function\"==typeof r?(i.get=B(r,t),i.set=D):(i.get=r.get?r.cache!==!1?B(r.get,t):s(r.get,t):D,i.set=r.set?s(r.set,t):D),Object.defineProperty(t,n,i)}}function B(t,e){var n=new w(e,t,null,{lazy:!0});return function(){return n.dirty&&n.evaluate(),h.target&&n.depend(),n.value}}function U(t){var e=t.$options.methods;if(e)for(var n in e)t[n]=s(e[n],t)}function P(t){var e=t.$options.watch;if(e)for(var n in e){var r=e[n];if(Zn(r))for(var i=0;i<r.length;i++)I(t,n,r[i]);else I(t,n,r)}}function I(t,e,n){var r=void 0;f(n)&&(r=n,n=n.handler),\"string\"==typeof n&&(n=t[n]),t.$watch(e,n,r)}function H(t){Object.defineProperty(t.prototype,\"$data\",{get:function(){return this._data},set:function(t){t!==this._data&&V(this,t)}}),t.prototype.$watch=function(t,e,n){n=n||{},n.user=!0;var r=new w(this,t,e,n);return n.immediate&&e.call(this,r.value),function(){r.teardown()}}}function V(t,e){e=e||{};var n=t._data;t._data=e;var i,o,a;for(i=Object.keys(n),a=i.length;a--;)o=i[a],o in e||E(t,o);for(i=Object.keys(e),a=i.length;a--;)o=i[a],r(t,o)||j(t,o);n.__ob__.removeVm(t),O(e,t),t.$forceUpdate()}function z(t,e,n,r,i,o,a){return{tag:t,data:e,children:n,text:r,elm:i,ns:o,context:a,key:e&&e.key}}function F(t){if(\"string\"==typeof t)return[z(void 0,void 0,void 0,t)];if(Zn(t)){for(var e=[],n=0,r=t.length;r>n;n++){var o=t[n];Zn(o)?e.push.apply(e,F(o)):i(o)?e.push(z(void 0,void 0,void 0,o)):o&&e.push(o)}return e}}function q(t,e,n){var r=void 0,i=void 0,o=void 0,a=void 0,s=void 0;for(r in t)if(i=t[r],o=e[r],void 0===o)s=\"!\"===r.charAt(0),a=s?r.slice(1):r,Zn(i)?n(a,J(i),s):(i={fn:i},t[r]=i,n(a,W(i),s));else if(Zn(o)){o.length=i.length;for(var u=0;u<o.length;u++)o[u]=i[u];t[r]=o}else o.fn=i,t[r]=o}function J(t){return function(e){for(var n=0;n<t.length;n++)t[n](e)}}function W(t){return function(e){t.fn(e)}}function Z(t){var e=t.$options;t.$parent=e.parent,t.$root=t.$parent?t.$parent.$root:t,t.$parent&&t.$parent.$children.push(t),t.$children=[],t.$refs={},t._isDestroyed=!1,t._isBeingDestroyed=!1}function G(t){t.prototype._mount=function(){var t=this;this.$options.render||(this.$options.render=function(){return t.$createElement(\"div\")});var e=this.$options.staticRenderFns;if(e){this._staticTrees=new Array(e.length);for(var n=0;n<e.length;n++)this._staticTrees[n]=e[n].call(this._renderProxy)}return this._watcher=new w(this,this._render,this._update),this._update(this._watcher.value),this._mounted=!0,this.$root===this&&K(this,\"ready\"),this},t.prototype._update=function(t){this._mounted&&K(this,\"beforeUpdate\");var e=this.$options._parentVnode;t.parent=e,this._vnode?this.$el=this.__patch__(this._vnode,t):this.$el=this.__patch__(this.$el,t),this._vnode=t,e&&(e.elm=this.$el),this._mounted&&K(this,\"updated\")},t.prototype._updateFromParent=function(t,e,n,r){var i=this;if(this.$options._parentVnode=n,this.$options._renderChildren=r,t&&this.$options.props){yr.shouldConvert=!1;for(var o=this.$options.propKeys,a=0;a<o.length;a++){var s=o[a];this[s]=$t(this,s,t)}yr.shouldConvert=!0}if(e){var u=this.$options._parentListeners;this.$options._parentListeners=e,q(e,u||{},function(t,e){i.$on(t,e)})}},t.prototype.$forceUpdate=function(){this._watcher.update()},t.prototype.$destroy=function(){if(!this._isDestroyed){K(this,\"beforeDestroy\"),this._isBeingDestroyed=!0;var t=this.$parent;t&&!t._isBeingDestroyed&&n(t.$children,this),this._ref&&(this._context.$refs[this._ref]=void 0);for(var e=this._watchers.length;e--;)this._watchers[e].teardown();this._data.__ob__&&this._data.__ob__.removeVm(this),this._isDestroyed=!0,K(this,\"destroyed\"),this.$off()}}}function K(t,e){t.$emit(\"pre-hook:\"+e);var n=t.$options[e];if(n)for(var r=0,i=n.length;i>r;r++)n[r].call(t);t.$emit(\"hook:\"+e)}function Y(t,e,n,r,i){if(t){if(l(t)&&(t=vt.extend(t)),!t.cid){if(!t.resolved)return void nt(t,function(){n.$forceUpdate()});t=t.resolved}e=e||{},ot(e);var o=rt(e,t),a=e.on;a&&(e.on=null);var s=t.options.name?\"-\"+t.options.name:\"\",u=z(\"vue-component-\"+t.cid+s,e,void 0,void 0,void 0,void 0,i);return u.componentOptions={Ctor:t,propsData:o,listeners:a,parent:n,children:r},u}}function Q(t){var e=t.componentOptions,n=e.Ctor,r=e.propsData,i=e.listeners,o=e.parent,a=e.children,s=new n({parent:o,propsData:r,_parentVnode:t,_parentListeners:i,_renderChildren:a});s.$mount(t.elm),t.child=s}function X(t,e){var n=e.componentOptions,r=n.listeners,i=n.propsData,o=n.children;e.child=t.child,e.child._updateFromParent(i,r,e,o)}function tt(t){K(t.child,\"ready\")}function et(t){t.child.$destroy()}function nt(t,e){t.resolved?e(t.resolved):t.requested?t.pendingCallbacks.push(e):!function(){t.requested=!0;var n=t.pendingCallbacks=[e];t(function(e){l(e)&&(e=vt.extend(e)),t.resolved=e;for(var r=0,i=n.length;i>r;r++)n[r](e)},function(t){})}()}function rt(t,e){var n=e.options.props;if(n){var r={},i=t.attrs,o=t.props,a=t.staticAttrs;if(!i&&!o)return r;for(var s in n){var u=qn(s);it(r,i,s,u)||it(r,o,s,u)||it(r,a,s,u)}return r}}function it(t,e,n,i){if(e){if(r(e,n))return t[n]=e[n],delete e[n],!0;if(r(e,i))return t[n]=e[i],delete e[i],!0}}function ot(t){if(t.hook)for(var e=0;e<br.length;e++){var n=br[e],r=t.hook[n],i=_r[n];t.hook[n]=r?at(i,r):i}else t.hook=_r}function at(t,e){return function(n,r){t(n,r),e(n,r)}}function st(t,e,n,r){var i=this,o=wr.activeInstance;if(\"string\"==typeof t){var a=void 0;return Pn.isReservedTag(t)?z(t,e,F(n),void 0,void 0,r,i):(a=wt(i.$options,\"components\",t))?Y(a,e,o,n,i):z(t,e,F(n&&n()),void 0,void 0,r,i)}return Y(t,e,o,n,i)}function ut(t){t._vnode=null,t._mounted=!1,t._staticTrees=null,t.$slots={},t.$createElement=s(st,t),t.$options.el&&t.$mount(t.$options.el)}function ct(e){e.prototype._render=function(){var t=wr.activeInstance;wr.activeInstance=this;var e=this.$options,n=e.render,r=e._renderChildren;r&&lt(this,r);var i=n.call(this._renderProxy);return wr.activeInstance=t,i},e.prototype.__h__=st,e.prototype.__toString__=t,e.prototype.__renderList__=function(t,e){var n=void 0,r=void 0,i=void 0,o=void 0,a=void 0;if(Zn(t))for(n=new Array(t.length),r=0,i=t.length;i>r;r++)n[r]=e(t[r],r,r);else if(\"number\"==typeof t)for(n=new Array(t),r=0;t>r;r++)n[r]=e(r+1,r,r);else if(l(t))for(o=Object.keys(t),n=new Array(o.length),r=0,i=o.length;i>r;r++)a=o[r],n[r]=e(t[a],r,a);return n},e.prototype.__registerRef__=function(t,e,n,r){var i=this.$refs;r?n?r(i[t],e):i[t]=void 0:n?i[t]?i[t].push(e):i[t]=[e]:i[t]=e}}function lt(t,e){if(e){e=F(Zn(e)?e:e());for(var n={\"default\":e},r=e.length,i=void 0,o=void 0;r--;)if(o=e[r],i=o.data&&o.data.slot){var a=n[i]||(n[i]=[]);\"template\"===o.tag?a.push.apply(a,o.children):a.push(o),e.splice(r,1)}t.$slots=n}}function ft(t){t._events=Object.create(null);var e=t.$options._parentListeners;e&&q(e,{},function(e,n){t.$on(e,n)})}function dt(t){t.prototype.$on=function(t,e){return(this._events[t]||(this._events[t]=[])).push(e),this},t.prototype.$once=function(t,e){function n(){r.$off(t,n),e.apply(this,arguments)}var r=this;return n.fn=e,this.$on(t,n),this},t.prototype.$off=function(t,e){var n;if(!arguments.length)return this._events=Object.create(null),this;if(n=this._events[t],!n)return this;if(1===arguments.length)return this._events[t]=null,this;for(var r,i=n.length;i--;)if(r=n[i],r===e||r.fn===e){n.splice(i,1);break}return this},t.prototype.$emit=function(t){var e=this._events[t];if(e){e=e.length>1?u(e):e;for(var n=u(arguments,1),r=0,i=e.length;i>r;r++)e[r].apply(this,n)}}}function vt(t){this._init(t)}function pt(t,e){var n,i,o;for(n in e)i=t[n],o=e[n],r(t,n)?l(i)&&l(o)&&pt(i,o):T(t,n,o);return t}function ht(t,e){return e?t?t.concat(e):Zn(e)?e:[e]:t}function mt(t,e){var n=Object.create(t);return e?c(n,e):n}function gt(t){if(t.components){var e,n=t.components;for(var r in n)In(r)||Pn.isReservedTag(r)||(e=n[r],f(e)&&(n[r]=vt.extend(e)))}}function yt(t){var e=t.props;if(e){var n={},r=void 0,i=void 0,o=void 0;if(Zn(e))for(r=e.length;r--;)i=e[r],\"string\"==typeof i&&(o=zn(i),n[o]={type:null});else if(f(e))for(var a in e)i=e[a],o=zn(a),n[o]=f(i)?i:{type:i};t.props=n}}function _t(t){var e=t.directives;if(e)for(var n in e)\"function\"==typeof e[n]&&(e[n]={update:e[n]})}function bt(t,e,n){function i(r){var i=Cr[r]||kr;a[r]=i(t[r],e[r],n,r)}gt(e),yt(e),_t(e);var o,a={};if(e.mixins)for(var s=0,u=e.mixins.length;u>s;s++)t=bt(t,e.mixins[s],n);for(o in t)i(o);for(o in e)r(t,o)||i(o);return a}function wt(t,e,n,r){if(\"string\"==typeof n){var i,o=t[e],a=o[n]||o[i=zn(n)]||o[i.charAt(0).toUpperCase()+i.slice(1)];return a}}function $t(t,e,n){if(n){var i=t.$options.props[e],o=(r(n,e),n[e]);return void 0===o&&(o=xt(t,i,e),yr.shouldConvert=!0,O(o),yr.shouldConvert=!1),o}}function xt(t,e,n){if(!r(e,\"default\"))return e.type===Boolean?!1:void 0;var i=e[\"default\"];return l(i),\"function\"==typeof i&&e.type!==Function?i.call(t):i}function Ct(t){var e=t.data,n=void 0;return(n=t.child)&&(n=n._vnode.data)&&(e=kt(n,e)),(n=t.parent)&&(n=n.data)&&(e=kt(e,n)),Ot(e)}function kt(t,e){return{staticClass:At(t.staticClass,e.staticClass),\"class\":t[\"class\"]?c(t[\"class\"],e[\"class\"]):e[\"class\"]}}function Ot(t){var e=t[\"class\"],n=t.staticClass;return n||e?At(n,Tt(e)):void 0}function At(t,e){return t?e?t+\" \"+e:t:e||\"\"}function Tt(t){if(!t)return\"\";if(\"string\"==typeof t)return t;if(Zn(t)){for(var e=\"\",n=0,r=t.length;r>n;n++)t[n]&&(e+=Tt(t[n])+\" \");return e.slice(0,-1)}if(l(t)){var i=\"\";for(var o in t)t[o]&&(i+=o+\" \");return i.slice(0,-1)}}function Lt(t){return Br(t)?\"svg\":\"math\"===t?\"math\":void 0}function jt(t){if(!Yn)return!0;if(t=t.toLowerCase(),null!=Ur[t])return Ur[t];var e=document.createElement(t);return t.indexOf(\"-\")>-1?Ur[t]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Ur[t]=/HTMLUnknownElement/.test(e.toString())&&!/^(data|time|rtc|rb)$/.test(t)}function Et(t){if(\"string\"==typeof t){t=document.querySelector(t)}return t}function St(t){t.use=function(t){if(!t.installed){var e=u(arguments,1);return e.unshift(this),\"function\"==typeof t.install?t.install.apply(t,e):t.apply(null,e),t.installed=!0,this}}}function Mt(t){t.mixin=function(e){t.options=bt(t.options,e)}}function Nt(t){t.cid=0;var e=1;t.extend=function(t){t=t||{};var n=this,r=0===n.cid;if(r&&t._Ctor)return t._Ctor;var i=t.name||n.options.name,o=function(t){this._init(t)};return o.prototype=Object.create(n.prototype),o.prototype.constructor=o,o.cid=e++,o.options=bt(n.options,t),o[\"super\"]=n,o.extend=n.extend,Pn._assetTypes.forEach(function(t){o[t]=n[t]}),i&&(o.options.components[i]=o),r&&(t._Ctor=o),o}}function Dt(t){Pn._assetTypes.forEach(function(e){t[e]=function(n,r){return r?(\"component\"===e&&f(r)&&(r.name=n,r=t.extend(r)),this.options[e+\"s\"][n]=r,r):this.options[e+\"s\"][n]}})}function Rt(t){t.config=Pn,t.util=Or,t.set=T,t[\"delete\"]=L,t.nextTick=nr,t.options={directives:Object.create(null),filters:Object.create(null),components:Object.create(null),transitions:Object.create(null)},St(t),Mt(t),Nt(t),Dt(t)}function Bt(t){return void 0===t}function Ut(t){return void 0!==t}function Pt(t,e){return t.key===e.key&&t.tag===e.tag}function It(t,e,n){var r=void 0,i=void 0,o={};for(r=e;n>=r;++r)i=t[r].key,Ut(i)&&(o[i]=r);return o}function Ht(t){function e(t){return z(_.tagName(t).toLowerCase(),{},[],void 0,t)}function n(t,e){function n(){0===--n.listeners&&r(t)}return n.listeners=e,n}function r(t){var e=_.parentNode(t);_.removeChild(e,t)}function o(t,e){var n=void 0,r=void 0,s=t.data;if(Ut(s)&&(Ut(n=s.hook)&&Ut(n=n.init)&&n(t),Ut(n=t.child)))return a(t,e),t.elm;var u=t.children,c=t.tag;if(Ut(c)){if(r=t.elm=t.ns?_.createElementNS(t.ns,c):_.createElement(c),Array.isArray(u))for(n=0;n<u.length;++n)_.appendChild(r,o(u[n],e));else i(t.text)&&_.appendChild(r,_.createTextNode(t.text));Ut(s)&&a(t,e)}else r=t.elm=_.createTextNode(t.text);return t.elm}function a(t,e){for(var n=0;n<g.create.length;++n)g.create[n](Vr,t);h=t.data.hook,Ut(h)&&(h.create&&h.create(Vr,t),h.insert&&e.push(t))}function s(t,e,n,r,i,a){for(;i>=r;++r)_.insertBefore(t,o(n[r],a),e)}function u(t){var e=void 0,n=void 0,r=t.data;if(Ut(r)){for(Ut(e=r.hook)&&Ut(e=e.destroy)&&e(t),e=0;e<g.destroy.length;++e)g.destroy[e](t);if(Ut(e=t.children))for(n=0;n<t.children.length;++n)u(t.children[n]);Ut(e=t.child)&&u(e._vnode)}}function c(t,e,n,r){for(;r>=n;++n){var i=e[n];Ut(i)&&(Ut(i.tag)?(u(i),l(i)):_.removeChild(t,i.elm))}}function l(t,e){if(e||Ut(t.data)){var i=g.remove.length+1;for(e?e.listeners+=i:e=n(t.elm,i),Ut(h=t.child)&&Ut(h=h._vnode)&&Ut(h.data)&&l(h,e),h=0;h<g.remove.length;++h)g.remove[h](t,e);Ut(h=t.data.hook)&&Ut(h=h.remove)?h(t,e):e()}else r(t.elm)}function f(t,e,n,r){for(var i=0,a=0,u=e.length-1,l=e[0],f=e[u],v=n.length-1,p=n[0],h=n[v],m=void 0,g=void 0,y=void 0,b=void 0;u>=i&&v>=a;)Bt(l)?l=e[++i]:Bt(f)?f=e[--u]:Pt(l,p)?(d(l,p,r),l=e[++i],p=n[++a]):Pt(f,h)?(d(f,h,r),f=e[--u],h=n[--v]):Pt(l,h)?(d(l,h,r),_.insertBefore(t,l.elm,_.nextSibling(f.elm)),l=e[++i],h=n[--v]):Pt(f,p)?(d(f,p,r),_.insertBefore(t,f.elm,l.elm),f=e[--u],p=n[++a]):(Bt(m)&&(m=It(e,i,u)),g=m[p.key],Bt(g)?(_.insertBefore(t,o(p,r),l.elm),p=n[++a]):(y=e[g],d(y,p,r),e[g]=void 0,_.insertBefore(t,y.elm,l.elm),p=n[++a]));i>u?(b=Bt(n[v+1])?null:n[v+1].elm,s(t,b,n,a,v,r)):a>v&&c(t,e,i,u)}function d(t,e,n){var r=void 0,i=void 0;if(Ut(r=e.data)&&Ut(i=r.hook)&&Ut(r=i.prepatch)&&r(t,e),!Ut(r=e.data)||!r.pre){var a=e.elm=t.elm,u=t.children,l=e.children;if(t!==e){if(!Pt(t,e)){var d=_.parentNode(t.elm);return a=o(e,n),_.insertBefore(d,a,t.elm),void c(d,[t],0,0)}if(Ut(e.data)){for(r=0;r<g.update.length;++r)g.update[r](t,e);r=e.data.hook,Ut(r)&&Ut(r=r.update)&&r(t,e)}Bt(e.text)?Ut(u)&&Ut(l)?u!==l&&f(a,u,l,n):Ut(l)?(Ut(t.text)&&_.setTextContent(a,\"\"),s(a,null,l,0,l.length-1,n)):Ut(u)?c(a,u,0,u.length-1):Ut(t.text)&&_.setTextContent(a,\"\"):t.text!==e.text&&_.setTextContent(a,e.text),Ut(i)&&Ut(r=i.postpatch)&&r(t,e)}}}function v(t){for(h=0;h<t.length;++h)t[h].data.hook.insert(t[h])}function p(t,e,n){e.elm=t;var r=e.tag,i=e.data,o=e.children;if(Ut(i)&&(Ut(h=i.hook)&&Ut(h=h.init)&&h(e),Ut(h=e.child)))return a(e,n),!0;if(Ut(r)){if(Ut(o))for(var s=t.childNodes,u=0;u<o.length;u++){var c=p(s[u],o[u],n);if(!c)return!1}Ut(i)&&a(e,n)}return!0}var h=void 0,m=void 0,g={},y=t.modules,_=t.nodeOps;for(h=0;h<zr.length;++h)for(g[zr[h]]=[],m=0;m<y.length;++m)void 0!==y[m][zr[h]]&&g[zr[h]].push(y[m][zr[h]]);return function(t,n){var r,i,a=[];if(t)if(Pt(t,n))d(t,n,a);else{if(Bt(t.tag)){if(t.hasAttribute(\"server-rendered\")&&(t.removeAttribute(\"server-rendered\"),p(t,n,a)))return v(a),t;t=e(t)}r=t.elm,i=_.parentNode(r),o(n,a),null!==i&&(_.insertBefore(i,n.elm,_.nextSibling(r)),c(i,[t],0,0))}else o(n,a);return v(a),n.elm}}function Vt(t){return document.createElement(t)}function zt(t,e){return document.createElementNS(Sr[t],e)}function Ft(t){return document.createTextNode(t)}function qt(t,e,n){t.insertBefore(e,n)}function Jt(t,e){t.removeChild(e)}function Wt(t,e){t.appendChild(e)}function Zt(t){return t.parentElement}function Gt(t){return t.nextSibling}function Kt(t){return t.tagName}function Yt(t,e){t.textContent=e}function Qt(t){t.target.composing=!0}function Xt(t){t.target.composing=!1,te(t.target)}function te(t){var e=document.createEvent(\"HTMLEvents\");e.initEvent(\"input\",!0,!0),t.dispatchEvent(e)}function ee(t,e){Ir&&t.namespaceURI!==Jr?t.className=e:t.setAttribute(\"class\",e)}function ne(t,e){if(t.classList)e.indexOf(\" \")>-1?e.split(/\\s+/).forEach(function(e){return t.classList.add(e)}):t.classList.add(e);else{var n=\" \"+ie(t)+\" \";n.indexOf(\" \"+e+\" \")<0&&ee(t,(n+e).trim())}}function re(t,e){if(t.classList)e.indexOf(\" \")>-1?e.split(/\\s+/).forEach(function(e){return t.classList.remove(e)}):t.classList.remove(e);else{for(var n=\" \"+ie(t)+\" \",r=\" \"+e+\" \";n.indexOf(r)>=0;)n=n.replace(r,\" \");ee(t,n.trim())}t.className||t.removeAttribute(\"class\")}function ie(t){var e=t.className;return\"object\"==typeof e&&(e=e.baseVal||\"\"),e}function oe(t){ei(function(){ei(t)})}function ae(t){var e=t.elm;e._leaveCb&&(e._leaveCb.cancelled=!0,e._leaveCb());var n=t.data.transition;if(n&&(t.context.$root._mounted||n.appear)){var r=ue(n.definition,t.context),i=r.enterClass,o=r.enterActiveClass,a=r.beforeEnter,s=r.enter,u=r.afterEnter,c=r.enterCancelled,l=s&&s.length>1,f=e._enterCb=he(function(){o&&le(e,o),f.cancelled?c&&c(e):u&&u(e),e._enterCb=null});a&&a(e),i&&(ce(e,i),oe(function(){le(e,i)})),o&&oe(function(){ce(e,o),l||fe(e,f)}),s&&s(e,f),o||l||f()}}function se(t,e){var n=t.elm;n._enterCb&&(n._enterCb.cancelled=!0,n._enterCb());var r=t.data.transition;if(!r)return e();var i=ue(r.definition,t.context),o=i.leaveClass,a=i.leaveActiveClass,s=i.beforeLeave,u=i.leave,c=i.afterLeave,l=i.leaveCancelled,f=u&&u.length>1,d=n._leaveCb=he(function(){a&&le(n,a),d.cancelled?l&&l(n):(e(),c&&c(n)),n._leaveCb=null});s&&s(n),o&&(ce(n,o),oe(function(){le(n,o)})),a&&oe(function(){ce(n,a),f||fe(n,d)}),u&&u(n,d),a||f||d()}function ue(t,e){var n=t&&\"string\"==typeof t?wt(e.$options,\"transitions\",t)||t:t;return n===!0&&(n=\"v\"),\"string\"==typeof n?ni(n):n}function ce(t,e){(t._transitionClasses||(t._transitionClasses=[])).push(e),ne(t,e)}function le(t,e){n(t._transitionClasses,e),re(t,e)}function fe(t,e){var n=de(t),r=n.type,i=n.timeout,o=n.propCount;if(!r)return e();var a=r===Wr?Kr:Qr,s=0,u=function(){t.removeEventListener(a,c),e()},c=function(){++s>=o&&u()};setTimeout(function(){o>s&&u()},i),t.addEventListener(a,c)}function de(t){var e=window.getComputedStyle(t),n=e[Gr+\"Delay\"].split(\", \"),r=e[Gr+\"Duration\"].split(\", \"),i=e[Yr+\"Delay\"].split(\", \"),o=e[Yr+\"Duration\"].split(\", \"),a=ve(n,r),s=ve(i,o),u=Math.max(a,s),c=u>0?a>s?Wr:Zr:null,l=c?c===Wr?r.length:o.length:0;return{type:c,timeout:u,propCount:l}}function ve(t,e){return Math.max.apply(null,e.map(function(e,n){return pe(e)+pe(t[n])}))}function pe(t){return 1e3*Number(t.slice(0,-1))}function he(t){var e=!1;return function(){e||(e=!0,t())}}function me(t){return t.parent&&t.parent.data.transition||t.data.show}function ge(t){var e=t.parent;return e&&null!=e.data.transition?e.data.transition:t.data.transition}function ye(t,e,n,r){var i=e.data.directives;if(i)for(var o=0;o<i.length;o++){var a=i[o],s=wt(e.context.$options,\"directives\",a.name,!0),u=s&&s[n];if(u){if(r){var c=t.data.directives[o].value;if(c===a.value)continue}u(e.elm,a.value,a.modifiers,e,t)}}}function _e(t,e){if(t.data.attrs||e.data.attrs){var n=void 0,r=void 0,i=void 0,o=e.elm,a=t.data.attrs||{},s=e.data.attrs||{};for(n in s)r=s[n],i=a[n],i!==r&&be(o,n,r);for(n in a)null==s[n]&&(Er(n)?o.removeAttributeNS(jr,n):o.removeAttribute(n))}}function be(t,e,n){Lr(e)?null==n?t.removeAttribute(e):t.setAttribute(e,e):Tr(e)?t.setAttribute(e,null==n?\"false\":\"true\"):Er(e)?t.setAttributeNS(jr,e,n):t.setAttribute(e,n)}function we(t,e){var n=e.elm,r=e.data;if(r.staticClass||r[\"class\"]){var i=Ct(e),o=n._transitionClasses;o&&(i=At(i,Tt(o))),i!==n._prevClass&&(ee(n,i),n._prevClass=i)}}function $e(t,e){if(t.data.on||e.data.on){var n=e.data.on||{},r=t.data.on||{};q(n,r,function(t,n,r){e.elm.addEventListener(t,n,r)})}}function xe(t,e){if(t.data.props||e.data.props){var n=void 0,r=void 0,i=void 0,o=e.elm,a=t.data.props||{},s=e.data.props||{};for(n in a)null==s[n]&&(o[n]=void 0);for(n in s)r=s[n],i=a[n],i!==r&&(\"value\"===n?o._value!==r&&(o.value=o._value=r):o[n]=r)}}function Ce(t,e){if(t.data.style||e.data.style){var n=void 0,r=void 0,i=e.elm,o=t.data.style||{},a=e.data.style||{};Zn(a)&&(a=e.data.style=ke(a));for(r in o)a[r]||(i.style[pi(r)]=\"\");for(r in a)n=a[r],n!==o[r]&&(i.style[pi(r)]=n)}}function ke(t){for(var e=t[0]||{},n=1;n<t.length;n++)t[n]&&c(e,t[n]);return e}function Oe(t){return yi.innerHTML=t,yi.textContent}function Ae(t){var e=_i.source+\"(?:\\\\s*(\"+Te(t)+\")\\\\s*(?:\"+$i.join(\"|\")+\"))?\";return new RegExp(\"^\\\\s*\"+e)}function Te(t){return wi.map(function(t){return\"(?:\"+t.source+\")\"}).join(\"|\")}function Le(t,e){function n(t){var e=t.match(ki);if(e){var n={tagName:e[1],attrs:[]};t=t.slice(e[0].length);for(var r,i;!(r=t.match(Oi))&&(i=t.match(a));)t=t.slice(i[0].length),n.attrs.push(i);if(r)return n.unarySlash=r[1],n.rest=t.slice(r[0].length),n}}function r(t){var n=t.tagName,r=t.unarySlash;s&&(\"p\"===d&&Rr(n)&&i(\"\",d),Dr(n)&&d===n&&i(\"\",n));var a=u(n)||\"html\"===n&&\"head\"===d||!!r,c=t.attrs.map(function(t){return Li&&-1===t[0].indexOf('\"\"')&&(\"\"===t[3]&&delete t[3],\"\"===t[4]&&delete t[4],\"\"===t[5]&&delete t[5]),{name:t[1],value:Oe(t[3]||t[4]||t[5]||\"\")}});a||(o.push({tag:n,attrs:c}),d=n,r=\"\"),e.start&&e.start(n,c,a,r)}function i(t,n){var r;if(n){var i=n.toLowerCase();for(r=o.length-1;r>=0&&o[r].tag.toLowerCase()!==i;r--);}else r=0;if(r>=0){for(var a=o.length-1;a>=r;a--)e.end&&e.end(o[a].tag,o[a].attrs,a>r||!t);o.length=r,d=r&&o[r-1].tag}else\"br\"===n.toLowerCase()?e.start&&e.start(n,[],!0,\"\"):\"p\"===n.toLowerCase()&&(e.start&&e.start(n,[],!1,\"\",!0),e.end&&e.end(n,[]))}for(var o=[],a=Ae(e),s=e.expectHTML,u=e.isUnaryTag||function(){return!1},c=void 0,l=void 0,f=void 0,d=void 0;t;){if(c=t,d&&ji(d)){var v=d.toLowerCase(),p=Ei[v]||(Ei[v]=new RegExp(\"([\\\\s\\\\S]*?)</\"+v+\"[^>]*>\",\"i\"));t=t.replace(p,function(t,n){return\"script\"!==v&&\"style\"!==v&&\"noscript\"!==v&&(n=n.replace(/<!--([\\s\\S]*?)-->/g,\"$1\").replace(/<!\\[CDATA\\[([\\s\\S]*?)\\]\\]>/g,\"$1\")),e.chars&&e.chars(n),\"\"}),i(\"</\"+v+\">\",v)}else{var h=t.indexOf(\"<\");if(0===h){if(/^<!--/.test(t)){var m=t.indexOf(\"-->\");if(m>=0){t=t.substring(m+3),l=\"\";continue}}if(/^<!\\[/.test(t)){var g=t.indexOf(\"]>\");if(g>=0){t=t.substring(g+2),l=\"\";continue}}var y=t.match(Ti);if(y){e.doctype&&e.doctype(y[0]),t=t.substring(y[0].length),l=\"\";continue}var _=t.match(Ai);if(_){t=t.substring(_[0].length),_[0].replace(Ai,i),l=\"/\"+_[1].toLowerCase();continue}var b=n(t);if(b){t=b.rest,r(b),l=b.tagName.toLowerCase();continue}}var w;h>=0?(w=t.substring(0,h),t=t.substring(h)):(w=t,t=\"\");var $=n(t);$?f=$.tagName:($=t.match(Ai),f=$?\"/\"+$[1]:\"\"),e.chars&&e.chars(w,l,f),l=\"\"}if(t===c)throw new Error(\"Error parsing template:\\n\\n\"+t)}e.partialMarkup||i()}function je(t){if(!Si.test(t))return null;for(var e,n,r=[],i=Si.lastIndex=0;e=Si.exec(t);){n=e.index,n>i&&r.push(JSON.stringify(t.slice(i,n)));var o=e[1].trim();r.push(\"__toString__(\"+o+\")\"),i=n+e[0].length}return i<t.length&&r.push(JSON.stringify(t.slice(i))),r.join(\"+\")}function Ee(t,e,n){(t.props||(t.props=[])).push({name:e,value:n})}function Se(t,e,n){(t.attrs||(t.attrs=[])).push({name:e,value:n})}function Me(t,e,n){(t.staticAttrs||(t.staticAttrs=[])).push({name:e,value:n})}function Ne(t,e,n,r,i){(t.directives||(t.directives=[])).push({name:e,value:n,arg:r,modifiers:i})}function De(t,e,n){var r=t.hooks||(t.hooks={}),i=r[e];i?i.push(n):r[e]=[n]}function Re(t,e,n,r){var i=t.events||(t.events={});r&&r.capture&&(delete r.capture,e=\"!\"+e);var o={value:n,modifiers:r},a=i[e];Zn(a)?a.push(o):a?i[e]=[a,o]:i[e]=o}function Be(t,e,n){var r=n!==!1&&Ue(t,e);return r||\"\"===r?JSON.stringify(r):Ue(t,\":\"+e)||Ue(t,\"v-bind:\"+e)}function Ue(t,e){var n=void 0;if(null!=(n=t.attrsMap[e])){t.attrsMap[e]=null;for(var r=t.attrsList,i=0,o=r.length;o>i;i++)if(r[i].name===e){r.splice(i,1);break}}return n}function Pe(t,e){Vi=e.warn||zi,Fi=e.getTagNamespace||function(){return null},qi=e.mustUseProp||function(){return!1};var n=[],r=void 0,i=void 0,o=!1;return Le(t,{expectHTML:e.expectHTML,isUnaryTag:e.isUnaryTag,start:function(t,e,a){Ii.test(t)&&(t=qn(t)),t=t.toLowerCase();var s={tag:t,attrsList:e,attrsMap:tn(e),parent:i,children:[]},u=void 0;((u=i&&i.ns)||(u=Fi(t)))&&(s.ns=u),o||(Ie(s),s.pre&&(o=!0)),o?He(s):(Ve(s),ze(s),qe(s),s.plain=!e.length,Je(s),We(s),Ze(s),Ge(s),Ke(s),Ye(s),Qe(s)),r||(r=s),i&&(s[\"else\"]?Fe(s,i):(i.children.push(s),s.parent=i)),a||(i=s,n.push(s))},end:function(t){var e=n[n.length-1],r=e.children[e.children.length-1];r&&\" \"===r.text&&e.children.pop(),n.length-=1,i=n[n.length-1],e.pre&&(o=!1)},chars:function(t){if(i&&(t=\"pre\"===i.tag||t.trim()?Hi(t):e.preserveWhitespace&&i.children.length?\" \":null)){var n=void 0;!o&&\" \"!==t&&(n=je(t))?i.children.push({expression:n}):i.children.push({text:t})}}}),r}function Ie(t){null!=Ue(t,\"v-pre\")&&(t.pre=!0)}function He(t){var e=t.attrsList.length;if(e){t.attrs=new Array(e);for(var n=0;e>n;n++)t.attrs[n]={name:t.attrsList[n].name,value:JSON.stringify(t.attrsList[n].value)}}}function Ve(t){var e=void 0;if(e=Ue(t,\"v-for\")){var n=e.match(Ui);if(!n)return;t[\"for\"]=n[2].trim();var r=n[1].trim(),i=r.match(Pi);i?(t.iterator=i[1].trim(),t.alias=i[2].trim()):t.alias=r,(e=Ue(t,\"track-by\"))&&(t.key=\"$index\"===e?e:t.alias+'[\"'+e+'\"]')}}function ze(t){var e=Ue(t,\"v-if\");e&&(t[\"if\"]=e),null!=Ue(t,\"v-else\")&&(t[\"else\"]=!0)}function Fe(t,e){var n=en(e.children);n&&(n[\"if\"]||n.attrsMap[\"v-show\"])&&(n[\"if\"]?n.elseBlock=t:(Ne(t,\"show\",\"!(\"+n.attrsMap[\"v-show\"]+\")\"),t.transition=n.transition,t.show=!0,e.children.push(t)))}function qe(t){var e=Ue(t,\"v-once\");null!=e&&(t.once=!0)}function Je(t){\"render\"===t.tag&&(t.render=!0,t.renderMethod=t.attrsMap.method,t.renderArgs=t.attrsMap[\":args\"]||t.attrsMap[\"v-bind:args\"])}function We(t){if(\"slot\"===t.tag)t.slotName=Be(t,\"name\");else{var e=Be(t,\"slot\");e&&(t.slotTarget=e)}}function Ze(t){\"component\"===t.tag&&(t.component=Be(t,\"is\"))}function Ge(t){var e=Ue(t,\"class\");t.staticClass=je(e)||JSON.stringify(e);var n=Be(t,\"class\",!1);n&&(t.classBinding=n)}function Ke(t){var e=Be(t,\"style\",!1);e&&(t.styleBinding=e)}function Ye(t){var e=Be(t,\"transition\");'\"\"'===e&&(e=!0),e&&(t.transition=e,t.transitionOnAppear=null!=Be(t,\"transition-on-appear\"))}function Qe(t){var e=t.attrsList,n=void 0,r=void 0,i=void 0,o=void 0,a=void 0,s=void 0;for(n=0,r=e.length;r>n;n++)if(i=e[n].name,o=e[n].value,Mi.test(i))s=Xe(i),s&&(i=i.replace(Bi,\"\")),Ni.test(i)?(i=i.replace(Ni,\"\"),qi(i)?Ee(t,i,o):Se(t,i,o)):Di.test(i)?(i=i.replace(Di,\"\"),Re(t,i,o,s)):(i=i.replace(Mi,\"\"),(a=i.match(Ri))&&(a=a[1])&&(i=i.slice(0,-(a.length+1))),Ne(t,i,o,a,s));else{var u=je(o);u?Vi(\"Interpolation inside attributes has been deprecated. Use v-bind or the colon shorthand instead.\"):Me(t,i,JSON.stringify(o))}}function Xe(t){var e=t.match(Bi);if(e){var n=function(){var t={};return e.forEach(function(e){t[e.slice(1)]=!0}),{v:t}}();if(\"object\"==typeof n)return n.v}}function tn(t){for(var e={},n=0,r=t.length;r>n;n++)e[t[n].name]=t[n].value;return e}function en(t){for(var e=t.length;e--;)if(t[e].tag)return t[e]}function nn(t,e){Ji=e.isReservedTag||function(){return!1},rn(t),on(t)}function rn(t){if(t[\"static\"]=an(t),t.children)for(var e=0,n=t.children.length;n>e;e++){var r=t.children[e];rn(r),r[\"static\"]||(t[\"static\"]=!1)}}function on(t){if(t.tag&&(t.once||t[\"static\"]))return void(t.staticRoot=!0);if(t.children)for(var e=0,n=t.children.length;n>e;e++)on(t.children[e])}function an(t){return!(!t.text&&!t.pre&&(t.expression||t[\"if\"]||t[\"for\"]||t.tag&&!Ji(t.tag)||In(t.tag)||!t.plain&&!Object.keys(t).every(Wi)))}function sn(t){var e=\"on:{\";for(var n in t)e+='\"'+n+'\":'+un(t[n])+\",\";return e.slice(0,-1)+\"}\"}function un(t){if(t){if(Zn(t))return\"[\"+t.map(un).join(\",\")+\"]\";if(t.modifiers){var e=\"function($event){\";for(var n in t.modifiers)e+=Ki[n]||cn(n);var r=Zi.test(t.value)?t.value+\"($event)\":t.value;return e+r+\"}\"}return Zi.test(t.value)?t.value:\"function($event){\"+t.value+\"}\"}return\"function(){}\"}function cn(t){var e=Gi[t];return Zn(e)?\"if(\"+e.map(function(t){return\"$event.keyCode!==\"+t}).join(\"&&\")+\")return;\":\"if($event.keyCode!==\"+e+\")return;\"}function ln(t,e){for(var n=!1,r=t;r;)void 0!==r[\"for\"]&&(n=!0),r=r.parent;var i='__registerRef__(\"'+e.arg+'\", n1.child || n1.elm, '+(n?\"true\":\"false\");De(t,\"insert\",i+\")\"),De(t,\"destroy\",i+\", true)\")}function fn(t,e){to=[],Qi=e.directives||{},Xi=e.isReservedTag||function(){return!1};var n=t?dn(t):'__h__(\"div\")';return{render:\"with (this) { return \"+n+\"}\",staticRenderFns:to}}function dn(t){if(t[\"for\"])return hn(t);if(t[\"if\"])return vn(t);if(\"template\"!==t.tag||t.slotTarget){if(\"render\"===t.tag)return wn(t);if(\"slot\"===t.tag)return $n(t);if(\"component\"===t.tag)return xn(t);\n+var e=yn(t,!Xi(t.tag)),n=\"__h__('\"+t.tag+\"', \"+mn(t)+\", \"+e+\", '\"+(t.ns||\"\")+\"')\";return t.staticRoot?(to.push(\"with(this){return \"+n+\"}\"),\"_staticTrees[\"+(to.length-1)+\"]\"):n}return yn(t)}function vn(t){var e=t[\"if\"];return t[\"if\"]=!1,\"(\"+e+\") ? \"+dn(t)+\" : \"+pn(t)}function pn(t){return t.elseBlock?dn(t.elseBlock):\"null\"}function hn(t){var e=t[\"for\"],n=t.alias,r=t.iterator;return t[\"for\"]=!1,\"(\"+e+\")&&__renderList__((\"+e+\"), \"+(\"function(\"+n+\",$index\"+(r?\",\"+r:\"\")+\"){\")+(\"return \"+dn(t))+\"})\"}function mn(t){if(t.plain)return\"undefined\";var e=\"{\";if(t.directives){var n=gn(t);n&&(e+=n+\",\")}return t.pre&&(e+=\"pre:true,\"),t.key&&(e+=\"key:\"+t.key+\",\"),t.slotTarget&&(e+=\"slot:\"+t.slotTarget+\",\"),t.staticClass&&(e+=\"staticClass:\"+t.staticClass+\",\"),t.classBinding&&(e+=\"class:\"+t.classBinding+\",\"),t.styleBinding&&(e+=\"style:\"+t.styleBinding+\",\"),t.transition&&(e+=\"transition:{definition:(\"+t.transition+\"),appear:\"+t.transitionOnAppear+\"},\"),(t.attrsMap[\"v-show\"]||t.show)&&(e+=\"show:true,\"),t.props&&(e+=\"props:{\"+Cn(t.props)+\"},\"),t.attrs&&(e+=\"attrs:{\"+Cn(t.attrs)+\"},\"),t.staticAttrs&&(e+=\"staticAttrs:{\"+Cn(t.staticAttrs)+\"},\"),t.hooks&&(e+=\"hook:{\"+kn(t.hooks)+\"},\"),t.events&&(e+=sn(t.events)),e.replace(/,$/,\"\")+\"}\"}function gn(t){var e=t.directives,n=\"directives:[\",r=!1,i=void 0,o=void 0,a=void 0,s=void 0;for(i=0,o=e.length;o>i;i++){a=e[i],s=!0;var u=Qi[a.name]||Yi[a.name];u&&(s=!!u(t,a)),s&&(r=!0,n+='{name:\"'+a.name+'\"'+(a.value?\",value:(\"+a.value+\")\":\"\")+(a.arg?',arg:\"'+a.arg+'\"':\"\")+(a.modifiers?\",modifiers:\"+JSON.stringify(a.modifiers):\"\")+\"},\")}return r?n.slice(0,-1)+\"]\":void 0}function yn(t,e){if(!t.children.length)return\"undefined\";var n=\"[\"+t.children.map(_n).join(\",\")+\"]\";return e?\"function(){return \"+n+\"}\":n}function _n(t){return t.tag?dn(t):bn(t)}function bn(t){return t.expression?\"(\"+t.expression+\")\":JSON.stringify(t.text)}function wn(t){return t.renderMethod+\"(\"+(t.renderArgs||\"null\")+\",\"+yn(t)+\")\"}function $n(t){var e=t.slotName||'\"default\"';return\"($slots[\"+e+\"] || \"+yn(t)+\")\"}function xn(t){return\"__h__(\"+t.component+\", \"+mn(t)+\", \"+yn(t,!0)+\")\"}function Cn(t){for(var e=\"\",n=0;n<t.length;n++){var r=t[n];e+='\"'+r.name+'\":'+r.value+\",\"}return e.slice(0,-1)}function kn(t){var e=\"\";for(var n in t)e+='\"'+n+'\":function(n1,n2){'+t[n].join(\";\")+\"},\";return e.slice(0,-1)}function On(t,e){var n=Pe(t.trim(),e);return nn(n,e),fn(n,e)}function An(t,e){var n=e.value,r=e.modifiers;if(\"select\"===t.tag)null!=t.attrsMap.multiple?Mn(t,n):Sn(t,n);else switch(t.attrsMap.type){case\"checkbox\":Tn(t,n);break;case\"radio\":Ln(t,n);break;default:return jn(t,n,r)}}function Tn(t,e){var n=Be(t,\"value\");Ee(t,\"checked\",\"Array.isArray(\"+e+\")\"+(\"?(\"+e+\").indexOf(\"+n+\")>-1\")+(\":!!(\"+e+\")\")),Re(t,\"change\",\"var $$a=\"+e+\",$$el=$event.target,$$c=$$el.checked;if(Array.isArray($$a)){\"+(\"var $$v=\"+n+\",\")+\"$$i=$$a.indexOf($$v);if($$c){$$i<0&&$$a.push($$v)}else{$$i>-1&&$$a.splice($$i,1)}\"+(\"}else{\"+e+\"=$$c}\"))}function Ln(t,e){var n=Be(t,\"value\");Ee(t,\"checked\",\"(\"+e+\"==\"+n+\")\"),Re(t,\"change\",e+\"=\"+n)}function jn(t,e,n){var r=t.attrsMap.type,i=n||{},o=i.lazy,a=i.number,s=i.trim,u=o?\"change\":\"input\",c=!o&&\"range\"!==r,l=\"$event.target.value\"+(s?\".trim()\":\"\"),f=a||\"number\"===r?e+\"=Number(\"+l+\")\":e+\"=\"+l;return c&&(f=\"if($event.target.composing)return;\"+f),Ee(t,\"value\",\"(\"+e+\")\"),Re(t,u,f),c?!0:void 0}function En(t,e){for(var n=0;n<t.children.length;n++){var r=t.children[n];\"option\"===r.tag&&Ee(r,\"selected\",e(Be(r,\"value\")))}}function Sn(t,e){Re(t,\"change\",e+\"=\"+eo+\"[0]\"),En(t,function(t){return\"$(\"+e+\")===(\"+t+\")\"})}function Mn(t,e){Re(t,\"change\",e+\"=\"+eo),En(t,function(t){return\"$(\"+e+\").indexOf(\"+t+\")>-1\"})}function Nn(t,e){e.value&&Ee(t,\"textContent\",\"__toString__(\"+e.value+\")\")}function Dn(t,e){e.value&&Ee(t,\"innerHTML\",\"__toString__(\"+e.value+\")\")}function Rn(t,e){return e=e?c(c({},oo),e):oo,On(t,e)}function Bn(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n=e.preserveWhitespace!==!1,r=n?ro:io;if(r[t])return r[t];var i={},o=Rn(t,{preserveWhitespace:n});i.render=new Function(o.render);var a=o.staticRenderFns.length;if(a){i.staticRenderFns=new Array(a);for(var s=0;a>s;s++)i.staticRenderFns[s]=new Function(o.staticRenderFns[s])}return r[t]=i}function Un(t){if(t.outerHTML)return t.outerHTML;var e=document.createElement(\"div\");return e.appendChild(t.cloneNode(!0)),e.innerHTML}var Pn={preserveWhitespace:!0,silent:!1,isReservedTag:function(){return!1},isUnknownElement:function(){return!1},_assetTypes:[\"component\",\"directive\",\"transition\"],_lifecycleHooks:[\"init\",\"created\",\"beforeMount\",\"mounted\",\"ready\",\"beforeUpdate\",\"updated\",\"beforeDestroy\",\"destroyed\"],_maxUpdateCount:100},In=e(\"slot,component,render,transition\",!0),Hn=Object.prototype.hasOwnProperty,Vn=/-(\\w)/g,zn=o(function(t){return t.replace(Vn,a)}),Fn=/([a-z\\d])([A-Z])/g,qn=o(function(t){return t.replace(Fn,\"$1-$2\").toLowerCase()}),Jn=Object.prototype.toString,Wn=\"[object Object]\",Zn=Array.isArray,Gn=/[^\\w\\.]/,Kn=\"__proto__\"in{},Yn=\"undefined\"!=typeof window&&\"[object Object]\"!==Object.prototype.toString.call(window),Qn=Yn&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__,Xn=Yn&&window.navigator.userAgent.toLowerCase(),tr=Xn&&/(iphone|ipad|ipod|ios)/i.test(Xn),er=Xn&&Xn.indexOf(\"micromessenger\")>0,nr=function(){function t(){r=!1;var t=n.slice(0);n=[];for(var e=0;e<t.length;e++)t[e]()}var e,n=[],r=!1;if(\"undefined\"==typeof MutationObserver||er&&tr){var i=Yn?window:\"undefined\"!=typeof global?global:{};e=i.setImmediate||setTimeout}else{var o=1,a=new MutationObserver(t),s=document.createTextNode(o);a.observe(s,{characterData:!0}),e=function(){o=(o+1)%2,s.data=o}}return function(i,o){var a=o?function(){i.call(o)}:i;n.push(a),r||(r=!0,e(t,0))}}(),rr=void 0;\"undefined\"!=typeof Set&&Set.toString().match(/native code/)?rr=Set:(rr=function(){this.set=Object.create(null)},rr.prototype.has=function(t){return void 0!==this.set[t]},rr.prototype.add=function(t){this.set[t]=1},rr.prototype.clear=function(){this.set=Object.create(null)});var ir=0;h.target=null,h.prototype.addSub=function(t){this.subs.push(t)},h.prototype.removeSub=function(t){n(this.subs,t)},h.prototype.depend=function(){h.target.addDep(this)},h.prototype.notify=function(){for(var t=this.subs.slice(),e=0,n=t.length;n>e;e++)t[e].update()};var or,ar=[],sr=[],ur={},cr={},lr=!1,fr=!1,dr=0,vr=void 0;w.prototype.get=function(){this.beforeGet();var t=this.getter.call(this.vm,this.vm);return this.deep&&$(t),this.afterGet(),t},w.prototype.beforeGet=function(){vr=h.target,h.target=this},w.prototype.addDep=function(t){var e=t.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(t),this.depIds.has(e)||t.addSub(this))},w.prototype.afterGet=function(){h.target=vr;for(var t=this.deps.length;t--;){var e=this.deps[t];this.newDepIds.has(e.id)||e.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},w.prototype.update=function(t){this.lazy?this.dirty=!0:this.sync?this.run():(this.shallow=this.queued?t?this.shallow:!1:!!t,this.queued=!0,b(this))},w.prototype.run=function(){if(this.active){var t=this.get();if(t!==this.value||(l(t)||this.deep)&&!this.shallow){var e=this.value;this.value=t,this.cb.call(this.vm,t,e)}this.queued=this.shallow=!1}},w.prototype.evaluate=function(){var t=h.target;this.value=this.get(),this.dirty=!1,h.target=t},w.prototype.depend=function(){for(var t=this.deps.length;t--;)this.deps[t].depend()},w.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||this.vm._vForRemoving||n(this.vm._watchers,this);for(var t=this.deps.length;t--;)this.deps[t].removeSub(this);this.active=!1,this.vm=this.cb=this.value=null}};var pr=new rr,hr=Array.prototype,mr=Object.create(hr);[\"push\",\"pop\",\"shift\",\"unshift\",\"splice\",\"sort\",\"reverse\"].forEach(function(t){var e=hr[t];v(mr,t,function(){for(var n=arguments.length,r=new Array(n);n--;)r[n]=arguments[n];var i,o=e.apply(this,r),a=this.__ob__;switch(t){case\"push\":i=r;break;case\"unshift\":i=r;break;case\"splice\":i=r.slice(2)}return i&&a.observeArray(i),a.dep.notify(),o})});var gr=Object.getOwnPropertyNames(mr),yr={shouldConvert:!0};x.prototype.walk=function(t){for(var e in t)this.convert(e,t[e])},x.prototype.observeArray=function(t){for(var e=0,n=t.length;n>e;e++)O(t[e])},x.prototype.convert=function(t,e){A(this.value,t,e)},x.prototype.addVm=function(t){(this.vms||(this.vms=[])).push(t)},x.prototype.removeVm=function(t){n(this.vms,t)};var _r={init:Q,prepatch:X,insert:tt,destroy:et},br=Object.keys(_r),wr={activeInstance:null},$r=0;vt.prototype._init=function(t){this._uid=$r++,this._isVue=!0,this.$options=bt(this.constructor.options,t||{},this),this._renderProxy=this,Z(this),ft(this),K(this,\"init\"),S(this),K(this,\"created\"),ut(this)},vt.prototype.$nextTick=function(t){nr(t,this)},H(vt),dt(vt),G(vt),ct(vt);var xr=void 0,Cr=Pn.optionMergeStrategies=Object.create(null);Cr.data=function(t,e,n){return n?t||e?function(){var r=\"function\"==typeof e?e.call(n):e,i=\"function\"==typeof t?t.call(n):void 0;return r?pt(r,i):i}:void 0:e?\"function\"!=typeof e?t:t?function(){return pt(e.call(this),t.call(this))}:e:t},Cr.el=function(t,e,n){if(n||!e||\"function\"==typeof e){var r=e||t;return n&&\"function\"==typeof r?r.call(n):r}},Pn._lifecycleHooks.forEach(function(t){Cr[t]=ht}),Pn._assetTypes.forEach(function(t){Cr[t+\"s\"]=mt}),Cr.watch=function(t,e){if(!e)return t;if(!t)return e;var n={};c(n,t);for(var r in e){var i=n[r],o=e[r];i&&!Zn(i)&&(i=[i]),n[r]=i?i.concat(o):[o]}return n},Cr.props=Cr.methods=Cr.computed=function(t,e){if(!e)return t;if(!t)return e;var n=Object.create(null);return c(n,t),c(n,e),n};var kr=function(t,e){return void 0===e?t:e},Or=Object.freeze({defineReactive:A,renderString:t,makeMap:e,isBuiltInTag:In,remove:n,hasOwn:r,isPrimitive:i,cached:o,camelize:zn,hyphenate:qn,bind:s,toArray:u,extend:c,isObject:l,isPlainObject:f,isArray:Zn,isReserved:d,def:v,parsePath:p,hasProto:Kn,inBrowser:Yn,devtools:Qn,nextTick:nr,get _Set(){return rr},mergeOptions:bt,resolveAsset:wt,warn:xr,validateProp:$t}),Ar=e(\"value,selected,checked,muted\"),Tr=e(\"contenteditable,draggable,spellcheck\"),Lr=e(\"allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible\"),jr=\"http://www.w3.org/1999/xlink\",Er=function(t){return\":\"===t.charAt(5)&&\"xlink\"===t.slice(0,5)},Sr={svg:\"http://www.w3.org/2000/svg\",math:\"http://www.w3.org/1998/Math/MathML\"},Mr=e(\"html,base,head,link,meta,style,title,address,article,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,hr,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template\"),Nr=e(\"area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr\",!0),Dr=e(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source\",!0),Rr=e(\"address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track\",!0),Br=e(\"svg,g,defs,symbol,use,image,text,circle,ellipse,line,path,polygon,polyline,rect\",!0),Ur=Object.create(null),Pr=Yn&&window.navigator.userAgent.toLowerCase(),Ir=Pr&&Pr.indexOf(\"msie 9.0\")>0,Hr=Pr&&Pr.indexOf(\"android\")>0;Rt(vt),vt.version=\"2.0.0-alpha.0\";var Vr=z(\"\",{},[]),zr=[\"create\",\"update\",\"remove\",\"destroy\"],Fr=Object.freeze({createElement:Vt,createElementNS:zt,createTextNode:Ft,insertBefore:qt,removeChild:Jt,appendChild:Wt,parentNode:Zt,nextSibling:Gt,tagName:Kt,setTextContent:Yt});Ir&&document.addEventListener(\"selectionchange\",function(){var t=document.activeElement;t&&t.vmodel&&te(t)});var qr={bind:function(t){Hr||(t.addEventListener(\"compositionstart\",Qt),t.addEventListener(\"compositionend\",Xt)),Ir&&(t.vmodel=!0)},unbind:function(t){Hr||(t.removeEventListener(\"compositionstart\",Qt),t.removeEventListener(\"compositionend\",Xt))}},Jr=Sr.svg,Wr=\"transition\",Zr=\"animation\",Gr=void 0,Kr=void 0,Yr=void 0,Qr=void 0;if(Yn&&!Ir){var Xr=void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend,ti=void 0===window.onanimationend&&void 0!==window.onwebkitanimationend;Gr=Xr?\"WebkitTransition\":\"transition\",Kr=Xr?\"webkitTransitionEnd\":\"transitionend\",Yr=ti?\"WebkitAnimation\":\"animation\",Qr=ti?\"webkitAnimationEnd\":\"animationend\"}var ei=Yn&&window.requestAnimationFrame||setTimeout,ni=o(function(t){return{enterClass:t+\"-enter\",leaveClass:t+\"-leave\",enterActiveClass:t+\"-enter-active\",leaveActiveClass:t+\"-leave-active\"}}),ri=Kr?{create:function(t,e){me(e)||ae(e)},remove:function(t,e){me(t)?e():se(t,e)}}:{},ii={bind:function(t,e,n,r){var i=ge(r);e&&i&&i.appea&&!Ir&&ae(r),t.style.display=e?\"\":\"none\"},update:function(t,e,n,r){var i=ge(r);i&&!Ir?e?(ae(r),t.style.display=\"\"):se(r,function(){t.style.display=\"none\"}):t.style.display=e?\"\":\"none\"}},oi={model:qr,show:ii},ai={create:function(t,e){ye(t,e,\"bind\")},update:function(t,e){ye(t,e,\"update\",!0)},destroy:function(t){ye(null,t,\"unbind\")}},si=[ai],ui={create:function(t,e){var n=e.data.staticAttrs;if(n)for(var r in n)!e.elm,be(e.elm,r,n[r]);_e(t,e)},update:_e},ci={create:we,update:we},li={create:$e,update:$e},fi={create:xe,update:xe},di=[\"Webkit\",\"Moz\",\"ms\"],vi=Yn&&document.createElement(\"div\"),pi=o(function(t){if(t=zn(t),\"filter\"!==t&&t in vi.style)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),n=0;n<di.length;n++){var r=di[n]+e;if(r in vi.style)return r}}),hi={create:Ce,update:Ce},mi=[ui,ci,li,fi,hi,ri];vt.config.isUnknownElement=jt,vt.config.isReservedTag=Mr,vt.options.directives=oi;var gi=si.concat(mi);vt.prototype.__patch__=Yn?Ht({nodeOps:Fr,modules:gi}):function(){},vt.prototype.$mount=function(t){this.$el=t&&Et(t),this._mount()};var yi=document.createElement(\"div\"),_i=/([^\\s\"'<>\\/=]+)/,bi=/=/,wi=[bi],$i=[/\"([^\"]*)\"+/.source,/'([^']*)'+/.source,/([^\\s\"'=<>`]+)/.source],xi=\"[a-zA-Z_][\\\\w\\\\-\\\\.]*\",Ci=\"((?:\"+xi+\"\\\\:)?\"+xi+\")\",ki=new RegExp(\"^<\"+Ci),Oi=/^\\s*(\\/?)>/,Ai=new RegExp(\"^<\\\\/\"+Ci+\"[^>]*>\"),Ti=/^<!DOCTYPE [^>]+>/i,Li=!1;\"x\".replace(/x(.)?/g,function(t,e){Li=\"\"===e});var ji=e(\"script,style\",!0),Ei={},Si=/\\{\\{((?:.|\\\\n)+?)\\}\\}/g,Mi=/^v-|^@|^:/,Ni=/^:|^v-bind:/,Di=/^@|^v-on:/,Ri=/:(.*)$/,Bi=/\\.[^\\.]+/g,Ui=/(.*)\\s+(?:in|of)\\s+(.*)/,Pi=/\\((.*),(.*)\\)/,Ii=/[a-z\\d][A-Z]/,Hi=o(Oe),Vi=void 0,zi=function(t){return console.error(\"[Vue parser]: \"+t)},Fi=void 0,qi=void 0,Ji=void 0,Wi=e(\"tag,attrsList,attrsMap,plain,parent,children,staticAttrs,staticClass\"),Zi=/^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/,Gi={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,\"delete\":[8,46]},Ki={stop:\"$event.stopPropagation();\",prevent:\"$event.preventDefault();\",self:\"if($event.target !== $event.currentTarget)return;\"},Yi={ref:ln,cloak:function(){}},Qi=void 0,Xi=void 0,to=void 0,eo='Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){return \"_value\" in o ? o._value : o.value})',no={model:An,text:Nn,html:Dn},ro=Object.create(null),io=Object.create(null),oo={expectHTML:!0,directives:no,isReservedTag:Mr,isUnaryTag:Nr,mustUseProp:Ar,getTagNamespace:Lt},ao=o(function(t){return Et(t).innerHTML}),so=vt.prototype.$mount;return vt.prototype.$mount=function(t){t=t&&Et(t);var e=this.$options;if(!e.render){var n=e.template;if(n?\"string\"==typeof n?\"#\"===n.charAt(0)&&(n=ao(n)):n.nodeType?n=n.innerHTML:xr(\"invalid template option:\"+n,this):t&&(n=Un(t)),n){var r=Bn(n,{preserveWhitespace:Pn.preserveWhitespace}),i=r.render,o=r.staticRenderFns;e.render=i,e.staticRenderFns=o}}so.call(this,t)},vt.compile=Bn,vt});\n",
            "-": ""
          }
        ],
        "a/package.json": [
          {
            "+": "+  \"version\": \"2.0.0-pre-alpha\",\n",
            "-": "-  \"version\": \"2.0.0\",\n"
          }
        ],
        "a/src/core/index.js": [
          {
            "+": "+Vue.version = '2.0.0-alpha.0'\n",
            "-": "-Vue.version = '2.0.0'\n"
          }
        ]
      },
      "numOfFiles": 8,
      "numOfChanges": 8,
      "qualityScore": 12
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "936e3dac63ace191430dc37532a3662d3303e402",
      "url": "https://github.com/vuejs/vue/commit/936e3dac63ace191430dc37532a3662d3303e402",
      "message": "remove beforeMount and mounted hook",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-24T21:12:34Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/instance/lifecycle.js": [
          {
            "-": "-    callHook(this, 'beforeMount')\n",
            "+": ""
          },
          {
            "-": "-    callHook(this, 'mounted')\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 2,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "a04ff9dcc7d77c8239840d0ae2638b2be5ee44c5",
      "url": "https://github.com/vuejs/vue/commit/a04ff9dcc7d77c8239840d0ae2638b2be5ee44c5",
      "message": "remove deprecated code",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-24T02:46:01Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/core/observer/watcher.js": [
          {
            "-": "-import config from '../config'\n",
            "+": ""
          },
          {
            "-": "-    // record before-push error stack in debug mode\n-    /* istanbul ignore if */\n-    if (process.env.NODE_ENV !== 'production' && config.debug) {\n-      this.prevError = new Error('[vue] async stack trace')\n-    }\n",
            "+": ""
          }
        ],
        "a/test/unit/specs/test.spec.js": [
          {
            "-": "-import Vue from 'vue'\n-\n-describe('test', function () {\n-  it('should pass', function () {\n-    expect(Vue.config.replace).toBeUndefined()\n-  })\n-})\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 3,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "d046467734715c02228fd8fa8a176340e83a0523",
      "url": "https://github.com/vuejs/vue/commit/d046467734715c02228fd8fa8a176340e83a0523",
      "message": "remove casperjs dep",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-23T04:31:11Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/package.json": [
          {
            "-": "-    \"casperjs\": \"^1.1.0\",\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "a9fbc0b738f0c24c7c31de917dd34624f8459e1d",
      "url": "https://github.com/vuejs/vue/commit/a9fbc0b738f0c24c7c31de917dd34624f8459e1d",
      "message": "remove old e2e tests",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-21T23:24:23Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/test/e2e/commits.js": [
          {
            "-": "-casper.test.begin('commits', 18, function (test) {\n-  casper\n-  .start('examples/commits/index.html')\n-  .then(function () {\n-    // radio inputs & labels\n-    test.assertElementCount('input', 2)\n-    test.assertElementCount('label', 2)\n-    test.assertSelectorHasText('label[for=\"master\"]', 'master')\n-    test.assertSelectorHasText('label[for=\"dev\"]', 'dev')\n-    // initial fetched commits\n-    test.assertField('branch', 'master')\n-    test.assertSelectorHasText('p', 'vuejs/vue@master')\n-    test.assertElementCount('li', 3)\n-    test.assertSelectorHasText('li:first-child a.commit', '1111111')\n-    test.assertSelectorHasText('li:first-child span.message', 'one')\n-    test.assertSelectorHasText('li:first-child span.author', 'Evan')\n-    test.assertSelectorHasText('li:first-child span.date', '2014-10-15 13:52:58')\n-  })\n-  .thenClick('input[value=\"dev\"]', function () {\n-    test.assertField('branch', 'dev')\n-    test.assertSelectorHasText('p', 'vuejs/vue@dev')\n-    test.assertElementCount('li', 3)\n-    test.assertSelectorHasText('li:first-child a.commit', '2222222')\n-    test.assertSelectorHasText('li:first-child span.message', 'two')\n-    test.assertSelectorHasText('li:first-child span.author', 'Evan')\n-    test.assertSelectorHasText('li:first-child span.date', '2014-10-15 13:52:58')\n-  })\n-  // run\n-  .run(function () {\n-    test.done()\n-  })\n-})\n",
            "+": ""
          }
        ],
        "a/test/e2e/grid.js": [
          {
            "-": "-casper.test.begin('grid', 73, function (test) {\n-  casper\n-  .start('examples/grid/index.html')\n-  .then(function () {\n-    // headers\n-    test.assertElementCount('th', 2)\n-    test.assertElementCount('th.active', 0)\n-    test.assertSelectorHasText('th:nth-child(1)', 'Name')\n-    test.assertSelectorHasText('th:nth-child(2)', 'Power')\n-    assertTable(test, ['name', 'power'], [\n-      { name: 'Chuck Norris', power: Infinity },\n-      { name: 'Bruce Lee', power: 9000 },\n-      { name: 'Jackie Chan', power: 7000 },\n-      { name: 'Jet Li', power: 8000 }\n-    ])\n-  })\n-  // test sorting\n-  .thenClick('th:nth-child(1)', function () {\n-    test.assertElementCount('th.active:nth-child(1)', 1)\n-    test.assertElementCount('th.active:nth-child(2)', 0)\n-    test.assertElementCount('th:nth-child(1) .arrow.dsc', 1)\n-    test.assertElementCount('th:nth-child(2) .arrow.dsc', 0)\n-    assertTable(test, ['name', 'power'], [\n-      { name: 'Jet Li', power: 8000 },\n-      { name: 'Jackie Chan', power: 7000 },\n-      { name: 'Chuck Norris', power: Infinity },\n-      { name: 'Bruce Lee', power: 9000 }\n-    ])\n-  })\n-  .thenClick('th:nth-child(2)', function () {\n-    test.assertElementCount('th.active:nth-child(1)', 0)\n-    test.assertElementCount('th.active:nth-child(2)', 1)\n-    test.assertElementCount('th:nth-child(1) .arrow.dsc', 1)\n-    test.assertElementCount('th:nth-child(2) .arrow.dsc', 1)\n-    assertTable(test, ['name', 'power'], [\n-      { name: 'Chuck Norris', power: Infinity },\n-      { name: 'Bruce Lee', power: 9000 },\n-      { name: 'Jet Li', power: 8000 },\n-      { name: 'Jackie Chan', power: 7000 }\n-    ])\n-  })\n-  .thenClick('th:nth-child(2)', function () {\n-    test.assertElementCount('th.active:nth-child(1)', 0)\n-    test.assertElementCount('th.active:nth-child(2)', 1)\n-    test.assertElementCount('th:nth-child(1) .arrow.dsc', 1)\n-    test.assertElementCount('th:nth-child(2) .arrow.asc', 1)\n-    assertTable(test, ['name', 'power'], [\n-      { name: 'Jackie Chan', power: 7000 },\n-      { name: 'Jet Li', power: 8000 },\n-      { name: 'Bruce Lee', power: 9000 },\n-      { name: 'Chuck Norris', power: Infinity }\n-    ])\n-  })\n-  .thenClick('th:nth-child(1)', function () {\n-    test.assertElementCount('th.active:nth-child(1)', 1)\n-    test.assertElementCount('th.active:nth-child(2)', 0)\n-    test.assertElementCount('th:nth-child(1) .arrow.asc', 1)\n-    test.assertElementCount('th:nth-child(2) .arrow.asc', 1)\n-    assertTable(test, ['name', 'power'], [\n-      { name: 'Bruce Lee', power: 9000 },\n-      { name: 'Chuck Norris', power: Infinity },\n-      { name: 'Jackie Chan', power: 7000 },\n-      { name: 'Jet Li', power: 8000 }\n-    ])\n-  })\n-  // test search\n-  .then(function () {\n-    this.fill('#search', {\n-      query: 'j'\n-    })\n-  })\n-  .then(function () {\n-    assertTable(test, ['name', 'power'], [\n-      { name: 'Jackie Chan', power: 7000 },\n-      { name: 'Jet Li', power: 8000 }\n-    ])\n-  })\n-  .then(function () {\n-    this.fill('#search', {\n-      query: 'infinity'\n-    })\n-  })\n-  .then(function () {\n-    assertTable(test, ['name', 'power'], [\n-      { name: 'Chuck Norris', power: Infinity }\n-    ])\n-  })\n-  // run\n-  .run(function () {\n-    test.done()\n-  })\n-\n-  /**\n-   * Helper to assert the table data is rendered correctly.\n-   *\n-   * @param {CasperTester} test\n-   * @param {Array} columns\n-   * @param {Array} data\n-   */\n-\n-  function assertTable (test, columns, data) {\n-    test.assertElementCount('td', data.length * columns.length)\n-    for (var i = 0; i < data.length; i++) {\n-      for (var j = 0; j < columns.length; j++) {\n-        test.assertSelectorHasText(\n-          'tr:nth-child(' + (i + 1) + ') td:nth-child(' + (j + 1) + ')',\n-          data[i][columns[j]]\n-        )\n-      }\n-    }\n-  }\n-})\n",
            "+": ""
          }
        ],
        "a/test/e2e/markdown.js": [
          {
            "-": "-casper.test.begin('markdown', 5, function (test) {\n-  casper\n-  .start('examples/markdown/index.html')\n-  .then(function () {\n-    test.assertEval(function () {\n-      return document.querySelector('textarea').value === '# hello'\n-    })\n-    test.assertEval(function () {\n-      return document.querySelector('#editor div')\n-        .innerHTML === '<h1 id=\"hello\">hello</h1>\\n'\n-    })\n-  })\n-  .then(function () {\n-    this.sendKeys(\n-      'textarea',\n-      '## foo\\n\\n' +\n-      '- bar\\n' +\n-      '- baz\\n\\n',\n-      { keepFocus: true }\n-    )\n-    // keyUp(13)\n-  })\n-  .then(function () {\n-    // assert the output is not updated yet because of\n-    // debounce\n-    test.assertEval(function () {\n-      return document.querySelector('#editor div')\n-        .innerHTML === '<h1 id=\"hello\">hello</h1>\\n'\n-    })\n-  })\n-  .wait(300) // wait for debounce\n-  .then(function () {\n-    test.assertEval(function () {\n-      return document.querySelector('textarea').value ===\n-        '## foo\\n\\n- bar\\n- baz\\n\\n# hello'\n-    })\n-    test.assertEval(function () {\n-      return document.querySelector('#editor div')\n-        .innerHTML ===\n-          '<h2 id=\"foo\">foo</h2>\\n' +\n-          '<ul>\\n<li>bar</li>\\n<li>baz</li>\\n</ul>\\n' +\n-          '<h1 id=\"hello\">hello</h1>\\n'\n-    })\n-  })\n-  // run\n-  .run(function () {\n-    test.done()\n-  })\n-})\n",
            "+": ""
          }
        ],
        "a/test/e2e/modal.js": [
          {
            "-": "-casper.test.begin('modal', 8, function (test) {\n-  casper\n-  .start('examples/modal/index.html')\n-  .then(function () {\n-    test.assertNotVisible('.modal-mask')\n-  })\n-  .thenClick('#show-modal', function () {\n-    test.assertVisible('.modal-mask')\n-    test.assertVisible('.modal-wrapper')\n-    test.assertVisible('.modal-container')\n-    test.assertSelectorHasText('.modal-header h3', 'custom header')\n-    test.assertSelectorHasText('.modal-body', 'default body')\n-    test.assertSelectorHasText('.modal-footer', 'default footer')\n-  })\n-  .thenClick('.modal-default-button', function () {\n-    test.assertNotVisible('.modal-mask')\n-  })\n-  // run\n-  .run(function () {\n-    test.done()\n-  })\n-})\n",
            "+": ""
          }
        ],
        "a/test/e2e/select2.js": [
          {
            "-": "-casper.test.begin('select2', 20, function (test) {\n-  casper\n-  .start('examples/select2/index.html')\n-  .then(function () {\n-    test.assertSelectorHasText('p', 'Selected: 0')\n-    test.assertSelectorHasText('span.select2', 'Select one')\n-  })\n-\n-  // test open and selecting\n-  .then(function () {\n-    // must use a positional click\n-    this.mouse.click('span.select2')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.select2-results__option', 3)\n-    test.assertSelectorHasText('.select2-results__option:nth-child(1)', 'Select one')\n-    test.assertSelectorHasText('.select2-results__option:nth-child(2)', 'Hello')\n-    test.assertSelectorHasText('.select2-results__option:nth-child(3)', 'World')\n-    test.assertEval(function () {\n-      return document\n-        .querySelector('.select2-results__option:nth-child(1)')\n-        .hasAttribute('aria-disabled')\n-    })\n-  })\n-  .then(function () {\n-    this.mouse.click('.select2-results__option:nth-child(2)')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.select2-results__option', 0)\n-    test.assertSelectorHasText('p', 'Selected: 1')\n-    test.assertSelectorHasText('span.select2', 'Hello')\n-  })\n-\n-  // test dynamic options\n-  .thenEvaluate(function () {\n-    vm.options.push({ id: 3, text: 'Vue' })\n-  })\n-  .then(function () {\n-    this.mouse.click('span.select2')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.select2-results__option', 4)\n-    test.assertSelectorHasText('.select2-results__option:nth-child(1)', 'Select one')\n-    test.assertSelectorHasText('.select2-results__option:nth-child(2)', 'Hello')\n-    test.assertSelectorHasText('.select2-results__option:nth-child(3)', 'World')\n-    test.assertSelectorHasText('.select2-results__option:nth-child(4)', 'Vue')\n-  })\n-  .then(function () {\n-    this.mouse.click('.select2-results__option:nth-child(4)')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.select2-results__option', 0)\n-    test.assertSelectorHasText('p', 'Selected: 3')\n-    test.assertSelectorHasText('span.select2', 'Vue')\n-  })\n-\n-  // test parent setting value down\n-  .thenEvaluate(function () {\n-    vm.selected = 2\n-  })\n-  .then(function () {\n-    test.assertSelectorHasText('p', 'Selected: 2')\n-    test.assertSelectorHasText('span.select2', 'World')\n-  })\n-\n-  // run\n-  .run(function () {\n-    test.done()\n-  })\n-})\n",
            "+": ""
          }
        ],
        "a/test/e2e/svg.js": [
          {
            "-": "-/* global stats, valueToPoint */\n-casper.on(\"page.error\", function(msg, trace) {\n-  console.log(JSON.stringify(trace, null, 2))\n-})\n-\n-casper.test.begin('svg', 18, function (test) {\n-  casper\n-  .start('examples/svg/index.html')\n-  .then(function () {\n-    test.assertElementCount('g', 1)\n-    test.assertElementCount('polygon', 1)\n-    test.assertElementCount('circle', 1)\n-    test.assertElementCount('text', 6)\n-    test.assertElementCount('label', 6)\n-    test.assertElementCount('button', 7)\n-    test.assertElementCount('input[type=\"range\"]', 6)\n-    test.assertEval(function () {\n-      var points = stats.map(function (stat, i) {\n-        var point = valueToPoint(stat.value, i, 6)\n-        return point.x + ',' + point.y\n-      }).join(' ')\n-      return document.querySelector('polygon').attributes[0].value === points\n-    })\n-  })\n-  .thenClick('button.remove', function () {\n-    test.assertElementCount('text', 5)\n-    test.assertElementCount('label', 5)\n-    test.assertElementCount('button', 6)\n-    test.assertElementCount('input[type=\"range\"]', 5)\n-    test.assertEval(function () {\n-      var points = stats.map(function (stat, i) {\n-        var point = valueToPoint(stat.value, i, 5)\n-        return point.x + ',' + point.y\n-      }).join(' ')\n-      return document.querySelector('polygon').attributes[0].value === points\n-    })\n-  })\n-  .then(function () {\n-    this.fill('#add', {\n-      newlabel: 'foo'\n-    })\n-  })\n-  .thenClick('#add > button', function () {\n-    test.assertElementCount('text', 6)\n-    test.assertElementCount('label', 6)\n-    test.assertElementCount('button', 7)\n-    test.assertElementCount('input[type=\"range\"]', 6)\n-    test.assertEval(function () {\n-      var points = stats.map(function (stat, i) {\n-        var point = valueToPoint(stat.value, i, 6)\n-        return point.x + ',' + point.y\n-      }).join(' ')\n-      return document.querySelector('polygon').attributes[0].value === points\n-    })\n-  })\n-  // run\n-  .run(function () {\n-    test.done()\n-  })\n-})\n",
            "+": ""
          }
        ],
        "a/test/e2e/todomvc.js": [
          {
            "-": "-/* global __utils__ */\n-casper.on(\"page.error\", function(msg, trace) {\n-  console.log(JSON.stringify(trace, null, 2))\n-})\n-\n-casper.on(\"remote.message\", function(msg) {\n-  console.log(msg)\n-})\n-\n-casper.test.begin('todomvc', 63, function (test) {\n-  casper\n-  .start('examples/todomvc/index.html')\n-  .then(function () {\n-    test.assertNotVisible('.main', '.main should be hidden')\n-    test.assertNotVisible('.footer', '.footer should be hidden')\n-    test.assertElementCount('.filters .selected', 1, 'should have one filter selected')\n-    test.assertSelectorHasText('.filters .selected', 'All', 'default filter should be \"All\"')\n-  })\n-\n-  // let's add a new item -----------------------------------------------\n-\n-  .then(function () {\n-    enter('.new-todo', 'test')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo', 1, 'new item should be created')\n-    test.assertNotVisible('.todo .edit', 'new item edit box should be hidden')\n-    test.assertSelectorHasText('.todo label', 'test', 'new item should have correct label text')\n-    test.assertSelectorHasText('.todo-count strong', '1', 'remaining count should be 1')\n-    test.assertEvalEquals(function () {\n-      return __utils__.findOne('.todo .toggle').checked\n-    }, false, 'new item toggle should not be checked')\n-    test.assertVisible('.main', '.main should now be visible')\n-    test.assertVisible('.footer', '.footer should now be visible')\n-    test.assertNotVisible('.clear-completed', '.clear-completed should be hidden')\n-    test.assertField({type: 'css', path: '.new-todo'}, '', 'new todo input should be reset')\n-  })\n-\n-  // add another item ---------------------------------------------------\n-\n-  .then(function () {\n-    createNewItem('test2')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo', 2, 'should have 2 items now')\n-    test.assertSelectorHasText('.todo:nth-child(2) label', 'test2', 'new item should have correct label text')\n-    test.assertSelectorHasText('.todo-count strong', '2', 'remaining count should be 2')\n-  })\n-\n-  // mark one item as completed -----------------------------------------\n-\n-  .thenClick('.todo .toggle', function () {\n-    test.assertElementCount('.todo.completed', 1, 'should have 1 item completed')\n-    test.assertEval(function () {\n-      return __utils__.findOne('.todo').classList.contains('completed')\n-    }, 'it should be the first one')\n-    test.assertSelectorHasText('.todo-count strong', '1', 'remaining count should be 1')\n-    test.assertVisible('.clear-completed', '.clear-completed should now be visible')\n-  })\n-\n-  // add yet another item -----------------------------------------------\n-\n-  .then(function () {\n-    createNewItem('test3')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo', 3, 'should have 3 items now')\n-    test.assertSelectorHasText('.todo:nth-child(3) label', 'test3', 'new item should have correct label text')\n-    test.assertSelectorHasText('.todo-count strong', '2', 'remaining count should be 2')\n-  })\n-\n-  // add moreeee, now we assume they all work properly ------------------\n-\n-  .then(function () {\n-    createNewItem('test4')\n-    createNewItem('test5')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo', 5, 'should have 5 items now')\n-    test.assertSelectorHasText('.todo-count strong', '4', 'remaining count should be 4')\n-  })\n-\n-  // check more as completed --------------------------------------------\n-  .then(function () {\n-    this.click('.todo:nth-child(4) .toggle')\n-    this.click('.todo:nth-child(5) .toggle')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo.completed', 3, 'should have 3 item completed')\n-    test.assertSelectorHasText('.todo-count strong', '2', 'remaining count should be 2')\n-  })\n-\n-  // remove a completed item --------------------------------------------\n-\n-  .thenClick('.todo:nth-child(1) .destroy', function () {\n-    test.assertElementCount('.todo', 4, 'should have 4 items now')\n-    test.assertElementCount('.todo.completed', 2, 'should have 2 item completed')\n-    test.assertSelectorHasText('.todo-count strong', '2', 'remaining count should be 2')\n-  })\n-\n-  // remove a incompleted item ------------------------------------------\n-\n-  .thenClick('.todo:nth-child(2) .destroy', function () {\n-    test.assertElementCount('.todo', 3, 'should have 3 items now')\n-    test.assertElementCount('.todo.completed', 2, 'should have 2 item completed')\n-    test.assertSelectorHasText('.todo-count strong', '1', 'remaining count should be 1')\n-  })\n-\n-  // remove all completed ------------------------------------------------\n-\n-  .thenClick('.clear-completed', function () {\n-    test.assertElementCount('.todo', 1, 'should have 1 item now')\n-    test.assertSelectorHasText('.todo label', 'test2', 'the remaining one should be the second one')\n-    test.assertElementCount('.todo.completed', 0, 'should have no completed items now')\n-    test.assertSelectorHasText('.todo-count strong', '1', 'remaining count should be 1')\n-    test.assertNotVisible('.clear-completed', '.clear-completed should be hidden')\n-  })\n-\n-  // prepare to test filters ------------------------------------------------\n-  .then(function () {\n-    createNewItem('test')\n-    createNewItem('test')\n-  })\n-  .then(function () {\n-    this.click('.todo:nth-child(2) .toggle')\n-    this.click('.todo:nth-child(3) .toggle')\n-  })\n-\n-  // active filter ----------------------------------------------------------\n-  .thenClick('.filters li:nth-child(2) a', function () {\n-    test.assertElementCount('.todo', 1, 'filter active should have 1 item')\n-    test.assertElementCount('.todo.completed', 0, 'visible items should be incomplete')\n-  })\n-\n-  // add item with filter active --------------------------------------------\n-  // mostly make sure v-repeat works well with v-if\n-  .then(function () {\n-    createNewItem('test')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo', 2, 'should be able to create new item when fitler active')\n-  })\n-\n-  // completed filter -------------------------------------------------------\n-  .thenClick('.filters li:nth-child(3) a', function () {\n-    test.assertElementCount('.todo', 2, 'filter completed should have 2 items')\n-    test.assertElementCount('.todo.completed', 2, 'visible items should be completed')\n-  })\n-\n-  // active filter on page load ---------------------------------------------\n-  .thenOpen('examples/todomvc/index.html#/active', function () {\n-    test.assertElementCount('.todo', 2, 'filter active should have 2 items')\n-    test.assertElementCount('.todo.completed', 0, 'visible items should be incompleted')\n-    test.assertSelectorHasText('.todo-count strong', '2', 'remaining count should be 2')\n-  })\n-\n-  // completed filter on page load ------------------------------------------\n-  .thenOpen('examples/todomvc/index.html#/completed', function () {\n-    test.assertElementCount('.todo', 2, 'filter completed should have 2 items')\n-    test.assertElementCount('.todo.completed', 2, 'visible items should be completed')\n-    test.assertSelectorHasText('.todo-count strong', '2', 'remaining count should be 2')\n-  })\n-\n-  // toggling todos when filter is active -----------------------------------\n-  .thenClick('.todo .toggle', function () {\n-    test.assertElementCount('.todo', 1, 'should have only 1 item left')\n-  })\n-  .thenClick('.filters li:nth-child(2) a', function () {\n-    test.assertElementCount('.todo', 3, 'should have only 3 items now')\n-  })\n-  .thenClick('.todo .toggle', function () {\n-    test.assertElementCount('.todo', 2, 'should have only 2 items now')\n-  })\n-\n-  // test editing triggered by blur ------------------------------------------\n-  .thenClick('.filters li:nth-child(1) a')\n-  .then(function () {\n-    doubleClick('.todo:nth-child(1) label')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo.editing', 1, 'should have one item being edited')\n-    test.assertEval(function () {\n-      var input = document.querySelector('.todo:nth-child(1) .edit')\n-      return input === document.activeElement\n-    }, 'edit input should be focused')\n-  })\n-  .then(function () {\n-    resetField()\n-    this.sendKeys('.todo:nth-child(1) .edit', 'edited!') // doneEdit triggered by blur\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo.editing', 0, 'item should no longer be edited')\n-    test.assertSelectorHasText('.todo:nth-child(1) label', 'edited!', 'item should have updated text')\n-  })\n-\n-  // test editing triggered by enter ----------------------------------------\n-  .then(function () {\n-    doubleClick('.todo label')\n-  })\n-  .then(function () {\n-    resetField()\n-    this.sendKeys('.todo:nth-child(1) .edit', 'edited again!', { keepFocus: true })\n-    keyUp(13) // Enter\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo.editing', 0, 'item should no longer be edited')\n-    test.assertSelectorHasText('.todo:nth-child(1) label', 'edited again!', 'item should have updated text')\n-  })\n-\n-  // test cancel ------------------------------------------------------------\n-  .then(function () {\n-    doubleClick('.todo label')\n-  })\n-  .then(function () {\n-    resetField()\n-    this.sendKeys('.todo:nth-child(1) .edit', 'cancel test', { keepFocus: true })\n-    keyUp(27) // ESC\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo.editing', 0, 'item should no longer be edited')\n-    test.assertSelectorHasText('.todo label', 'edited again!', 'item should not have updated text')\n-  })\n-\n-  // test empty input remove ------------------------------------------------\n-  .then(function () {\n-    doubleClick('.todo label')\n-  })\n-  .then(function () {\n-    resetField()\n-    this.sendKeys('.todo:nth-child(1) .edit', ' ')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.todo', 3, 'item should have been deleted')\n-  })\n-\n-  // test toggle all\n-  .thenClick('.toggle-all', function () {\n-    test.assertElementCount('.todo.completed', 3, 'should toggle all items to completed')\n-  })\n-  .thenClick('.toggle-all', function () {\n-    test.assertElementCount('.todo:not(.completed)', 3, 'should toggle all items to active')\n-  })\n-\n-  // run\n-  .run(function () {\n-    test.done()\n-  })\n-\n-  // helper ===============\n-\n-  function createNewItem (text) {\n-    if (text) {\n-      casper.sendKeys('.new-todo', text, { keepFocus: true })\n-    }\n-    casper.thenEvaluate(function () {\n-      // casper.mouseEvent can't set keyCode\n-      var field = document.querySelector('.new-todo')\n-      var e = document.createEvent('HTMLEvents')\n-      e.initEvent('keyup', true, true)\n-      e.keyCode = 13\n-      field.dispatchEvent(e)\n-    })\n-  }\n-\n-  function enter (sel, text) {\n-    casper.sendKeys(sel, text, { keepFocus: true })\n-    casper.sendKeys(sel, casper.page.event.key.Enter)\n-  }\n-\n-  function doubleClick (selector) {\n-    casper.evaluate(function (selector) {\n-      var el = document.querySelector(selector)\n-      var e = document.createEvent('MouseEvents')\n-      e.initMouseEvent('dblclick', true, true, null, 1, 0, 0, 0, 0, false, false, false, false, 0, null)\n-      el.dispatchEvent(e)\n-    }, selector)\n-  }\n-\n-  function keyUp (code) {\n-    casper.thenEvaluate(function (code) {\n-      var input = document.querySelector('.todo:nth-child(1) .edit')\n-      var e = document.createEvent('HTMLEvents')\n-      e.initEvent('keyup', true, true)\n-      e.keyCode = code\n-      input.dispatchEvent(e)\n-    }, code)\n-  }\n-\n-  function resetField () {\n-    // somehow casper.sendKey() option reset:true doesn't work\n-    casper.evaluate(function () {\n-      document.querySelector('.todo:nth-child(1) .edit').value = ''\n-    })\n-  }\n-})\n",
            "+": ""
          }
        ],
        "a/test/e2e/tree.js": [
          {
            "-": "-casper.test.begin('tree', 22, function (test) {\n-  casper\n-  .start('examples/tree/index.html')\n-  .then(function () {\n-    test.assertElementCount('.item', 12)\n-    test.assertElementCount('.item > ul', 4)\n-    test.assertNotVisible('#demo li ul')\n-    test.assertSelectorHasText('#demo li div span', '[+]')\n-  })\n-  .thenClick('.bold', function () {\n-    test.assertVisible('#demo ul')\n-    test.assertSelectorHasText('#demo li div span', '[-]')\n-    test.assertSelectorHasText('#demo ul > .item:nth-child(1)', 'hello')\n-    test.assertSelectorHasText('#demo ul > .item:nth-child(2)', 'wat')\n-    test.assertSelectorHasText('#demo ul > .item:nth-child(3)', 'child folder')\n-    test.assertSelectorHasText('#demo ul > .item:nth-child(3)', '[+]')\n-    test.assertEval(function () {\n-      return document.querySelector('#demo li ul').children.length === 4\n-    })\n-  })\n-  .thenClick('#demo ul .bold', function () {\n-    test.assertVisible('#demo ul ul')\n-    test.assertSelectorHasText('#demo ul > .item:nth-child(3)', '[-]')\n-    test.assertEval(function () {\n-      return document.querySelector('#demo ul ul').children.length === 5\n-    })\n-  })\n-  .thenClick('.bold', function () {\n-    test.assertNotVisible('#demo ul')\n-    test.assertSelectorHasText('#demo li div span', '[+]')\n-  })\n-  .thenClick('.bold', function () {\n-    test.assertVisible('#demo ul')\n-    test.assertSelectorHasText('#demo li div span', '[-]')\n-  })\n-  .then(function () {\n-    casper.mouseEvent('dblclick', '#demo ul > .item div')\n-  })\n-  .then(function () {\n-    test.assertElementCount('.item', 13)\n-    test.assertElementCount('.item > ul', 5)\n-    test.assertSelectorHasText('#demo ul > .item:nth-child(1)', '[-]')\n-    test.assertEval(function () {\n-      var firstItem = document.querySelector('#demo ul > .item:nth-child(1)')\n-      var ul = firstItem.querySelector('ul')\n-      return ul.children.length === 2\n-    })\n-  })\n-  // run\n-  .run(function () {\n-    test.done()\n-  })\n-})\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 8,
      "numOfChanges": 8,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "3f9b3ec24bddc89c7a093950a1a281c428cc4184",
      "url": "https://github.com/vuejs/vue/commit/3f9b3ec24bddc89c7a093950a1a281c428cc4184",
      "message": "remove unneeded file",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-19T19:10:13Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/runtime/dom-backend/modules/pre.js": [
          {
            "-": "-export default {\n-  create (_, vnode) {\n-    if (vnode.data.pre) {\n-      vnode.elm.innerHTML = vnode.data.pre\n-    }\n-  }\n-}\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "7fc68b4fd6027ead4987b686f6e8f752c9b819aa",
      "url": "https://github.com/vuejs/vue/commit/7fc68b4fd6027ead4987b686f6e8f752c9b819aa",
      "message": "remove filter from config asset list",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-17T19:34:13Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/runtime/config.js": [
          {
            "-": "-    'filter',\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "2aecd9021440ab68b6225daf4bca778dbf1b4efe",
      "url": "https://github.com/vuejs/vue/commit/2aecd9021440ab68b6225daf4bca778dbf1b4efe",
      "message": "remove el",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-17T19:31:20Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/codegen/directives/el.js": [
          {
            "-": "-export function ref (el, dir) {\n-  if (!el.hooks) el.hooks = {}\n-  const code = `$refs[\"${dir.arg}\"]=vnode.elm || vnode.data.child`\n-  if (el.hooks.insert) {\n-    el.hooks.insert = el.hooks.insert\n-      .replace(/^function\\(vnode\\)\\{(.*)\\}$/, `function(vnode){$1;${code}}`)\n-  } else {\n-    el.hooks.insert = `function(vnode){${code}}`\n-  }\n-}\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "0e5b7eeea775070d507a15b6c25923e55db10b58",
      "url": "https://github.com/vuejs/vue/commit/0e5b7eeea775070d507a15b6c25923e55db10b58",
      "message": "remove log",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-17T03:20:44Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/examples/select2/index.html": [
          {
            "-": "-          console.log(options)\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "8ff21757a1a3eb10c9c239b2b92eff9711aa7b21",
      "url": "https://github.com/vuejs/vue/commit/8ff21757a1a3eb10c9c239b2b92eff9711aa7b21",
      "message": "remove log",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-16T06:19:30Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/runtime/instance/render.js": [
          {
            "-": "-      console.log(11)\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "61a5249a0e71008d7560d188b62efe36788619c1",
      "url": "https://github.com/vuejs/vue/commit/61a5249a0e71008d7560d188b62efe36788619c1",
      "message": "remove log, fix logic",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-16T04:07:26Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/runtime/instance/render.js": [
          {
            "+": "+      const children = fn()\n",
            "-": "-      return fn()\n"
          },
          {
            "+": "+      return children\n",
            "-": ""
          }
        ],
        "a/src/runtime/observer/batcher.js": [
          {
            "-": "-    console.log('running: ' + id)\n",
            "+": ""
          },
          {
            "-": "-    console.log('push: ' + id)\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 2,
      "numOfChanges": 4,
      "qualityScore": 50
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "7b539b8f8ad5cf84aea9198f9c0ad6471b179ae2",
      "url": "https://github.com/vuejs/vue/commit/7b539b8f8ad5cf84aea9198f9c0ad6471b179ae2",
      "message": "remove thunk",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-14T12:13:10Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/runtime/vdom/thunk.js": [
          {
            "-": "-import createElement from './create-element'\n-\n-function init (thunk) {\n-  var i, cur = thunk.data\n-  cur.vnode = cur.fn.apply(undefined, cur.args)\n-}\n-\n-function prepatch (oldThunk, thunk) {\n-  var i, old = oldThunk.data, cur = thunk.data\n-  var oldArgs = old.args, args = cur.args\n-  cur.vnode = old.vnode\n-  if (old.fn !== cur.fn || oldArgs.length !== args.length) {\n-    cur.vnode = cur.fn.apply(undefined, args)\n-    return\n-  }\n-  for (i = 0; i < args.length; ++i) {\n-    if (oldArgs[i] !== args[i]) {\n-      cur.vnode = cur.fn.apply(undefined, args)\n-      return\n-    }\n-  }\n-}\n-\n-export default function thunk (name, fn, args) {\n-  return createElement('thunk' + name, {\n-    hook: { init, prepatch },\n-    fn, args\n-  })\n-}\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "c9c4291586df45b826c7347125c3ef23158989ee",
      "url": "https://github.com/vuejs/vue/commit/c9c4291586df45b826c7347125c3ef23158989ee",
      "message": "remove some useless code",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-12T23:05:02Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/util/component.js": [
          {
            "-": "-import { warn } from './debug'\n-import { resolveAsset } from './options'\n-import { getAttr, getBindAttr } from './dom'\n-\n-export const commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i\n-export const reservedTagRE = /^(slot|partial|component)$/i\n-\n-let isUnknownElement\n-if (process.env.NODE_ENV !== 'production') {\n-  isUnknownElement = function (el, tag) {\n-    if (tag.indexOf('-') > -1) {\n-      // http://stackoverflow.com/a/28210364/1070244\n-      return (\n-        el.constructor === window.HTMLUnknownElement ||\n-        el.constructor === window.HTMLElement\n-      )\n-    } else {\n-      return (\n-        /HTMLUnknownElement/.test(el.toString()) &&\n-        // Chrome returns unknown for several HTML5 elements.\n-        // https://code.google.com/p/chromium/issues/detail?id=540526\n-        !/^(data|time|rtc|rb)$/.test(tag)\n-      )\n-    }\n-  }\n-}\n-\n-/**\n- * Check if an element is a component, if yes return its\n- * component id.\n- *\n- * @param {Element} el\n- * @param {Object} options\n- * @return {Object|undefined}\n- */\n-\n-export function checkComponentAttr (el, options) {\n-  var tag = el.tagName.toLowerCase()\n-  var hasAttrs = el.hasAttributes()\n-  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n-    if (resolveAsset(options, 'components', tag)) {\n-      return { id: tag }\n-    } else {\n-      var is = hasAttrs && getIsBinding(el)\n-      if (is) {\n-        return is\n-      } else if (process.env.NODE_ENV !== 'production') {\n-        var expectedTag =\n-          options._componentNameMap &&\n-          options._componentNameMap[tag]\n-        if (expectedTag) {\n-          warn(\n-            'Unknown custom element: <' + tag + '> - ' +\n-            'did you mean <' + expectedTag + '>? ' +\n-            'HTML is case-insensitive, remember to use kebab-case in templates.'\n-          )\n-        } else if (isUnknownElement(el, tag)) {\n-          warn(\n-            'Unknown custom element: <' + tag + '> - did you ' +\n-            'register the component correctly? For recursive components, ' +\n-            'make sure to provide the \"name\" option.'\n-          )\n-        }\n-      }\n-    }\n-  } else if (hasAttrs) {\n-    return getIsBinding(el)\n-  }\n-}\n-\n-/**\n- * Get \"is\" binding from an element.\n- *\n- * @param {Element} el\n- * @return {Object|undefined}\n- */\n-\n-function getIsBinding (el) {\n-  // dynamic syntax\n-  var exp = getAttr(el, 'is')\n-  if (exp != null) {\n-    return { id: exp }\n-  } else {\n-    exp = getBindAttr(el, 'is')\n-    if (exp != null) {\n-      return { id: exp, dynamic: true }\n-    }\n-  }\n-}\n",
            "+": ""
          }
        ],
        "a/src/util/index.js": [
          {
            "-": "-export * from './component'\n",
            "+": ""
          }
        ],
        "a/src/util/options.js": [
          {
            "+": "+\n+export const commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i\n+export const reservedTagRE = /^(slot|partial|component)$/i\n",
            "-": "-import { commonTagRE, reservedTagRE } from './component'\n"
          }
        ]
      },
      "numOfFiles": 3,
      "numOfChanges": 3,
      "qualityScore": 66
    },
    {
      "formatStyle": "simple-text-style",
      "type": "remove",
      "sha": "fe3761aad6e5f5cbfac39ae96b1a685f8b657380",
      "url": "https://github.com/vuejs/vue/commit/fe3761aad6e5f5cbfac39ae96b1a685f8b657380",
      "message": "remove log",
      "author": {
        "name": "Evan You",
        "email": "yyx990803@gmail.com",
        "date": "2016-04-12T22:11:03Z",
        "avatar_url": "https://avatars.githubusercontent.com/u/499550?v=4"
      },
      "diffObj": {
        "a/src/compiler/codegen/events.js": [
          {
            "-": "-  console.log(res)\n",
            "+": ""
          }
        ]
      },
      "numOfFiles": 1,
      "numOfChanges": 1,
      "qualityScore": 100
    }
  ]
}
